"use strict";
var J9 = require("os"), Z9 = require("fs"), X9 = require("path"), e5 = require("http"), a5 = require("https"), t5 = require("net"), i5 = require("tls"), Kd = require("events"), n5 = require("assert"), r5 = require("util"), s5 = require("stream"), p5 = require("url"), o5 = require("punycode"), d5 = require("zlib"), l5 = require("tty"), c5 = require("crypto"), u5 = require("dns"), m5 = require("string_decoder"), f5 = require("pg-native");
function Ke(i) {
  return i && typeof i == "object" && "default" in i ? i : { default: i };
}
function h5(i) {
  if (i && i.__esModule)
    return i;
  var e = Object.create(null);
  return i && Object.keys(i).forEach(function(t) {
    if (t !== "default") {
      var r = Object.getOwnPropertyDescriptor(i, t);
      Object.defineProperty(e, t, r.get ? r : {
        enumerable: !0,
        get: function() {
          return i[t];
        }
      });
    }
  }), e.default = i, Object.freeze(e);
}
function v5(i, e) {
  return e.forEach(function(t) {
    t && typeof t != "string" && !Array.isArray(t) && Object.keys(t).forEach(function(r) {
      if (r !== "default" && !(r in i)) {
        var s = Object.getOwnPropertyDescriptor(t, r);
        Object.defineProperty(i, r, s.get ? s : {
          enumerable: !0,
          get: function() {
            return t[r];
          }
        });
      }
    });
  }), Object.freeze(i);
}
var Si = /* @__PURE__ */ Ke(J9), ot = /* @__PURE__ */ Ke(Z9), Gt = /* @__PURE__ */ Ke(X9), bt = /* @__PURE__ */ Ke(e5), ti = /* @__PURE__ */ Ke(a5), Yd = /* @__PURE__ */ Ke(t5), Jd = /* @__PURE__ */ Ke(i5), ii = /* @__PURE__ */ Ke(Kd), pp = /* @__PURE__ */ Ke(n5), ka = /* @__PURE__ */ Ke(r5), na = /* @__PURE__ */ Ke(s5), Ea = /* @__PURE__ */ Ke(p5), Lt = /* @__PURE__ */ Ke(o5), Ut = /* @__PURE__ */ Ke(d5), op = /* @__PURE__ */ Ke(l5), ni = /* @__PURE__ */ Ke(c5), g5 = /* @__PURE__ */ Ke(u5), w5 = /* @__PURE__ */ Ke(m5), b5 = /* @__PURE__ */ Ke(f5), Y = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {};
function on(i) {
  if (i.__esModule)
    return i;
  var e = Object.defineProperty({}, "__esModule", { value: !0 });
  return Object.keys(i).forEach(function(t) {
    var r = Object.getOwnPropertyDescriptor(i, t);
    Object.defineProperty(e, t, r.get ? r : {
      enumerable: !0,
      get: function() {
        return i[t];
      }
    });
  }), e;
}
function Ee(i) {
  var e = { exports: {} };
  return i(e, e.exports), e.exports;
}
var dt = Ee(function(i, e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.toCommandProperties = e.toCommandValue = void 0;
  function t(s) {
    return s == null ? "" : typeof s == "string" || s instanceof String ? s : JSON.stringify(s);
  }
  e.toCommandValue = t;
  function r(s) {
    return Object.keys(s).length ? {
      title: s.title,
      file: s.file,
      line: s.startLine,
      endLine: s.endLine,
      col: s.startColumn,
      endColumn: s.endColumn
    } : {};
  }
  e.toCommandProperties = r;
}), qa = Ee(function(i, e) {
  var t = Y && Y.__createBinding || (Object.create ? function(b, x, S, D) {
    D === void 0 && (D = S), Object.defineProperty(b, D, { enumerable: !0, get: function() {
      return x[S];
    } });
  } : function(b, x, S, D) {
    D === void 0 && (D = S), b[D] = x[S];
  }), r = Y && Y.__setModuleDefault || (Object.create ? function(b, x) {
    Object.defineProperty(b, "default", { enumerable: !0, value: x });
  } : function(b, x) {
    b.default = x;
  }), s = Y && Y.__importStar || function(b) {
    if (b && b.__esModule)
      return b;
    var x = {};
    if (b != null)
      for (var S in b)
        S !== "default" && Object.hasOwnProperty.call(b, S) && t(x, b, S);
    return r(x, b), x;
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.issue = e.issueCommand = void 0;
  const o = s(Si.default);
  function l(b, x, S) {
    const D = new f(b, x, S);
    process.stdout.write(D.toString() + o.EOL);
  }
  e.issueCommand = l;
  function u(b, x = "") {
    l(b, {}, x);
  }
  e.issue = u;
  const v = "::";
  class f {
    constructor(x, S, D) {
      x || (x = "missing.command"), this.command = x, this.properties = S, this.message = D;
    }
    toString() {
      let x = v + this.command;
      if (this.properties && Object.keys(this.properties).length > 0) {
        x += " ";
        let S = !0;
        for (const D in this.properties)
          if (this.properties.hasOwnProperty(D)) {
            const L = this.properties[D];
            L && (S ? S = !1 : x += ",", x += `${D}=${h(L)}`);
          }
      }
      return x += `${v}${c(this.message)}`, x;
    }
  }
  function c(b) {
    return dt.toCommandValue(b).replace(/%/g, "%25").replace(/\r/g, "%0D").replace(/\n/g, "%0A");
  }
  function h(b) {
    return dt.toCommandValue(b).replace(/%/g, "%25").replace(/\r/g, "%0D").replace(/\n/g, "%0A").replace(/:/g, "%3A").replace(/,/g, "%2C");
  }
}), mr, _5 = new Uint8Array(16);
function Zd() {
  if (!mr && (mr = typeof crypto != "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != "undefined" && typeof msCrypto.getRandomValues == "function" && msCrypto.getRandomValues.bind(msCrypto), !mr))
    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  return mr(_5);
}
var x5 = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
function fr(i) {
  return typeof i == "string" && x5.test(i);
}
for (var ra = [], dp = 0; dp < 256; ++dp)
  ra.push((dp + 256).toString(16).substr(1));
function hr(i) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, t = (ra[i[e + 0]] + ra[i[e + 1]] + ra[i[e + 2]] + ra[i[e + 3]] + "-" + ra[i[e + 4]] + ra[i[e + 5]] + "-" + ra[i[e + 6]] + ra[i[e + 7]] + "-" + ra[i[e + 8]] + ra[i[e + 9]] + "-" + ra[i[e + 10]] + ra[i[e + 11]] + ra[i[e + 12]] + ra[i[e + 13]] + ra[i[e + 14]] + ra[i[e + 15]]).toLowerCase();
  if (!fr(t))
    throw TypeError("Stringified UUID is invalid");
  return t;
}
var Xd, lp, cp = 0, up = 0;
function y5(i, e, t) {
  var r = e && t || 0, s = e || new Array(16);
  i = i || {};
  var o = i.node || Xd, l = i.clockseq !== void 0 ? i.clockseq : lp;
  if (o == null || l == null) {
    var u = i.random || (i.rng || Zd)();
    o == null && (o = Xd = [u[0] | 1, u[1], u[2], u[3], u[4], u[5]]), l == null && (l = lp = (u[6] << 8 | u[7]) & 16383);
  }
  var v = i.msecs !== void 0 ? i.msecs : Date.now(), f = i.nsecs !== void 0 ? i.nsecs : up + 1, c = v - cp + (f - up) / 1e4;
  if (c < 0 && i.clockseq === void 0 && (l = l + 1 & 16383), (c < 0 || v > cp) && i.nsecs === void 0 && (f = 0), f >= 1e4)
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  cp = v, up = f, lp = l, v += 122192928e5;
  var h = ((v & 268435455) * 1e4 + f) % 4294967296;
  s[r++] = h >>> 24 & 255, s[r++] = h >>> 16 & 255, s[r++] = h >>> 8 & 255, s[r++] = h & 255;
  var b = v / 4294967296 * 1e4 & 268435455;
  s[r++] = b >>> 8 & 255, s[r++] = b & 255, s[r++] = b >>> 24 & 15 | 16, s[r++] = b >>> 16 & 255, s[r++] = l >>> 8 | 128, s[r++] = l & 255;
  for (var x = 0; x < 6; ++x)
    s[r + x] = o[x];
  return e || hr(s);
}
function el(i) {
  if (!fr(i))
    throw TypeError("Invalid UUID");
  var e, t = new Uint8Array(16);
  return t[0] = (e = parseInt(i.slice(0, 8), 16)) >>> 24, t[1] = e >>> 16 & 255, t[2] = e >>> 8 & 255, t[3] = e & 255, t[4] = (e = parseInt(i.slice(9, 13), 16)) >>> 8, t[5] = e & 255, t[6] = (e = parseInt(i.slice(14, 18), 16)) >>> 8, t[7] = e & 255, t[8] = (e = parseInt(i.slice(19, 23), 16)) >>> 8, t[9] = e & 255, t[10] = (e = parseInt(i.slice(24, 36), 16)) / 1099511627776 & 255, t[11] = e / 4294967296 & 255, t[12] = e >>> 24 & 255, t[13] = e >>> 16 & 255, t[14] = e >>> 8 & 255, t[15] = e & 255, t;
}
function E5(i) {
  i = unescape(encodeURIComponent(i));
  for (var e = [], t = 0; t < i.length; ++t)
    e.push(i.charCodeAt(t));
  return e;
}
var T5 = "6ba7b810-9dad-11d1-80b4-00c04fd430c8", S5 = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
function al(i, e, t) {
  function r(s, o, l, u) {
    if (typeof s == "string" && (s = E5(s)), typeof o == "string" && (o = el(o)), o.length !== 16)
      throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
    var v = new Uint8Array(16 + s.length);
    if (v.set(o), v.set(s, o.length), v = t(v), v[6] = v[6] & 15 | e, v[8] = v[8] & 63 | 128, l) {
      u = u || 0;
      for (var f = 0; f < 16; ++f)
        l[u + f] = v[f];
      return l;
    }
    return hr(v);
  }
  try {
    r.name = i;
  } catch (s) {
  }
  return r.DNS = T5, r.URL = S5, r;
}
function A5(i) {
  if (typeof i == "string") {
    var e = unescape(encodeURIComponent(i));
    i = new Uint8Array(e.length);
    for (var t = 0; t < e.length; ++t)
      i[t] = e.charCodeAt(t);
  }
  return R5(C5(P5(i), i.length * 8));
}
function R5(i) {
  for (var e = [], t = i.length * 32, r = "0123456789abcdef", s = 0; s < t; s += 8) {
    var o = i[s >> 5] >>> s % 32 & 255, l = parseInt(r.charAt(o >>> 4 & 15) + r.charAt(o & 15), 16);
    e.push(l);
  }
  return e;
}
function tl(i) {
  return (i + 64 >>> 9 << 4) + 14 + 1;
}
function C5(i, e) {
  i[e >> 5] |= 128 << e % 32, i[tl(e) - 1] = e;
  for (var t = 1732584193, r = -271733879, s = -1732584194, o = 271733878, l = 0; l < i.length; l += 16) {
    var u = t, v = r, f = s, c = o;
    t = oa(t, r, s, o, i[l], 7, -680876936), o = oa(o, t, r, s, i[l + 1], 12, -389564586), s = oa(s, o, t, r, i[l + 2], 17, 606105819), r = oa(r, s, o, t, i[l + 3], 22, -1044525330), t = oa(t, r, s, o, i[l + 4], 7, -176418897), o = oa(o, t, r, s, i[l + 5], 12, 1200080426), s = oa(s, o, t, r, i[l + 6], 17, -1473231341), r = oa(r, s, o, t, i[l + 7], 22, -45705983), t = oa(t, r, s, o, i[l + 8], 7, 1770035416), o = oa(o, t, r, s, i[l + 9], 12, -1958414417), s = oa(s, o, t, r, i[l + 10], 17, -42063), r = oa(r, s, o, t, i[l + 11], 22, -1990404162), t = oa(t, r, s, o, i[l + 12], 7, 1804603682), o = oa(o, t, r, s, i[l + 13], 12, -40341101), s = oa(s, o, t, r, i[l + 14], 17, -1502002290), r = oa(r, s, o, t, i[l + 15], 22, 1236535329), t = da(t, r, s, o, i[l + 1], 5, -165796510), o = da(o, t, r, s, i[l + 6], 9, -1069501632), s = da(s, o, t, r, i[l + 11], 14, 643717713), r = da(r, s, o, t, i[l], 20, -373897302), t = da(t, r, s, o, i[l + 5], 5, -701558691), o = da(o, t, r, s, i[l + 10], 9, 38016083), s = da(s, o, t, r, i[l + 15], 14, -660478335), r = da(r, s, o, t, i[l + 4], 20, -405537848), t = da(t, r, s, o, i[l + 9], 5, 568446438), o = da(o, t, r, s, i[l + 14], 9, -1019803690), s = da(s, o, t, r, i[l + 3], 14, -187363961), r = da(r, s, o, t, i[l + 8], 20, 1163531501), t = da(t, r, s, o, i[l + 13], 5, -1444681467), o = da(o, t, r, s, i[l + 2], 9, -51403784), s = da(s, o, t, r, i[l + 7], 14, 1735328473), r = da(r, s, o, t, i[l + 12], 20, -1926607734), t = la(t, r, s, o, i[l + 5], 4, -378558), o = la(o, t, r, s, i[l + 8], 11, -2022574463), s = la(s, o, t, r, i[l + 11], 16, 1839030562), r = la(r, s, o, t, i[l + 14], 23, -35309556), t = la(t, r, s, o, i[l + 1], 4, -1530992060), o = la(o, t, r, s, i[l + 4], 11, 1272893353), s = la(s, o, t, r, i[l + 7], 16, -155497632), r = la(r, s, o, t, i[l + 10], 23, -1094730640), t = la(t, r, s, o, i[l + 13], 4, 681279174), o = la(o, t, r, s, i[l], 11, -358537222), s = la(s, o, t, r, i[l + 3], 16, -722521979), r = la(r, s, o, t, i[l + 6], 23, 76029189), t = la(t, r, s, o, i[l + 9], 4, -640364487), o = la(o, t, r, s, i[l + 12], 11, -421815835), s = la(s, o, t, r, i[l + 15], 16, 530742520), r = la(r, s, o, t, i[l + 2], 23, -995338651), t = ca(t, r, s, o, i[l], 6, -198630844), o = ca(o, t, r, s, i[l + 7], 10, 1126891415), s = ca(s, o, t, r, i[l + 14], 15, -1416354905), r = ca(r, s, o, t, i[l + 5], 21, -57434055), t = ca(t, r, s, o, i[l + 12], 6, 1700485571), o = ca(o, t, r, s, i[l + 3], 10, -1894986606), s = ca(s, o, t, r, i[l + 10], 15, -1051523), r = ca(r, s, o, t, i[l + 1], 21, -2054922799), t = ca(t, r, s, o, i[l + 8], 6, 1873313359), o = ca(o, t, r, s, i[l + 15], 10, -30611744), s = ca(s, o, t, r, i[l + 6], 15, -1560198380), r = ca(r, s, o, t, i[l + 13], 21, 1309151649), t = ca(t, r, s, o, i[l + 4], 6, -145523070), o = ca(o, t, r, s, i[l + 11], 10, -1120210379), s = ca(s, o, t, r, i[l + 2], 15, 718787259), r = ca(r, s, o, t, i[l + 9], 21, -343485551), t = It(t, u), r = It(r, v), s = It(s, f), o = It(o, c);
  }
  return [t, r, s, o];
}
function P5(i) {
  if (i.length === 0)
    return [];
  for (var e = i.length * 8, t = new Uint32Array(tl(e)), r = 0; r < e; r += 8)
    t[r >> 5] |= (i[r / 8] & 255) << r % 32;
  return t;
}
function It(i, e) {
  var t = (i & 65535) + (e & 65535), r = (i >> 16) + (e >> 16) + (t >> 16);
  return r << 16 | t & 65535;
}
function D5(i, e) {
  return i << e | i >>> 32 - e;
}
function vr(i, e, t, r, s, o) {
  return It(D5(It(It(e, i), It(r, o)), s), t);
}
function oa(i, e, t, r, s, o, l) {
  return vr(e & t | ~e & r, i, e, s, o, l);
}
function da(i, e, t, r, s, o, l) {
  return vr(e & r | t & ~r, i, e, s, o, l);
}
function la(i, e, t, r, s, o, l) {
  return vr(e ^ t ^ r, i, e, s, o, l);
}
function ca(i, e, t, r, s, o, l) {
  return vr(t ^ (e | ~r), i, e, s, o, l);
}
var O5 = al("v3", 48, A5), k5 = O5;
function N5(i, e, t) {
  i = i || {};
  var r = i.random || (i.rng || Zd)();
  if (r[6] = r[6] & 15 | 64, r[8] = r[8] & 63 | 128, e) {
    t = t || 0;
    for (var s = 0; s < 16; ++s)
      e[t + s] = r[s];
    return e;
  }
  return hr(r);
}
function F5(i, e, t, r) {
  switch (i) {
    case 0:
      return e & t ^ ~e & r;
    case 1:
      return e ^ t ^ r;
    case 2:
      return e & t ^ e & r ^ t & r;
    case 3:
      return e ^ t ^ r;
  }
}
function mp(i, e) {
  return i << e | i >>> 32 - e;
}
function G5(i) {
  var e = [1518500249, 1859775393, 2400959708, 3395469782], t = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
  if (typeof i == "string") {
    var r = unescape(encodeURIComponent(i));
    i = [];
    for (var s = 0; s < r.length; ++s)
      i.push(r.charCodeAt(s));
  } else
    Array.isArray(i) || (i = Array.prototype.slice.call(i));
  i.push(128);
  for (var o = i.length / 4 + 2, l = Math.ceil(o / 16), u = new Array(l), v = 0; v < l; ++v) {
    for (var f = new Uint32Array(16), c = 0; c < 16; ++c)
      f[c] = i[v * 64 + c * 4] << 24 | i[v * 64 + c * 4 + 1] << 16 | i[v * 64 + c * 4 + 2] << 8 | i[v * 64 + c * 4 + 3];
    u[v] = f;
  }
  u[l - 1][14] = (i.length - 1) * 8 / Math.pow(2, 32), u[l - 1][14] = Math.floor(u[l - 1][14]), u[l - 1][15] = (i.length - 1) * 8 & 4294967295;
  for (var h = 0; h < l; ++h) {
    for (var b = new Uint32Array(80), x = 0; x < 16; ++x)
      b[x] = u[h][x];
    for (var S = 16; S < 80; ++S)
      b[S] = mp(b[S - 3] ^ b[S - 8] ^ b[S - 14] ^ b[S - 16], 1);
    for (var D = t[0], L = t[1], R = t[2], B = t[3], Q = t[4], ee = 0; ee < 80; ++ee) {
      var re = Math.floor(ee / 20), de = mp(D, 5) + F5(re, L, R, B) + Q + e[re] + b[ee] >>> 0;
      Q = B, B = R, R = mp(L, 30) >>> 0, L = D, D = de;
    }
    t[0] = t[0] + D >>> 0, t[1] = t[1] + L >>> 0, t[2] = t[2] + R >>> 0, t[3] = t[3] + B >>> 0, t[4] = t[4] + Q >>> 0;
  }
  return [t[0] >> 24 & 255, t[0] >> 16 & 255, t[0] >> 8 & 255, t[0] & 255, t[1] >> 24 & 255, t[1] >> 16 & 255, t[1] >> 8 & 255, t[1] & 255, t[2] >> 24 & 255, t[2] >> 16 & 255, t[2] >> 8 & 255, t[2] & 255, t[3] >> 24 & 255, t[3] >> 16 & 255, t[3] >> 8 & 255, t[3] & 255, t[4] >> 24 & 255, t[4] >> 16 & 255, t[4] >> 8 & 255, t[4] & 255];
}
var L5 = al("v5", 80, G5), U5 = L5, I5 = "00000000-0000-0000-0000-000000000000";
function B5(i) {
  if (!fr(i))
    throw TypeError("Invalid UUID");
  return parseInt(i.substr(14, 1), 16);
}
var V5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  v1: y5,
  v3: k5,
  v4: N5,
  v5: U5,
  NIL: I5,
  version: B5,
  validate: fr,
  stringify: hr,
  parse: el
}), j5 = /* @__PURE__ */ on(V5), ri = Ee(function(i, e) {
  var t = Y && Y.__createBinding || (Object.create ? function(f, c, h, b) {
    b === void 0 && (b = h), Object.defineProperty(f, b, { enumerable: !0, get: function() {
      return c[h];
    } });
  } : function(f, c, h, b) {
    b === void 0 && (b = h), f[b] = c[h];
  }), r = Y && Y.__setModuleDefault || (Object.create ? function(f, c) {
    Object.defineProperty(f, "default", { enumerable: !0, value: c });
  } : function(f, c) {
    f.default = c;
  }), s = Y && Y.__importStar || function(f) {
    if (f && f.__esModule)
      return f;
    var c = {};
    if (f != null)
      for (var h in f)
        h !== "default" && Object.hasOwnProperty.call(f, h) && t(c, f, h);
    return r(c, f), c;
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.prepareKeyValueMessage = e.issueFileCommand = void 0;
  const o = s(ot.default), l = s(Si.default);
  function u(f, c) {
    const h = process.env[`GITHUB_${f}`];
    if (!h)
      throw new Error(`Unable to find environment variable for file command ${f}`);
    if (!o.existsSync(h))
      throw new Error(`Missing file at path: ${h}`);
    o.appendFileSync(h, `${dt.toCommandValue(c)}${l.EOL}`, {
      encoding: "utf8"
    });
  }
  e.issueFileCommand = u;
  function v(f, c) {
    const h = `ghadelimiter_${j5.v4()}`, b = dt.toCommandValue(c);
    if (f.includes(h))
      throw new Error(`Unexpected input: name should not contain the delimiter "${h}"`);
    if (b.includes(h))
      throw new Error(`Unexpected input: value should not contain the delimiter "${h}"`);
    return `${f}<<${h}${l.EOL}${b}${l.EOL}${h}`;
  }
  e.prepareKeyValueMessage = v;
}), M5 = Ee(function(i, e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.checkBypass = e.getProxyUrl = void 0;
  function t(s) {
    const o = s.protocol === "https:";
    if (r(s))
      return;
    const l = (() => o ? process.env.https_proxy || process.env.HTTPS_PROXY : process.env.http_proxy || process.env.HTTP_PROXY)();
    if (l)
      return new URL(l);
  }
  e.getProxyUrl = t;
  function r(s) {
    if (!s.hostname)
      return !1;
    const o = process.env.no_proxy || process.env.NO_PROXY || "";
    if (!o)
      return !1;
    let l;
    s.port ? l = Number(s.port) : s.protocol === "http:" ? l = 80 : s.protocol === "https:" && (l = 443);
    const u = [s.hostname.toUpperCase()];
    typeof l == "number" && u.push(`${u[0]}:${l}`);
    for (const v of o.split(",").map((f) => f.trim().toUpperCase()).filter((f) => f))
      if (u.some((f) => f === v))
        return !0;
    return !1;
  }
  e.checkBypass = r;
}), q5 = W5, z5 = Q5, $5 = K5, H5 = Y5;
function W5(i) {
  var e = new _t(i);
  return e.request = bt.default.request, e;
}
function Q5(i) {
  var e = new _t(i);
  return e.request = bt.default.request, e.createSocket = il, e.defaultPort = 443, e;
}
function K5(i) {
  var e = new _t(i);
  return e.request = ti.default.request, e;
}
function Y5(i) {
  var e = new _t(i);
  return e.request = ti.default.request, e.createSocket = il, e.defaultPort = 443, e;
}
function _t(i) {
  var e = this;
  e.options = i || {}, e.proxyOptions = e.options.proxy || {}, e.maxSockets = e.options.maxSockets || bt.default.Agent.defaultMaxSockets, e.requests = [], e.sockets = [], e.on("free", function(r, s, o, l) {
    for (var u = nl(s, o, l), v = 0, f = e.requests.length; v < f; ++v) {
      var c = e.requests[v];
      if (c.host === u.host && c.port === u.port) {
        e.requests.splice(v, 1), c.request.onSocket(r);
        return;
      }
    }
    r.destroy(), e.removeSocket(r);
  });
}
ka.default.inherits(_t, ii.default.EventEmitter), _t.prototype.addRequest = function(e, t, r, s) {
  var o = this, l = fp({ request: e }, o.options, nl(t, r, s));
  if (o.sockets.length >= this.maxSockets) {
    o.requests.push(l);
    return;
  }
  o.createSocket(l, function(u) {
    u.on("free", v), u.on("close", f), u.on("agentRemove", f), e.onSocket(u);
    function v() {
      o.emit("free", u, l);
    }
    function f(c) {
      o.removeSocket(u), u.removeListener("free", v), u.removeListener("close", f), u.removeListener("agentRemove", f);
    }
  });
}, _t.prototype.createSocket = function(e, t) {
  var r = this, s = {};
  r.sockets.push(s);
  var o = fp({}, r.proxyOptions, {
    method: "CONNECT",
    path: e.host + ":" + e.port,
    agent: !1,
    headers: {
      host: e.host + ":" + e.port
    }
  });
  e.localAddress && (o.localAddress = e.localAddress), o.proxyAuth && (o.headers = o.headers || {}, o.headers["Proxy-Authorization"] = "Basic " + new Buffer(o.proxyAuth).toString("base64")), Bt("making CONNECT request");
  var l = r.request(o);
  l.useChunkedEncodingByDefault = !1, l.once("response", u), l.once("upgrade", v), l.once("connect", f), l.once("error", c), l.end();
  function u(h) {
    h.upgrade = !0;
  }
  function v(h, b, x) {
    process.nextTick(function() {
      f(h, b, x);
    });
  }
  function f(h, b, x) {
    if (l.removeAllListeners(), b.removeAllListeners(), h.statusCode !== 200) {
      Bt("tunneling socket could not be established, statusCode=%d", h.statusCode), b.destroy();
      var S = new Error("tunneling socket could not be established, statusCode=" + h.statusCode);
      S.code = "ECONNRESET", e.request.emit("error", S), r.removeSocket(s);
      return;
    }
    if (x.length > 0) {
      Bt("got illegal response body from proxy"), b.destroy();
      var S = new Error("got illegal response body from proxy");
      S.code = "ECONNRESET", e.request.emit("error", S), r.removeSocket(s);
      return;
    }
    return Bt("tunneling connection has established"), r.sockets[r.sockets.indexOf(s)] = b, t(b);
  }
  function c(h) {
    l.removeAllListeners(), Bt(`tunneling socket could not be established, cause=%s
`, h.message, h.stack);
    var b = new Error("tunneling socket could not be established, cause=" + h.message);
    b.code = "ECONNRESET", e.request.emit("error", b), r.removeSocket(s);
  }
}, _t.prototype.removeSocket = function(e) {
  var t = this.sockets.indexOf(e);
  if (t !== -1) {
    this.sockets.splice(t, 1);
    var r = this.requests.shift();
    r && this.createSocket(r, function(s) {
      r.request.onSocket(s);
    });
  }
};
function il(i, e) {
  var t = this;
  _t.prototype.createSocket.call(t, i, function(r) {
    var s = i.request.getHeader("host"), o = fp({}, t.options, {
      socket: r,
      servername: s ? s.replace(/:.*$/, "") : i.host
    }), l = Jd.default.connect(0, o);
    t.sockets[t.sockets.indexOf(r)] = l, e(l);
  });
}
function nl(i, e, t) {
  return typeof i == "string" ? {
    host: i,
    port: e,
    localAddress: t
  } : i;
}
function fp(i) {
  for (var e = 1, t = arguments.length; e < t; ++e) {
    var r = arguments[e];
    if (typeof r == "object")
      for (var s = Object.keys(r), o = 0, l = s.length; o < l; ++o) {
        var u = s[o];
        r[u] !== void 0 && (i[u] = r[u]);
      }
  }
  return i;
}
var Bt;
process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG) ? Bt = function() {
  var i = Array.prototype.slice.call(arguments);
  typeof i[0] == "string" ? i[0] = "TUNNEL: " + i[0] : i.unshift("TUNNEL:"), console.error.apply(console, i);
} : Bt = function() {
};
var J5 = Bt, Z5 = {
  httpOverHttp: q5,
  httpsOverHttp: z5,
  httpOverHttps: $5,
  httpsOverHttps: H5,
  debug: J5
}, X5 = Z5, rl = Ee(function(i, e) {
  var t = Y && Y.__createBinding || (Object.create ? function(F, N, G, V) {
    V === void 0 && (V = G), Object.defineProperty(F, V, { enumerable: !0, get: function() {
      return N[G];
    } });
  } : function(F, N, G, V) {
    V === void 0 && (V = G), F[V] = N[G];
  }), r = Y && Y.__setModuleDefault || (Object.create ? function(F, N) {
    Object.defineProperty(F, "default", { enumerable: !0, value: N });
  } : function(F, N) {
    F.default = N;
  }), s = Y && Y.__importStar || function(F) {
    if (F && F.__esModule)
      return F;
    var N = {};
    if (F != null)
      for (var G in F)
        G !== "default" && Object.hasOwnProperty.call(F, G) && t(N, F, G);
    return r(N, F), N;
  }, o = Y && Y.__awaiter || function(F, N, G, V) {
    function ae(ie) {
      return ie instanceof G ? ie : new G(function(H) {
        H(ie);
      });
    }
    return new (G || (G = Promise))(function(ie, H) {
      function O(J) {
        try {
          j(V.next(J));
        } catch (ce) {
          H(ce);
        }
      }
      function $(J) {
        try {
          j(V.throw(J));
        } catch (ce) {
          H(ce);
        }
      }
      function j(J) {
        J.done ? ie(J.value) : ae(J.value).then(O, $);
      }
      j((V = V.apply(F, N || [])).next());
    });
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.HttpClient = e.isHttps = e.HttpClientResponse = e.HttpClientError = e.getProxyUrl = e.MediaTypes = e.Headers = e.HttpCodes = void 0;
  const l = s(bt.default), u = s(ti.default), v = s(M5), f = s(X5);
  var c;
  (function(F) {
    F[F.OK = 200] = "OK", F[F.MultipleChoices = 300] = "MultipleChoices", F[F.MovedPermanently = 301] = "MovedPermanently", F[F.ResourceMoved = 302] = "ResourceMoved", F[F.SeeOther = 303] = "SeeOther", F[F.NotModified = 304] = "NotModified", F[F.UseProxy = 305] = "UseProxy", F[F.SwitchProxy = 306] = "SwitchProxy", F[F.TemporaryRedirect = 307] = "TemporaryRedirect", F[F.PermanentRedirect = 308] = "PermanentRedirect", F[F.BadRequest = 400] = "BadRequest", F[F.Unauthorized = 401] = "Unauthorized", F[F.PaymentRequired = 402] = "PaymentRequired", F[F.Forbidden = 403] = "Forbidden", F[F.NotFound = 404] = "NotFound", F[F.MethodNotAllowed = 405] = "MethodNotAllowed", F[F.NotAcceptable = 406] = "NotAcceptable", F[F.ProxyAuthenticationRequired = 407] = "ProxyAuthenticationRequired", F[F.RequestTimeout = 408] = "RequestTimeout", F[F.Conflict = 409] = "Conflict", F[F.Gone = 410] = "Gone", F[F.TooManyRequests = 429] = "TooManyRequests", F[F.InternalServerError = 500] = "InternalServerError", F[F.NotImplemented = 501] = "NotImplemented", F[F.BadGateway = 502] = "BadGateway", F[F.ServiceUnavailable = 503] = "ServiceUnavailable", F[F.GatewayTimeout = 504] = "GatewayTimeout";
  })(c = e.HttpCodes || (e.HttpCodes = {}));
  var h;
  (function(F) {
    F.Accept = "accept", F.ContentType = "content-type";
  })(h = e.Headers || (e.Headers = {}));
  var b;
  (function(F) {
    F.ApplicationJson = "application/json";
  })(b = e.MediaTypes || (e.MediaTypes = {}));
  function x(F) {
    const N = v.getProxyUrl(new URL(F));
    return N ? N.href : "";
  }
  e.getProxyUrl = x;
  const S = [
    c.MovedPermanently,
    c.ResourceMoved,
    c.SeeOther,
    c.TemporaryRedirect,
    c.PermanentRedirect
  ], D = [
    c.BadGateway,
    c.ServiceUnavailable,
    c.GatewayTimeout
  ], L = ["OPTIONS", "GET", "DELETE", "HEAD"], R = 10, B = 5;
  class Q extends Error {
    constructor(N, G) {
      super(N);
      this.name = "HttpClientError", this.statusCode = G, Object.setPrototypeOf(this, Q.prototype);
    }
  }
  e.HttpClientError = Q;
  class ee {
    constructor(N) {
      this.message = N;
    }
    readBody() {
      return o(this, void 0, void 0, function* () {
        return new Promise((N) => o(this, void 0, void 0, function* () {
          let G = Buffer.alloc(0);
          this.message.on("data", (V) => {
            G = Buffer.concat([G, V]);
          }), this.message.on("end", () => {
            N(G.toString());
          });
        }));
      });
    }
  }
  e.HttpClientResponse = ee;
  function re(F) {
    return new URL(F).protocol === "https:";
  }
  e.isHttps = re;
  class de {
    constructor(N, G, V) {
      this._ignoreSslError = !1, this._allowRedirects = !0, this._allowRedirectDowngrade = !1, this._maxRedirects = 50, this._allowRetries = !1, this._maxRetries = 1, this._keepAlive = !1, this._disposed = !1, this.userAgent = N, this.handlers = G || [], this.requestOptions = V, V && (V.ignoreSslError != null && (this._ignoreSslError = V.ignoreSslError), this._socketTimeout = V.socketTimeout, V.allowRedirects != null && (this._allowRedirects = V.allowRedirects), V.allowRedirectDowngrade != null && (this._allowRedirectDowngrade = V.allowRedirectDowngrade), V.maxRedirects != null && (this._maxRedirects = Math.max(V.maxRedirects, 0)), V.keepAlive != null && (this._keepAlive = V.keepAlive), V.allowRetries != null && (this._allowRetries = V.allowRetries), V.maxRetries != null && (this._maxRetries = V.maxRetries));
    }
    options(N, G) {
      return o(this, void 0, void 0, function* () {
        return this.request("OPTIONS", N, null, G || {});
      });
    }
    get(N, G) {
      return o(this, void 0, void 0, function* () {
        return this.request("GET", N, null, G || {});
      });
    }
    del(N, G) {
      return o(this, void 0, void 0, function* () {
        return this.request("DELETE", N, null, G || {});
      });
    }
    post(N, G, V) {
      return o(this, void 0, void 0, function* () {
        return this.request("POST", N, G, V || {});
      });
    }
    patch(N, G, V) {
      return o(this, void 0, void 0, function* () {
        return this.request("PATCH", N, G, V || {});
      });
    }
    put(N, G, V) {
      return o(this, void 0, void 0, function* () {
        return this.request("PUT", N, G, V || {});
      });
    }
    head(N, G) {
      return o(this, void 0, void 0, function* () {
        return this.request("HEAD", N, null, G || {});
      });
    }
    sendStream(N, G, V, ae) {
      return o(this, void 0, void 0, function* () {
        return this.request(N, G, V, ae);
      });
    }
    getJson(N, G = {}) {
      return o(this, void 0, void 0, function* () {
        G[h.Accept] = this._getExistingOrDefaultHeader(G, h.Accept, b.ApplicationJson);
        const V = yield this.get(N, G);
        return this._processResponse(V, this.requestOptions);
      });
    }
    postJson(N, G, V = {}) {
      return o(this, void 0, void 0, function* () {
        const ae = JSON.stringify(G, null, 2);
        V[h.Accept] = this._getExistingOrDefaultHeader(V, h.Accept, b.ApplicationJson), V[h.ContentType] = this._getExistingOrDefaultHeader(V, h.ContentType, b.ApplicationJson);
        const ie = yield this.post(N, ae, V);
        return this._processResponse(ie, this.requestOptions);
      });
    }
    putJson(N, G, V = {}) {
      return o(this, void 0, void 0, function* () {
        const ae = JSON.stringify(G, null, 2);
        V[h.Accept] = this._getExistingOrDefaultHeader(V, h.Accept, b.ApplicationJson), V[h.ContentType] = this._getExistingOrDefaultHeader(V, h.ContentType, b.ApplicationJson);
        const ie = yield this.put(N, ae, V);
        return this._processResponse(ie, this.requestOptions);
      });
    }
    patchJson(N, G, V = {}) {
      return o(this, void 0, void 0, function* () {
        const ae = JSON.stringify(G, null, 2);
        V[h.Accept] = this._getExistingOrDefaultHeader(V, h.Accept, b.ApplicationJson), V[h.ContentType] = this._getExistingOrDefaultHeader(V, h.ContentType, b.ApplicationJson);
        const ie = yield this.patch(N, ae, V);
        return this._processResponse(ie, this.requestOptions);
      });
    }
    request(N, G, V, ae) {
      return o(this, void 0, void 0, function* () {
        if (this._disposed)
          throw new Error("Client has already been disposed.");
        const ie = new URL(G);
        let H = this._prepareRequest(N, ie, ae);
        const O = this._allowRetries && L.includes(N) ? this._maxRetries + 1 : 1;
        let $ = 0, j;
        do {
          if (j = yield this.requestRaw(H, V), j && j.message && j.message.statusCode === c.Unauthorized) {
            let ce;
            for (const he of this.handlers)
              if (he.canHandleAuthentication(j)) {
                ce = he;
                break;
              }
            return ce ? ce.handleAuthentication(this, H, V) : j;
          }
          let J = this._maxRedirects;
          for (; j.message.statusCode && S.includes(j.message.statusCode) && this._allowRedirects && J > 0; ) {
            const ce = j.message.headers.location;
            if (!ce)
              break;
            const he = new URL(ce);
            if (ie.protocol === "https:" && ie.protocol !== he.protocol && !this._allowRedirectDowngrade)
              throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.");
            if (yield j.readBody(), he.hostname !== ie.hostname)
              for (const Fe in ae)
                Fe.toLowerCase() === "authorization" && delete ae[Fe];
            H = this._prepareRequest(N, he, ae), j = yield this.requestRaw(H, V), J--;
          }
          if (!j.message.statusCode || !D.includes(j.message.statusCode))
            return j;
          $ += 1, $ < O && (yield j.readBody(), yield this._performExponentialBackoff($));
        } while ($ < O);
        return j;
      });
    }
    dispose() {
      this._agent && this._agent.destroy(), this._disposed = !0;
    }
    requestRaw(N, G) {
      return o(this, void 0, void 0, function* () {
        return new Promise((V, ae) => {
          function ie(H, O) {
            H ? ae(H) : O ? V(O) : ae(new Error("Unknown error"));
          }
          this.requestRawWithCallback(N, G, ie);
        });
      });
    }
    requestRawWithCallback(N, G, V) {
      typeof G == "string" && (N.options.headers || (N.options.headers = {}), N.options.headers["Content-Length"] = Buffer.byteLength(G, "utf8"));
      let ae = !1;
      function ie($, j) {
        ae || (ae = !0, V($, j));
      }
      const H = N.httpModule.request(N.options, ($) => {
        const j = new ee($);
        ie(void 0, j);
      });
      let O;
      H.on("socket", ($) => {
        O = $;
      }), H.setTimeout(this._socketTimeout || 3 * 6e4, () => {
        O && O.end(), ie(new Error(`Request timeout: ${N.options.path}`));
      }), H.on("error", function($) {
        ie($);
      }), G && typeof G == "string" && H.write(G, "utf8"), G && typeof G != "string" ? (G.on("close", function() {
        H.end();
      }), G.pipe(H)) : H.end();
    }
    getAgent(N) {
      const G = new URL(N);
      return this._getAgent(G);
    }
    _prepareRequest(N, G, V) {
      const ae = {};
      ae.parsedUrl = G;
      const ie = ae.parsedUrl.protocol === "https:";
      ae.httpModule = ie ? u : l;
      const H = ie ? 443 : 80;
      if (ae.options = {}, ae.options.host = ae.parsedUrl.hostname, ae.options.port = ae.parsedUrl.port ? parseInt(ae.parsedUrl.port) : H, ae.options.path = (ae.parsedUrl.pathname || "") + (ae.parsedUrl.search || ""), ae.options.method = N, ae.options.headers = this._mergeHeaders(V), this.userAgent != null && (ae.options.headers["user-agent"] = this.userAgent), ae.options.agent = this._getAgent(ae.parsedUrl), this.handlers)
        for (const O of this.handlers)
          O.prepareRequest(ae.options);
      return ae;
    }
    _mergeHeaders(N) {
      return this.requestOptions && this.requestOptions.headers ? Object.assign({}, ne(this.requestOptions.headers), ne(N || {})) : ne(N || {});
    }
    _getExistingOrDefaultHeader(N, G, V) {
      let ae;
      return this.requestOptions && this.requestOptions.headers && (ae = ne(this.requestOptions.headers)[G]), N[G] || ae || V;
    }
    _getAgent(N) {
      let G;
      const V = v.getProxyUrl(N), ae = V && V.hostname;
      if (this._keepAlive && ae && (G = this._proxyAgent), this._keepAlive && !ae && (G = this._agent), G)
        return G;
      const ie = N.protocol === "https:";
      let H = 100;
      if (this.requestOptions && (H = this.requestOptions.maxSockets || l.globalAgent.maxSockets), V && V.hostname) {
        const O = {
          maxSockets: H,
          keepAlive: this._keepAlive,
          proxy: Object.assign(Object.assign({}, (V.username || V.password) && {
            proxyAuth: `${V.username}:${V.password}`
          }), { host: V.hostname, port: V.port })
        };
        let $;
        const j = V.protocol === "https:";
        ie ? $ = j ? f.httpsOverHttps : f.httpsOverHttp : $ = j ? f.httpOverHttps : f.httpOverHttp, G = $(O), this._proxyAgent = G;
      }
      if (this._keepAlive && !G) {
        const O = { keepAlive: this._keepAlive, maxSockets: H };
        G = ie ? new u.Agent(O) : new l.Agent(O), this._agent = G;
      }
      return G || (G = ie ? u.globalAgent : l.globalAgent), ie && this._ignoreSslError && (G.options = Object.assign(G.options || {}, {
        rejectUnauthorized: !1
      })), G;
    }
    _performExponentialBackoff(N) {
      return o(this, void 0, void 0, function* () {
        N = Math.min(R, N);
        const G = B * Math.pow(2, N);
        return new Promise((V) => setTimeout(() => V(), G));
      });
    }
    _processResponse(N, G) {
      return o(this, void 0, void 0, function* () {
        return new Promise((V, ae) => o(this, void 0, void 0, function* () {
          const ie = N.message.statusCode || 0, H = {
            statusCode: ie,
            result: null,
            headers: {}
          };
          ie === c.NotFound && V(H);
          function O(J, ce) {
            if (typeof ce == "string") {
              const he = new Date(ce);
              if (!isNaN(he.valueOf()))
                return he;
            }
            return ce;
          }
          let $, j;
          try {
            j = yield N.readBody(), j && j.length > 0 && (G && G.deserializeDates ? $ = JSON.parse(j, O) : $ = JSON.parse(j), H.result = $), H.headers = N.message.headers;
          } catch (J) {
          }
          if (ie > 299) {
            let J;
            $ && $.message ? J = $.message : j && j.length > 0 ? J = j : J = `Failed request: (${ie})`;
            const ce = new Q(J, ie);
            ce.result = H.result, ae(ce);
          } else
            V(H);
        }));
      });
    }
  }
  e.HttpClient = de;
  const ne = (F) => Object.keys(F).reduce((N, G) => (N[G.toLowerCase()] = F[G], N), {});
}), e8 = Ee(function(i, e) {
  var t = Y && Y.__awaiter || function(l, u, v, f) {
    function c(h) {
      return h instanceof v ? h : new v(function(b) {
        b(h);
      });
    }
    return new (v || (v = Promise))(function(h, b) {
      function x(L) {
        try {
          D(f.next(L));
        } catch (R) {
          b(R);
        }
      }
      function S(L) {
        try {
          D(f.throw(L));
        } catch (R) {
          b(R);
        }
      }
      function D(L) {
        L.done ? h(L.value) : c(L.value).then(x, S);
      }
      D((f = f.apply(l, u || [])).next());
    });
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.PersonalAccessTokenCredentialHandler = e.BearerCredentialHandler = e.BasicCredentialHandler = void 0;
  class r {
    constructor(u, v) {
      this.username = u, this.password = v;
    }
    prepareRequest(u) {
      if (!u.headers)
        throw Error("The request has no headers");
      u.headers.Authorization = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString("base64")}`;
    }
    canHandleAuthentication() {
      return !1;
    }
    handleAuthentication() {
      return t(this, void 0, void 0, function* () {
        throw new Error("not implemented");
      });
    }
  }
  e.BasicCredentialHandler = r;
  class s {
    constructor(u) {
      this.token = u;
    }
    prepareRequest(u) {
      if (!u.headers)
        throw Error("The request has no headers");
      u.headers.Authorization = `Bearer ${this.token}`;
    }
    canHandleAuthentication() {
      return !1;
    }
    handleAuthentication() {
      return t(this, void 0, void 0, function* () {
        throw new Error("not implemented");
      });
    }
  }
  e.BearerCredentialHandler = s;
  class o {
    constructor(u) {
      this.token = u;
    }
    prepareRequest(u) {
      if (!u.headers)
        throw Error("The request has no headers");
      u.headers.Authorization = `Basic ${Buffer.from(`PAT:${this.token}`).toString("base64")}`;
    }
    canHandleAuthentication() {
      return !1;
    }
    handleAuthentication() {
      return t(this, void 0, void 0, function* () {
        throw new Error("not implemented");
      });
    }
  }
  e.PersonalAccessTokenCredentialHandler = o;
}), sl = gr, a8 = Ee(function(i, e) {
  var t = Y && Y.__awaiter || function(s, o, l, u) {
    function v(f) {
      return f instanceof l ? f : new l(function(c) {
        c(f);
      });
    }
    return new (l || (l = Promise))(function(f, c) {
      function h(S) {
        try {
          x(u.next(S));
        } catch (D) {
          c(D);
        }
      }
      function b(S) {
        try {
          x(u.throw(S));
        } catch (D) {
          c(D);
        }
      }
      function x(S) {
        S.done ? f(S.value) : v(S.value).then(h, b);
      }
      x((u = u.apply(s, o || [])).next());
    });
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.OidcClient = void 0;
  class r {
    static createHttpClient(o = !0, l = 10) {
      const u = {
        allowRetries: o,
        maxRetries: l
      };
      return new rl.HttpClient("actions/oidc-client", [new e8.BearerCredentialHandler(r.getRequestToken())], u);
    }
    static getRequestToken() {
      const o = process.env.ACTIONS_ID_TOKEN_REQUEST_TOKEN;
      if (!o)
        throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable");
      return o;
    }
    static getIDTokenUrl() {
      const o = process.env.ACTIONS_ID_TOKEN_REQUEST_URL;
      if (!o)
        throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable");
      return o;
    }
    static getCall(o) {
      var l;
      return t(this, void 0, void 0, function* () {
        const f = (l = (yield r.createHttpClient().getJson(o).catch((c) => {
          throw new Error(`Failed to get ID Token. 
 
        Error Code : ${c.statusCode}
 
        Error Message: ${c.result.message}`);
        })).result) === null || l === void 0 ? void 0 : l.value;
        if (!f)
          throw new Error("Response json body do not have ID Token field");
        return f;
      });
    }
    static getIDToken(o) {
      return t(this, void 0, void 0, function* () {
        try {
          let l = r.getIDTokenUrl();
          if (o) {
            const v = encodeURIComponent(o);
            l = `${l}&audience=${v}`;
          }
          sl.debug(`ID token url is ${l}`);
          const u = yield r.getCall(l);
          return sl.setSecret(u), u;
        } catch (l) {
          throw new Error(`Error message: ${l.message}`);
        }
      });
    }
  }
  e.OidcClient = r;
}), pl = Ee(function(i, e) {
  var t = Y && Y.__awaiter || function(v, f, c, h) {
    function b(x) {
      return x instanceof c ? x : new c(function(S) {
        S(x);
      });
    }
    return new (c || (c = Promise))(function(x, S) {
      function D(B) {
        try {
          R(h.next(B));
        } catch (Q) {
          S(Q);
        }
      }
      function L(B) {
        try {
          R(h.throw(B));
        } catch (Q) {
          S(Q);
        }
      }
      function R(B) {
        B.done ? x(B.value) : b(B.value).then(D, L);
      }
      R((h = h.apply(v, f || [])).next());
    });
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.summary = e.markdownSummary = e.SUMMARY_DOCS_URL = e.SUMMARY_ENV_VAR = void 0;
  const { access: r, appendFile: s, writeFile: o } = ot.default.promises;
  e.SUMMARY_ENV_VAR = "GITHUB_STEP_SUMMARY", e.SUMMARY_DOCS_URL = "https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary";
  class l {
    constructor() {
      this._buffer = "";
    }
    filePath() {
      return t(this, void 0, void 0, function* () {
        if (this._filePath)
          return this._filePath;
        const f = process.env[e.SUMMARY_ENV_VAR];
        if (!f)
          throw new Error(`Unable to find environment variable for $${e.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
        try {
          yield r(f, ot.default.constants.R_OK | ot.default.constants.W_OK);
        } catch (c) {
          throw new Error(`Unable to access summary file: '${f}'. Check if the file has correct read/write permissions.`);
        }
        return this._filePath = f, this._filePath;
      });
    }
    wrap(f, c, h = {}) {
      const b = Object.entries(h).map(([x, S]) => ` ${x}="${S}"`).join("");
      return c ? `<${f}${b}>${c}</${f}>` : `<${f}${b}>`;
    }
    write(f) {
      return t(this, void 0, void 0, function* () {
        const c = !!(f == null ? void 0 : f.overwrite), h = yield this.filePath();
        return yield (c ? o : s)(h, this._buffer, { encoding: "utf8" }), this.emptyBuffer();
      });
    }
    clear() {
      return t(this, void 0, void 0, function* () {
        return this.emptyBuffer().write({ overwrite: !0 });
      });
    }
    stringify() {
      return this._buffer;
    }
    isEmptyBuffer() {
      return this._buffer.length === 0;
    }
    emptyBuffer() {
      return this._buffer = "", this;
    }
    addRaw(f, c = !1) {
      return this._buffer += f, c ? this.addEOL() : this;
    }
    addEOL() {
      return this.addRaw(Si.default.EOL);
    }
    addCodeBlock(f, c) {
      const h = Object.assign({}, c && { lang: c }), b = this.wrap("pre", this.wrap("code", f), h);
      return this.addRaw(b).addEOL();
    }
    addList(f, c = !1) {
      const h = c ? "ol" : "ul", b = f.map((S) => this.wrap("li", S)).join(""), x = this.wrap(h, b);
      return this.addRaw(x).addEOL();
    }
    addTable(f) {
      const c = f.map((b) => {
        const x = b.map((S) => {
          if (typeof S == "string")
            return this.wrap("td", S);
          const { header: D, data: L, colspan: R, rowspan: B } = S, Q = D ? "th" : "td", ee = Object.assign(Object.assign({}, R && { colspan: R }), B && { rowspan: B });
          return this.wrap(Q, L, ee);
        }).join("");
        return this.wrap("tr", x);
      }).join(""), h = this.wrap("table", c);
      return this.addRaw(h).addEOL();
    }
    addDetails(f, c) {
      const h = this.wrap("details", this.wrap("summary", f) + c);
      return this.addRaw(h).addEOL();
    }
    addImage(f, c, h) {
      const { width: b, height: x } = h || {}, S = Object.assign(Object.assign({}, b && { width: b }), x && { height: x }), D = this.wrap("img", null, Object.assign({ src: f, alt: c }, S));
      return this.addRaw(D).addEOL();
    }
    addHeading(f, c) {
      const h = `h${c}`, b = ["h1", "h2", "h3", "h4", "h5", "h6"].includes(h) ? h : "h1", x = this.wrap(b, f);
      return this.addRaw(x).addEOL();
    }
    addSeparator() {
      const f = this.wrap("hr", null);
      return this.addRaw(f).addEOL();
    }
    addBreak() {
      const f = this.wrap("br", null);
      return this.addRaw(f).addEOL();
    }
    addQuote(f, c) {
      const h = Object.assign({}, c && { cite: c }), b = this.wrap("blockquote", f, h);
      return this.addRaw(b).addEOL();
    }
    addLink(f, c) {
      const h = this.wrap("a", f, { href: c });
      return this.addRaw(h).addEOL();
    }
  }
  const u = new l();
  e.markdownSummary = u, e.summary = u;
}), hp = Ee(function(i, e) {
  var t = Y && Y.__createBinding || (Object.create ? function(f, c, h, b) {
    b === void 0 && (b = h), Object.defineProperty(f, b, { enumerable: !0, get: function() {
      return c[h];
    } });
  } : function(f, c, h, b) {
    b === void 0 && (b = h), f[b] = c[h];
  }), r = Y && Y.__setModuleDefault || (Object.create ? function(f, c) {
    Object.defineProperty(f, "default", { enumerable: !0, value: c });
  } : function(f, c) {
    f.default = c;
  }), s = Y && Y.__importStar || function(f) {
    if (f && f.__esModule)
      return f;
    var c = {};
    if (f != null)
      for (var h in f)
        h !== "default" && Object.hasOwnProperty.call(f, h) && t(c, f, h);
    return r(c, f), c;
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.toPlatformPath = e.toWin32Path = e.toPosixPath = void 0;
  const o = s(Gt.default);
  function l(f) {
    return f.replace(/[\\]/g, "/");
  }
  e.toPosixPath = l;
  function u(f) {
    return f.replace(/[/]/g, "\\");
  }
  e.toWin32Path = u;
  function v(f) {
    return f.replace(/[/\\]/g, o.sep);
  }
  e.toPlatformPath = v;
}), gr = Ee(function(i, e) {
  var t = Y && Y.__createBinding || (Object.create ? function(O, $, j, J) {
    J === void 0 && (J = j), Object.defineProperty(O, J, { enumerable: !0, get: function() {
      return $[j];
    } });
  } : function(O, $, j, J) {
    J === void 0 && (J = j), O[J] = $[j];
  }), r = Y && Y.__setModuleDefault || (Object.create ? function(O, $) {
    Object.defineProperty(O, "default", { enumerable: !0, value: $ });
  } : function(O, $) {
    O.default = $;
  }), s = Y && Y.__importStar || function(O) {
    if (O && O.__esModule)
      return O;
    var $ = {};
    if (O != null)
      for (var j in O)
        j !== "default" && Object.hasOwnProperty.call(O, j) && t($, O, j);
    return r($, O), $;
  }, o = Y && Y.__awaiter || function(O, $, j, J) {
    function ce(he) {
      return he instanceof j ? he : new j(function(Fe) {
        Fe(he);
      });
    }
    return new (j || (j = Promise))(function(he, Fe) {
      function Be(Ve) {
        try {
          Ye(J.next(Ve));
        } catch (aa) {
          Fe(aa);
        }
      }
      function ge(Ve) {
        try {
          Ye(J.throw(Ve));
        } catch (aa) {
          Fe(aa);
        }
      }
      function Ye(Ve) {
        Ve.done ? he(Ve.value) : ce(Ve.value).then(Be, ge);
      }
      Ye((J = J.apply(O, $ || [])).next());
    });
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.getIDToken = e.getState = e.saveState = e.group = e.endGroup = e.startGroup = e.info = e.notice = e.warning = e.error = e.debug = e.isDebug = e.setFailed = e.setCommandEcho = e.setOutput = e.getBooleanInput = e.getMultilineInput = e.getInput = e.addPath = e.setSecret = e.exportVariable = e.ExitCode = void 0;
  const l = s(Si.default), u = s(Gt.default);
  var v;
  (function(O) {
    O[O.Success = 0] = "Success", O[O.Failure = 1] = "Failure";
  })(v = e.ExitCode || (e.ExitCode = {}));
  function f(O, $) {
    const j = dt.toCommandValue($);
    if (process.env[O] = j, process.env.GITHUB_ENV || "")
      return ri.issueFileCommand("ENV", ri.prepareKeyValueMessage(O, $));
    qa.issueCommand("set-env", { name: O }, j);
  }
  e.exportVariable = f;
  function c(O) {
    qa.issueCommand("add-mask", {}, O);
  }
  e.setSecret = c;
  function h(O) {
    process.env.GITHUB_PATH || "" ? ri.issueFileCommand("PATH", O) : qa.issueCommand("add-path", {}, O), process.env.PATH = `${O}${u.delimiter}${process.env.PATH}`;
  }
  e.addPath = h;
  function b(O, $) {
    const j = process.env[`INPUT_${O.replace(/ /g, "_").toUpperCase()}`] || "";
    if ($ && $.required && !j)
      throw new Error(`Input required and not supplied: ${O}`);
    return $ && $.trimWhitespace === !1 ? j : j.trim();
  }
  e.getInput = b;
  function x(O, $) {
    const j = b(O, $).split(`
`).filter((J) => J !== "");
    return $ && $.trimWhitespace === !1 ? j : j.map((J) => J.trim());
  }
  e.getMultilineInput = x;
  function S(O, $) {
    const j = ["true", "True", "TRUE"], J = ["false", "False", "FALSE"], ce = b(O, $);
    if (j.includes(ce))
      return !0;
    if (J.includes(ce))
      return !1;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${O}
Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
  }
  e.getBooleanInput = S;
  function D(O, $) {
    if (process.env.GITHUB_OUTPUT || "")
      return ri.issueFileCommand("OUTPUT", ri.prepareKeyValueMessage(O, $));
    process.stdout.write(l.EOL), qa.issueCommand("set-output", { name: O }, dt.toCommandValue($));
  }
  e.setOutput = D;
  function L(O) {
    qa.issue("echo", O ? "on" : "off");
  }
  e.setCommandEcho = L;
  function R(O) {
    process.exitCode = v.Failure, ee(O);
  }
  e.setFailed = R;
  function B() {
    return process.env.RUNNER_DEBUG === "1";
  }
  e.isDebug = B;
  function Q(O) {
    qa.issueCommand("debug", {}, O);
  }
  e.debug = Q;
  function ee(O, $ = {}) {
    qa.issueCommand("error", dt.toCommandProperties($), O instanceof Error ? O.toString() : O);
  }
  e.error = ee;
  function re(O, $ = {}) {
    qa.issueCommand("warning", dt.toCommandProperties($), O instanceof Error ? O.toString() : O);
  }
  e.warning = re;
  function de(O, $ = {}) {
    qa.issueCommand("notice", dt.toCommandProperties($), O instanceof Error ? O.toString() : O);
  }
  e.notice = de;
  function ne(O) {
    process.stdout.write(O + l.EOL);
  }
  e.info = ne;
  function F(O) {
    qa.issue("group", O);
  }
  e.startGroup = F;
  function N() {
    qa.issue("endgroup");
  }
  e.endGroup = N;
  function G(O, $) {
    return o(this, void 0, void 0, function* () {
      F(O);
      let j;
      try {
        j = yield $();
      } finally {
        N();
      }
      return j;
    });
  }
  e.group = G;
  function V(O, $) {
    if (process.env.GITHUB_STATE || "")
      return ri.issueFileCommand("STATE", ri.prepareKeyValueMessage(O, $));
    qa.issueCommand("save-state", { name: O }, dt.toCommandValue($));
  }
  e.saveState = V;
  function ae(O) {
    return process.env[`STATE_${O}`] || "";
  }
  e.getState = ae;
  function ie(O) {
    return o(this, void 0, void 0, function* () {
      return yield a8.OidcClient.getIDToken(O);
    });
  }
  e.getIDToken = ie, Object.defineProperty(e, "summary", { enumerable: !0, get: function() {
    return pl.summary;
  } });
  var H = pl;
  Object.defineProperty(e, "markdownSummary", { enumerable: !0, get: function() {
    return H.markdownSummary;
  } }), Object.defineProperty(e, "toPosixPath", { enumerable: !0, get: function() {
    return hp.toPosixPath;
  } }), Object.defineProperty(e, "toWin32Path", { enumerable: !0, get: function() {
    return hp.toWin32Path;
  } }), Object.defineProperty(e, "toPlatformPath", { enumerable: !0, get: function() {
    return hp.toPlatformPath;
  } });
}), ol = Ee(function(i, e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.Context = void 0;
  class t {
    constructor() {
      var s, o, l;
      if (this.payload = {}, process.env.GITHUB_EVENT_PATH)
        if (ot.default.existsSync(process.env.GITHUB_EVENT_PATH))
          this.payload = JSON.parse(ot.default.readFileSync(process.env.GITHUB_EVENT_PATH, { encoding: "utf8" }));
        else {
          const u = process.env.GITHUB_EVENT_PATH;
          process.stdout.write(`GITHUB_EVENT_PATH ${u} does not exist${Si.default.EOL}`);
        }
      this.eventName = process.env.GITHUB_EVENT_NAME, this.sha = process.env.GITHUB_SHA, this.ref = process.env.GITHUB_REF, this.workflow = process.env.GITHUB_WORKFLOW, this.action = process.env.GITHUB_ACTION, this.actor = process.env.GITHUB_ACTOR, this.job = process.env.GITHUB_JOB, this.runNumber = parseInt(process.env.GITHUB_RUN_NUMBER, 10), this.runId = parseInt(process.env.GITHUB_RUN_ID, 10), this.apiUrl = (s = process.env.GITHUB_API_URL) !== null && s !== void 0 ? s : "https://api.github.com", this.serverUrl = (o = process.env.GITHUB_SERVER_URL) !== null && o !== void 0 ? o : "https://github.com", this.graphqlUrl = (l = process.env.GITHUB_GRAPHQL_URL) !== null && l !== void 0 ? l : "https://api.github.com/graphql";
    }
    get issue() {
      const s = this.payload;
      return Object.assign(Object.assign({}, this.repo), { number: (s.issue || s.pull_request || s).number });
    }
    get repo() {
      if (process.env.GITHUB_REPOSITORY) {
        const [s, o] = process.env.GITHUB_REPOSITORY.split("/");
        return { owner: s, repo: o };
      }
      if (this.payload.repository)
        return {
          owner: this.payload.repository.owner.login,
          repo: this.payload.repository.name
        };
      throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'");
    }
  }
  e.Context = t;
}), t8 = Ee(function(i, e) {
  var t = Y && Y.__createBinding || (Object.create ? function(f, c, h, b) {
    b === void 0 && (b = h), Object.defineProperty(f, b, { enumerable: !0, get: function() {
      return c[h];
    } });
  } : function(f, c, h, b) {
    b === void 0 && (b = h), f[b] = c[h];
  }), r = Y && Y.__setModuleDefault || (Object.create ? function(f, c) {
    Object.defineProperty(f, "default", { enumerable: !0, value: c });
  } : function(f, c) {
    f.default = c;
  }), s = Y && Y.__importStar || function(f) {
    if (f && f.__esModule)
      return f;
    var c = {};
    if (f != null)
      for (var h in f)
        h !== "default" && Object.hasOwnProperty.call(f, h) && t(c, f, h);
    return r(c, f), c;
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.getApiBaseUrl = e.getProxyAgent = e.getAuthString = void 0;
  const o = s(rl);
  function l(f, c) {
    if (!f && !c.auth)
      throw new Error("Parameter token or opts.auth is required");
    if (f && c.auth)
      throw new Error("Parameters token and opts.auth may not both be specified");
    return typeof c.auth == "string" ? c.auth : `token ${f}`;
  }
  e.getAuthString = l;
  function u(f) {
    return new o.HttpClient().getAgent(f);
  }
  e.getProxyAgent = u;
  function v() {
    return process.env.GITHUB_API_URL || "https://api.github.com";
  }
  e.getApiBaseUrl = v;
});
function wr() {
  return typeof navigator == "object" && "userAgent" in navigator ? navigator.userAgent : typeof process == "object" && "version" in process ? `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})` : "<environment undetectable>";
}
var dl = ll;
function ll(i, e, t, r) {
  if (typeof t != "function")
    throw new Error("method for before hook must be a function");
  return r || (r = {}), Array.isArray(e) ? e.reverse().reduce(function(s, o) {
    return ll.bind(null, i, o, s, r);
  }, t)() : Promise.resolve().then(function() {
    return i.registry[e] ? i.registry[e].reduce(function(s, o) {
      return o.hook.bind(null, s, r);
    }, t)() : t(r);
  });
}
var i8 = n8;
function n8(i, e, t, r) {
  var s = r;
  i.registry[t] || (i.registry[t] = []), e === "before" && (r = function(o, l) {
    return Promise.resolve().then(s.bind(null, l)).then(o.bind(null, l));
  }), e === "after" && (r = function(o, l) {
    var u;
    return Promise.resolve().then(o.bind(null, l)).then(function(v) {
      return u = v, s(u, l);
    }).then(function() {
      return u;
    });
  }), e === "error" && (r = function(o, l) {
    return Promise.resolve().then(o.bind(null, l)).catch(function(u) {
      return s(u, l);
    });
  }), i.registry[t].push({
    hook: r,
    orig: s
  });
}
var r8 = s8;
function s8(i, e, t) {
  if (!!i.registry[e]) {
    var r = i.registry[e].map(function(s) {
      return s.orig;
    }).indexOf(t);
    r !== -1 && i.registry[e].splice(r, 1);
  }
}
var cl = Function.bind, ul = cl.bind(cl);
function ml(i, e, t) {
  var r = ul(r8, null).apply(null, t ? [e, t] : [e]);
  i.api = { remove: r }, i.remove = r, ["before", "error", "after", "wrap"].forEach(function(s) {
    var o = t ? [e, s, t] : [e, s];
    i[s] = i.api[s] = ul(i8, null).apply(null, o);
  });
}
function p8() {
  var i = "h", e = {
    registry: {}
  }, t = dl.bind(null, e, i);
  return ml(t, e, i), t;
}
function fl() {
  var i = {
    registry: {}
  }, e = dl.bind(null, i);
  return ml(e, i), e;
}
var hl = !1;
function Ai() {
  return hl || (console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'), hl = !0), fl();
}
Ai.Singular = p8.bind(), Ai.Collection = fl.bind();
var vp = Ai, o8 = Ai, d8 = Ai.Singular, vl = Ai.Collection;
vp.Hook = o8, vp.Singular = d8, vp.Collection = vl;
function gl(i) {
  return Object.prototype.toString.call(i) === "[object Object]";
}
function wl(i) {
  var e, t;
  return gl(i) === !1 ? !1 : (e = i.constructor, e === void 0 ? !0 : (t = e.prototype, !(gl(t) === !1 || t.hasOwnProperty("isPrototypeOf") === !1)));
}
function l8(i) {
  return i ? Object.keys(i).reduce((e, t) => (e[t.toLowerCase()] = i[t], e), {}) : {};
}
function bl(i, e) {
  const t = Object.assign({}, i);
  return Object.keys(e).forEach((r) => {
    wl(e[r]) ? r in i ? t[r] = bl(i[r], e[r]) : Object.assign(t, { [r]: e[r] }) : Object.assign(t, { [r]: e[r] });
  }), t;
}
function _l(i) {
  for (const e in i)
    i[e] === void 0 && delete i[e];
  return i;
}
function gp(i, e, t) {
  if (typeof e == "string") {
    let [s, o] = e.split(" ");
    t = Object.assign(o ? { method: s, url: o } : { url: s }, t);
  } else
    t = Object.assign({}, e);
  t.headers = l8(t.headers), _l(t), _l(t.headers);
  const r = bl(i || {}, t);
  return i && i.mediaType.previews.length && (r.mediaType.previews = i.mediaType.previews.filter((s) => !r.mediaType.previews.includes(s)).concat(r.mediaType.previews)), r.mediaType.previews = r.mediaType.previews.map((s) => s.replace(/-preview/, "")), r;
}
function c8(i, e) {
  const t = /\?/.test(i) ? "&" : "?", r = Object.keys(e);
  return r.length === 0 ? i : i + t + r.map((s) => s === "q" ? "q=" + e.q.split("+").map(encodeURIComponent).join("+") : `${s}=${encodeURIComponent(e[s])}`).join("&");
}
const u8 = /\{[^}]+\}/g;
function m8(i) {
  return i.replace(/^\W+|\W+$/g, "").split(/,/);
}
function f8(i) {
  const e = i.match(u8);
  return e ? e.map(m8).reduce((t, r) => t.concat(r), []) : [];
}
function xl(i, e) {
  return Object.keys(i).filter((t) => !e.includes(t)).reduce((t, r) => (t[r] = i[r], t), {});
}
function yl(i) {
  return i.split(/(%[0-9A-Fa-f]{2})/g).map(function(e) {
    return /%[0-9A-Fa-f]/.test(e) || (e = encodeURI(e).replace(/%5B/g, "[").replace(/%5D/g, "]")), e;
  }).join("");
}
function Ri(i) {
  return encodeURIComponent(i).replace(/[!'()*]/g, function(e) {
    return "%" + e.charCodeAt(0).toString(16).toUpperCase();
  });
}
function dn(i, e, t) {
  return e = i === "+" || i === "#" ? yl(e) : Ri(e), t ? Ri(t) + "=" + e : e;
}
function Ci(i) {
  return i != null;
}
function wp(i) {
  return i === ";" || i === "&" || i === "?";
}
function h8(i, e, t, r) {
  var s = i[t], o = [];
  if (Ci(s) && s !== "")
    if (typeof s == "string" || typeof s == "number" || typeof s == "boolean")
      s = s.toString(), r && r !== "*" && (s = s.substring(0, parseInt(r, 10))), o.push(dn(e, s, wp(e) ? t : ""));
    else if (r === "*")
      Array.isArray(s) ? s.filter(Ci).forEach(function(l) {
        o.push(dn(e, l, wp(e) ? t : ""));
      }) : Object.keys(s).forEach(function(l) {
        Ci(s[l]) && o.push(dn(e, s[l], l));
      });
    else {
      const l = [];
      Array.isArray(s) ? s.filter(Ci).forEach(function(u) {
        l.push(dn(e, u));
      }) : Object.keys(s).forEach(function(u) {
        Ci(s[u]) && (l.push(Ri(u)), l.push(dn(e, s[u].toString())));
      }), wp(e) ? o.push(Ri(t) + "=" + l.join(",")) : l.length !== 0 && o.push(l.join(","));
    }
  else
    e === ";" ? Ci(s) && o.push(Ri(t)) : s === "" && (e === "&" || e === "?") ? o.push(Ri(t) + "=") : s === "" && o.push("");
  return o;
}
function v8(i) {
  return {
    expand: g8.bind(null, i)
  };
}
function g8(i, e) {
  var t = ["+", "#", ".", "/", ";", "?", "&"];
  return i.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function(r, s, o) {
    if (s) {
      let u = "";
      const v = [];
      if (t.indexOf(s.charAt(0)) !== -1 && (u = s.charAt(0), s = s.substr(1)), s.split(/,/g).forEach(function(f) {
        var c = /([^:\*]*)(?::(\d+)|(\*))?/.exec(f);
        v.push(h8(e, u, c[1], c[2] || c[3]));
      }), u && u !== "+") {
        var l = ",";
        return u === "?" ? l = "&" : u !== "#" && (l = u), (v.length !== 0 ? u : "") + v.join(l);
      } else
        return v.join(",");
    } else
      return yl(o);
  });
}
function El(i) {
  let e = i.method.toUpperCase(), t = (i.url || "/").replace(/:([a-z]\w+)/g, "{$1}"), r = Object.assign({}, i.headers), s, o = xl(i, [
    "method",
    "baseUrl",
    "url",
    "headers",
    "request",
    "mediaType"
  ]);
  const l = f8(t);
  t = v8(t).expand(o), /^http/.test(t) || (t = i.baseUrl + t);
  const u = Object.keys(i).filter((c) => l.includes(c)).concat("baseUrl"), v = xl(o, u);
  if (!/application\/octet-stream/i.test(r.accept) && (i.mediaType.format && (r.accept = r.accept.split(/,/).map((c) => c.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/, `application/vnd$1$2.${i.mediaType.format}`)).join(",")), i.mediaType.previews.length)) {
    const c = r.accept.match(/[\w-]+(?=-preview)/g) || [];
    r.accept = c.concat(i.mediaType.previews).map((h) => {
      const b = i.mediaType.format ? `.${i.mediaType.format}` : "+json";
      return `application/vnd.github.${h}-preview${b}`;
    }).join(",");
  }
  return ["GET", "HEAD"].includes(e) ? t = c8(t, v) : "data" in v ? s = v.data : Object.keys(v).length ? s = v : r["content-length"] = 0, !r["content-type"] && typeof s != "undefined" && (r["content-type"] = "application/json; charset=utf-8"), ["PATCH", "PUT"].includes(e) && typeof s == "undefined" && (s = ""), Object.assign({ method: e, url: t, headers: r }, typeof s != "undefined" ? { body: s } : null, i.request ? { request: i.request } : null);
}
function w8(i, e, t) {
  return El(gp(i, e, t));
}
function Tl(i, e) {
  const t = gp(i, e), r = w8.bind(null, t);
  return Object.assign(r, {
    DEFAULTS: t,
    defaults: Tl.bind(null, t),
    merge: gp.bind(null, t),
    parse: El
  });
}
const b8 = "6.0.12", _8 = `octokit-endpoint.js/${b8} ${wr()}`, x8 = {
  method: "GET",
  baseUrl: "https://api.github.com",
  headers: {
    accept: "application/vnd.github.v3+json",
    "user-agent": _8
  },
  mediaType: {
    format: "",
    previews: []
  }
}, y8 = Tl(null, x8);
var Me = {}, za = Me;
function Sl(i) {
  return i < 0 ? -1 : 1;
}
function E8(i) {
  return i % 1 == 0.5 && (i & 1) == 0 ? Math.floor(i) : Math.round(i);
}
function Vt(i, e) {
  e.unsigned || --i;
  const t = e.unsigned ? 0 : -Math.pow(2, i), r = Math.pow(2, i) - 1, s = e.moduloBitLength ? Math.pow(2, e.moduloBitLength) : Math.pow(2, i), o = e.moduloBitLength ? Math.pow(2, e.moduloBitLength - 1) : Math.pow(2, i - 1);
  return function(l, u) {
    u || (u = {});
    let v = +l;
    if (u.enforceRange) {
      if (!Number.isFinite(v))
        throw new TypeError("Argument is not a finite number");
      if (v = Sl(v) * Math.floor(Math.abs(v)), v < t || v > r)
        throw new TypeError("Argument is not in byte range");
      return v;
    }
    if (!isNaN(v) && u.clamp)
      return v = E8(v), v < t && (v = t), v > r && (v = r), v;
    if (!Number.isFinite(v) || v === 0)
      return 0;
    if (v = Sl(v) * Math.floor(Math.abs(v)), v = v % s, !e.unsigned && v >= o)
      return v - s;
    if (e.unsigned) {
      if (v < 0)
        v += s;
      else if (v === -0)
        return 0;
    }
    return v;
  };
}
Me.void = function() {
}, Me.boolean = function(i) {
  return !!i;
}, Me.byte = Vt(8, { unsigned: !1 }), Me.octet = Vt(8, { unsigned: !0 }), Me.short = Vt(16, { unsigned: !1 }), Me["unsigned short"] = Vt(16, { unsigned: !0 }), Me.long = Vt(32, { unsigned: !1 }), Me["unsigned long"] = Vt(32, { unsigned: !0 }), Me["long long"] = Vt(32, { unsigned: !1, moduloBitLength: 64 }), Me["unsigned long long"] = Vt(32, { unsigned: !0, moduloBitLength: 64 }), Me.double = function(i) {
  const e = +i;
  if (!Number.isFinite(e))
    throw new TypeError("Argument is not a finite floating-point value");
  return e;
}, Me["unrestricted double"] = function(i) {
  const e = +i;
  if (isNaN(e))
    throw new TypeError("Argument is NaN");
  return e;
}, Me.float = Me.double, Me["unrestricted float"] = Me["unrestricted double"], Me.DOMString = function(i, e) {
  return e || (e = {}), e.treatNullAsEmptyString && i === null ? "" : String(i);
}, Me.ByteString = function(i, e) {
  const t = String(i);
  let r;
  for (let s = 0; (r = t.codePointAt(s)) !== void 0; ++s)
    if (r > 255)
      throw new TypeError("Argument is not a valid bytestring");
  return t;
}, Me.USVString = function(i) {
  const e = String(i), t = e.length, r = [];
  for (let s = 0; s < t; ++s) {
    const o = e.charCodeAt(s);
    if (o < 55296 || o > 57343)
      r.push(String.fromCodePoint(o));
    else if (56320 <= o && o <= 57343)
      r.push(String.fromCodePoint(65533));
    else if (s === t - 1)
      r.push(String.fromCodePoint(65533));
    else {
      const l = e.charCodeAt(s + 1);
      if (56320 <= l && l <= 57343) {
        const u = o & 1023, v = l & 1023;
        r.push(String.fromCodePoint((2 << 15) + (2 << 9) * u + v)), ++s;
      } else
        r.push(String.fromCodePoint(65533));
    }
  }
  return r.join("");
}, Me.Date = function(i, e) {
  if (!(i instanceof Date))
    throw new TypeError("Argument is not a Date object");
  if (!isNaN(i))
    return i;
}, Me.RegExp = function(i, e) {
  return i instanceof RegExp || (i = new RegExp(i)), i;
};
var Al = Ee(function(i) {
  i.exports.mixin = function(t, r) {
    const s = Object.getOwnPropertyNames(r);
    for (let o = 0; o < s.length; ++o)
      Object.defineProperty(t, s[o], Object.getOwnPropertyDescriptor(r, s[o]));
  }, i.exports.wrapperSymbol = Symbol("wrapper"), i.exports.implSymbol = Symbol("impl"), i.exports.wrapperForImpl = function(e) {
    return e[i.exports.wrapperSymbol];
  }, i.exports.implForWrapper = function(e) {
    return e[i.exports.implSymbol];
  };
}), Rl = [
  [
    [
      0,
      44
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      45,
      46
    ],
    "valid"
  ],
  [
    [
      47,
      47
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      48,
      57
    ],
    "valid"
  ],
  [
    [
      58,
      64
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      65,
      65
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      66,
      66
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      67,
      67
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      68,
      68
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      69,
      69
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      70,
      70
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      71,
      71
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      72,
      72
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      73,
      73
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      74,
      74
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      75,
      75
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      76,
      76
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      77,
      77
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      78,
      78
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      79,
      79
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      80,
      80
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      81,
      81
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      82,
      82
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      83,
      83
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      84,
      84
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      85,
      85
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      86,
      86
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      87,
      87
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      88,
      88
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      89,
      89
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      90,
      90
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      91,
      96
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      97,
      122
    ],
    "valid"
  ],
  [
    [
      123,
      127
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      128,
      159
    ],
    "disallowed"
  ],
  [
    [
      160,
      160
    ],
    "disallowed_STD3_mapped",
    [
      32
    ]
  ],
  [
    [
      161,
      167
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      168,
      168
    ],
    "disallowed_STD3_mapped",
    [
      32,
      776
    ]
  ],
  [
    [
      169,
      169
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      170,
      170
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      171,
      172
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      173,
      173
    ],
    "ignored"
  ],
  [
    [
      174,
      174
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      175,
      175
    ],
    "disallowed_STD3_mapped",
    [
      32,
      772
    ]
  ],
  [
    [
      176,
      177
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      178,
      178
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      179,
      179
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      180,
      180
    ],
    "disallowed_STD3_mapped",
    [
      32,
      769
    ]
  ],
  [
    [
      181,
      181
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      182,
      182
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      183,
      183
    ],
    "valid"
  ],
  [
    [
      184,
      184
    ],
    "disallowed_STD3_mapped",
    [
      32,
      807
    ]
  ],
  [
    [
      185,
      185
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      186,
      186
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      187,
      187
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      188,
      188
    ],
    "mapped",
    [
      49,
      8260,
      52
    ]
  ],
  [
    [
      189,
      189
    ],
    "mapped",
    [
      49,
      8260,
      50
    ]
  ],
  [
    [
      190,
      190
    ],
    "mapped",
    [
      51,
      8260,
      52
    ]
  ],
  [
    [
      191,
      191
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      192,
      192
    ],
    "mapped",
    [
      224
    ]
  ],
  [
    [
      193,
      193
    ],
    "mapped",
    [
      225
    ]
  ],
  [
    [
      194,
      194
    ],
    "mapped",
    [
      226
    ]
  ],
  [
    [
      195,
      195
    ],
    "mapped",
    [
      227
    ]
  ],
  [
    [
      196,
      196
    ],
    "mapped",
    [
      228
    ]
  ],
  [
    [
      197,
      197
    ],
    "mapped",
    [
      229
    ]
  ],
  [
    [
      198,
      198
    ],
    "mapped",
    [
      230
    ]
  ],
  [
    [
      199,
      199
    ],
    "mapped",
    [
      231
    ]
  ],
  [
    [
      200,
      200
    ],
    "mapped",
    [
      232
    ]
  ],
  [
    [
      201,
      201
    ],
    "mapped",
    [
      233
    ]
  ],
  [
    [
      202,
      202
    ],
    "mapped",
    [
      234
    ]
  ],
  [
    [
      203,
      203
    ],
    "mapped",
    [
      235
    ]
  ],
  [
    [
      204,
      204
    ],
    "mapped",
    [
      236
    ]
  ],
  [
    [
      205,
      205
    ],
    "mapped",
    [
      237
    ]
  ],
  [
    [
      206,
      206
    ],
    "mapped",
    [
      238
    ]
  ],
  [
    [
      207,
      207
    ],
    "mapped",
    [
      239
    ]
  ],
  [
    [
      208,
      208
    ],
    "mapped",
    [
      240
    ]
  ],
  [
    [
      209,
      209
    ],
    "mapped",
    [
      241
    ]
  ],
  [
    [
      210,
      210
    ],
    "mapped",
    [
      242
    ]
  ],
  [
    [
      211,
      211
    ],
    "mapped",
    [
      243
    ]
  ],
  [
    [
      212,
      212
    ],
    "mapped",
    [
      244
    ]
  ],
  [
    [
      213,
      213
    ],
    "mapped",
    [
      245
    ]
  ],
  [
    [
      214,
      214
    ],
    "mapped",
    [
      246
    ]
  ],
  [
    [
      215,
      215
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      216,
      216
    ],
    "mapped",
    [
      248
    ]
  ],
  [
    [
      217,
      217
    ],
    "mapped",
    [
      249
    ]
  ],
  [
    [
      218,
      218
    ],
    "mapped",
    [
      250
    ]
  ],
  [
    [
      219,
      219
    ],
    "mapped",
    [
      251
    ]
  ],
  [
    [
      220,
      220
    ],
    "mapped",
    [
      252
    ]
  ],
  [
    [
      221,
      221
    ],
    "mapped",
    [
      253
    ]
  ],
  [
    [
      222,
      222
    ],
    "mapped",
    [
      254
    ]
  ],
  [
    [
      223,
      223
    ],
    "deviation",
    [
      115,
      115
    ]
  ],
  [
    [
      224,
      246
    ],
    "valid"
  ],
  [
    [
      247,
      247
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      248,
      255
    ],
    "valid"
  ],
  [
    [
      256,
      256
    ],
    "mapped",
    [
      257
    ]
  ],
  [
    [
      257,
      257
    ],
    "valid"
  ],
  [
    [
      258,
      258
    ],
    "mapped",
    [
      259
    ]
  ],
  [
    [
      259,
      259
    ],
    "valid"
  ],
  [
    [
      260,
      260
    ],
    "mapped",
    [
      261
    ]
  ],
  [
    [
      261,
      261
    ],
    "valid"
  ],
  [
    [
      262,
      262
    ],
    "mapped",
    [
      263
    ]
  ],
  [
    [
      263,
      263
    ],
    "valid"
  ],
  [
    [
      264,
      264
    ],
    "mapped",
    [
      265
    ]
  ],
  [
    [
      265,
      265
    ],
    "valid"
  ],
  [
    [
      266,
      266
    ],
    "mapped",
    [
      267
    ]
  ],
  [
    [
      267,
      267
    ],
    "valid"
  ],
  [
    [
      268,
      268
    ],
    "mapped",
    [
      269
    ]
  ],
  [
    [
      269,
      269
    ],
    "valid"
  ],
  [
    [
      270,
      270
    ],
    "mapped",
    [
      271
    ]
  ],
  [
    [
      271,
      271
    ],
    "valid"
  ],
  [
    [
      272,
      272
    ],
    "mapped",
    [
      273
    ]
  ],
  [
    [
      273,
      273
    ],
    "valid"
  ],
  [
    [
      274,
      274
    ],
    "mapped",
    [
      275
    ]
  ],
  [
    [
      275,
      275
    ],
    "valid"
  ],
  [
    [
      276,
      276
    ],
    "mapped",
    [
      277
    ]
  ],
  [
    [
      277,
      277
    ],
    "valid"
  ],
  [
    [
      278,
      278
    ],
    "mapped",
    [
      279
    ]
  ],
  [
    [
      279,
      279
    ],
    "valid"
  ],
  [
    [
      280,
      280
    ],
    "mapped",
    [
      281
    ]
  ],
  [
    [
      281,
      281
    ],
    "valid"
  ],
  [
    [
      282,
      282
    ],
    "mapped",
    [
      283
    ]
  ],
  [
    [
      283,
      283
    ],
    "valid"
  ],
  [
    [
      284,
      284
    ],
    "mapped",
    [
      285
    ]
  ],
  [
    [
      285,
      285
    ],
    "valid"
  ],
  [
    [
      286,
      286
    ],
    "mapped",
    [
      287
    ]
  ],
  [
    [
      287,
      287
    ],
    "valid"
  ],
  [
    [
      288,
      288
    ],
    "mapped",
    [
      289
    ]
  ],
  [
    [
      289,
      289
    ],
    "valid"
  ],
  [
    [
      290,
      290
    ],
    "mapped",
    [
      291
    ]
  ],
  [
    [
      291,
      291
    ],
    "valid"
  ],
  [
    [
      292,
      292
    ],
    "mapped",
    [
      293
    ]
  ],
  [
    [
      293,
      293
    ],
    "valid"
  ],
  [
    [
      294,
      294
    ],
    "mapped",
    [
      295
    ]
  ],
  [
    [
      295,
      295
    ],
    "valid"
  ],
  [
    [
      296,
      296
    ],
    "mapped",
    [
      297
    ]
  ],
  [
    [
      297,
      297
    ],
    "valid"
  ],
  [
    [
      298,
      298
    ],
    "mapped",
    [
      299
    ]
  ],
  [
    [
      299,
      299
    ],
    "valid"
  ],
  [
    [
      300,
      300
    ],
    "mapped",
    [
      301
    ]
  ],
  [
    [
      301,
      301
    ],
    "valid"
  ],
  [
    [
      302,
      302
    ],
    "mapped",
    [
      303
    ]
  ],
  [
    [
      303,
      303
    ],
    "valid"
  ],
  [
    [
      304,
      304
    ],
    "mapped",
    [
      105,
      775
    ]
  ],
  [
    [
      305,
      305
    ],
    "valid"
  ],
  [
    [
      306,
      307
    ],
    "mapped",
    [
      105,
      106
    ]
  ],
  [
    [
      308,
      308
    ],
    "mapped",
    [
      309
    ]
  ],
  [
    [
      309,
      309
    ],
    "valid"
  ],
  [
    [
      310,
      310
    ],
    "mapped",
    [
      311
    ]
  ],
  [
    [
      311,
      312
    ],
    "valid"
  ],
  [
    [
      313,
      313
    ],
    "mapped",
    [
      314
    ]
  ],
  [
    [
      314,
      314
    ],
    "valid"
  ],
  [
    [
      315,
      315
    ],
    "mapped",
    [
      316
    ]
  ],
  [
    [
      316,
      316
    ],
    "valid"
  ],
  [
    [
      317,
      317
    ],
    "mapped",
    [
      318
    ]
  ],
  [
    [
      318,
      318
    ],
    "valid"
  ],
  [
    [
      319,
      320
    ],
    "mapped",
    [
      108,
      183
    ]
  ],
  [
    [
      321,
      321
    ],
    "mapped",
    [
      322
    ]
  ],
  [
    [
      322,
      322
    ],
    "valid"
  ],
  [
    [
      323,
      323
    ],
    "mapped",
    [
      324
    ]
  ],
  [
    [
      324,
      324
    ],
    "valid"
  ],
  [
    [
      325,
      325
    ],
    "mapped",
    [
      326
    ]
  ],
  [
    [
      326,
      326
    ],
    "valid"
  ],
  [
    [
      327,
      327
    ],
    "mapped",
    [
      328
    ]
  ],
  [
    [
      328,
      328
    ],
    "valid"
  ],
  [
    [
      329,
      329
    ],
    "mapped",
    [
      700,
      110
    ]
  ],
  [
    [
      330,
      330
    ],
    "mapped",
    [
      331
    ]
  ],
  [
    [
      331,
      331
    ],
    "valid"
  ],
  [
    [
      332,
      332
    ],
    "mapped",
    [
      333
    ]
  ],
  [
    [
      333,
      333
    ],
    "valid"
  ],
  [
    [
      334,
      334
    ],
    "mapped",
    [
      335
    ]
  ],
  [
    [
      335,
      335
    ],
    "valid"
  ],
  [
    [
      336,
      336
    ],
    "mapped",
    [
      337
    ]
  ],
  [
    [
      337,
      337
    ],
    "valid"
  ],
  [
    [
      338,
      338
    ],
    "mapped",
    [
      339
    ]
  ],
  [
    [
      339,
      339
    ],
    "valid"
  ],
  [
    [
      340,
      340
    ],
    "mapped",
    [
      341
    ]
  ],
  [
    [
      341,
      341
    ],
    "valid"
  ],
  [
    [
      342,
      342
    ],
    "mapped",
    [
      343
    ]
  ],
  [
    [
      343,
      343
    ],
    "valid"
  ],
  [
    [
      344,
      344
    ],
    "mapped",
    [
      345
    ]
  ],
  [
    [
      345,
      345
    ],
    "valid"
  ],
  [
    [
      346,
      346
    ],
    "mapped",
    [
      347
    ]
  ],
  [
    [
      347,
      347
    ],
    "valid"
  ],
  [
    [
      348,
      348
    ],
    "mapped",
    [
      349
    ]
  ],
  [
    [
      349,
      349
    ],
    "valid"
  ],
  [
    [
      350,
      350
    ],
    "mapped",
    [
      351
    ]
  ],
  [
    [
      351,
      351
    ],
    "valid"
  ],
  [
    [
      352,
      352
    ],
    "mapped",
    [
      353
    ]
  ],
  [
    [
      353,
      353
    ],
    "valid"
  ],
  [
    [
      354,
      354
    ],
    "mapped",
    [
      355
    ]
  ],
  [
    [
      355,
      355
    ],
    "valid"
  ],
  [
    [
      356,
      356
    ],
    "mapped",
    [
      357
    ]
  ],
  [
    [
      357,
      357
    ],
    "valid"
  ],
  [
    [
      358,
      358
    ],
    "mapped",
    [
      359
    ]
  ],
  [
    [
      359,
      359
    ],
    "valid"
  ],
  [
    [
      360,
      360
    ],
    "mapped",
    [
      361
    ]
  ],
  [
    [
      361,
      361
    ],
    "valid"
  ],
  [
    [
      362,
      362
    ],
    "mapped",
    [
      363
    ]
  ],
  [
    [
      363,
      363
    ],
    "valid"
  ],
  [
    [
      364,
      364
    ],
    "mapped",
    [
      365
    ]
  ],
  [
    [
      365,
      365
    ],
    "valid"
  ],
  [
    [
      366,
      366
    ],
    "mapped",
    [
      367
    ]
  ],
  [
    [
      367,
      367
    ],
    "valid"
  ],
  [
    [
      368,
      368
    ],
    "mapped",
    [
      369
    ]
  ],
  [
    [
      369,
      369
    ],
    "valid"
  ],
  [
    [
      370,
      370
    ],
    "mapped",
    [
      371
    ]
  ],
  [
    [
      371,
      371
    ],
    "valid"
  ],
  [
    [
      372,
      372
    ],
    "mapped",
    [
      373
    ]
  ],
  [
    [
      373,
      373
    ],
    "valid"
  ],
  [
    [
      374,
      374
    ],
    "mapped",
    [
      375
    ]
  ],
  [
    [
      375,
      375
    ],
    "valid"
  ],
  [
    [
      376,
      376
    ],
    "mapped",
    [
      255
    ]
  ],
  [
    [
      377,
      377
    ],
    "mapped",
    [
      378
    ]
  ],
  [
    [
      378,
      378
    ],
    "valid"
  ],
  [
    [
      379,
      379
    ],
    "mapped",
    [
      380
    ]
  ],
  [
    [
      380,
      380
    ],
    "valid"
  ],
  [
    [
      381,
      381
    ],
    "mapped",
    [
      382
    ]
  ],
  [
    [
      382,
      382
    ],
    "valid"
  ],
  [
    [
      383,
      383
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      384,
      384
    ],
    "valid"
  ],
  [
    [
      385,
      385
    ],
    "mapped",
    [
      595
    ]
  ],
  [
    [
      386,
      386
    ],
    "mapped",
    [
      387
    ]
  ],
  [
    [
      387,
      387
    ],
    "valid"
  ],
  [
    [
      388,
      388
    ],
    "mapped",
    [
      389
    ]
  ],
  [
    [
      389,
      389
    ],
    "valid"
  ],
  [
    [
      390,
      390
    ],
    "mapped",
    [
      596
    ]
  ],
  [
    [
      391,
      391
    ],
    "mapped",
    [
      392
    ]
  ],
  [
    [
      392,
      392
    ],
    "valid"
  ],
  [
    [
      393,
      393
    ],
    "mapped",
    [
      598
    ]
  ],
  [
    [
      394,
      394
    ],
    "mapped",
    [
      599
    ]
  ],
  [
    [
      395,
      395
    ],
    "mapped",
    [
      396
    ]
  ],
  [
    [
      396,
      397
    ],
    "valid"
  ],
  [
    [
      398,
      398
    ],
    "mapped",
    [
      477
    ]
  ],
  [
    [
      399,
      399
    ],
    "mapped",
    [
      601
    ]
  ],
  [
    [
      400,
      400
    ],
    "mapped",
    [
      603
    ]
  ],
  [
    [
      401,
      401
    ],
    "mapped",
    [
      402
    ]
  ],
  [
    [
      402,
      402
    ],
    "valid"
  ],
  [
    [
      403,
      403
    ],
    "mapped",
    [
      608
    ]
  ],
  [
    [
      404,
      404
    ],
    "mapped",
    [
      611
    ]
  ],
  [
    [
      405,
      405
    ],
    "valid"
  ],
  [
    [
      406,
      406
    ],
    "mapped",
    [
      617
    ]
  ],
  [
    [
      407,
      407
    ],
    "mapped",
    [
      616
    ]
  ],
  [
    [
      408,
      408
    ],
    "mapped",
    [
      409
    ]
  ],
  [
    [
      409,
      411
    ],
    "valid"
  ],
  [
    [
      412,
      412
    ],
    "mapped",
    [
      623
    ]
  ],
  [
    [
      413,
      413
    ],
    "mapped",
    [
      626
    ]
  ],
  [
    [
      414,
      414
    ],
    "valid"
  ],
  [
    [
      415,
      415
    ],
    "mapped",
    [
      629
    ]
  ],
  [
    [
      416,
      416
    ],
    "mapped",
    [
      417
    ]
  ],
  [
    [
      417,
      417
    ],
    "valid"
  ],
  [
    [
      418,
      418
    ],
    "mapped",
    [
      419
    ]
  ],
  [
    [
      419,
      419
    ],
    "valid"
  ],
  [
    [
      420,
      420
    ],
    "mapped",
    [
      421
    ]
  ],
  [
    [
      421,
      421
    ],
    "valid"
  ],
  [
    [
      422,
      422
    ],
    "mapped",
    [
      640
    ]
  ],
  [
    [
      423,
      423
    ],
    "mapped",
    [
      424
    ]
  ],
  [
    [
      424,
      424
    ],
    "valid"
  ],
  [
    [
      425,
      425
    ],
    "mapped",
    [
      643
    ]
  ],
  [
    [
      426,
      427
    ],
    "valid"
  ],
  [
    [
      428,
      428
    ],
    "mapped",
    [
      429
    ]
  ],
  [
    [
      429,
      429
    ],
    "valid"
  ],
  [
    [
      430,
      430
    ],
    "mapped",
    [
      648
    ]
  ],
  [
    [
      431,
      431
    ],
    "mapped",
    [
      432
    ]
  ],
  [
    [
      432,
      432
    ],
    "valid"
  ],
  [
    [
      433,
      433
    ],
    "mapped",
    [
      650
    ]
  ],
  [
    [
      434,
      434
    ],
    "mapped",
    [
      651
    ]
  ],
  [
    [
      435,
      435
    ],
    "mapped",
    [
      436
    ]
  ],
  [
    [
      436,
      436
    ],
    "valid"
  ],
  [
    [
      437,
      437
    ],
    "mapped",
    [
      438
    ]
  ],
  [
    [
      438,
      438
    ],
    "valid"
  ],
  [
    [
      439,
      439
    ],
    "mapped",
    [
      658
    ]
  ],
  [
    [
      440,
      440
    ],
    "mapped",
    [
      441
    ]
  ],
  [
    [
      441,
      443
    ],
    "valid"
  ],
  [
    [
      444,
      444
    ],
    "mapped",
    [
      445
    ]
  ],
  [
    [
      445,
      451
    ],
    "valid"
  ],
  [
    [
      452,
      454
    ],
    "mapped",
    [
      100,
      382
    ]
  ],
  [
    [
      455,
      457
    ],
    "mapped",
    [
      108,
      106
    ]
  ],
  [
    [
      458,
      460
    ],
    "mapped",
    [
      110,
      106
    ]
  ],
  [
    [
      461,
      461
    ],
    "mapped",
    [
      462
    ]
  ],
  [
    [
      462,
      462
    ],
    "valid"
  ],
  [
    [
      463,
      463
    ],
    "mapped",
    [
      464
    ]
  ],
  [
    [
      464,
      464
    ],
    "valid"
  ],
  [
    [
      465,
      465
    ],
    "mapped",
    [
      466
    ]
  ],
  [
    [
      466,
      466
    ],
    "valid"
  ],
  [
    [
      467,
      467
    ],
    "mapped",
    [
      468
    ]
  ],
  [
    [
      468,
      468
    ],
    "valid"
  ],
  [
    [
      469,
      469
    ],
    "mapped",
    [
      470
    ]
  ],
  [
    [
      470,
      470
    ],
    "valid"
  ],
  [
    [
      471,
      471
    ],
    "mapped",
    [
      472
    ]
  ],
  [
    [
      472,
      472
    ],
    "valid"
  ],
  [
    [
      473,
      473
    ],
    "mapped",
    [
      474
    ]
  ],
  [
    [
      474,
      474
    ],
    "valid"
  ],
  [
    [
      475,
      475
    ],
    "mapped",
    [
      476
    ]
  ],
  [
    [
      476,
      477
    ],
    "valid"
  ],
  [
    [
      478,
      478
    ],
    "mapped",
    [
      479
    ]
  ],
  [
    [
      479,
      479
    ],
    "valid"
  ],
  [
    [
      480,
      480
    ],
    "mapped",
    [
      481
    ]
  ],
  [
    [
      481,
      481
    ],
    "valid"
  ],
  [
    [
      482,
      482
    ],
    "mapped",
    [
      483
    ]
  ],
  [
    [
      483,
      483
    ],
    "valid"
  ],
  [
    [
      484,
      484
    ],
    "mapped",
    [
      485
    ]
  ],
  [
    [
      485,
      485
    ],
    "valid"
  ],
  [
    [
      486,
      486
    ],
    "mapped",
    [
      487
    ]
  ],
  [
    [
      487,
      487
    ],
    "valid"
  ],
  [
    [
      488,
      488
    ],
    "mapped",
    [
      489
    ]
  ],
  [
    [
      489,
      489
    ],
    "valid"
  ],
  [
    [
      490,
      490
    ],
    "mapped",
    [
      491
    ]
  ],
  [
    [
      491,
      491
    ],
    "valid"
  ],
  [
    [
      492,
      492
    ],
    "mapped",
    [
      493
    ]
  ],
  [
    [
      493,
      493
    ],
    "valid"
  ],
  [
    [
      494,
      494
    ],
    "mapped",
    [
      495
    ]
  ],
  [
    [
      495,
      496
    ],
    "valid"
  ],
  [
    [
      497,
      499
    ],
    "mapped",
    [
      100,
      122
    ]
  ],
  [
    [
      500,
      500
    ],
    "mapped",
    [
      501
    ]
  ],
  [
    [
      501,
      501
    ],
    "valid"
  ],
  [
    [
      502,
      502
    ],
    "mapped",
    [
      405
    ]
  ],
  [
    [
      503,
      503
    ],
    "mapped",
    [
      447
    ]
  ],
  [
    [
      504,
      504
    ],
    "mapped",
    [
      505
    ]
  ],
  [
    [
      505,
      505
    ],
    "valid"
  ],
  [
    [
      506,
      506
    ],
    "mapped",
    [
      507
    ]
  ],
  [
    [
      507,
      507
    ],
    "valid"
  ],
  [
    [
      508,
      508
    ],
    "mapped",
    [
      509
    ]
  ],
  [
    [
      509,
      509
    ],
    "valid"
  ],
  [
    [
      510,
      510
    ],
    "mapped",
    [
      511
    ]
  ],
  [
    [
      511,
      511
    ],
    "valid"
  ],
  [
    [
      512,
      512
    ],
    "mapped",
    [
      513
    ]
  ],
  [
    [
      513,
      513
    ],
    "valid"
  ],
  [
    [
      514,
      514
    ],
    "mapped",
    [
      515
    ]
  ],
  [
    [
      515,
      515
    ],
    "valid"
  ],
  [
    [
      516,
      516
    ],
    "mapped",
    [
      517
    ]
  ],
  [
    [
      517,
      517
    ],
    "valid"
  ],
  [
    [
      518,
      518
    ],
    "mapped",
    [
      519
    ]
  ],
  [
    [
      519,
      519
    ],
    "valid"
  ],
  [
    [
      520,
      520
    ],
    "mapped",
    [
      521
    ]
  ],
  [
    [
      521,
      521
    ],
    "valid"
  ],
  [
    [
      522,
      522
    ],
    "mapped",
    [
      523
    ]
  ],
  [
    [
      523,
      523
    ],
    "valid"
  ],
  [
    [
      524,
      524
    ],
    "mapped",
    [
      525
    ]
  ],
  [
    [
      525,
      525
    ],
    "valid"
  ],
  [
    [
      526,
      526
    ],
    "mapped",
    [
      527
    ]
  ],
  [
    [
      527,
      527
    ],
    "valid"
  ],
  [
    [
      528,
      528
    ],
    "mapped",
    [
      529
    ]
  ],
  [
    [
      529,
      529
    ],
    "valid"
  ],
  [
    [
      530,
      530
    ],
    "mapped",
    [
      531
    ]
  ],
  [
    [
      531,
      531
    ],
    "valid"
  ],
  [
    [
      532,
      532
    ],
    "mapped",
    [
      533
    ]
  ],
  [
    [
      533,
      533
    ],
    "valid"
  ],
  [
    [
      534,
      534
    ],
    "mapped",
    [
      535
    ]
  ],
  [
    [
      535,
      535
    ],
    "valid"
  ],
  [
    [
      536,
      536
    ],
    "mapped",
    [
      537
    ]
  ],
  [
    [
      537,
      537
    ],
    "valid"
  ],
  [
    [
      538,
      538
    ],
    "mapped",
    [
      539
    ]
  ],
  [
    [
      539,
      539
    ],
    "valid"
  ],
  [
    [
      540,
      540
    ],
    "mapped",
    [
      541
    ]
  ],
  [
    [
      541,
      541
    ],
    "valid"
  ],
  [
    [
      542,
      542
    ],
    "mapped",
    [
      543
    ]
  ],
  [
    [
      543,
      543
    ],
    "valid"
  ],
  [
    [
      544,
      544
    ],
    "mapped",
    [
      414
    ]
  ],
  [
    [
      545,
      545
    ],
    "valid"
  ],
  [
    [
      546,
      546
    ],
    "mapped",
    [
      547
    ]
  ],
  [
    [
      547,
      547
    ],
    "valid"
  ],
  [
    [
      548,
      548
    ],
    "mapped",
    [
      549
    ]
  ],
  [
    [
      549,
      549
    ],
    "valid"
  ],
  [
    [
      550,
      550
    ],
    "mapped",
    [
      551
    ]
  ],
  [
    [
      551,
      551
    ],
    "valid"
  ],
  [
    [
      552,
      552
    ],
    "mapped",
    [
      553
    ]
  ],
  [
    [
      553,
      553
    ],
    "valid"
  ],
  [
    [
      554,
      554
    ],
    "mapped",
    [
      555
    ]
  ],
  [
    [
      555,
      555
    ],
    "valid"
  ],
  [
    [
      556,
      556
    ],
    "mapped",
    [
      557
    ]
  ],
  [
    [
      557,
      557
    ],
    "valid"
  ],
  [
    [
      558,
      558
    ],
    "mapped",
    [
      559
    ]
  ],
  [
    [
      559,
      559
    ],
    "valid"
  ],
  [
    [
      560,
      560
    ],
    "mapped",
    [
      561
    ]
  ],
  [
    [
      561,
      561
    ],
    "valid"
  ],
  [
    [
      562,
      562
    ],
    "mapped",
    [
      563
    ]
  ],
  [
    [
      563,
      563
    ],
    "valid"
  ],
  [
    [
      564,
      566
    ],
    "valid"
  ],
  [
    [
      567,
      569
    ],
    "valid"
  ],
  [
    [
      570,
      570
    ],
    "mapped",
    [
      11365
    ]
  ],
  [
    [
      571,
      571
    ],
    "mapped",
    [
      572
    ]
  ],
  [
    [
      572,
      572
    ],
    "valid"
  ],
  [
    [
      573,
      573
    ],
    "mapped",
    [
      410
    ]
  ],
  [
    [
      574,
      574
    ],
    "mapped",
    [
      11366
    ]
  ],
  [
    [
      575,
      576
    ],
    "valid"
  ],
  [
    [
      577,
      577
    ],
    "mapped",
    [
      578
    ]
  ],
  [
    [
      578,
      578
    ],
    "valid"
  ],
  [
    [
      579,
      579
    ],
    "mapped",
    [
      384
    ]
  ],
  [
    [
      580,
      580
    ],
    "mapped",
    [
      649
    ]
  ],
  [
    [
      581,
      581
    ],
    "mapped",
    [
      652
    ]
  ],
  [
    [
      582,
      582
    ],
    "mapped",
    [
      583
    ]
  ],
  [
    [
      583,
      583
    ],
    "valid"
  ],
  [
    [
      584,
      584
    ],
    "mapped",
    [
      585
    ]
  ],
  [
    [
      585,
      585
    ],
    "valid"
  ],
  [
    [
      586,
      586
    ],
    "mapped",
    [
      587
    ]
  ],
  [
    [
      587,
      587
    ],
    "valid"
  ],
  [
    [
      588,
      588
    ],
    "mapped",
    [
      589
    ]
  ],
  [
    [
      589,
      589
    ],
    "valid"
  ],
  [
    [
      590,
      590
    ],
    "mapped",
    [
      591
    ]
  ],
  [
    [
      591,
      591
    ],
    "valid"
  ],
  [
    [
      592,
      680
    ],
    "valid"
  ],
  [
    [
      681,
      685
    ],
    "valid"
  ],
  [
    [
      686,
      687
    ],
    "valid"
  ],
  [
    [
      688,
      688
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      689,
      689
    ],
    "mapped",
    [
      614
    ]
  ],
  [
    [
      690,
      690
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      691,
      691
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      692,
      692
    ],
    "mapped",
    [
      633
    ]
  ],
  [
    [
      693,
      693
    ],
    "mapped",
    [
      635
    ]
  ],
  [
    [
      694,
      694
    ],
    "mapped",
    [
      641
    ]
  ],
  [
    [
      695,
      695
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      696,
      696
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      697,
      705
    ],
    "valid"
  ],
  [
    [
      706,
      709
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      710,
      721
    ],
    "valid"
  ],
  [
    [
      722,
      727
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      728,
      728
    ],
    "disallowed_STD3_mapped",
    [
      32,
      774
    ]
  ],
  [
    [
      729,
      729
    ],
    "disallowed_STD3_mapped",
    [
      32,
      775
    ]
  ],
  [
    [
      730,
      730
    ],
    "disallowed_STD3_mapped",
    [
      32,
      778
    ]
  ],
  [
    [
      731,
      731
    ],
    "disallowed_STD3_mapped",
    [
      32,
      808
    ]
  ],
  [
    [
      732,
      732
    ],
    "disallowed_STD3_mapped",
    [
      32,
      771
    ]
  ],
  [
    [
      733,
      733
    ],
    "disallowed_STD3_mapped",
    [
      32,
      779
    ]
  ],
  [
    [
      734,
      734
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      735,
      735
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      736,
      736
    ],
    "mapped",
    [
      611
    ]
  ],
  [
    [
      737,
      737
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      738,
      738
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      739,
      739
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      740,
      740
    ],
    "mapped",
    [
      661
    ]
  ],
  [
    [
      741,
      745
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      746,
      747
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      748,
      748
    ],
    "valid"
  ],
  [
    [
      749,
      749
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      750,
      750
    ],
    "valid"
  ],
  [
    [
      751,
      767
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      768,
      831
    ],
    "valid"
  ],
  [
    [
      832,
      832
    ],
    "mapped",
    [
      768
    ]
  ],
  [
    [
      833,
      833
    ],
    "mapped",
    [
      769
    ]
  ],
  [
    [
      834,
      834
    ],
    "valid"
  ],
  [
    [
      835,
      835
    ],
    "mapped",
    [
      787
    ]
  ],
  [
    [
      836,
      836
    ],
    "mapped",
    [
      776,
      769
    ]
  ],
  [
    [
      837,
      837
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      838,
      846
    ],
    "valid"
  ],
  [
    [
      847,
      847
    ],
    "ignored"
  ],
  [
    [
      848,
      855
    ],
    "valid"
  ],
  [
    [
      856,
      860
    ],
    "valid"
  ],
  [
    [
      861,
      863
    ],
    "valid"
  ],
  [
    [
      864,
      865
    ],
    "valid"
  ],
  [
    [
      866,
      866
    ],
    "valid"
  ],
  [
    [
      867,
      879
    ],
    "valid"
  ],
  [
    [
      880,
      880
    ],
    "mapped",
    [
      881
    ]
  ],
  [
    [
      881,
      881
    ],
    "valid"
  ],
  [
    [
      882,
      882
    ],
    "mapped",
    [
      883
    ]
  ],
  [
    [
      883,
      883
    ],
    "valid"
  ],
  [
    [
      884,
      884
    ],
    "mapped",
    [
      697
    ]
  ],
  [
    [
      885,
      885
    ],
    "valid"
  ],
  [
    [
      886,
      886
    ],
    "mapped",
    [
      887
    ]
  ],
  [
    [
      887,
      887
    ],
    "valid"
  ],
  [
    [
      888,
      889
    ],
    "disallowed"
  ],
  [
    [
      890,
      890
    ],
    "disallowed_STD3_mapped",
    [
      32,
      953
    ]
  ],
  [
    [
      891,
      893
    ],
    "valid"
  ],
  [
    [
      894,
      894
    ],
    "disallowed_STD3_mapped",
    [
      59
    ]
  ],
  [
    [
      895,
      895
    ],
    "mapped",
    [
      1011
    ]
  ],
  [
    [
      896,
      899
    ],
    "disallowed"
  ],
  [
    [
      900,
      900
    ],
    "disallowed_STD3_mapped",
    [
      32,
      769
    ]
  ],
  [
    [
      901,
      901
    ],
    "disallowed_STD3_mapped",
    [
      32,
      776,
      769
    ]
  ],
  [
    [
      902,
      902
    ],
    "mapped",
    [
      940
    ]
  ],
  [
    [
      903,
      903
    ],
    "mapped",
    [
      183
    ]
  ],
  [
    [
      904,
      904
    ],
    "mapped",
    [
      941
    ]
  ],
  [
    [
      905,
      905
    ],
    "mapped",
    [
      942
    ]
  ],
  [
    [
      906,
      906
    ],
    "mapped",
    [
      943
    ]
  ],
  [
    [
      907,
      907
    ],
    "disallowed"
  ],
  [
    [
      908,
      908
    ],
    "mapped",
    [
      972
    ]
  ],
  [
    [
      909,
      909
    ],
    "disallowed"
  ],
  [
    [
      910,
      910
    ],
    "mapped",
    [
      973
    ]
  ],
  [
    [
      911,
      911
    ],
    "mapped",
    [
      974
    ]
  ],
  [
    [
      912,
      912
    ],
    "valid"
  ],
  [
    [
      913,
      913
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      914,
      914
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      915,
      915
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      916,
      916
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      917,
      917
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      918,
      918
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      919,
      919
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      920,
      920
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      921,
      921
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      922,
      922
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      923,
      923
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      924,
      924
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      925,
      925
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      926,
      926
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      927,
      927
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      928,
      928
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      929,
      929
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      930,
      930
    ],
    "disallowed"
  ],
  [
    [
      931,
      931
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      932,
      932
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      933,
      933
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      934,
      934
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      935,
      935
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      936,
      936
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      937,
      937
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      938,
      938
    ],
    "mapped",
    [
      970
    ]
  ],
  [
    [
      939,
      939
    ],
    "mapped",
    [
      971
    ]
  ],
  [
    [
      940,
      961
    ],
    "valid"
  ],
  [
    [
      962,
      962
    ],
    "deviation",
    [
      963
    ]
  ],
  [
    [
      963,
      974
    ],
    "valid"
  ],
  [
    [
      975,
      975
    ],
    "mapped",
    [
      983
    ]
  ],
  [
    [
      976,
      976
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      977,
      977
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      978,
      978
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      979,
      979
    ],
    "mapped",
    [
      973
    ]
  ],
  [
    [
      980,
      980
    ],
    "mapped",
    [
      971
    ]
  ],
  [
    [
      981,
      981
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      982,
      982
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      983,
      983
    ],
    "valid"
  ],
  [
    [
      984,
      984
    ],
    "mapped",
    [
      985
    ]
  ],
  [
    [
      985,
      985
    ],
    "valid"
  ],
  [
    [
      986,
      986
    ],
    "mapped",
    [
      987
    ]
  ],
  [
    [
      987,
      987
    ],
    "valid"
  ],
  [
    [
      988,
      988
    ],
    "mapped",
    [
      989
    ]
  ],
  [
    [
      989,
      989
    ],
    "valid"
  ],
  [
    [
      990,
      990
    ],
    "mapped",
    [
      991
    ]
  ],
  [
    [
      991,
      991
    ],
    "valid"
  ],
  [
    [
      992,
      992
    ],
    "mapped",
    [
      993
    ]
  ],
  [
    [
      993,
      993
    ],
    "valid"
  ],
  [
    [
      994,
      994
    ],
    "mapped",
    [
      995
    ]
  ],
  [
    [
      995,
      995
    ],
    "valid"
  ],
  [
    [
      996,
      996
    ],
    "mapped",
    [
      997
    ]
  ],
  [
    [
      997,
      997
    ],
    "valid"
  ],
  [
    [
      998,
      998
    ],
    "mapped",
    [
      999
    ]
  ],
  [
    [
      999,
      999
    ],
    "valid"
  ],
  [
    [
      1e3,
      1e3
    ],
    "mapped",
    [
      1001
    ]
  ],
  [
    [
      1001,
      1001
    ],
    "valid"
  ],
  [
    [
      1002,
      1002
    ],
    "mapped",
    [
      1003
    ]
  ],
  [
    [
      1003,
      1003
    ],
    "valid"
  ],
  [
    [
      1004,
      1004
    ],
    "mapped",
    [
      1005
    ]
  ],
  [
    [
      1005,
      1005
    ],
    "valid"
  ],
  [
    [
      1006,
      1006
    ],
    "mapped",
    [
      1007
    ]
  ],
  [
    [
      1007,
      1007
    ],
    "valid"
  ],
  [
    [
      1008,
      1008
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      1009,
      1009
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      1010,
      1010
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      1011,
      1011
    ],
    "valid"
  ],
  [
    [
      1012,
      1012
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      1013,
      1013
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      1014,
      1014
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1015,
      1015
    ],
    "mapped",
    [
      1016
    ]
  ],
  [
    [
      1016,
      1016
    ],
    "valid"
  ],
  [
    [
      1017,
      1017
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      1018,
      1018
    ],
    "mapped",
    [
      1019
    ]
  ],
  [
    [
      1019,
      1019
    ],
    "valid"
  ],
  [
    [
      1020,
      1020
    ],
    "valid"
  ],
  [
    [
      1021,
      1021
    ],
    "mapped",
    [
      891
    ]
  ],
  [
    [
      1022,
      1022
    ],
    "mapped",
    [
      892
    ]
  ],
  [
    [
      1023,
      1023
    ],
    "mapped",
    [
      893
    ]
  ],
  [
    [
      1024,
      1024
    ],
    "mapped",
    [
      1104
    ]
  ],
  [
    [
      1025,
      1025
    ],
    "mapped",
    [
      1105
    ]
  ],
  [
    [
      1026,
      1026
    ],
    "mapped",
    [
      1106
    ]
  ],
  [
    [
      1027,
      1027
    ],
    "mapped",
    [
      1107
    ]
  ],
  [
    [
      1028,
      1028
    ],
    "mapped",
    [
      1108
    ]
  ],
  [
    [
      1029,
      1029
    ],
    "mapped",
    [
      1109
    ]
  ],
  [
    [
      1030,
      1030
    ],
    "mapped",
    [
      1110
    ]
  ],
  [
    [
      1031,
      1031
    ],
    "mapped",
    [
      1111
    ]
  ],
  [
    [
      1032,
      1032
    ],
    "mapped",
    [
      1112
    ]
  ],
  [
    [
      1033,
      1033
    ],
    "mapped",
    [
      1113
    ]
  ],
  [
    [
      1034,
      1034
    ],
    "mapped",
    [
      1114
    ]
  ],
  [
    [
      1035,
      1035
    ],
    "mapped",
    [
      1115
    ]
  ],
  [
    [
      1036,
      1036
    ],
    "mapped",
    [
      1116
    ]
  ],
  [
    [
      1037,
      1037
    ],
    "mapped",
    [
      1117
    ]
  ],
  [
    [
      1038,
      1038
    ],
    "mapped",
    [
      1118
    ]
  ],
  [
    [
      1039,
      1039
    ],
    "mapped",
    [
      1119
    ]
  ],
  [
    [
      1040,
      1040
    ],
    "mapped",
    [
      1072
    ]
  ],
  [
    [
      1041,
      1041
    ],
    "mapped",
    [
      1073
    ]
  ],
  [
    [
      1042,
      1042
    ],
    "mapped",
    [
      1074
    ]
  ],
  [
    [
      1043,
      1043
    ],
    "mapped",
    [
      1075
    ]
  ],
  [
    [
      1044,
      1044
    ],
    "mapped",
    [
      1076
    ]
  ],
  [
    [
      1045,
      1045
    ],
    "mapped",
    [
      1077
    ]
  ],
  [
    [
      1046,
      1046
    ],
    "mapped",
    [
      1078
    ]
  ],
  [
    [
      1047,
      1047
    ],
    "mapped",
    [
      1079
    ]
  ],
  [
    [
      1048,
      1048
    ],
    "mapped",
    [
      1080
    ]
  ],
  [
    [
      1049,
      1049
    ],
    "mapped",
    [
      1081
    ]
  ],
  [
    [
      1050,
      1050
    ],
    "mapped",
    [
      1082
    ]
  ],
  [
    [
      1051,
      1051
    ],
    "mapped",
    [
      1083
    ]
  ],
  [
    [
      1052,
      1052
    ],
    "mapped",
    [
      1084
    ]
  ],
  [
    [
      1053,
      1053
    ],
    "mapped",
    [
      1085
    ]
  ],
  [
    [
      1054,
      1054
    ],
    "mapped",
    [
      1086
    ]
  ],
  [
    [
      1055,
      1055
    ],
    "mapped",
    [
      1087
    ]
  ],
  [
    [
      1056,
      1056
    ],
    "mapped",
    [
      1088
    ]
  ],
  [
    [
      1057,
      1057
    ],
    "mapped",
    [
      1089
    ]
  ],
  [
    [
      1058,
      1058
    ],
    "mapped",
    [
      1090
    ]
  ],
  [
    [
      1059,
      1059
    ],
    "mapped",
    [
      1091
    ]
  ],
  [
    [
      1060,
      1060
    ],
    "mapped",
    [
      1092
    ]
  ],
  [
    [
      1061,
      1061
    ],
    "mapped",
    [
      1093
    ]
  ],
  [
    [
      1062,
      1062
    ],
    "mapped",
    [
      1094
    ]
  ],
  [
    [
      1063,
      1063
    ],
    "mapped",
    [
      1095
    ]
  ],
  [
    [
      1064,
      1064
    ],
    "mapped",
    [
      1096
    ]
  ],
  [
    [
      1065,
      1065
    ],
    "mapped",
    [
      1097
    ]
  ],
  [
    [
      1066,
      1066
    ],
    "mapped",
    [
      1098
    ]
  ],
  [
    [
      1067,
      1067
    ],
    "mapped",
    [
      1099
    ]
  ],
  [
    [
      1068,
      1068
    ],
    "mapped",
    [
      1100
    ]
  ],
  [
    [
      1069,
      1069
    ],
    "mapped",
    [
      1101
    ]
  ],
  [
    [
      1070,
      1070
    ],
    "mapped",
    [
      1102
    ]
  ],
  [
    [
      1071,
      1071
    ],
    "mapped",
    [
      1103
    ]
  ],
  [
    [
      1072,
      1103
    ],
    "valid"
  ],
  [
    [
      1104,
      1104
    ],
    "valid"
  ],
  [
    [
      1105,
      1116
    ],
    "valid"
  ],
  [
    [
      1117,
      1117
    ],
    "valid"
  ],
  [
    [
      1118,
      1119
    ],
    "valid"
  ],
  [
    [
      1120,
      1120
    ],
    "mapped",
    [
      1121
    ]
  ],
  [
    [
      1121,
      1121
    ],
    "valid"
  ],
  [
    [
      1122,
      1122
    ],
    "mapped",
    [
      1123
    ]
  ],
  [
    [
      1123,
      1123
    ],
    "valid"
  ],
  [
    [
      1124,
      1124
    ],
    "mapped",
    [
      1125
    ]
  ],
  [
    [
      1125,
      1125
    ],
    "valid"
  ],
  [
    [
      1126,
      1126
    ],
    "mapped",
    [
      1127
    ]
  ],
  [
    [
      1127,
      1127
    ],
    "valid"
  ],
  [
    [
      1128,
      1128
    ],
    "mapped",
    [
      1129
    ]
  ],
  [
    [
      1129,
      1129
    ],
    "valid"
  ],
  [
    [
      1130,
      1130
    ],
    "mapped",
    [
      1131
    ]
  ],
  [
    [
      1131,
      1131
    ],
    "valid"
  ],
  [
    [
      1132,
      1132
    ],
    "mapped",
    [
      1133
    ]
  ],
  [
    [
      1133,
      1133
    ],
    "valid"
  ],
  [
    [
      1134,
      1134
    ],
    "mapped",
    [
      1135
    ]
  ],
  [
    [
      1135,
      1135
    ],
    "valid"
  ],
  [
    [
      1136,
      1136
    ],
    "mapped",
    [
      1137
    ]
  ],
  [
    [
      1137,
      1137
    ],
    "valid"
  ],
  [
    [
      1138,
      1138
    ],
    "mapped",
    [
      1139
    ]
  ],
  [
    [
      1139,
      1139
    ],
    "valid"
  ],
  [
    [
      1140,
      1140
    ],
    "mapped",
    [
      1141
    ]
  ],
  [
    [
      1141,
      1141
    ],
    "valid"
  ],
  [
    [
      1142,
      1142
    ],
    "mapped",
    [
      1143
    ]
  ],
  [
    [
      1143,
      1143
    ],
    "valid"
  ],
  [
    [
      1144,
      1144
    ],
    "mapped",
    [
      1145
    ]
  ],
  [
    [
      1145,
      1145
    ],
    "valid"
  ],
  [
    [
      1146,
      1146
    ],
    "mapped",
    [
      1147
    ]
  ],
  [
    [
      1147,
      1147
    ],
    "valid"
  ],
  [
    [
      1148,
      1148
    ],
    "mapped",
    [
      1149
    ]
  ],
  [
    [
      1149,
      1149
    ],
    "valid"
  ],
  [
    [
      1150,
      1150
    ],
    "mapped",
    [
      1151
    ]
  ],
  [
    [
      1151,
      1151
    ],
    "valid"
  ],
  [
    [
      1152,
      1152
    ],
    "mapped",
    [
      1153
    ]
  ],
  [
    [
      1153,
      1153
    ],
    "valid"
  ],
  [
    [
      1154,
      1154
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1155,
      1158
    ],
    "valid"
  ],
  [
    [
      1159,
      1159
    ],
    "valid"
  ],
  [
    [
      1160,
      1161
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1162,
      1162
    ],
    "mapped",
    [
      1163
    ]
  ],
  [
    [
      1163,
      1163
    ],
    "valid"
  ],
  [
    [
      1164,
      1164
    ],
    "mapped",
    [
      1165
    ]
  ],
  [
    [
      1165,
      1165
    ],
    "valid"
  ],
  [
    [
      1166,
      1166
    ],
    "mapped",
    [
      1167
    ]
  ],
  [
    [
      1167,
      1167
    ],
    "valid"
  ],
  [
    [
      1168,
      1168
    ],
    "mapped",
    [
      1169
    ]
  ],
  [
    [
      1169,
      1169
    ],
    "valid"
  ],
  [
    [
      1170,
      1170
    ],
    "mapped",
    [
      1171
    ]
  ],
  [
    [
      1171,
      1171
    ],
    "valid"
  ],
  [
    [
      1172,
      1172
    ],
    "mapped",
    [
      1173
    ]
  ],
  [
    [
      1173,
      1173
    ],
    "valid"
  ],
  [
    [
      1174,
      1174
    ],
    "mapped",
    [
      1175
    ]
  ],
  [
    [
      1175,
      1175
    ],
    "valid"
  ],
  [
    [
      1176,
      1176
    ],
    "mapped",
    [
      1177
    ]
  ],
  [
    [
      1177,
      1177
    ],
    "valid"
  ],
  [
    [
      1178,
      1178
    ],
    "mapped",
    [
      1179
    ]
  ],
  [
    [
      1179,
      1179
    ],
    "valid"
  ],
  [
    [
      1180,
      1180
    ],
    "mapped",
    [
      1181
    ]
  ],
  [
    [
      1181,
      1181
    ],
    "valid"
  ],
  [
    [
      1182,
      1182
    ],
    "mapped",
    [
      1183
    ]
  ],
  [
    [
      1183,
      1183
    ],
    "valid"
  ],
  [
    [
      1184,
      1184
    ],
    "mapped",
    [
      1185
    ]
  ],
  [
    [
      1185,
      1185
    ],
    "valid"
  ],
  [
    [
      1186,
      1186
    ],
    "mapped",
    [
      1187
    ]
  ],
  [
    [
      1187,
      1187
    ],
    "valid"
  ],
  [
    [
      1188,
      1188
    ],
    "mapped",
    [
      1189
    ]
  ],
  [
    [
      1189,
      1189
    ],
    "valid"
  ],
  [
    [
      1190,
      1190
    ],
    "mapped",
    [
      1191
    ]
  ],
  [
    [
      1191,
      1191
    ],
    "valid"
  ],
  [
    [
      1192,
      1192
    ],
    "mapped",
    [
      1193
    ]
  ],
  [
    [
      1193,
      1193
    ],
    "valid"
  ],
  [
    [
      1194,
      1194
    ],
    "mapped",
    [
      1195
    ]
  ],
  [
    [
      1195,
      1195
    ],
    "valid"
  ],
  [
    [
      1196,
      1196
    ],
    "mapped",
    [
      1197
    ]
  ],
  [
    [
      1197,
      1197
    ],
    "valid"
  ],
  [
    [
      1198,
      1198
    ],
    "mapped",
    [
      1199
    ]
  ],
  [
    [
      1199,
      1199
    ],
    "valid"
  ],
  [
    [
      1200,
      1200
    ],
    "mapped",
    [
      1201
    ]
  ],
  [
    [
      1201,
      1201
    ],
    "valid"
  ],
  [
    [
      1202,
      1202
    ],
    "mapped",
    [
      1203
    ]
  ],
  [
    [
      1203,
      1203
    ],
    "valid"
  ],
  [
    [
      1204,
      1204
    ],
    "mapped",
    [
      1205
    ]
  ],
  [
    [
      1205,
      1205
    ],
    "valid"
  ],
  [
    [
      1206,
      1206
    ],
    "mapped",
    [
      1207
    ]
  ],
  [
    [
      1207,
      1207
    ],
    "valid"
  ],
  [
    [
      1208,
      1208
    ],
    "mapped",
    [
      1209
    ]
  ],
  [
    [
      1209,
      1209
    ],
    "valid"
  ],
  [
    [
      1210,
      1210
    ],
    "mapped",
    [
      1211
    ]
  ],
  [
    [
      1211,
      1211
    ],
    "valid"
  ],
  [
    [
      1212,
      1212
    ],
    "mapped",
    [
      1213
    ]
  ],
  [
    [
      1213,
      1213
    ],
    "valid"
  ],
  [
    [
      1214,
      1214
    ],
    "mapped",
    [
      1215
    ]
  ],
  [
    [
      1215,
      1215
    ],
    "valid"
  ],
  [
    [
      1216,
      1216
    ],
    "disallowed"
  ],
  [
    [
      1217,
      1217
    ],
    "mapped",
    [
      1218
    ]
  ],
  [
    [
      1218,
      1218
    ],
    "valid"
  ],
  [
    [
      1219,
      1219
    ],
    "mapped",
    [
      1220
    ]
  ],
  [
    [
      1220,
      1220
    ],
    "valid"
  ],
  [
    [
      1221,
      1221
    ],
    "mapped",
    [
      1222
    ]
  ],
  [
    [
      1222,
      1222
    ],
    "valid"
  ],
  [
    [
      1223,
      1223
    ],
    "mapped",
    [
      1224
    ]
  ],
  [
    [
      1224,
      1224
    ],
    "valid"
  ],
  [
    [
      1225,
      1225
    ],
    "mapped",
    [
      1226
    ]
  ],
  [
    [
      1226,
      1226
    ],
    "valid"
  ],
  [
    [
      1227,
      1227
    ],
    "mapped",
    [
      1228
    ]
  ],
  [
    [
      1228,
      1228
    ],
    "valid"
  ],
  [
    [
      1229,
      1229
    ],
    "mapped",
    [
      1230
    ]
  ],
  [
    [
      1230,
      1230
    ],
    "valid"
  ],
  [
    [
      1231,
      1231
    ],
    "valid"
  ],
  [
    [
      1232,
      1232
    ],
    "mapped",
    [
      1233
    ]
  ],
  [
    [
      1233,
      1233
    ],
    "valid"
  ],
  [
    [
      1234,
      1234
    ],
    "mapped",
    [
      1235
    ]
  ],
  [
    [
      1235,
      1235
    ],
    "valid"
  ],
  [
    [
      1236,
      1236
    ],
    "mapped",
    [
      1237
    ]
  ],
  [
    [
      1237,
      1237
    ],
    "valid"
  ],
  [
    [
      1238,
      1238
    ],
    "mapped",
    [
      1239
    ]
  ],
  [
    [
      1239,
      1239
    ],
    "valid"
  ],
  [
    [
      1240,
      1240
    ],
    "mapped",
    [
      1241
    ]
  ],
  [
    [
      1241,
      1241
    ],
    "valid"
  ],
  [
    [
      1242,
      1242
    ],
    "mapped",
    [
      1243
    ]
  ],
  [
    [
      1243,
      1243
    ],
    "valid"
  ],
  [
    [
      1244,
      1244
    ],
    "mapped",
    [
      1245
    ]
  ],
  [
    [
      1245,
      1245
    ],
    "valid"
  ],
  [
    [
      1246,
      1246
    ],
    "mapped",
    [
      1247
    ]
  ],
  [
    [
      1247,
      1247
    ],
    "valid"
  ],
  [
    [
      1248,
      1248
    ],
    "mapped",
    [
      1249
    ]
  ],
  [
    [
      1249,
      1249
    ],
    "valid"
  ],
  [
    [
      1250,
      1250
    ],
    "mapped",
    [
      1251
    ]
  ],
  [
    [
      1251,
      1251
    ],
    "valid"
  ],
  [
    [
      1252,
      1252
    ],
    "mapped",
    [
      1253
    ]
  ],
  [
    [
      1253,
      1253
    ],
    "valid"
  ],
  [
    [
      1254,
      1254
    ],
    "mapped",
    [
      1255
    ]
  ],
  [
    [
      1255,
      1255
    ],
    "valid"
  ],
  [
    [
      1256,
      1256
    ],
    "mapped",
    [
      1257
    ]
  ],
  [
    [
      1257,
      1257
    ],
    "valid"
  ],
  [
    [
      1258,
      1258
    ],
    "mapped",
    [
      1259
    ]
  ],
  [
    [
      1259,
      1259
    ],
    "valid"
  ],
  [
    [
      1260,
      1260
    ],
    "mapped",
    [
      1261
    ]
  ],
  [
    [
      1261,
      1261
    ],
    "valid"
  ],
  [
    [
      1262,
      1262
    ],
    "mapped",
    [
      1263
    ]
  ],
  [
    [
      1263,
      1263
    ],
    "valid"
  ],
  [
    [
      1264,
      1264
    ],
    "mapped",
    [
      1265
    ]
  ],
  [
    [
      1265,
      1265
    ],
    "valid"
  ],
  [
    [
      1266,
      1266
    ],
    "mapped",
    [
      1267
    ]
  ],
  [
    [
      1267,
      1267
    ],
    "valid"
  ],
  [
    [
      1268,
      1268
    ],
    "mapped",
    [
      1269
    ]
  ],
  [
    [
      1269,
      1269
    ],
    "valid"
  ],
  [
    [
      1270,
      1270
    ],
    "mapped",
    [
      1271
    ]
  ],
  [
    [
      1271,
      1271
    ],
    "valid"
  ],
  [
    [
      1272,
      1272
    ],
    "mapped",
    [
      1273
    ]
  ],
  [
    [
      1273,
      1273
    ],
    "valid"
  ],
  [
    [
      1274,
      1274
    ],
    "mapped",
    [
      1275
    ]
  ],
  [
    [
      1275,
      1275
    ],
    "valid"
  ],
  [
    [
      1276,
      1276
    ],
    "mapped",
    [
      1277
    ]
  ],
  [
    [
      1277,
      1277
    ],
    "valid"
  ],
  [
    [
      1278,
      1278
    ],
    "mapped",
    [
      1279
    ]
  ],
  [
    [
      1279,
      1279
    ],
    "valid"
  ],
  [
    [
      1280,
      1280
    ],
    "mapped",
    [
      1281
    ]
  ],
  [
    [
      1281,
      1281
    ],
    "valid"
  ],
  [
    [
      1282,
      1282
    ],
    "mapped",
    [
      1283
    ]
  ],
  [
    [
      1283,
      1283
    ],
    "valid"
  ],
  [
    [
      1284,
      1284
    ],
    "mapped",
    [
      1285
    ]
  ],
  [
    [
      1285,
      1285
    ],
    "valid"
  ],
  [
    [
      1286,
      1286
    ],
    "mapped",
    [
      1287
    ]
  ],
  [
    [
      1287,
      1287
    ],
    "valid"
  ],
  [
    [
      1288,
      1288
    ],
    "mapped",
    [
      1289
    ]
  ],
  [
    [
      1289,
      1289
    ],
    "valid"
  ],
  [
    [
      1290,
      1290
    ],
    "mapped",
    [
      1291
    ]
  ],
  [
    [
      1291,
      1291
    ],
    "valid"
  ],
  [
    [
      1292,
      1292
    ],
    "mapped",
    [
      1293
    ]
  ],
  [
    [
      1293,
      1293
    ],
    "valid"
  ],
  [
    [
      1294,
      1294
    ],
    "mapped",
    [
      1295
    ]
  ],
  [
    [
      1295,
      1295
    ],
    "valid"
  ],
  [
    [
      1296,
      1296
    ],
    "mapped",
    [
      1297
    ]
  ],
  [
    [
      1297,
      1297
    ],
    "valid"
  ],
  [
    [
      1298,
      1298
    ],
    "mapped",
    [
      1299
    ]
  ],
  [
    [
      1299,
      1299
    ],
    "valid"
  ],
  [
    [
      1300,
      1300
    ],
    "mapped",
    [
      1301
    ]
  ],
  [
    [
      1301,
      1301
    ],
    "valid"
  ],
  [
    [
      1302,
      1302
    ],
    "mapped",
    [
      1303
    ]
  ],
  [
    [
      1303,
      1303
    ],
    "valid"
  ],
  [
    [
      1304,
      1304
    ],
    "mapped",
    [
      1305
    ]
  ],
  [
    [
      1305,
      1305
    ],
    "valid"
  ],
  [
    [
      1306,
      1306
    ],
    "mapped",
    [
      1307
    ]
  ],
  [
    [
      1307,
      1307
    ],
    "valid"
  ],
  [
    [
      1308,
      1308
    ],
    "mapped",
    [
      1309
    ]
  ],
  [
    [
      1309,
      1309
    ],
    "valid"
  ],
  [
    [
      1310,
      1310
    ],
    "mapped",
    [
      1311
    ]
  ],
  [
    [
      1311,
      1311
    ],
    "valid"
  ],
  [
    [
      1312,
      1312
    ],
    "mapped",
    [
      1313
    ]
  ],
  [
    [
      1313,
      1313
    ],
    "valid"
  ],
  [
    [
      1314,
      1314
    ],
    "mapped",
    [
      1315
    ]
  ],
  [
    [
      1315,
      1315
    ],
    "valid"
  ],
  [
    [
      1316,
      1316
    ],
    "mapped",
    [
      1317
    ]
  ],
  [
    [
      1317,
      1317
    ],
    "valid"
  ],
  [
    [
      1318,
      1318
    ],
    "mapped",
    [
      1319
    ]
  ],
  [
    [
      1319,
      1319
    ],
    "valid"
  ],
  [
    [
      1320,
      1320
    ],
    "mapped",
    [
      1321
    ]
  ],
  [
    [
      1321,
      1321
    ],
    "valid"
  ],
  [
    [
      1322,
      1322
    ],
    "mapped",
    [
      1323
    ]
  ],
  [
    [
      1323,
      1323
    ],
    "valid"
  ],
  [
    [
      1324,
      1324
    ],
    "mapped",
    [
      1325
    ]
  ],
  [
    [
      1325,
      1325
    ],
    "valid"
  ],
  [
    [
      1326,
      1326
    ],
    "mapped",
    [
      1327
    ]
  ],
  [
    [
      1327,
      1327
    ],
    "valid"
  ],
  [
    [
      1328,
      1328
    ],
    "disallowed"
  ],
  [
    [
      1329,
      1329
    ],
    "mapped",
    [
      1377
    ]
  ],
  [
    [
      1330,
      1330
    ],
    "mapped",
    [
      1378
    ]
  ],
  [
    [
      1331,
      1331
    ],
    "mapped",
    [
      1379
    ]
  ],
  [
    [
      1332,
      1332
    ],
    "mapped",
    [
      1380
    ]
  ],
  [
    [
      1333,
      1333
    ],
    "mapped",
    [
      1381
    ]
  ],
  [
    [
      1334,
      1334
    ],
    "mapped",
    [
      1382
    ]
  ],
  [
    [
      1335,
      1335
    ],
    "mapped",
    [
      1383
    ]
  ],
  [
    [
      1336,
      1336
    ],
    "mapped",
    [
      1384
    ]
  ],
  [
    [
      1337,
      1337
    ],
    "mapped",
    [
      1385
    ]
  ],
  [
    [
      1338,
      1338
    ],
    "mapped",
    [
      1386
    ]
  ],
  [
    [
      1339,
      1339
    ],
    "mapped",
    [
      1387
    ]
  ],
  [
    [
      1340,
      1340
    ],
    "mapped",
    [
      1388
    ]
  ],
  [
    [
      1341,
      1341
    ],
    "mapped",
    [
      1389
    ]
  ],
  [
    [
      1342,
      1342
    ],
    "mapped",
    [
      1390
    ]
  ],
  [
    [
      1343,
      1343
    ],
    "mapped",
    [
      1391
    ]
  ],
  [
    [
      1344,
      1344
    ],
    "mapped",
    [
      1392
    ]
  ],
  [
    [
      1345,
      1345
    ],
    "mapped",
    [
      1393
    ]
  ],
  [
    [
      1346,
      1346
    ],
    "mapped",
    [
      1394
    ]
  ],
  [
    [
      1347,
      1347
    ],
    "mapped",
    [
      1395
    ]
  ],
  [
    [
      1348,
      1348
    ],
    "mapped",
    [
      1396
    ]
  ],
  [
    [
      1349,
      1349
    ],
    "mapped",
    [
      1397
    ]
  ],
  [
    [
      1350,
      1350
    ],
    "mapped",
    [
      1398
    ]
  ],
  [
    [
      1351,
      1351
    ],
    "mapped",
    [
      1399
    ]
  ],
  [
    [
      1352,
      1352
    ],
    "mapped",
    [
      1400
    ]
  ],
  [
    [
      1353,
      1353
    ],
    "mapped",
    [
      1401
    ]
  ],
  [
    [
      1354,
      1354
    ],
    "mapped",
    [
      1402
    ]
  ],
  [
    [
      1355,
      1355
    ],
    "mapped",
    [
      1403
    ]
  ],
  [
    [
      1356,
      1356
    ],
    "mapped",
    [
      1404
    ]
  ],
  [
    [
      1357,
      1357
    ],
    "mapped",
    [
      1405
    ]
  ],
  [
    [
      1358,
      1358
    ],
    "mapped",
    [
      1406
    ]
  ],
  [
    [
      1359,
      1359
    ],
    "mapped",
    [
      1407
    ]
  ],
  [
    [
      1360,
      1360
    ],
    "mapped",
    [
      1408
    ]
  ],
  [
    [
      1361,
      1361
    ],
    "mapped",
    [
      1409
    ]
  ],
  [
    [
      1362,
      1362
    ],
    "mapped",
    [
      1410
    ]
  ],
  [
    [
      1363,
      1363
    ],
    "mapped",
    [
      1411
    ]
  ],
  [
    [
      1364,
      1364
    ],
    "mapped",
    [
      1412
    ]
  ],
  [
    [
      1365,
      1365
    ],
    "mapped",
    [
      1413
    ]
  ],
  [
    [
      1366,
      1366
    ],
    "mapped",
    [
      1414
    ]
  ],
  [
    [
      1367,
      1368
    ],
    "disallowed"
  ],
  [
    [
      1369,
      1369
    ],
    "valid"
  ],
  [
    [
      1370,
      1375
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1376,
      1376
    ],
    "disallowed"
  ],
  [
    [
      1377,
      1414
    ],
    "valid"
  ],
  [
    [
      1415,
      1415
    ],
    "mapped",
    [
      1381,
      1410
    ]
  ],
  [
    [
      1416,
      1416
    ],
    "disallowed"
  ],
  [
    [
      1417,
      1417
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1418,
      1418
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1419,
      1420
    ],
    "disallowed"
  ],
  [
    [
      1421,
      1422
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1423,
      1423
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1424,
      1424
    ],
    "disallowed"
  ],
  [
    [
      1425,
      1441
    ],
    "valid"
  ],
  [
    [
      1442,
      1442
    ],
    "valid"
  ],
  [
    [
      1443,
      1455
    ],
    "valid"
  ],
  [
    [
      1456,
      1465
    ],
    "valid"
  ],
  [
    [
      1466,
      1466
    ],
    "valid"
  ],
  [
    [
      1467,
      1469
    ],
    "valid"
  ],
  [
    [
      1470,
      1470
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1471,
      1471
    ],
    "valid"
  ],
  [
    [
      1472,
      1472
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1473,
      1474
    ],
    "valid"
  ],
  [
    [
      1475,
      1475
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1476,
      1476
    ],
    "valid"
  ],
  [
    [
      1477,
      1477
    ],
    "valid"
  ],
  [
    [
      1478,
      1478
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1479,
      1479
    ],
    "valid"
  ],
  [
    [
      1480,
      1487
    ],
    "disallowed"
  ],
  [
    [
      1488,
      1514
    ],
    "valid"
  ],
  [
    [
      1515,
      1519
    ],
    "disallowed"
  ],
  [
    [
      1520,
      1524
    ],
    "valid"
  ],
  [
    [
      1525,
      1535
    ],
    "disallowed"
  ],
  [
    [
      1536,
      1539
    ],
    "disallowed"
  ],
  [
    [
      1540,
      1540
    ],
    "disallowed"
  ],
  [
    [
      1541,
      1541
    ],
    "disallowed"
  ],
  [
    [
      1542,
      1546
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1547,
      1547
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1548,
      1548
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1549,
      1551
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1552,
      1557
    ],
    "valid"
  ],
  [
    [
      1558,
      1562
    ],
    "valid"
  ],
  [
    [
      1563,
      1563
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1564,
      1564
    ],
    "disallowed"
  ],
  [
    [
      1565,
      1565
    ],
    "disallowed"
  ],
  [
    [
      1566,
      1566
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1567,
      1567
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1568,
      1568
    ],
    "valid"
  ],
  [
    [
      1569,
      1594
    ],
    "valid"
  ],
  [
    [
      1595,
      1599
    ],
    "valid"
  ],
  [
    [
      1600,
      1600
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1601,
      1618
    ],
    "valid"
  ],
  [
    [
      1619,
      1621
    ],
    "valid"
  ],
  [
    [
      1622,
      1624
    ],
    "valid"
  ],
  [
    [
      1625,
      1630
    ],
    "valid"
  ],
  [
    [
      1631,
      1631
    ],
    "valid"
  ],
  [
    [
      1632,
      1641
    ],
    "valid"
  ],
  [
    [
      1642,
      1645
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1646,
      1647
    ],
    "valid"
  ],
  [
    [
      1648,
      1652
    ],
    "valid"
  ],
  [
    [
      1653,
      1653
    ],
    "mapped",
    [
      1575,
      1652
    ]
  ],
  [
    [
      1654,
      1654
    ],
    "mapped",
    [
      1608,
      1652
    ]
  ],
  [
    [
      1655,
      1655
    ],
    "mapped",
    [
      1735,
      1652
    ]
  ],
  [
    [
      1656,
      1656
    ],
    "mapped",
    [
      1610,
      1652
    ]
  ],
  [
    [
      1657,
      1719
    ],
    "valid"
  ],
  [
    [
      1720,
      1721
    ],
    "valid"
  ],
  [
    [
      1722,
      1726
    ],
    "valid"
  ],
  [
    [
      1727,
      1727
    ],
    "valid"
  ],
  [
    [
      1728,
      1742
    ],
    "valid"
  ],
  [
    [
      1743,
      1743
    ],
    "valid"
  ],
  [
    [
      1744,
      1747
    ],
    "valid"
  ],
  [
    [
      1748,
      1748
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1749,
      1756
    ],
    "valid"
  ],
  [
    [
      1757,
      1757
    ],
    "disallowed"
  ],
  [
    [
      1758,
      1758
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1759,
      1768
    ],
    "valid"
  ],
  [
    [
      1769,
      1769
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1770,
      1773
    ],
    "valid"
  ],
  [
    [
      1774,
      1775
    ],
    "valid"
  ],
  [
    [
      1776,
      1785
    ],
    "valid"
  ],
  [
    [
      1786,
      1790
    ],
    "valid"
  ],
  [
    [
      1791,
      1791
    ],
    "valid"
  ],
  [
    [
      1792,
      1805
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1806,
      1806
    ],
    "disallowed"
  ],
  [
    [
      1807,
      1807
    ],
    "disallowed"
  ],
  [
    [
      1808,
      1836
    ],
    "valid"
  ],
  [
    [
      1837,
      1839
    ],
    "valid"
  ],
  [
    [
      1840,
      1866
    ],
    "valid"
  ],
  [
    [
      1867,
      1868
    ],
    "disallowed"
  ],
  [
    [
      1869,
      1871
    ],
    "valid"
  ],
  [
    [
      1872,
      1901
    ],
    "valid"
  ],
  [
    [
      1902,
      1919
    ],
    "valid"
  ],
  [
    [
      1920,
      1968
    ],
    "valid"
  ],
  [
    [
      1969,
      1969
    ],
    "valid"
  ],
  [
    [
      1970,
      1983
    ],
    "disallowed"
  ],
  [
    [
      1984,
      2037
    ],
    "valid"
  ],
  [
    [
      2038,
      2042
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2043,
      2047
    ],
    "disallowed"
  ],
  [
    [
      2048,
      2093
    ],
    "valid"
  ],
  [
    [
      2094,
      2095
    ],
    "disallowed"
  ],
  [
    [
      2096,
      2110
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2111,
      2111
    ],
    "disallowed"
  ],
  [
    [
      2112,
      2139
    ],
    "valid"
  ],
  [
    [
      2140,
      2141
    ],
    "disallowed"
  ],
  [
    [
      2142,
      2142
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2143,
      2207
    ],
    "disallowed"
  ],
  [
    [
      2208,
      2208
    ],
    "valid"
  ],
  [
    [
      2209,
      2209
    ],
    "valid"
  ],
  [
    [
      2210,
      2220
    ],
    "valid"
  ],
  [
    [
      2221,
      2226
    ],
    "valid"
  ],
  [
    [
      2227,
      2228
    ],
    "valid"
  ],
  [
    [
      2229,
      2274
    ],
    "disallowed"
  ],
  [
    [
      2275,
      2275
    ],
    "valid"
  ],
  [
    [
      2276,
      2302
    ],
    "valid"
  ],
  [
    [
      2303,
      2303
    ],
    "valid"
  ],
  [
    [
      2304,
      2304
    ],
    "valid"
  ],
  [
    [
      2305,
      2307
    ],
    "valid"
  ],
  [
    [
      2308,
      2308
    ],
    "valid"
  ],
  [
    [
      2309,
      2361
    ],
    "valid"
  ],
  [
    [
      2362,
      2363
    ],
    "valid"
  ],
  [
    [
      2364,
      2381
    ],
    "valid"
  ],
  [
    [
      2382,
      2382
    ],
    "valid"
  ],
  [
    [
      2383,
      2383
    ],
    "valid"
  ],
  [
    [
      2384,
      2388
    ],
    "valid"
  ],
  [
    [
      2389,
      2389
    ],
    "valid"
  ],
  [
    [
      2390,
      2391
    ],
    "valid"
  ],
  [
    [
      2392,
      2392
    ],
    "mapped",
    [
      2325,
      2364
    ]
  ],
  [
    [
      2393,
      2393
    ],
    "mapped",
    [
      2326,
      2364
    ]
  ],
  [
    [
      2394,
      2394
    ],
    "mapped",
    [
      2327,
      2364
    ]
  ],
  [
    [
      2395,
      2395
    ],
    "mapped",
    [
      2332,
      2364
    ]
  ],
  [
    [
      2396,
      2396
    ],
    "mapped",
    [
      2337,
      2364
    ]
  ],
  [
    [
      2397,
      2397
    ],
    "mapped",
    [
      2338,
      2364
    ]
  ],
  [
    [
      2398,
      2398
    ],
    "mapped",
    [
      2347,
      2364
    ]
  ],
  [
    [
      2399,
      2399
    ],
    "mapped",
    [
      2351,
      2364
    ]
  ],
  [
    [
      2400,
      2403
    ],
    "valid"
  ],
  [
    [
      2404,
      2405
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2406,
      2415
    ],
    "valid"
  ],
  [
    [
      2416,
      2416
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2417,
      2418
    ],
    "valid"
  ],
  [
    [
      2419,
      2423
    ],
    "valid"
  ],
  [
    [
      2424,
      2424
    ],
    "valid"
  ],
  [
    [
      2425,
      2426
    ],
    "valid"
  ],
  [
    [
      2427,
      2428
    ],
    "valid"
  ],
  [
    [
      2429,
      2429
    ],
    "valid"
  ],
  [
    [
      2430,
      2431
    ],
    "valid"
  ],
  [
    [
      2432,
      2432
    ],
    "valid"
  ],
  [
    [
      2433,
      2435
    ],
    "valid"
  ],
  [
    [
      2436,
      2436
    ],
    "disallowed"
  ],
  [
    [
      2437,
      2444
    ],
    "valid"
  ],
  [
    [
      2445,
      2446
    ],
    "disallowed"
  ],
  [
    [
      2447,
      2448
    ],
    "valid"
  ],
  [
    [
      2449,
      2450
    ],
    "disallowed"
  ],
  [
    [
      2451,
      2472
    ],
    "valid"
  ],
  [
    [
      2473,
      2473
    ],
    "disallowed"
  ],
  [
    [
      2474,
      2480
    ],
    "valid"
  ],
  [
    [
      2481,
      2481
    ],
    "disallowed"
  ],
  [
    [
      2482,
      2482
    ],
    "valid"
  ],
  [
    [
      2483,
      2485
    ],
    "disallowed"
  ],
  [
    [
      2486,
      2489
    ],
    "valid"
  ],
  [
    [
      2490,
      2491
    ],
    "disallowed"
  ],
  [
    [
      2492,
      2492
    ],
    "valid"
  ],
  [
    [
      2493,
      2493
    ],
    "valid"
  ],
  [
    [
      2494,
      2500
    ],
    "valid"
  ],
  [
    [
      2501,
      2502
    ],
    "disallowed"
  ],
  [
    [
      2503,
      2504
    ],
    "valid"
  ],
  [
    [
      2505,
      2506
    ],
    "disallowed"
  ],
  [
    [
      2507,
      2509
    ],
    "valid"
  ],
  [
    [
      2510,
      2510
    ],
    "valid"
  ],
  [
    [
      2511,
      2518
    ],
    "disallowed"
  ],
  [
    [
      2519,
      2519
    ],
    "valid"
  ],
  [
    [
      2520,
      2523
    ],
    "disallowed"
  ],
  [
    [
      2524,
      2524
    ],
    "mapped",
    [
      2465,
      2492
    ]
  ],
  [
    [
      2525,
      2525
    ],
    "mapped",
    [
      2466,
      2492
    ]
  ],
  [
    [
      2526,
      2526
    ],
    "disallowed"
  ],
  [
    [
      2527,
      2527
    ],
    "mapped",
    [
      2479,
      2492
    ]
  ],
  [
    [
      2528,
      2531
    ],
    "valid"
  ],
  [
    [
      2532,
      2533
    ],
    "disallowed"
  ],
  [
    [
      2534,
      2545
    ],
    "valid"
  ],
  [
    [
      2546,
      2554
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2555,
      2555
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2556,
      2560
    ],
    "disallowed"
  ],
  [
    [
      2561,
      2561
    ],
    "valid"
  ],
  [
    [
      2562,
      2562
    ],
    "valid"
  ],
  [
    [
      2563,
      2563
    ],
    "valid"
  ],
  [
    [
      2564,
      2564
    ],
    "disallowed"
  ],
  [
    [
      2565,
      2570
    ],
    "valid"
  ],
  [
    [
      2571,
      2574
    ],
    "disallowed"
  ],
  [
    [
      2575,
      2576
    ],
    "valid"
  ],
  [
    [
      2577,
      2578
    ],
    "disallowed"
  ],
  [
    [
      2579,
      2600
    ],
    "valid"
  ],
  [
    [
      2601,
      2601
    ],
    "disallowed"
  ],
  [
    [
      2602,
      2608
    ],
    "valid"
  ],
  [
    [
      2609,
      2609
    ],
    "disallowed"
  ],
  [
    [
      2610,
      2610
    ],
    "valid"
  ],
  [
    [
      2611,
      2611
    ],
    "mapped",
    [
      2610,
      2620
    ]
  ],
  [
    [
      2612,
      2612
    ],
    "disallowed"
  ],
  [
    [
      2613,
      2613
    ],
    "valid"
  ],
  [
    [
      2614,
      2614
    ],
    "mapped",
    [
      2616,
      2620
    ]
  ],
  [
    [
      2615,
      2615
    ],
    "disallowed"
  ],
  [
    [
      2616,
      2617
    ],
    "valid"
  ],
  [
    [
      2618,
      2619
    ],
    "disallowed"
  ],
  [
    [
      2620,
      2620
    ],
    "valid"
  ],
  [
    [
      2621,
      2621
    ],
    "disallowed"
  ],
  [
    [
      2622,
      2626
    ],
    "valid"
  ],
  [
    [
      2627,
      2630
    ],
    "disallowed"
  ],
  [
    [
      2631,
      2632
    ],
    "valid"
  ],
  [
    [
      2633,
      2634
    ],
    "disallowed"
  ],
  [
    [
      2635,
      2637
    ],
    "valid"
  ],
  [
    [
      2638,
      2640
    ],
    "disallowed"
  ],
  [
    [
      2641,
      2641
    ],
    "valid"
  ],
  [
    [
      2642,
      2648
    ],
    "disallowed"
  ],
  [
    [
      2649,
      2649
    ],
    "mapped",
    [
      2582,
      2620
    ]
  ],
  [
    [
      2650,
      2650
    ],
    "mapped",
    [
      2583,
      2620
    ]
  ],
  [
    [
      2651,
      2651
    ],
    "mapped",
    [
      2588,
      2620
    ]
  ],
  [
    [
      2652,
      2652
    ],
    "valid"
  ],
  [
    [
      2653,
      2653
    ],
    "disallowed"
  ],
  [
    [
      2654,
      2654
    ],
    "mapped",
    [
      2603,
      2620
    ]
  ],
  [
    [
      2655,
      2661
    ],
    "disallowed"
  ],
  [
    [
      2662,
      2676
    ],
    "valid"
  ],
  [
    [
      2677,
      2677
    ],
    "valid"
  ],
  [
    [
      2678,
      2688
    ],
    "disallowed"
  ],
  [
    [
      2689,
      2691
    ],
    "valid"
  ],
  [
    [
      2692,
      2692
    ],
    "disallowed"
  ],
  [
    [
      2693,
      2699
    ],
    "valid"
  ],
  [
    [
      2700,
      2700
    ],
    "valid"
  ],
  [
    [
      2701,
      2701
    ],
    "valid"
  ],
  [
    [
      2702,
      2702
    ],
    "disallowed"
  ],
  [
    [
      2703,
      2705
    ],
    "valid"
  ],
  [
    [
      2706,
      2706
    ],
    "disallowed"
  ],
  [
    [
      2707,
      2728
    ],
    "valid"
  ],
  [
    [
      2729,
      2729
    ],
    "disallowed"
  ],
  [
    [
      2730,
      2736
    ],
    "valid"
  ],
  [
    [
      2737,
      2737
    ],
    "disallowed"
  ],
  [
    [
      2738,
      2739
    ],
    "valid"
  ],
  [
    [
      2740,
      2740
    ],
    "disallowed"
  ],
  [
    [
      2741,
      2745
    ],
    "valid"
  ],
  [
    [
      2746,
      2747
    ],
    "disallowed"
  ],
  [
    [
      2748,
      2757
    ],
    "valid"
  ],
  [
    [
      2758,
      2758
    ],
    "disallowed"
  ],
  [
    [
      2759,
      2761
    ],
    "valid"
  ],
  [
    [
      2762,
      2762
    ],
    "disallowed"
  ],
  [
    [
      2763,
      2765
    ],
    "valid"
  ],
  [
    [
      2766,
      2767
    ],
    "disallowed"
  ],
  [
    [
      2768,
      2768
    ],
    "valid"
  ],
  [
    [
      2769,
      2783
    ],
    "disallowed"
  ],
  [
    [
      2784,
      2784
    ],
    "valid"
  ],
  [
    [
      2785,
      2787
    ],
    "valid"
  ],
  [
    [
      2788,
      2789
    ],
    "disallowed"
  ],
  [
    [
      2790,
      2799
    ],
    "valid"
  ],
  [
    [
      2800,
      2800
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2801,
      2801
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2802,
      2808
    ],
    "disallowed"
  ],
  [
    [
      2809,
      2809
    ],
    "valid"
  ],
  [
    [
      2810,
      2816
    ],
    "disallowed"
  ],
  [
    [
      2817,
      2819
    ],
    "valid"
  ],
  [
    [
      2820,
      2820
    ],
    "disallowed"
  ],
  [
    [
      2821,
      2828
    ],
    "valid"
  ],
  [
    [
      2829,
      2830
    ],
    "disallowed"
  ],
  [
    [
      2831,
      2832
    ],
    "valid"
  ],
  [
    [
      2833,
      2834
    ],
    "disallowed"
  ],
  [
    [
      2835,
      2856
    ],
    "valid"
  ],
  [
    [
      2857,
      2857
    ],
    "disallowed"
  ],
  [
    [
      2858,
      2864
    ],
    "valid"
  ],
  [
    [
      2865,
      2865
    ],
    "disallowed"
  ],
  [
    [
      2866,
      2867
    ],
    "valid"
  ],
  [
    [
      2868,
      2868
    ],
    "disallowed"
  ],
  [
    [
      2869,
      2869
    ],
    "valid"
  ],
  [
    [
      2870,
      2873
    ],
    "valid"
  ],
  [
    [
      2874,
      2875
    ],
    "disallowed"
  ],
  [
    [
      2876,
      2883
    ],
    "valid"
  ],
  [
    [
      2884,
      2884
    ],
    "valid"
  ],
  [
    [
      2885,
      2886
    ],
    "disallowed"
  ],
  [
    [
      2887,
      2888
    ],
    "valid"
  ],
  [
    [
      2889,
      2890
    ],
    "disallowed"
  ],
  [
    [
      2891,
      2893
    ],
    "valid"
  ],
  [
    [
      2894,
      2901
    ],
    "disallowed"
  ],
  [
    [
      2902,
      2903
    ],
    "valid"
  ],
  [
    [
      2904,
      2907
    ],
    "disallowed"
  ],
  [
    [
      2908,
      2908
    ],
    "mapped",
    [
      2849,
      2876
    ]
  ],
  [
    [
      2909,
      2909
    ],
    "mapped",
    [
      2850,
      2876
    ]
  ],
  [
    [
      2910,
      2910
    ],
    "disallowed"
  ],
  [
    [
      2911,
      2913
    ],
    "valid"
  ],
  [
    [
      2914,
      2915
    ],
    "valid"
  ],
  [
    [
      2916,
      2917
    ],
    "disallowed"
  ],
  [
    [
      2918,
      2927
    ],
    "valid"
  ],
  [
    [
      2928,
      2928
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2929,
      2929
    ],
    "valid"
  ],
  [
    [
      2930,
      2935
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2936,
      2945
    ],
    "disallowed"
  ],
  [
    [
      2946,
      2947
    ],
    "valid"
  ],
  [
    [
      2948,
      2948
    ],
    "disallowed"
  ],
  [
    [
      2949,
      2954
    ],
    "valid"
  ],
  [
    [
      2955,
      2957
    ],
    "disallowed"
  ],
  [
    [
      2958,
      2960
    ],
    "valid"
  ],
  [
    [
      2961,
      2961
    ],
    "disallowed"
  ],
  [
    [
      2962,
      2965
    ],
    "valid"
  ],
  [
    [
      2966,
      2968
    ],
    "disallowed"
  ],
  [
    [
      2969,
      2970
    ],
    "valid"
  ],
  [
    [
      2971,
      2971
    ],
    "disallowed"
  ],
  [
    [
      2972,
      2972
    ],
    "valid"
  ],
  [
    [
      2973,
      2973
    ],
    "disallowed"
  ],
  [
    [
      2974,
      2975
    ],
    "valid"
  ],
  [
    [
      2976,
      2978
    ],
    "disallowed"
  ],
  [
    [
      2979,
      2980
    ],
    "valid"
  ],
  [
    [
      2981,
      2983
    ],
    "disallowed"
  ],
  [
    [
      2984,
      2986
    ],
    "valid"
  ],
  [
    [
      2987,
      2989
    ],
    "disallowed"
  ],
  [
    [
      2990,
      2997
    ],
    "valid"
  ],
  [
    [
      2998,
      2998
    ],
    "valid"
  ],
  [
    [
      2999,
      3001
    ],
    "valid"
  ],
  [
    [
      3002,
      3005
    ],
    "disallowed"
  ],
  [
    [
      3006,
      3010
    ],
    "valid"
  ],
  [
    [
      3011,
      3013
    ],
    "disallowed"
  ],
  [
    [
      3014,
      3016
    ],
    "valid"
  ],
  [
    [
      3017,
      3017
    ],
    "disallowed"
  ],
  [
    [
      3018,
      3021
    ],
    "valid"
  ],
  [
    [
      3022,
      3023
    ],
    "disallowed"
  ],
  [
    [
      3024,
      3024
    ],
    "valid"
  ],
  [
    [
      3025,
      3030
    ],
    "disallowed"
  ],
  [
    [
      3031,
      3031
    ],
    "valid"
  ],
  [
    [
      3032,
      3045
    ],
    "disallowed"
  ],
  [
    [
      3046,
      3046
    ],
    "valid"
  ],
  [
    [
      3047,
      3055
    ],
    "valid"
  ],
  [
    [
      3056,
      3058
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3059,
      3066
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3067,
      3071
    ],
    "disallowed"
  ],
  [
    [
      3072,
      3072
    ],
    "valid"
  ],
  [
    [
      3073,
      3075
    ],
    "valid"
  ],
  [
    [
      3076,
      3076
    ],
    "disallowed"
  ],
  [
    [
      3077,
      3084
    ],
    "valid"
  ],
  [
    [
      3085,
      3085
    ],
    "disallowed"
  ],
  [
    [
      3086,
      3088
    ],
    "valid"
  ],
  [
    [
      3089,
      3089
    ],
    "disallowed"
  ],
  [
    [
      3090,
      3112
    ],
    "valid"
  ],
  [
    [
      3113,
      3113
    ],
    "disallowed"
  ],
  [
    [
      3114,
      3123
    ],
    "valid"
  ],
  [
    [
      3124,
      3124
    ],
    "valid"
  ],
  [
    [
      3125,
      3129
    ],
    "valid"
  ],
  [
    [
      3130,
      3132
    ],
    "disallowed"
  ],
  [
    [
      3133,
      3133
    ],
    "valid"
  ],
  [
    [
      3134,
      3140
    ],
    "valid"
  ],
  [
    [
      3141,
      3141
    ],
    "disallowed"
  ],
  [
    [
      3142,
      3144
    ],
    "valid"
  ],
  [
    [
      3145,
      3145
    ],
    "disallowed"
  ],
  [
    [
      3146,
      3149
    ],
    "valid"
  ],
  [
    [
      3150,
      3156
    ],
    "disallowed"
  ],
  [
    [
      3157,
      3158
    ],
    "valid"
  ],
  [
    [
      3159,
      3159
    ],
    "disallowed"
  ],
  [
    [
      3160,
      3161
    ],
    "valid"
  ],
  [
    [
      3162,
      3162
    ],
    "valid"
  ],
  [
    [
      3163,
      3167
    ],
    "disallowed"
  ],
  [
    [
      3168,
      3169
    ],
    "valid"
  ],
  [
    [
      3170,
      3171
    ],
    "valid"
  ],
  [
    [
      3172,
      3173
    ],
    "disallowed"
  ],
  [
    [
      3174,
      3183
    ],
    "valid"
  ],
  [
    [
      3184,
      3191
    ],
    "disallowed"
  ],
  [
    [
      3192,
      3199
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3200,
      3200
    ],
    "disallowed"
  ],
  [
    [
      3201,
      3201
    ],
    "valid"
  ],
  [
    [
      3202,
      3203
    ],
    "valid"
  ],
  [
    [
      3204,
      3204
    ],
    "disallowed"
  ],
  [
    [
      3205,
      3212
    ],
    "valid"
  ],
  [
    [
      3213,
      3213
    ],
    "disallowed"
  ],
  [
    [
      3214,
      3216
    ],
    "valid"
  ],
  [
    [
      3217,
      3217
    ],
    "disallowed"
  ],
  [
    [
      3218,
      3240
    ],
    "valid"
  ],
  [
    [
      3241,
      3241
    ],
    "disallowed"
  ],
  [
    [
      3242,
      3251
    ],
    "valid"
  ],
  [
    [
      3252,
      3252
    ],
    "disallowed"
  ],
  [
    [
      3253,
      3257
    ],
    "valid"
  ],
  [
    [
      3258,
      3259
    ],
    "disallowed"
  ],
  [
    [
      3260,
      3261
    ],
    "valid"
  ],
  [
    [
      3262,
      3268
    ],
    "valid"
  ],
  [
    [
      3269,
      3269
    ],
    "disallowed"
  ],
  [
    [
      3270,
      3272
    ],
    "valid"
  ],
  [
    [
      3273,
      3273
    ],
    "disallowed"
  ],
  [
    [
      3274,
      3277
    ],
    "valid"
  ],
  [
    [
      3278,
      3284
    ],
    "disallowed"
  ],
  [
    [
      3285,
      3286
    ],
    "valid"
  ],
  [
    [
      3287,
      3293
    ],
    "disallowed"
  ],
  [
    [
      3294,
      3294
    ],
    "valid"
  ],
  [
    [
      3295,
      3295
    ],
    "disallowed"
  ],
  [
    [
      3296,
      3297
    ],
    "valid"
  ],
  [
    [
      3298,
      3299
    ],
    "valid"
  ],
  [
    [
      3300,
      3301
    ],
    "disallowed"
  ],
  [
    [
      3302,
      3311
    ],
    "valid"
  ],
  [
    [
      3312,
      3312
    ],
    "disallowed"
  ],
  [
    [
      3313,
      3314
    ],
    "valid"
  ],
  [
    [
      3315,
      3328
    ],
    "disallowed"
  ],
  [
    [
      3329,
      3329
    ],
    "valid"
  ],
  [
    [
      3330,
      3331
    ],
    "valid"
  ],
  [
    [
      3332,
      3332
    ],
    "disallowed"
  ],
  [
    [
      3333,
      3340
    ],
    "valid"
  ],
  [
    [
      3341,
      3341
    ],
    "disallowed"
  ],
  [
    [
      3342,
      3344
    ],
    "valid"
  ],
  [
    [
      3345,
      3345
    ],
    "disallowed"
  ],
  [
    [
      3346,
      3368
    ],
    "valid"
  ],
  [
    [
      3369,
      3369
    ],
    "valid"
  ],
  [
    [
      3370,
      3385
    ],
    "valid"
  ],
  [
    [
      3386,
      3386
    ],
    "valid"
  ],
  [
    [
      3387,
      3388
    ],
    "disallowed"
  ],
  [
    [
      3389,
      3389
    ],
    "valid"
  ],
  [
    [
      3390,
      3395
    ],
    "valid"
  ],
  [
    [
      3396,
      3396
    ],
    "valid"
  ],
  [
    [
      3397,
      3397
    ],
    "disallowed"
  ],
  [
    [
      3398,
      3400
    ],
    "valid"
  ],
  [
    [
      3401,
      3401
    ],
    "disallowed"
  ],
  [
    [
      3402,
      3405
    ],
    "valid"
  ],
  [
    [
      3406,
      3406
    ],
    "valid"
  ],
  [
    [
      3407,
      3414
    ],
    "disallowed"
  ],
  [
    [
      3415,
      3415
    ],
    "valid"
  ],
  [
    [
      3416,
      3422
    ],
    "disallowed"
  ],
  [
    [
      3423,
      3423
    ],
    "valid"
  ],
  [
    [
      3424,
      3425
    ],
    "valid"
  ],
  [
    [
      3426,
      3427
    ],
    "valid"
  ],
  [
    [
      3428,
      3429
    ],
    "disallowed"
  ],
  [
    [
      3430,
      3439
    ],
    "valid"
  ],
  [
    [
      3440,
      3445
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3446,
      3448
    ],
    "disallowed"
  ],
  [
    [
      3449,
      3449
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3450,
      3455
    ],
    "valid"
  ],
  [
    [
      3456,
      3457
    ],
    "disallowed"
  ],
  [
    [
      3458,
      3459
    ],
    "valid"
  ],
  [
    [
      3460,
      3460
    ],
    "disallowed"
  ],
  [
    [
      3461,
      3478
    ],
    "valid"
  ],
  [
    [
      3479,
      3481
    ],
    "disallowed"
  ],
  [
    [
      3482,
      3505
    ],
    "valid"
  ],
  [
    [
      3506,
      3506
    ],
    "disallowed"
  ],
  [
    [
      3507,
      3515
    ],
    "valid"
  ],
  [
    [
      3516,
      3516
    ],
    "disallowed"
  ],
  [
    [
      3517,
      3517
    ],
    "valid"
  ],
  [
    [
      3518,
      3519
    ],
    "disallowed"
  ],
  [
    [
      3520,
      3526
    ],
    "valid"
  ],
  [
    [
      3527,
      3529
    ],
    "disallowed"
  ],
  [
    [
      3530,
      3530
    ],
    "valid"
  ],
  [
    [
      3531,
      3534
    ],
    "disallowed"
  ],
  [
    [
      3535,
      3540
    ],
    "valid"
  ],
  [
    [
      3541,
      3541
    ],
    "disallowed"
  ],
  [
    [
      3542,
      3542
    ],
    "valid"
  ],
  [
    [
      3543,
      3543
    ],
    "disallowed"
  ],
  [
    [
      3544,
      3551
    ],
    "valid"
  ],
  [
    [
      3552,
      3557
    ],
    "disallowed"
  ],
  [
    [
      3558,
      3567
    ],
    "valid"
  ],
  [
    [
      3568,
      3569
    ],
    "disallowed"
  ],
  [
    [
      3570,
      3571
    ],
    "valid"
  ],
  [
    [
      3572,
      3572
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3573,
      3584
    ],
    "disallowed"
  ],
  [
    [
      3585,
      3634
    ],
    "valid"
  ],
  [
    [
      3635,
      3635
    ],
    "mapped",
    [
      3661,
      3634
    ]
  ],
  [
    [
      3636,
      3642
    ],
    "valid"
  ],
  [
    [
      3643,
      3646
    ],
    "disallowed"
  ],
  [
    [
      3647,
      3647
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3648,
      3662
    ],
    "valid"
  ],
  [
    [
      3663,
      3663
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3664,
      3673
    ],
    "valid"
  ],
  [
    [
      3674,
      3675
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3676,
      3712
    ],
    "disallowed"
  ],
  [
    [
      3713,
      3714
    ],
    "valid"
  ],
  [
    [
      3715,
      3715
    ],
    "disallowed"
  ],
  [
    [
      3716,
      3716
    ],
    "valid"
  ],
  [
    [
      3717,
      3718
    ],
    "disallowed"
  ],
  [
    [
      3719,
      3720
    ],
    "valid"
  ],
  [
    [
      3721,
      3721
    ],
    "disallowed"
  ],
  [
    [
      3722,
      3722
    ],
    "valid"
  ],
  [
    [
      3723,
      3724
    ],
    "disallowed"
  ],
  [
    [
      3725,
      3725
    ],
    "valid"
  ],
  [
    [
      3726,
      3731
    ],
    "disallowed"
  ],
  [
    [
      3732,
      3735
    ],
    "valid"
  ],
  [
    [
      3736,
      3736
    ],
    "disallowed"
  ],
  [
    [
      3737,
      3743
    ],
    "valid"
  ],
  [
    [
      3744,
      3744
    ],
    "disallowed"
  ],
  [
    [
      3745,
      3747
    ],
    "valid"
  ],
  [
    [
      3748,
      3748
    ],
    "disallowed"
  ],
  [
    [
      3749,
      3749
    ],
    "valid"
  ],
  [
    [
      3750,
      3750
    ],
    "disallowed"
  ],
  [
    [
      3751,
      3751
    ],
    "valid"
  ],
  [
    [
      3752,
      3753
    ],
    "disallowed"
  ],
  [
    [
      3754,
      3755
    ],
    "valid"
  ],
  [
    [
      3756,
      3756
    ],
    "disallowed"
  ],
  [
    [
      3757,
      3762
    ],
    "valid"
  ],
  [
    [
      3763,
      3763
    ],
    "mapped",
    [
      3789,
      3762
    ]
  ],
  [
    [
      3764,
      3769
    ],
    "valid"
  ],
  [
    [
      3770,
      3770
    ],
    "disallowed"
  ],
  [
    [
      3771,
      3773
    ],
    "valid"
  ],
  [
    [
      3774,
      3775
    ],
    "disallowed"
  ],
  [
    [
      3776,
      3780
    ],
    "valid"
  ],
  [
    [
      3781,
      3781
    ],
    "disallowed"
  ],
  [
    [
      3782,
      3782
    ],
    "valid"
  ],
  [
    [
      3783,
      3783
    ],
    "disallowed"
  ],
  [
    [
      3784,
      3789
    ],
    "valid"
  ],
  [
    [
      3790,
      3791
    ],
    "disallowed"
  ],
  [
    [
      3792,
      3801
    ],
    "valid"
  ],
  [
    [
      3802,
      3803
    ],
    "disallowed"
  ],
  [
    [
      3804,
      3804
    ],
    "mapped",
    [
      3755,
      3737
    ]
  ],
  [
    [
      3805,
      3805
    ],
    "mapped",
    [
      3755,
      3745
    ]
  ],
  [
    [
      3806,
      3807
    ],
    "valid"
  ],
  [
    [
      3808,
      3839
    ],
    "disallowed"
  ],
  [
    [
      3840,
      3840
    ],
    "valid"
  ],
  [
    [
      3841,
      3850
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3851,
      3851
    ],
    "valid"
  ],
  [
    [
      3852,
      3852
    ],
    "mapped",
    [
      3851
    ]
  ],
  [
    [
      3853,
      3863
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3864,
      3865
    ],
    "valid"
  ],
  [
    [
      3866,
      3871
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3872,
      3881
    ],
    "valid"
  ],
  [
    [
      3882,
      3892
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3893,
      3893
    ],
    "valid"
  ],
  [
    [
      3894,
      3894
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3895,
      3895
    ],
    "valid"
  ],
  [
    [
      3896,
      3896
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3897,
      3897
    ],
    "valid"
  ],
  [
    [
      3898,
      3901
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3902,
      3906
    ],
    "valid"
  ],
  [
    [
      3907,
      3907
    ],
    "mapped",
    [
      3906,
      4023
    ]
  ],
  [
    [
      3908,
      3911
    ],
    "valid"
  ],
  [
    [
      3912,
      3912
    ],
    "disallowed"
  ],
  [
    [
      3913,
      3916
    ],
    "valid"
  ],
  [
    [
      3917,
      3917
    ],
    "mapped",
    [
      3916,
      4023
    ]
  ],
  [
    [
      3918,
      3921
    ],
    "valid"
  ],
  [
    [
      3922,
      3922
    ],
    "mapped",
    [
      3921,
      4023
    ]
  ],
  [
    [
      3923,
      3926
    ],
    "valid"
  ],
  [
    [
      3927,
      3927
    ],
    "mapped",
    [
      3926,
      4023
    ]
  ],
  [
    [
      3928,
      3931
    ],
    "valid"
  ],
  [
    [
      3932,
      3932
    ],
    "mapped",
    [
      3931,
      4023
    ]
  ],
  [
    [
      3933,
      3944
    ],
    "valid"
  ],
  [
    [
      3945,
      3945
    ],
    "mapped",
    [
      3904,
      4021
    ]
  ],
  [
    [
      3946,
      3946
    ],
    "valid"
  ],
  [
    [
      3947,
      3948
    ],
    "valid"
  ],
  [
    [
      3949,
      3952
    ],
    "disallowed"
  ],
  [
    [
      3953,
      3954
    ],
    "valid"
  ],
  [
    [
      3955,
      3955
    ],
    "mapped",
    [
      3953,
      3954
    ]
  ],
  [
    [
      3956,
      3956
    ],
    "valid"
  ],
  [
    [
      3957,
      3957
    ],
    "mapped",
    [
      3953,
      3956
    ]
  ],
  [
    [
      3958,
      3958
    ],
    "mapped",
    [
      4018,
      3968
    ]
  ],
  [
    [
      3959,
      3959
    ],
    "mapped",
    [
      4018,
      3953,
      3968
    ]
  ],
  [
    [
      3960,
      3960
    ],
    "mapped",
    [
      4019,
      3968
    ]
  ],
  [
    [
      3961,
      3961
    ],
    "mapped",
    [
      4019,
      3953,
      3968
    ]
  ],
  [
    [
      3962,
      3968
    ],
    "valid"
  ],
  [
    [
      3969,
      3969
    ],
    "mapped",
    [
      3953,
      3968
    ]
  ],
  [
    [
      3970,
      3972
    ],
    "valid"
  ],
  [
    [
      3973,
      3973
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3974,
      3979
    ],
    "valid"
  ],
  [
    [
      3980,
      3983
    ],
    "valid"
  ],
  [
    [
      3984,
      3986
    ],
    "valid"
  ],
  [
    [
      3987,
      3987
    ],
    "mapped",
    [
      3986,
      4023
    ]
  ],
  [
    [
      3988,
      3989
    ],
    "valid"
  ],
  [
    [
      3990,
      3990
    ],
    "valid"
  ],
  [
    [
      3991,
      3991
    ],
    "valid"
  ],
  [
    [
      3992,
      3992
    ],
    "disallowed"
  ],
  [
    [
      3993,
      3996
    ],
    "valid"
  ],
  [
    [
      3997,
      3997
    ],
    "mapped",
    [
      3996,
      4023
    ]
  ],
  [
    [
      3998,
      4001
    ],
    "valid"
  ],
  [
    [
      4002,
      4002
    ],
    "mapped",
    [
      4001,
      4023
    ]
  ],
  [
    [
      4003,
      4006
    ],
    "valid"
  ],
  [
    [
      4007,
      4007
    ],
    "mapped",
    [
      4006,
      4023
    ]
  ],
  [
    [
      4008,
      4011
    ],
    "valid"
  ],
  [
    [
      4012,
      4012
    ],
    "mapped",
    [
      4011,
      4023
    ]
  ],
  [
    [
      4013,
      4013
    ],
    "valid"
  ],
  [
    [
      4014,
      4016
    ],
    "valid"
  ],
  [
    [
      4017,
      4023
    ],
    "valid"
  ],
  [
    [
      4024,
      4024
    ],
    "valid"
  ],
  [
    [
      4025,
      4025
    ],
    "mapped",
    [
      3984,
      4021
    ]
  ],
  [
    [
      4026,
      4028
    ],
    "valid"
  ],
  [
    [
      4029,
      4029
    ],
    "disallowed"
  ],
  [
    [
      4030,
      4037
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4038,
      4038
    ],
    "valid"
  ],
  [
    [
      4039,
      4044
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4045,
      4045
    ],
    "disallowed"
  ],
  [
    [
      4046,
      4046
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4047,
      4047
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4048,
      4049
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4050,
      4052
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4053,
      4056
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4057,
      4058
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4059,
      4095
    ],
    "disallowed"
  ],
  [
    [
      4096,
      4129
    ],
    "valid"
  ],
  [
    [
      4130,
      4130
    ],
    "valid"
  ],
  [
    [
      4131,
      4135
    ],
    "valid"
  ],
  [
    [
      4136,
      4136
    ],
    "valid"
  ],
  [
    [
      4137,
      4138
    ],
    "valid"
  ],
  [
    [
      4139,
      4139
    ],
    "valid"
  ],
  [
    [
      4140,
      4146
    ],
    "valid"
  ],
  [
    [
      4147,
      4149
    ],
    "valid"
  ],
  [
    [
      4150,
      4153
    ],
    "valid"
  ],
  [
    [
      4154,
      4159
    ],
    "valid"
  ],
  [
    [
      4160,
      4169
    ],
    "valid"
  ],
  [
    [
      4170,
      4175
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4176,
      4185
    ],
    "valid"
  ],
  [
    [
      4186,
      4249
    ],
    "valid"
  ],
  [
    [
      4250,
      4253
    ],
    "valid"
  ],
  [
    [
      4254,
      4255
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4256,
      4293
    ],
    "disallowed"
  ],
  [
    [
      4294,
      4294
    ],
    "disallowed"
  ],
  [
    [
      4295,
      4295
    ],
    "mapped",
    [
      11559
    ]
  ],
  [
    [
      4296,
      4300
    ],
    "disallowed"
  ],
  [
    [
      4301,
      4301
    ],
    "mapped",
    [
      11565
    ]
  ],
  [
    [
      4302,
      4303
    ],
    "disallowed"
  ],
  [
    [
      4304,
      4342
    ],
    "valid"
  ],
  [
    [
      4343,
      4344
    ],
    "valid"
  ],
  [
    [
      4345,
      4346
    ],
    "valid"
  ],
  [
    [
      4347,
      4347
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4348,
      4348
    ],
    "mapped",
    [
      4316
    ]
  ],
  [
    [
      4349,
      4351
    ],
    "valid"
  ],
  [
    [
      4352,
      4441
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4442,
      4446
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4447,
      4448
    ],
    "disallowed"
  ],
  [
    [
      4449,
      4514
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4515,
      4519
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4520,
      4601
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4602,
      4607
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4608,
      4614
    ],
    "valid"
  ],
  [
    [
      4615,
      4615
    ],
    "valid"
  ],
  [
    [
      4616,
      4678
    ],
    "valid"
  ],
  [
    [
      4679,
      4679
    ],
    "valid"
  ],
  [
    [
      4680,
      4680
    ],
    "valid"
  ],
  [
    [
      4681,
      4681
    ],
    "disallowed"
  ],
  [
    [
      4682,
      4685
    ],
    "valid"
  ],
  [
    [
      4686,
      4687
    ],
    "disallowed"
  ],
  [
    [
      4688,
      4694
    ],
    "valid"
  ],
  [
    [
      4695,
      4695
    ],
    "disallowed"
  ],
  [
    [
      4696,
      4696
    ],
    "valid"
  ],
  [
    [
      4697,
      4697
    ],
    "disallowed"
  ],
  [
    [
      4698,
      4701
    ],
    "valid"
  ],
  [
    [
      4702,
      4703
    ],
    "disallowed"
  ],
  [
    [
      4704,
      4742
    ],
    "valid"
  ],
  [
    [
      4743,
      4743
    ],
    "valid"
  ],
  [
    [
      4744,
      4744
    ],
    "valid"
  ],
  [
    [
      4745,
      4745
    ],
    "disallowed"
  ],
  [
    [
      4746,
      4749
    ],
    "valid"
  ],
  [
    [
      4750,
      4751
    ],
    "disallowed"
  ],
  [
    [
      4752,
      4782
    ],
    "valid"
  ],
  [
    [
      4783,
      4783
    ],
    "valid"
  ],
  [
    [
      4784,
      4784
    ],
    "valid"
  ],
  [
    [
      4785,
      4785
    ],
    "disallowed"
  ],
  [
    [
      4786,
      4789
    ],
    "valid"
  ],
  [
    [
      4790,
      4791
    ],
    "disallowed"
  ],
  [
    [
      4792,
      4798
    ],
    "valid"
  ],
  [
    [
      4799,
      4799
    ],
    "disallowed"
  ],
  [
    [
      4800,
      4800
    ],
    "valid"
  ],
  [
    [
      4801,
      4801
    ],
    "disallowed"
  ],
  [
    [
      4802,
      4805
    ],
    "valid"
  ],
  [
    [
      4806,
      4807
    ],
    "disallowed"
  ],
  [
    [
      4808,
      4814
    ],
    "valid"
  ],
  [
    [
      4815,
      4815
    ],
    "valid"
  ],
  [
    [
      4816,
      4822
    ],
    "valid"
  ],
  [
    [
      4823,
      4823
    ],
    "disallowed"
  ],
  [
    [
      4824,
      4846
    ],
    "valid"
  ],
  [
    [
      4847,
      4847
    ],
    "valid"
  ],
  [
    [
      4848,
      4878
    ],
    "valid"
  ],
  [
    [
      4879,
      4879
    ],
    "valid"
  ],
  [
    [
      4880,
      4880
    ],
    "valid"
  ],
  [
    [
      4881,
      4881
    ],
    "disallowed"
  ],
  [
    [
      4882,
      4885
    ],
    "valid"
  ],
  [
    [
      4886,
      4887
    ],
    "disallowed"
  ],
  [
    [
      4888,
      4894
    ],
    "valid"
  ],
  [
    [
      4895,
      4895
    ],
    "valid"
  ],
  [
    [
      4896,
      4934
    ],
    "valid"
  ],
  [
    [
      4935,
      4935
    ],
    "valid"
  ],
  [
    [
      4936,
      4954
    ],
    "valid"
  ],
  [
    [
      4955,
      4956
    ],
    "disallowed"
  ],
  [
    [
      4957,
      4958
    ],
    "valid"
  ],
  [
    [
      4959,
      4959
    ],
    "valid"
  ],
  [
    [
      4960,
      4960
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4961,
      4988
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4989,
      4991
    ],
    "disallowed"
  ],
  [
    [
      4992,
      5007
    ],
    "valid"
  ],
  [
    [
      5008,
      5017
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      5018,
      5023
    ],
    "disallowed"
  ],
  [
    [
      5024,
      5108
    ],
    "valid"
  ],
  [
    [
      5109,
      5109
    ],
    "valid"
  ],
  [
    [
      5110,
      5111
    ],
    "disallowed"
  ],
  [
    [
      5112,
      5112
    ],
    "mapped",
    [
      5104
    ]
  ],
  [
    [
      5113,
      5113
    ],
    "mapped",
    [
      5105
    ]
  ],
  [
    [
      5114,
      5114
    ],
    "mapped",
    [
      5106
    ]
  ],
  [
    [
      5115,
      5115
    ],
    "mapped",
    [
      5107
    ]
  ],
  [
    [
      5116,
      5116
    ],
    "mapped",
    [
      5108
    ]
  ],
  [
    [
      5117,
      5117
    ],
    "mapped",
    [
      5109
    ]
  ],
  [
    [
      5118,
      5119
    ],
    "disallowed"
  ],
  [
    [
      5120,
      5120
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      5121,
      5740
    ],
    "valid"
  ],
  [
    [
      5741,
      5742
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      5743,
      5750
    ],
    "valid"
  ],
  [
    [
      5751,
      5759
    ],
    "valid"
  ],
  [
    [
      5760,
      5760
    ],
    "disallowed"
  ],
  [
    [
      5761,
      5786
    ],
    "valid"
  ],
  [
    [
      5787,
      5788
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      5789,
      5791
    ],
    "disallowed"
  ],
  [
    [
      5792,
      5866
    ],
    "valid"
  ],
  [
    [
      5867,
      5872
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      5873,
      5880
    ],
    "valid"
  ],
  [
    [
      5881,
      5887
    ],
    "disallowed"
  ],
  [
    [
      5888,
      5900
    ],
    "valid"
  ],
  [
    [
      5901,
      5901
    ],
    "disallowed"
  ],
  [
    [
      5902,
      5908
    ],
    "valid"
  ],
  [
    [
      5909,
      5919
    ],
    "disallowed"
  ],
  [
    [
      5920,
      5940
    ],
    "valid"
  ],
  [
    [
      5941,
      5942
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      5943,
      5951
    ],
    "disallowed"
  ],
  [
    [
      5952,
      5971
    ],
    "valid"
  ],
  [
    [
      5972,
      5983
    ],
    "disallowed"
  ],
  [
    [
      5984,
      5996
    ],
    "valid"
  ],
  [
    [
      5997,
      5997
    ],
    "disallowed"
  ],
  [
    [
      5998,
      6e3
    ],
    "valid"
  ],
  [
    [
      6001,
      6001
    ],
    "disallowed"
  ],
  [
    [
      6002,
      6003
    ],
    "valid"
  ],
  [
    [
      6004,
      6015
    ],
    "disallowed"
  ],
  [
    [
      6016,
      6067
    ],
    "valid"
  ],
  [
    [
      6068,
      6069
    ],
    "disallowed"
  ],
  [
    [
      6070,
      6099
    ],
    "valid"
  ],
  [
    [
      6100,
      6102
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6103,
      6103
    ],
    "valid"
  ],
  [
    [
      6104,
      6107
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6108,
      6108
    ],
    "valid"
  ],
  [
    [
      6109,
      6109
    ],
    "valid"
  ],
  [
    [
      6110,
      6111
    ],
    "disallowed"
  ],
  [
    [
      6112,
      6121
    ],
    "valid"
  ],
  [
    [
      6122,
      6127
    ],
    "disallowed"
  ],
  [
    [
      6128,
      6137
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6138,
      6143
    ],
    "disallowed"
  ],
  [
    [
      6144,
      6149
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6150,
      6150
    ],
    "disallowed"
  ],
  [
    [
      6151,
      6154
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6155,
      6157
    ],
    "ignored"
  ],
  [
    [
      6158,
      6158
    ],
    "disallowed"
  ],
  [
    [
      6159,
      6159
    ],
    "disallowed"
  ],
  [
    [
      6160,
      6169
    ],
    "valid"
  ],
  [
    [
      6170,
      6175
    ],
    "disallowed"
  ],
  [
    [
      6176,
      6263
    ],
    "valid"
  ],
  [
    [
      6264,
      6271
    ],
    "disallowed"
  ],
  [
    [
      6272,
      6313
    ],
    "valid"
  ],
  [
    [
      6314,
      6314
    ],
    "valid"
  ],
  [
    [
      6315,
      6319
    ],
    "disallowed"
  ],
  [
    [
      6320,
      6389
    ],
    "valid"
  ],
  [
    [
      6390,
      6399
    ],
    "disallowed"
  ],
  [
    [
      6400,
      6428
    ],
    "valid"
  ],
  [
    [
      6429,
      6430
    ],
    "valid"
  ],
  [
    [
      6431,
      6431
    ],
    "disallowed"
  ],
  [
    [
      6432,
      6443
    ],
    "valid"
  ],
  [
    [
      6444,
      6447
    ],
    "disallowed"
  ],
  [
    [
      6448,
      6459
    ],
    "valid"
  ],
  [
    [
      6460,
      6463
    ],
    "disallowed"
  ],
  [
    [
      6464,
      6464
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6465,
      6467
    ],
    "disallowed"
  ],
  [
    [
      6468,
      6469
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6470,
      6509
    ],
    "valid"
  ],
  [
    [
      6510,
      6511
    ],
    "disallowed"
  ],
  [
    [
      6512,
      6516
    ],
    "valid"
  ],
  [
    [
      6517,
      6527
    ],
    "disallowed"
  ],
  [
    [
      6528,
      6569
    ],
    "valid"
  ],
  [
    [
      6570,
      6571
    ],
    "valid"
  ],
  [
    [
      6572,
      6575
    ],
    "disallowed"
  ],
  [
    [
      6576,
      6601
    ],
    "valid"
  ],
  [
    [
      6602,
      6607
    ],
    "disallowed"
  ],
  [
    [
      6608,
      6617
    ],
    "valid"
  ],
  [
    [
      6618,
      6618
    ],
    "valid",
    [],
    "XV8"
  ],
  [
    [
      6619,
      6621
    ],
    "disallowed"
  ],
  [
    [
      6622,
      6623
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6624,
      6655
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6656,
      6683
    ],
    "valid"
  ],
  [
    [
      6684,
      6685
    ],
    "disallowed"
  ],
  [
    [
      6686,
      6687
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6688,
      6750
    ],
    "valid"
  ],
  [
    [
      6751,
      6751
    ],
    "disallowed"
  ],
  [
    [
      6752,
      6780
    ],
    "valid"
  ],
  [
    [
      6781,
      6782
    ],
    "disallowed"
  ],
  [
    [
      6783,
      6793
    ],
    "valid"
  ],
  [
    [
      6794,
      6799
    ],
    "disallowed"
  ],
  [
    [
      6800,
      6809
    ],
    "valid"
  ],
  [
    [
      6810,
      6815
    ],
    "disallowed"
  ],
  [
    [
      6816,
      6822
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6823,
      6823
    ],
    "valid"
  ],
  [
    [
      6824,
      6829
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6830,
      6831
    ],
    "disallowed"
  ],
  [
    [
      6832,
      6845
    ],
    "valid"
  ],
  [
    [
      6846,
      6846
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6847,
      6911
    ],
    "disallowed"
  ],
  [
    [
      6912,
      6987
    ],
    "valid"
  ],
  [
    [
      6988,
      6991
    ],
    "disallowed"
  ],
  [
    [
      6992,
      7001
    ],
    "valid"
  ],
  [
    [
      7002,
      7018
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7019,
      7027
    ],
    "valid"
  ],
  [
    [
      7028,
      7036
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7037,
      7039
    ],
    "disallowed"
  ],
  [
    [
      7040,
      7082
    ],
    "valid"
  ],
  [
    [
      7083,
      7085
    ],
    "valid"
  ],
  [
    [
      7086,
      7097
    ],
    "valid"
  ],
  [
    [
      7098,
      7103
    ],
    "valid"
  ],
  [
    [
      7104,
      7155
    ],
    "valid"
  ],
  [
    [
      7156,
      7163
    ],
    "disallowed"
  ],
  [
    [
      7164,
      7167
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7168,
      7223
    ],
    "valid"
  ],
  [
    [
      7224,
      7226
    ],
    "disallowed"
  ],
  [
    [
      7227,
      7231
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7232,
      7241
    ],
    "valid"
  ],
  [
    [
      7242,
      7244
    ],
    "disallowed"
  ],
  [
    [
      7245,
      7293
    ],
    "valid"
  ],
  [
    [
      7294,
      7295
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7296,
      7359
    ],
    "disallowed"
  ],
  [
    [
      7360,
      7367
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7368,
      7375
    ],
    "disallowed"
  ],
  [
    [
      7376,
      7378
    ],
    "valid"
  ],
  [
    [
      7379,
      7379
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7380,
      7410
    ],
    "valid"
  ],
  [
    [
      7411,
      7414
    ],
    "valid"
  ],
  [
    [
      7415,
      7415
    ],
    "disallowed"
  ],
  [
    [
      7416,
      7417
    ],
    "valid"
  ],
  [
    [
      7418,
      7423
    ],
    "disallowed"
  ],
  [
    [
      7424,
      7467
    ],
    "valid"
  ],
  [
    [
      7468,
      7468
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      7469,
      7469
    ],
    "mapped",
    [
      230
    ]
  ],
  [
    [
      7470,
      7470
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      7471,
      7471
    ],
    "valid"
  ],
  [
    [
      7472,
      7472
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      7473,
      7473
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      7474,
      7474
    ],
    "mapped",
    [
      477
    ]
  ],
  [
    [
      7475,
      7475
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      7476,
      7476
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      7477,
      7477
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      7478,
      7478
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      7479,
      7479
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      7480,
      7480
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      7481,
      7481
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      7482,
      7482
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      7483,
      7483
    ],
    "valid"
  ],
  [
    [
      7484,
      7484
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      7485,
      7485
    ],
    "mapped",
    [
      547
    ]
  ],
  [
    [
      7486,
      7486
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      7487,
      7487
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      7488,
      7488
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      7489,
      7489
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      7490,
      7490
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      7491,
      7491
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      7492,
      7492
    ],
    "mapped",
    [
      592
    ]
  ],
  [
    [
      7493,
      7493
    ],
    "mapped",
    [
      593
    ]
  ],
  [
    [
      7494,
      7494
    ],
    "mapped",
    [
      7426
    ]
  ],
  [
    [
      7495,
      7495
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      7496,
      7496
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      7497,
      7497
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      7498,
      7498
    ],
    "mapped",
    [
      601
    ]
  ],
  [
    [
      7499,
      7499
    ],
    "mapped",
    [
      603
    ]
  ],
  [
    [
      7500,
      7500
    ],
    "mapped",
    [
      604
    ]
  ],
  [
    [
      7501,
      7501
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      7502,
      7502
    ],
    "valid"
  ],
  [
    [
      7503,
      7503
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      7504,
      7504
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      7505,
      7505
    ],
    "mapped",
    [
      331
    ]
  ],
  [
    [
      7506,
      7506
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      7507,
      7507
    ],
    "mapped",
    [
      596
    ]
  ],
  [
    [
      7508,
      7508
    ],
    "mapped",
    [
      7446
    ]
  ],
  [
    [
      7509,
      7509
    ],
    "mapped",
    [
      7447
    ]
  ],
  [
    [
      7510,
      7510
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      7511,
      7511
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      7512,
      7512
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      7513,
      7513
    ],
    "mapped",
    [
      7453
    ]
  ],
  [
    [
      7514,
      7514
    ],
    "mapped",
    [
      623
    ]
  ],
  [
    [
      7515,
      7515
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      7516,
      7516
    ],
    "mapped",
    [
      7461
    ]
  ],
  [
    [
      7517,
      7517
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      7518,
      7518
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      7519,
      7519
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      7520,
      7520
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      7521,
      7521
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      7522,
      7522
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      7523,
      7523
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      7524,
      7524
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      7525,
      7525
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      7526,
      7526
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      7527,
      7527
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      7528,
      7528
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      7529,
      7529
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      7530,
      7530
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      7531,
      7531
    ],
    "valid"
  ],
  [
    [
      7532,
      7543
    ],
    "valid"
  ],
  [
    [
      7544,
      7544
    ],
    "mapped",
    [
      1085
    ]
  ],
  [
    [
      7545,
      7578
    ],
    "valid"
  ],
  [
    [
      7579,
      7579
    ],
    "mapped",
    [
      594
    ]
  ],
  [
    [
      7580,
      7580
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      7581,
      7581
    ],
    "mapped",
    [
      597
    ]
  ],
  [
    [
      7582,
      7582
    ],
    "mapped",
    [
      240
    ]
  ],
  [
    [
      7583,
      7583
    ],
    "mapped",
    [
      604
    ]
  ],
  [
    [
      7584,
      7584
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      7585,
      7585
    ],
    "mapped",
    [
      607
    ]
  ],
  [
    [
      7586,
      7586
    ],
    "mapped",
    [
      609
    ]
  ],
  [
    [
      7587,
      7587
    ],
    "mapped",
    [
      613
    ]
  ],
  [
    [
      7588,
      7588
    ],
    "mapped",
    [
      616
    ]
  ],
  [
    [
      7589,
      7589
    ],
    "mapped",
    [
      617
    ]
  ],
  [
    [
      7590,
      7590
    ],
    "mapped",
    [
      618
    ]
  ],
  [
    [
      7591,
      7591
    ],
    "mapped",
    [
      7547
    ]
  ],
  [
    [
      7592,
      7592
    ],
    "mapped",
    [
      669
    ]
  ],
  [
    [
      7593,
      7593
    ],
    "mapped",
    [
      621
    ]
  ],
  [
    [
      7594,
      7594
    ],
    "mapped",
    [
      7557
    ]
  ],
  [
    [
      7595,
      7595
    ],
    "mapped",
    [
      671
    ]
  ],
  [
    [
      7596,
      7596
    ],
    "mapped",
    [
      625
    ]
  ],
  [
    [
      7597,
      7597
    ],
    "mapped",
    [
      624
    ]
  ],
  [
    [
      7598,
      7598
    ],
    "mapped",
    [
      626
    ]
  ],
  [
    [
      7599,
      7599
    ],
    "mapped",
    [
      627
    ]
  ],
  [
    [
      7600,
      7600
    ],
    "mapped",
    [
      628
    ]
  ],
  [
    [
      7601,
      7601
    ],
    "mapped",
    [
      629
    ]
  ],
  [
    [
      7602,
      7602
    ],
    "mapped",
    [
      632
    ]
  ],
  [
    [
      7603,
      7603
    ],
    "mapped",
    [
      642
    ]
  ],
  [
    [
      7604,
      7604
    ],
    "mapped",
    [
      643
    ]
  ],
  [
    [
      7605,
      7605
    ],
    "mapped",
    [
      427
    ]
  ],
  [
    [
      7606,
      7606
    ],
    "mapped",
    [
      649
    ]
  ],
  [
    [
      7607,
      7607
    ],
    "mapped",
    [
      650
    ]
  ],
  [
    [
      7608,
      7608
    ],
    "mapped",
    [
      7452
    ]
  ],
  [
    [
      7609,
      7609
    ],
    "mapped",
    [
      651
    ]
  ],
  [
    [
      7610,
      7610
    ],
    "mapped",
    [
      652
    ]
  ],
  [
    [
      7611,
      7611
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      7612,
      7612
    ],
    "mapped",
    [
      656
    ]
  ],
  [
    [
      7613,
      7613
    ],
    "mapped",
    [
      657
    ]
  ],
  [
    [
      7614,
      7614
    ],
    "mapped",
    [
      658
    ]
  ],
  [
    [
      7615,
      7615
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      7616,
      7619
    ],
    "valid"
  ],
  [
    [
      7620,
      7626
    ],
    "valid"
  ],
  [
    [
      7627,
      7654
    ],
    "valid"
  ],
  [
    [
      7655,
      7669
    ],
    "valid"
  ],
  [
    [
      7670,
      7675
    ],
    "disallowed"
  ],
  [
    [
      7676,
      7676
    ],
    "valid"
  ],
  [
    [
      7677,
      7677
    ],
    "valid"
  ],
  [
    [
      7678,
      7679
    ],
    "valid"
  ],
  [
    [
      7680,
      7680
    ],
    "mapped",
    [
      7681
    ]
  ],
  [
    [
      7681,
      7681
    ],
    "valid"
  ],
  [
    [
      7682,
      7682
    ],
    "mapped",
    [
      7683
    ]
  ],
  [
    [
      7683,
      7683
    ],
    "valid"
  ],
  [
    [
      7684,
      7684
    ],
    "mapped",
    [
      7685
    ]
  ],
  [
    [
      7685,
      7685
    ],
    "valid"
  ],
  [
    [
      7686,
      7686
    ],
    "mapped",
    [
      7687
    ]
  ],
  [
    [
      7687,
      7687
    ],
    "valid"
  ],
  [
    [
      7688,
      7688
    ],
    "mapped",
    [
      7689
    ]
  ],
  [
    [
      7689,
      7689
    ],
    "valid"
  ],
  [
    [
      7690,
      7690
    ],
    "mapped",
    [
      7691
    ]
  ],
  [
    [
      7691,
      7691
    ],
    "valid"
  ],
  [
    [
      7692,
      7692
    ],
    "mapped",
    [
      7693
    ]
  ],
  [
    [
      7693,
      7693
    ],
    "valid"
  ],
  [
    [
      7694,
      7694
    ],
    "mapped",
    [
      7695
    ]
  ],
  [
    [
      7695,
      7695
    ],
    "valid"
  ],
  [
    [
      7696,
      7696
    ],
    "mapped",
    [
      7697
    ]
  ],
  [
    [
      7697,
      7697
    ],
    "valid"
  ],
  [
    [
      7698,
      7698
    ],
    "mapped",
    [
      7699
    ]
  ],
  [
    [
      7699,
      7699
    ],
    "valid"
  ],
  [
    [
      7700,
      7700
    ],
    "mapped",
    [
      7701
    ]
  ],
  [
    [
      7701,
      7701
    ],
    "valid"
  ],
  [
    [
      7702,
      7702
    ],
    "mapped",
    [
      7703
    ]
  ],
  [
    [
      7703,
      7703
    ],
    "valid"
  ],
  [
    [
      7704,
      7704
    ],
    "mapped",
    [
      7705
    ]
  ],
  [
    [
      7705,
      7705
    ],
    "valid"
  ],
  [
    [
      7706,
      7706
    ],
    "mapped",
    [
      7707
    ]
  ],
  [
    [
      7707,
      7707
    ],
    "valid"
  ],
  [
    [
      7708,
      7708
    ],
    "mapped",
    [
      7709
    ]
  ],
  [
    [
      7709,
      7709
    ],
    "valid"
  ],
  [
    [
      7710,
      7710
    ],
    "mapped",
    [
      7711
    ]
  ],
  [
    [
      7711,
      7711
    ],
    "valid"
  ],
  [
    [
      7712,
      7712
    ],
    "mapped",
    [
      7713
    ]
  ],
  [
    [
      7713,
      7713
    ],
    "valid"
  ],
  [
    [
      7714,
      7714
    ],
    "mapped",
    [
      7715
    ]
  ],
  [
    [
      7715,
      7715
    ],
    "valid"
  ],
  [
    [
      7716,
      7716
    ],
    "mapped",
    [
      7717
    ]
  ],
  [
    [
      7717,
      7717
    ],
    "valid"
  ],
  [
    [
      7718,
      7718
    ],
    "mapped",
    [
      7719
    ]
  ],
  [
    [
      7719,
      7719
    ],
    "valid"
  ],
  [
    [
      7720,
      7720
    ],
    "mapped",
    [
      7721
    ]
  ],
  [
    [
      7721,
      7721
    ],
    "valid"
  ],
  [
    [
      7722,
      7722
    ],
    "mapped",
    [
      7723
    ]
  ],
  [
    [
      7723,
      7723
    ],
    "valid"
  ],
  [
    [
      7724,
      7724
    ],
    "mapped",
    [
      7725
    ]
  ],
  [
    [
      7725,
      7725
    ],
    "valid"
  ],
  [
    [
      7726,
      7726
    ],
    "mapped",
    [
      7727
    ]
  ],
  [
    [
      7727,
      7727
    ],
    "valid"
  ],
  [
    [
      7728,
      7728
    ],
    "mapped",
    [
      7729
    ]
  ],
  [
    [
      7729,
      7729
    ],
    "valid"
  ],
  [
    [
      7730,
      7730
    ],
    "mapped",
    [
      7731
    ]
  ],
  [
    [
      7731,
      7731
    ],
    "valid"
  ],
  [
    [
      7732,
      7732
    ],
    "mapped",
    [
      7733
    ]
  ],
  [
    [
      7733,
      7733
    ],
    "valid"
  ],
  [
    [
      7734,
      7734
    ],
    "mapped",
    [
      7735
    ]
  ],
  [
    [
      7735,
      7735
    ],
    "valid"
  ],
  [
    [
      7736,
      7736
    ],
    "mapped",
    [
      7737
    ]
  ],
  [
    [
      7737,
      7737
    ],
    "valid"
  ],
  [
    [
      7738,
      7738
    ],
    "mapped",
    [
      7739
    ]
  ],
  [
    [
      7739,
      7739
    ],
    "valid"
  ],
  [
    [
      7740,
      7740
    ],
    "mapped",
    [
      7741
    ]
  ],
  [
    [
      7741,
      7741
    ],
    "valid"
  ],
  [
    [
      7742,
      7742
    ],
    "mapped",
    [
      7743
    ]
  ],
  [
    [
      7743,
      7743
    ],
    "valid"
  ],
  [
    [
      7744,
      7744
    ],
    "mapped",
    [
      7745
    ]
  ],
  [
    [
      7745,
      7745
    ],
    "valid"
  ],
  [
    [
      7746,
      7746
    ],
    "mapped",
    [
      7747
    ]
  ],
  [
    [
      7747,
      7747
    ],
    "valid"
  ],
  [
    [
      7748,
      7748
    ],
    "mapped",
    [
      7749
    ]
  ],
  [
    [
      7749,
      7749
    ],
    "valid"
  ],
  [
    [
      7750,
      7750
    ],
    "mapped",
    [
      7751
    ]
  ],
  [
    [
      7751,
      7751
    ],
    "valid"
  ],
  [
    [
      7752,
      7752
    ],
    "mapped",
    [
      7753
    ]
  ],
  [
    [
      7753,
      7753
    ],
    "valid"
  ],
  [
    [
      7754,
      7754
    ],
    "mapped",
    [
      7755
    ]
  ],
  [
    [
      7755,
      7755
    ],
    "valid"
  ],
  [
    [
      7756,
      7756
    ],
    "mapped",
    [
      7757
    ]
  ],
  [
    [
      7757,
      7757
    ],
    "valid"
  ],
  [
    [
      7758,
      7758
    ],
    "mapped",
    [
      7759
    ]
  ],
  [
    [
      7759,
      7759
    ],
    "valid"
  ],
  [
    [
      7760,
      7760
    ],
    "mapped",
    [
      7761
    ]
  ],
  [
    [
      7761,
      7761
    ],
    "valid"
  ],
  [
    [
      7762,
      7762
    ],
    "mapped",
    [
      7763
    ]
  ],
  [
    [
      7763,
      7763
    ],
    "valid"
  ],
  [
    [
      7764,
      7764
    ],
    "mapped",
    [
      7765
    ]
  ],
  [
    [
      7765,
      7765
    ],
    "valid"
  ],
  [
    [
      7766,
      7766
    ],
    "mapped",
    [
      7767
    ]
  ],
  [
    [
      7767,
      7767
    ],
    "valid"
  ],
  [
    [
      7768,
      7768
    ],
    "mapped",
    [
      7769
    ]
  ],
  [
    [
      7769,
      7769
    ],
    "valid"
  ],
  [
    [
      7770,
      7770
    ],
    "mapped",
    [
      7771
    ]
  ],
  [
    [
      7771,
      7771
    ],
    "valid"
  ],
  [
    [
      7772,
      7772
    ],
    "mapped",
    [
      7773
    ]
  ],
  [
    [
      7773,
      7773
    ],
    "valid"
  ],
  [
    [
      7774,
      7774
    ],
    "mapped",
    [
      7775
    ]
  ],
  [
    [
      7775,
      7775
    ],
    "valid"
  ],
  [
    [
      7776,
      7776
    ],
    "mapped",
    [
      7777
    ]
  ],
  [
    [
      7777,
      7777
    ],
    "valid"
  ],
  [
    [
      7778,
      7778
    ],
    "mapped",
    [
      7779
    ]
  ],
  [
    [
      7779,
      7779
    ],
    "valid"
  ],
  [
    [
      7780,
      7780
    ],
    "mapped",
    [
      7781
    ]
  ],
  [
    [
      7781,
      7781
    ],
    "valid"
  ],
  [
    [
      7782,
      7782
    ],
    "mapped",
    [
      7783
    ]
  ],
  [
    [
      7783,
      7783
    ],
    "valid"
  ],
  [
    [
      7784,
      7784
    ],
    "mapped",
    [
      7785
    ]
  ],
  [
    [
      7785,
      7785
    ],
    "valid"
  ],
  [
    [
      7786,
      7786
    ],
    "mapped",
    [
      7787
    ]
  ],
  [
    [
      7787,
      7787
    ],
    "valid"
  ],
  [
    [
      7788,
      7788
    ],
    "mapped",
    [
      7789
    ]
  ],
  [
    [
      7789,
      7789
    ],
    "valid"
  ],
  [
    [
      7790,
      7790
    ],
    "mapped",
    [
      7791
    ]
  ],
  [
    [
      7791,
      7791
    ],
    "valid"
  ],
  [
    [
      7792,
      7792
    ],
    "mapped",
    [
      7793
    ]
  ],
  [
    [
      7793,
      7793
    ],
    "valid"
  ],
  [
    [
      7794,
      7794
    ],
    "mapped",
    [
      7795
    ]
  ],
  [
    [
      7795,
      7795
    ],
    "valid"
  ],
  [
    [
      7796,
      7796
    ],
    "mapped",
    [
      7797
    ]
  ],
  [
    [
      7797,
      7797
    ],
    "valid"
  ],
  [
    [
      7798,
      7798
    ],
    "mapped",
    [
      7799
    ]
  ],
  [
    [
      7799,
      7799
    ],
    "valid"
  ],
  [
    [
      7800,
      7800
    ],
    "mapped",
    [
      7801
    ]
  ],
  [
    [
      7801,
      7801
    ],
    "valid"
  ],
  [
    [
      7802,
      7802
    ],
    "mapped",
    [
      7803
    ]
  ],
  [
    [
      7803,
      7803
    ],
    "valid"
  ],
  [
    [
      7804,
      7804
    ],
    "mapped",
    [
      7805
    ]
  ],
  [
    [
      7805,
      7805
    ],
    "valid"
  ],
  [
    [
      7806,
      7806
    ],
    "mapped",
    [
      7807
    ]
  ],
  [
    [
      7807,
      7807
    ],
    "valid"
  ],
  [
    [
      7808,
      7808
    ],
    "mapped",
    [
      7809
    ]
  ],
  [
    [
      7809,
      7809
    ],
    "valid"
  ],
  [
    [
      7810,
      7810
    ],
    "mapped",
    [
      7811
    ]
  ],
  [
    [
      7811,
      7811
    ],
    "valid"
  ],
  [
    [
      7812,
      7812
    ],
    "mapped",
    [
      7813
    ]
  ],
  [
    [
      7813,
      7813
    ],
    "valid"
  ],
  [
    [
      7814,
      7814
    ],
    "mapped",
    [
      7815
    ]
  ],
  [
    [
      7815,
      7815
    ],
    "valid"
  ],
  [
    [
      7816,
      7816
    ],
    "mapped",
    [
      7817
    ]
  ],
  [
    [
      7817,
      7817
    ],
    "valid"
  ],
  [
    [
      7818,
      7818
    ],
    "mapped",
    [
      7819
    ]
  ],
  [
    [
      7819,
      7819
    ],
    "valid"
  ],
  [
    [
      7820,
      7820
    ],
    "mapped",
    [
      7821
    ]
  ],
  [
    [
      7821,
      7821
    ],
    "valid"
  ],
  [
    [
      7822,
      7822
    ],
    "mapped",
    [
      7823
    ]
  ],
  [
    [
      7823,
      7823
    ],
    "valid"
  ],
  [
    [
      7824,
      7824
    ],
    "mapped",
    [
      7825
    ]
  ],
  [
    [
      7825,
      7825
    ],
    "valid"
  ],
  [
    [
      7826,
      7826
    ],
    "mapped",
    [
      7827
    ]
  ],
  [
    [
      7827,
      7827
    ],
    "valid"
  ],
  [
    [
      7828,
      7828
    ],
    "mapped",
    [
      7829
    ]
  ],
  [
    [
      7829,
      7833
    ],
    "valid"
  ],
  [
    [
      7834,
      7834
    ],
    "mapped",
    [
      97,
      702
    ]
  ],
  [
    [
      7835,
      7835
    ],
    "mapped",
    [
      7777
    ]
  ],
  [
    [
      7836,
      7837
    ],
    "valid"
  ],
  [
    [
      7838,
      7838
    ],
    "mapped",
    [
      115,
      115
    ]
  ],
  [
    [
      7839,
      7839
    ],
    "valid"
  ],
  [
    [
      7840,
      7840
    ],
    "mapped",
    [
      7841
    ]
  ],
  [
    [
      7841,
      7841
    ],
    "valid"
  ],
  [
    [
      7842,
      7842
    ],
    "mapped",
    [
      7843
    ]
  ],
  [
    [
      7843,
      7843
    ],
    "valid"
  ],
  [
    [
      7844,
      7844
    ],
    "mapped",
    [
      7845
    ]
  ],
  [
    [
      7845,
      7845
    ],
    "valid"
  ],
  [
    [
      7846,
      7846
    ],
    "mapped",
    [
      7847
    ]
  ],
  [
    [
      7847,
      7847
    ],
    "valid"
  ],
  [
    [
      7848,
      7848
    ],
    "mapped",
    [
      7849
    ]
  ],
  [
    [
      7849,
      7849
    ],
    "valid"
  ],
  [
    [
      7850,
      7850
    ],
    "mapped",
    [
      7851
    ]
  ],
  [
    [
      7851,
      7851
    ],
    "valid"
  ],
  [
    [
      7852,
      7852
    ],
    "mapped",
    [
      7853
    ]
  ],
  [
    [
      7853,
      7853
    ],
    "valid"
  ],
  [
    [
      7854,
      7854
    ],
    "mapped",
    [
      7855
    ]
  ],
  [
    [
      7855,
      7855
    ],
    "valid"
  ],
  [
    [
      7856,
      7856
    ],
    "mapped",
    [
      7857
    ]
  ],
  [
    [
      7857,
      7857
    ],
    "valid"
  ],
  [
    [
      7858,
      7858
    ],
    "mapped",
    [
      7859
    ]
  ],
  [
    [
      7859,
      7859
    ],
    "valid"
  ],
  [
    [
      7860,
      7860
    ],
    "mapped",
    [
      7861
    ]
  ],
  [
    [
      7861,
      7861
    ],
    "valid"
  ],
  [
    [
      7862,
      7862
    ],
    "mapped",
    [
      7863
    ]
  ],
  [
    [
      7863,
      7863
    ],
    "valid"
  ],
  [
    [
      7864,
      7864
    ],
    "mapped",
    [
      7865
    ]
  ],
  [
    [
      7865,
      7865
    ],
    "valid"
  ],
  [
    [
      7866,
      7866
    ],
    "mapped",
    [
      7867
    ]
  ],
  [
    [
      7867,
      7867
    ],
    "valid"
  ],
  [
    [
      7868,
      7868
    ],
    "mapped",
    [
      7869
    ]
  ],
  [
    [
      7869,
      7869
    ],
    "valid"
  ],
  [
    [
      7870,
      7870
    ],
    "mapped",
    [
      7871
    ]
  ],
  [
    [
      7871,
      7871
    ],
    "valid"
  ],
  [
    [
      7872,
      7872
    ],
    "mapped",
    [
      7873
    ]
  ],
  [
    [
      7873,
      7873
    ],
    "valid"
  ],
  [
    [
      7874,
      7874
    ],
    "mapped",
    [
      7875
    ]
  ],
  [
    [
      7875,
      7875
    ],
    "valid"
  ],
  [
    [
      7876,
      7876
    ],
    "mapped",
    [
      7877
    ]
  ],
  [
    [
      7877,
      7877
    ],
    "valid"
  ],
  [
    [
      7878,
      7878
    ],
    "mapped",
    [
      7879
    ]
  ],
  [
    [
      7879,
      7879
    ],
    "valid"
  ],
  [
    [
      7880,
      7880
    ],
    "mapped",
    [
      7881
    ]
  ],
  [
    [
      7881,
      7881
    ],
    "valid"
  ],
  [
    [
      7882,
      7882
    ],
    "mapped",
    [
      7883
    ]
  ],
  [
    [
      7883,
      7883
    ],
    "valid"
  ],
  [
    [
      7884,
      7884
    ],
    "mapped",
    [
      7885
    ]
  ],
  [
    [
      7885,
      7885
    ],
    "valid"
  ],
  [
    [
      7886,
      7886
    ],
    "mapped",
    [
      7887
    ]
  ],
  [
    [
      7887,
      7887
    ],
    "valid"
  ],
  [
    [
      7888,
      7888
    ],
    "mapped",
    [
      7889
    ]
  ],
  [
    [
      7889,
      7889
    ],
    "valid"
  ],
  [
    [
      7890,
      7890
    ],
    "mapped",
    [
      7891
    ]
  ],
  [
    [
      7891,
      7891
    ],
    "valid"
  ],
  [
    [
      7892,
      7892
    ],
    "mapped",
    [
      7893
    ]
  ],
  [
    [
      7893,
      7893
    ],
    "valid"
  ],
  [
    [
      7894,
      7894
    ],
    "mapped",
    [
      7895
    ]
  ],
  [
    [
      7895,
      7895
    ],
    "valid"
  ],
  [
    [
      7896,
      7896
    ],
    "mapped",
    [
      7897
    ]
  ],
  [
    [
      7897,
      7897
    ],
    "valid"
  ],
  [
    [
      7898,
      7898
    ],
    "mapped",
    [
      7899
    ]
  ],
  [
    [
      7899,
      7899
    ],
    "valid"
  ],
  [
    [
      7900,
      7900
    ],
    "mapped",
    [
      7901
    ]
  ],
  [
    [
      7901,
      7901
    ],
    "valid"
  ],
  [
    [
      7902,
      7902
    ],
    "mapped",
    [
      7903
    ]
  ],
  [
    [
      7903,
      7903
    ],
    "valid"
  ],
  [
    [
      7904,
      7904
    ],
    "mapped",
    [
      7905
    ]
  ],
  [
    [
      7905,
      7905
    ],
    "valid"
  ],
  [
    [
      7906,
      7906
    ],
    "mapped",
    [
      7907
    ]
  ],
  [
    [
      7907,
      7907
    ],
    "valid"
  ],
  [
    [
      7908,
      7908
    ],
    "mapped",
    [
      7909
    ]
  ],
  [
    [
      7909,
      7909
    ],
    "valid"
  ],
  [
    [
      7910,
      7910
    ],
    "mapped",
    [
      7911
    ]
  ],
  [
    [
      7911,
      7911
    ],
    "valid"
  ],
  [
    [
      7912,
      7912
    ],
    "mapped",
    [
      7913
    ]
  ],
  [
    [
      7913,
      7913
    ],
    "valid"
  ],
  [
    [
      7914,
      7914
    ],
    "mapped",
    [
      7915
    ]
  ],
  [
    [
      7915,
      7915
    ],
    "valid"
  ],
  [
    [
      7916,
      7916
    ],
    "mapped",
    [
      7917
    ]
  ],
  [
    [
      7917,
      7917
    ],
    "valid"
  ],
  [
    [
      7918,
      7918
    ],
    "mapped",
    [
      7919
    ]
  ],
  [
    [
      7919,
      7919
    ],
    "valid"
  ],
  [
    [
      7920,
      7920
    ],
    "mapped",
    [
      7921
    ]
  ],
  [
    [
      7921,
      7921
    ],
    "valid"
  ],
  [
    [
      7922,
      7922
    ],
    "mapped",
    [
      7923
    ]
  ],
  [
    [
      7923,
      7923
    ],
    "valid"
  ],
  [
    [
      7924,
      7924
    ],
    "mapped",
    [
      7925
    ]
  ],
  [
    [
      7925,
      7925
    ],
    "valid"
  ],
  [
    [
      7926,
      7926
    ],
    "mapped",
    [
      7927
    ]
  ],
  [
    [
      7927,
      7927
    ],
    "valid"
  ],
  [
    [
      7928,
      7928
    ],
    "mapped",
    [
      7929
    ]
  ],
  [
    [
      7929,
      7929
    ],
    "valid"
  ],
  [
    [
      7930,
      7930
    ],
    "mapped",
    [
      7931
    ]
  ],
  [
    [
      7931,
      7931
    ],
    "valid"
  ],
  [
    [
      7932,
      7932
    ],
    "mapped",
    [
      7933
    ]
  ],
  [
    [
      7933,
      7933
    ],
    "valid"
  ],
  [
    [
      7934,
      7934
    ],
    "mapped",
    [
      7935
    ]
  ],
  [
    [
      7935,
      7935
    ],
    "valid"
  ],
  [
    [
      7936,
      7943
    ],
    "valid"
  ],
  [
    [
      7944,
      7944
    ],
    "mapped",
    [
      7936
    ]
  ],
  [
    [
      7945,
      7945
    ],
    "mapped",
    [
      7937
    ]
  ],
  [
    [
      7946,
      7946
    ],
    "mapped",
    [
      7938
    ]
  ],
  [
    [
      7947,
      7947
    ],
    "mapped",
    [
      7939
    ]
  ],
  [
    [
      7948,
      7948
    ],
    "mapped",
    [
      7940
    ]
  ],
  [
    [
      7949,
      7949
    ],
    "mapped",
    [
      7941
    ]
  ],
  [
    [
      7950,
      7950
    ],
    "mapped",
    [
      7942
    ]
  ],
  [
    [
      7951,
      7951
    ],
    "mapped",
    [
      7943
    ]
  ],
  [
    [
      7952,
      7957
    ],
    "valid"
  ],
  [
    [
      7958,
      7959
    ],
    "disallowed"
  ],
  [
    [
      7960,
      7960
    ],
    "mapped",
    [
      7952
    ]
  ],
  [
    [
      7961,
      7961
    ],
    "mapped",
    [
      7953
    ]
  ],
  [
    [
      7962,
      7962
    ],
    "mapped",
    [
      7954
    ]
  ],
  [
    [
      7963,
      7963
    ],
    "mapped",
    [
      7955
    ]
  ],
  [
    [
      7964,
      7964
    ],
    "mapped",
    [
      7956
    ]
  ],
  [
    [
      7965,
      7965
    ],
    "mapped",
    [
      7957
    ]
  ],
  [
    [
      7966,
      7967
    ],
    "disallowed"
  ],
  [
    [
      7968,
      7975
    ],
    "valid"
  ],
  [
    [
      7976,
      7976
    ],
    "mapped",
    [
      7968
    ]
  ],
  [
    [
      7977,
      7977
    ],
    "mapped",
    [
      7969
    ]
  ],
  [
    [
      7978,
      7978
    ],
    "mapped",
    [
      7970
    ]
  ],
  [
    [
      7979,
      7979
    ],
    "mapped",
    [
      7971
    ]
  ],
  [
    [
      7980,
      7980
    ],
    "mapped",
    [
      7972
    ]
  ],
  [
    [
      7981,
      7981
    ],
    "mapped",
    [
      7973
    ]
  ],
  [
    [
      7982,
      7982
    ],
    "mapped",
    [
      7974
    ]
  ],
  [
    [
      7983,
      7983
    ],
    "mapped",
    [
      7975
    ]
  ],
  [
    [
      7984,
      7991
    ],
    "valid"
  ],
  [
    [
      7992,
      7992
    ],
    "mapped",
    [
      7984
    ]
  ],
  [
    [
      7993,
      7993
    ],
    "mapped",
    [
      7985
    ]
  ],
  [
    [
      7994,
      7994
    ],
    "mapped",
    [
      7986
    ]
  ],
  [
    [
      7995,
      7995
    ],
    "mapped",
    [
      7987
    ]
  ],
  [
    [
      7996,
      7996
    ],
    "mapped",
    [
      7988
    ]
  ],
  [
    [
      7997,
      7997
    ],
    "mapped",
    [
      7989
    ]
  ],
  [
    [
      7998,
      7998
    ],
    "mapped",
    [
      7990
    ]
  ],
  [
    [
      7999,
      7999
    ],
    "mapped",
    [
      7991
    ]
  ],
  [
    [
      8e3,
      8005
    ],
    "valid"
  ],
  [
    [
      8006,
      8007
    ],
    "disallowed"
  ],
  [
    [
      8008,
      8008
    ],
    "mapped",
    [
      8e3
    ]
  ],
  [
    [
      8009,
      8009
    ],
    "mapped",
    [
      8001
    ]
  ],
  [
    [
      8010,
      8010
    ],
    "mapped",
    [
      8002
    ]
  ],
  [
    [
      8011,
      8011
    ],
    "mapped",
    [
      8003
    ]
  ],
  [
    [
      8012,
      8012
    ],
    "mapped",
    [
      8004
    ]
  ],
  [
    [
      8013,
      8013
    ],
    "mapped",
    [
      8005
    ]
  ],
  [
    [
      8014,
      8015
    ],
    "disallowed"
  ],
  [
    [
      8016,
      8023
    ],
    "valid"
  ],
  [
    [
      8024,
      8024
    ],
    "disallowed"
  ],
  [
    [
      8025,
      8025
    ],
    "mapped",
    [
      8017
    ]
  ],
  [
    [
      8026,
      8026
    ],
    "disallowed"
  ],
  [
    [
      8027,
      8027
    ],
    "mapped",
    [
      8019
    ]
  ],
  [
    [
      8028,
      8028
    ],
    "disallowed"
  ],
  [
    [
      8029,
      8029
    ],
    "mapped",
    [
      8021
    ]
  ],
  [
    [
      8030,
      8030
    ],
    "disallowed"
  ],
  [
    [
      8031,
      8031
    ],
    "mapped",
    [
      8023
    ]
  ],
  [
    [
      8032,
      8039
    ],
    "valid"
  ],
  [
    [
      8040,
      8040
    ],
    "mapped",
    [
      8032
    ]
  ],
  [
    [
      8041,
      8041
    ],
    "mapped",
    [
      8033
    ]
  ],
  [
    [
      8042,
      8042
    ],
    "mapped",
    [
      8034
    ]
  ],
  [
    [
      8043,
      8043
    ],
    "mapped",
    [
      8035
    ]
  ],
  [
    [
      8044,
      8044
    ],
    "mapped",
    [
      8036
    ]
  ],
  [
    [
      8045,
      8045
    ],
    "mapped",
    [
      8037
    ]
  ],
  [
    [
      8046,
      8046
    ],
    "mapped",
    [
      8038
    ]
  ],
  [
    [
      8047,
      8047
    ],
    "mapped",
    [
      8039
    ]
  ],
  [
    [
      8048,
      8048
    ],
    "valid"
  ],
  [
    [
      8049,
      8049
    ],
    "mapped",
    [
      940
    ]
  ],
  [
    [
      8050,
      8050
    ],
    "valid"
  ],
  [
    [
      8051,
      8051
    ],
    "mapped",
    [
      941
    ]
  ],
  [
    [
      8052,
      8052
    ],
    "valid"
  ],
  [
    [
      8053,
      8053
    ],
    "mapped",
    [
      942
    ]
  ],
  [
    [
      8054,
      8054
    ],
    "valid"
  ],
  [
    [
      8055,
      8055
    ],
    "mapped",
    [
      943
    ]
  ],
  [
    [
      8056,
      8056
    ],
    "valid"
  ],
  [
    [
      8057,
      8057
    ],
    "mapped",
    [
      972
    ]
  ],
  [
    [
      8058,
      8058
    ],
    "valid"
  ],
  [
    [
      8059,
      8059
    ],
    "mapped",
    [
      973
    ]
  ],
  [
    [
      8060,
      8060
    ],
    "valid"
  ],
  [
    [
      8061,
      8061
    ],
    "mapped",
    [
      974
    ]
  ],
  [
    [
      8062,
      8063
    ],
    "disallowed"
  ],
  [
    [
      8064,
      8064
    ],
    "mapped",
    [
      7936,
      953
    ]
  ],
  [
    [
      8065,
      8065
    ],
    "mapped",
    [
      7937,
      953
    ]
  ],
  [
    [
      8066,
      8066
    ],
    "mapped",
    [
      7938,
      953
    ]
  ],
  [
    [
      8067,
      8067
    ],
    "mapped",
    [
      7939,
      953
    ]
  ],
  [
    [
      8068,
      8068
    ],
    "mapped",
    [
      7940,
      953
    ]
  ],
  [
    [
      8069,
      8069
    ],
    "mapped",
    [
      7941,
      953
    ]
  ],
  [
    [
      8070,
      8070
    ],
    "mapped",
    [
      7942,
      953
    ]
  ],
  [
    [
      8071,
      8071
    ],
    "mapped",
    [
      7943,
      953
    ]
  ],
  [
    [
      8072,
      8072
    ],
    "mapped",
    [
      7936,
      953
    ]
  ],
  [
    [
      8073,
      8073
    ],
    "mapped",
    [
      7937,
      953
    ]
  ],
  [
    [
      8074,
      8074
    ],
    "mapped",
    [
      7938,
      953
    ]
  ],
  [
    [
      8075,
      8075
    ],
    "mapped",
    [
      7939,
      953
    ]
  ],
  [
    [
      8076,
      8076
    ],
    "mapped",
    [
      7940,
      953
    ]
  ],
  [
    [
      8077,
      8077
    ],
    "mapped",
    [
      7941,
      953
    ]
  ],
  [
    [
      8078,
      8078
    ],
    "mapped",
    [
      7942,
      953
    ]
  ],
  [
    [
      8079,
      8079
    ],
    "mapped",
    [
      7943,
      953
    ]
  ],
  [
    [
      8080,
      8080
    ],
    "mapped",
    [
      7968,
      953
    ]
  ],
  [
    [
      8081,
      8081
    ],
    "mapped",
    [
      7969,
      953
    ]
  ],
  [
    [
      8082,
      8082
    ],
    "mapped",
    [
      7970,
      953
    ]
  ],
  [
    [
      8083,
      8083
    ],
    "mapped",
    [
      7971,
      953
    ]
  ],
  [
    [
      8084,
      8084
    ],
    "mapped",
    [
      7972,
      953
    ]
  ],
  [
    [
      8085,
      8085
    ],
    "mapped",
    [
      7973,
      953
    ]
  ],
  [
    [
      8086,
      8086
    ],
    "mapped",
    [
      7974,
      953
    ]
  ],
  [
    [
      8087,
      8087
    ],
    "mapped",
    [
      7975,
      953
    ]
  ],
  [
    [
      8088,
      8088
    ],
    "mapped",
    [
      7968,
      953
    ]
  ],
  [
    [
      8089,
      8089
    ],
    "mapped",
    [
      7969,
      953
    ]
  ],
  [
    [
      8090,
      8090
    ],
    "mapped",
    [
      7970,
      953
    ]
  ],
  [
    [
      8091,
      8091
    ],
    "mapped",
    [
      7971,
      953
    ]
  ],
  [
    [
      8092,
      8092
    ],
    "mapped",
    [
      7972,
      953
    ]
  ],
  [
    [
      8093,
      8093
    ],
    "mapped",
    [
      7973,
      953
    ]
  ],
  [
    [
      8094,
      8094
    ],
    "mapped",
    [
      7974,
      953
    ]
  ],
  [
    [
      8095,
      8095
    ],
    "mapped",
    [
      7975,
      953
    ]
  ],
  [
    [
      8096,
      8096
    ],
    "mapped",
    [
      8032,
      953
    ]
  ],
  [
    [
      8097,
      8097
    ],
    "mapped",
    [
      8033,
      953
    ]
  ],
  [
    [
      8098,
      8098
    ],
    "mapped",
    [
      8034,
      953
    ]
  ],
  [
    [
      8099,
      8099
    ],
    "mapped",
    [
      8035,
      953
    ]
  ],
  [
    [
      8100,
      8100
    ],
    "mapped",
    [
      8036,
      953
    ]
  ],
  [
    [
      8101,
      8101
    ],
    "mapped",
    [
      8037,
      953
    ]
  ],
  [
    [
      8102,
      8102
    ],
    "mapped",
    [
      8038,
      953
    ]
  ],
  [
    [
      8103,
      8103
    ],
    "mapped",
    [
      8039,
      953
    ]
  ],
  [
    [
      8104,
      8104
    ],
    "mapped",
    [
      8032,
      953
    ]
  ],
  [
    [
      8105,
      8105
    ],
    "mapped",
    [
      8033,
      953
    ]
  ],
  [
    [
      8106,
      8106
    ],
    "mapped",
    [
      8034,
      953
    ]
  ],
  [
    [
      8107,
      8107
    ],
    "mapped",
    [
      8035,
      953
    ]
  ],
  [
    [
      8108,
      8108
    ],
    "mapped",
    [
      8036,
      953
    ]
  ],
  [
    [
      8109,
      8109
    ],
    "mapped",
    [
      8037,
      953
    ]
  ],
  [
    [
      8110,
      8110
    ],
    "mapped",
    [
      8038,
      953
    ]
  ],
  [
    [
      8111,
      8111
    ],
    "mapped",
    [
      8039,
      953
    ]
  ],
  [
    [
      8112,
      8113
    ],
    "valid"
  ],
  [
    [
      8114,
      8114
    ],
    "mapped",
    [
      8048,
      953
    ]
  ],
  [
    [
      8115,
      8115
    ],
    "mapped",
    [
      945,
      953
    ]
  ],
  [
    [
      8116,
      8116
    ],
    "mapped",
    [
      940,
      953
    ]
  ],
  [
    [
      8117,
      8117
    ],
    "disallowed"
  ],
  [
    [
      8118,
      8118
    ],
    "valid"
  ],
  [
    [
      8119,
      8119
    ],
    "mapped",
    [
      8118,
      953
    ]
  ],
  [
    [
      8120,
      8120
    ],
    "mapped",
    [
      8112
    ]
  ],
  [
    [
      8121,
      8121
    ],
    "mapped",
    [
      8113
    ]
  ],
  [
    [
      8122,
      8122
    ],
    "mapped",
    [
      8048
    ]
  ],
  [
    [
      8123,
      8123
    ],
    "mapped",
    [
      940
    ]
  ],
  [
    [
      8124,
      8124
    ],
    "mapped",
    [
      945,
      953
    ]
  ],
  [
    [
      8125,
      8125
    ],
    "disallowed_STD3_mapped",
    [
      32,
      787
    ]
  ],
  [
    [
      8126,
      8126
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      8127,
      8127
    ],
    "disallowed_STD3_mapped",
    [
      32,
      787
    ]
  ],
  [
    [
      8128,
      8128
    ],
    "disallowed_STD3_mapped",
    [
      32,
      834
    ]
  ],
  [
    [
      8129,
      8129
    ],
    "disallowed_STD3_mapped",
    [
      32,
      776,
      834
    ]
  ],
  [
    [
      8130,
      8130
    ],
    "mapped",
    [
      8052,
      953
    ]
  ],
  [
    [
      8131,
      8131
    ],
    "mapped",
    [
      951,
      953
    ]
  ],
  [
    [
      8132,
      8132
    ],
    "mapped",
    [
      942,
      953
    ]
  ],
  [
    [
      8133,
      8133
    ],
    "disallowed"
  ],
  [
    [
      8134,
      8134
    ],
    "valid"
  ],
  [
    [
      8135,
      8135
    ],
    "mapped",
    [
      8134,
      953
    ]
  ],
  [
    [
      8136,
      8136
    ],
    "mapped",
    [
      8050
    ]
  ],
  [
    [
      8137,
      8137
    ],
    "mapped",
    [
      941
    ]
  ],
  [
    [
      8138,
      8138
    ],
    "mapped",
    [
      8052
    ]
  ],
  [
    [
      8139,
      8139
    ],
    "mapped",
    [
      942
    ]
  ],
  [
    [
      8140,
      8140
    ],
    "mapped",
    [
      951,
      953
    ]
  ],
  [
    [
      8141,
      8141
    ],
    "disallowed_STD3_mapped",
    [
      32,
      787,
      768
    ]
  ],
  [
    [
      8142,
      8142
    ],
    "disallowed_STD3_mapped",
    [
      32,
      787,
      769
    ]
  ],
  [
    [
      8143,
      8143
    ],
    "disallowed_STD3_mapped",
    [
      32,
      787,
      834
    ]
  ],
  [
    [
      8144,
      8146
    ],
    "valid"
  ],
  [
    [
      8147,
      8147
    ],
    "mapped",
    [
      912
    ]
  ],
  [
    [
      8148,
      8149
    ],
    "disallowed"
  ],
  [
    [
      8150,
      8151
    ],
    "valid"
  ],
  [
    [
      8152,
      8152
    ],
    "mapped",
    [
      8144
    ]
  ],
  [
    [
      8153,
      8153
    ],
    "mapped",
    [
      8145
    ]
  ],
  [
    [
      8154,
      8154
    ],
    "mapped",
    [
      8054
    ]
  ],
  [
    [
      8155,
      8155
    ],
    "mapped",
    [
      943
    ]
  ],
  [
    [
      8156,
      8156
    ],
    "disallowed"
  ],
  [
    [
      8157,
      8157
    ],
    "disallowed_STD3_mapped",
    [
      32,
      788,
      768
    ]
  ],
  [
    [
      8158,
      8158
    ],
    "disallowed_STD3_mapped",
    [
      32,
      788,
      769
    ]
  ],
  [
    [
      8159,
      8159
    ],
    "disallowed_STD3_mapped",
    [
      32,
      788,
      834
    ]
  ],
  [
    [
      8160,
      8162
    ],
    "valid"
  ],
  [
    [
      8163,
      8163
    ],
    "mapped",
    [
      944
    ]
  ],
  [
    [
      8164,
      8167
    ],
    "valid"
  ],
  [
    [
      8168,
      8168
    ],
    "mapped",
    [
      8160
    ]
  ],
  [
    [
      8169,
      8169
    ],
    "mapped",
    [
      8161
    ]
  ],
  [
    [
      8170,
      8170
    ],
    "mapped",
    [
      8058
    ]
  ],
  [
    [
      8171,
      8171
    ],
    "mapped",
    [
      973
    ]
  ],
  [
    [
      8172,
      8172
    ],
    "mapped",
    [
      8165
    ]
  ],
  [
    [
      8173,
      8173
    ],
    "disallowed_STD3_mapped",
    [
      32,
      776,
      768
    ]
  ],
  [
    [
      8174,
      8174
    ],
    "disallowed_STD3_mapped",
    [
      32,
      776,
      769
    ]
  ],
  [
    [
      8175,
      8175
    ],
    "disallowed_STD3_mapped",
    [
      96
    ]
  ],
  [
    [
      8176,
      8177
    ],
    "disallowed"
  ],
  [
    [
      8178,
      8178
    ],
    "mapped",
    [
      8060,
      953
    ]
  ],
  [
    [
      8179,
      8179
    ],
    "mapped",
    [
      969,
      953
    ]
  ],
  [
    [
      8180,
      8180
    ],
    "mapped",
    [
      974,
      953
    ]
  ],
  [
    [
      8181,
      8181
    ],
    "disallowed"
  ],
  [
    [
      8182,
      8182
    ],
    "valid"
  ],
  [
    [
      8183,
      8183
    ],
    "mapped",
    [
      8182,
      953
    ]
  ],
  [
    [
      8184,
      8184
    ],
    "mapped",
    [
      8056
    ]
  ],
  [
    [
      8185,
      8185
    ],
    "mapped",
    [
      972
    ]
  ],
  [
    [
      8186,
      8186
    ],
    "mapped",
    [
      8060
    ]
  ],
  [
    [
      8187,
      8187
    ],
    "mapped",
    [
      974
    ]
  ],
  [
    [
      8188,
      8188
    ],
    "mapped",
    [
      969,
      953
    ]
  ],
  [
    [
      8189,
      8189
    ],
    "disallowed_STD3_mapped",
    [
      32,
      769
    ]
  ],
  [
    [
      8190,
      8190
    ],
    "disallowed_STD3_mapped",
    [
      32,
      788
    ]
  ],
  [
    [
      8191,
      8191
    ],
    "disallowed"
  ],
  [
    [
      8192,
      8202
    ],
    "disallowed_STD3_mapped",
    [
      32
    ]
  ],
  [
    [
      8203,
      8203
    ],
    "ignored"
  ],
  [
    [
      8204,
      8205
    ],
    "deviation",
    []
  ],
  [
    [
      8206,
      8207
    ],
    "disallowed"
  ],
  [
    [
      8208,
      8208
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8209,
      8209
    ],
    "mapped",
    [
      8208
    ]
  ],
  [
    [
      8210,
      8214
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8215,
      8215
    ],
    "disallowed_STD3_mapped",
    [
      32,
      819
    ]
  ],
  [
    [
      8216,
      8227
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8228,
      8230
    ],
    "disallowed"
  ],
  [
    [
      8231,
      8231
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8232,
      8238
    ],
    "disallowed"
  ],
  [
    [
      8239,
      8239
    ],
    "disallowed_STD3_mapped",
    [
      32
    ]
  ],
  [
    [
      8240,
      8242
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8243,
      8243
    ],
    "mapped",
    [
      8242,
      8242
    ]
  ],
  [
    [
      8244,
      8244
    ],
    "mapped",
    [
      8242,
      8242,
      8242
    ]
  ],
  [
    [
      8245,
      8245
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8246,
      8246
    ],
    "mapped",
    [
      8245,
      8245
    ]
  ],
  [
    [
      8247,
      8247
    ],
    "mapped",
    [
      8245,
      8245,
      8245
    ]
  ],
  [
    [
      8248,
      8251
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8252,
      8252
    ],
    "disallowed_STD3_mapped",
    [
      33,
      33
    ]
  ],
  [
    [
      8253,
      8253
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8254,
      8254
    ],
    "disallowed_STD3_mapped",
    [
      32,
      773
    ]
  ],
  [
    [
      8255,
      8262
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8263,
      8263
    ],
    "disallowed_STD3_mapped",
    [
      63,
      63
    ]
  ],
  [
    [
      8264,
      8264
    ],
    "disallowed_STD3_mapped",
    [
      63,
      33
    ]
  ],
  [
    [
      8265,
      8265
    ],
    "disallowed_STD3_mapped",
    [
      33,
      63
    ]
  ],
  [
    [
      8266,
      8269
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8270,
      8274
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8275,
      8276
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8277,
      8278
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8279,
      8279
    ],
    "mapped",
    [
      8242,
      8242,
      8242,
      8242
    ]
  ],
  [
    [
      8280,
      8286
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8287,
      8287
    ],
    "disallowed_STD3_mapped",
    [
      32
    ]
  ],
  [
    [
      8288,
      8288
    ],
    "ignored"
  ],
  [
    [
      8289,
      8291
    ],
    "disallowed"
  ],
  [
    [
      8292,
      8292
    ],
    "ignored"
  ],
  [
    [
      8293,
      8293
    ],
    "disallowed"
  ],
  [
    [
      8294,
      8297
    ],
    "disallowed"
  ],
  [
    [
      8298,
      8303
    ],
    "disallowed"
  ],
  [
    [
      8304,
      8304
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      8305,
      8305
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      8306,
      8307
    ],
    "disallowed"
  ],
  [
    [
      8308,
      8308
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      8309,
      8309
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      8310,
      8310
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      8311,
      8311
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      8312,
      8312
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      8313,
      8313
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      8314,
      8314
    ],
    "disallowed_STD3_mapped",
    [
      43
    ]
  ],
  [
    [
      8315,
      8315
    ],
    "mapped",
    [
      8722
    ]
  ],
  [
    [
      8316,
      8316
    ],
    "disallowed_STD3_mapped",
    [
      61
    ]
  ],
  [
    [
      8317,
      8317
    ],
    "disallowed_STD3_mapped",
    [
      40
    ]
  ],
  [
    [
      8318,
      8318
    ],
    "disallowed_STD3_mapped",
    [
      41
    ]
  ],
  [
    [
      8319,
      8319
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      8320,
      8320
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      8321,
      8321
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      8322,
      8322
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      8323,
      8323
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      8324,
      8324
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      8325,
      8325
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      8326,
      8326
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      8327,
      8327
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      8328,
      8328
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      8329,
      8329
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      8330,
      8330
    ],
    "disallowed_STD3_mapped",
    [
      43
    ]
  ],
  [
    [
      8331,
      8331
    ],
    "mapped",
    [
      8722
    ]
  ],
  [
    [
      8332,
      8332
    ],
    "disallowed_STD3_mapped",
    [
      61
    ]
  ],
  [
    [
      8333,
      8333
    ],
    "disallowed_STD3_mapped",
    [
      40
    ]
  ],
  [
    [
      8334,
      8334
    ],
    "disallowed_STD3_mapped",
    [
      41
    ]
  ],
  [
    [
      8335,
      8335
    ],
    "disallowed"
  ],
  [
    [
      8336,
      8336
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      8337,
      8337
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      8338,
      8338
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      8339,
      8339
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      8340,
      8340
    ],
    "mapped",
    [
      601
    ]
  ],
  [
    [
      8341,
      8341
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      8342,
      8342
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      8343,
      8343
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      8344,
      8344
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      8345,
      8345
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      8346,
      8346
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      8347,
      8347
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      8348,
      8348
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      8349,
      8351
    ],
    "disallowed"
  ],
  [
    [
      8352,
      8359
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8360,
      8360
    ],
    "mapped",
    [
      114,
      115
    ]
  ],
  [
    [
      8361,
      8362
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8363,
      8363
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8364,
      8364
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8365,
      8367
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8368,
      8369
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8370,
      8373
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8374,
      8376
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8377,
      8377
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8378,
      8378
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8379,
      8381
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8382,
      8382
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8383,
      8399
    ],
    "disallowed"
  ],
  [
    [
      8400,
      8417
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8418,
      8419
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8420,
      8426
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8427,
      8427
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8428,
      8431
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8432,
      8432
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8433,
      8447
    ],
    "disallowed"
  ],
  [
    [
      8448,
      8448
    ],
    "disallowed_STD3_mapped",
    [
      97,
      47,
      99
    ]
  ],
  [
    [
      8449,
      8449
    ],
    "disallowed_STD3_mapped",
    [
      97,
      47,
      115
    ]
  ],
  [
    [
      8450,
      8450
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      8451,
      8451
    ],
    "mapped",
    [
      176,
      99
    ]
  ],
  [
    [
      8452,
      8452
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8453,
      8453
    ],
    "disallowed_STD3_mapped",
    [
      99,
      47,
      111
    ]
  ],
  [
    [
      8454,
      8454
    ],
    "disallowed_STD3_mapped",
    [
      99,
      47,
      117
    ]
  ],
  [
    [
      8455,
      8455
    ],
    "mapped",
    [
      603
    ]
  ],
  [
    [
      8456,
      8456
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8457,
      8457
    ],
    "mapped",
    [
      176,
      102
    ]
  ],
  [
    [
      8458,
      8458
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      8459,
      8462
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      8463,
      8463
    ],
    "mapped",
    [
      295
    ]
  ],
  [
    [
      8464,
      8465
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      8466,
      8467
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      8468,
      8468
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8469,
      8469
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      8470,
      8470
    ],
    "mapped",
    [
      110,
      111
    ]
  ],
  [
    [
      8471,
      8472
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8473,
      8473
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      8474,
      8474
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      8475,
      8477
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      8478,
      8479
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8480,
      8480
    ],
    "mapped",
    [
      115,
      109
    ]
  ],
  [
    [
      8481,
      8481
    ],
    "mapped",
    [
      116,
      101,
      108
    ]
  ],
  [
    [
      8482,
      8482
    ],
    "mapped",
    [
      116,
      109
    ]
  ],
  [
    [
      8483,
      8483
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8484,
      8484
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      8485,
      8485
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8486,
      8486
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      8487,
      8487
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8488,
      8488
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      8489,
      8489
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8490,
      8490
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      8491,
      8491
    ],
    "mapped",
    [
      229
    ]
  ],
  [
    [
      8492,
      8492
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      8493,
      8493
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      8494,
      8494
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8495,
      8496
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      8497,
      8497
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      8498,
      8498
    ],
    "disallowed"
  ],
  [
    [
      8499,
      8499
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      8500,
      8500
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      8501,
      8501
    ],
    "mapped",
    [
      1488
    ]
  ],
  [
    [
      8502,
      8502
    ],
    "mapped",
    [
      1489
    ]
  ],
  [
    [
      8503,
      8503
    ],
    "mapped",
    [
      1490
    ]
  ],
  [
    [
      8504,
      8504
    ],
    "mapped",
    [
      1491
    ]
  ],
  [
    [
      8505,
      8505
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      8506,
      8506
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8507,
      8507
    ],
    "mapped",
    [
      102,
      97,
      120
    ]
  ],
  [
    [
      8508,
      8508
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      8509,
      8510
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      8511,
      8511
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      8512,
      8512
    ],
    "mapped",
    [
      8721
    ]
  ],
  [
    [
      8513,
      8516
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8517,
      8518
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      8519,
      8519
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      8520,
      8520
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      8521,
      8521
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      8522,
      8523
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8524,
      8524
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8525,
      8525
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8526,
      8526
    ],
    "valid"
  ],
  [
    [
      8527,
      8527
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8528,
      8528
    ],
    "mapped",
    [
      49,
      8260,
      55
    ]
  ],
  [
    [
      8529,
      8529
    ],
    "mapped",
    [
      49,
      8260,
      57
    ]
  ],
  [
    [
      8530,
      8530
    ],
    "mapped",
    [
      49,
      8260,
      49,
      48
    ]
  ],
  [
    [
      8531,
      8531
    ],
    "mapped",
    [
      49,
      8260,
      51
    ]
  ],
  [
    [
      8532,
      8532
    ],
    "mapped",
    [
      50,
      8260,
      51
    ]
  ],
  [
    [
      8533,
      8533
    ],
    "mapped",
    [
      49,
      8260,
      53
    ]
  ],
  [
    [
      8534,
      8534
    ],
    "mapped",
    [
      50,
      8260,
      53
    ]
  ],
  [
    [
      8535,
      8535
    ],
    "mapped",
    [
      51,
      8260,
      53
    ]
  ],
  [
    [
      8536,
      8536
    ],
    "mapped",
    [
      52,
      8260,
      53
    ]
  ],
  [
    [
      8537,
      8537
    ],
    "mapped",
    [
      49,
      8260,
      54
    ]
  ],
  [
    [
      8538,
      8538
    ],
    "mapped",
    [
      53,
      8260,
      54
    ]
  ],
  [
    [
      8539,
      8539
    ],
    "mapped",
    [
      49,
      8260,
      56
    ]
  ],
  [
    [
      8540,
      8540
    ],
    "mapped",
    [
      51,
      8260,
      56
    ]
  ],
  [
    [
      8541,
      8541
    ],
    "mapped",
    [
      53,
      8260,
      56
    ]
  ],
  [
    [
      8542,
      8542
    ],
    "mapped",
    [
      55,
      8260,
      56
    ]
  ],
  [
    [
      8543,
      8543
    ],
    "mapped",
    [
      49,
      8260
    ]
  ],
  [
    [
      8544,
      8544
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      8545,
      8545
    ],
    "mapped",
    [
      105,
      105
    ]
  ],
  [
    [
      8546,
      8546
    ],
    "mapped",
    [
      105,
      105,
      105
    ]
  ],
  [
    [
      8547,
      8547
    ],
    "mapped",
    [
      105,
      118
    ]
  ],
  [
    [
      8548,
      8548
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      8549,
      8549
    ],
    "mapped",
    [
      118,
      105
    ]
  ],
  [
    [
      8550,
      8550
    ],
    "mapped",
    [
      118,
      105,
      105
    ]
  ],
  [
    [
      8551,
      8551
    ],
    "mapped",
    [
      118,
      105,
      105,
      105
    ]
  ],
  [
    [
      8552,
      8552
    ],
    "mapped",
    [
      105,
      120
    ]
  ],
  [
    [
      8553,
      8553
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      8554,
      8554
    ],
    "mapped",
    [
      120,
      105
    ]
  ],
  [
    [
      8555,
      8555
    ],
    "mapped",
    [
      120,
      105,
      105
    ]
  ],
  [
    [
      8556,
      8556
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      8557,
      8557
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      8558,
      8558
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      8559,
      8559
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      8560,
      8560
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      8561,
      8561
    ],
    "mapped",
    [
      105,
      105
    ]
  ],
  [
    [
      8562,
      8562
    ],
    "mapped",
    [
      105,
      105,
      105
    ]
  ],
  [
    [
      8563,
      8563
    ],
    "mapped",
    [
      105,
      118
    ]
  ],
  [
    [
      8564,
      8564
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      8565,
      8565
    ],
    "mapped",
    [
      118,
      105
    ]
  ],
  [
    [
      8566,
      8566
    ],
    "mapped",
    [
      118,
      105,
      105
    ]
  ],
  [
    [
      8567,
      8567
    ],
    "mapped",
    [
      118,
      105,
      105,
      105
    ]
  ],
  [
    [
      8568,
      8568
    ],
    "mapped",
    [
      105,
      120
    ]
  ],
  [
    [
      8569,
      8569
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      8570,
      8570
    ],
    "mapped",
    [
      120,
      105
    ]
  ],
  [
    [
      8571,
      8571
    ],
    "mapped",
    [
      120,
      105,
      105
    ]
  ],
  [
    [
      8572,
      8572
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      8573,
      8573
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      8574,
      8574
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      8575,
      8575
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      8576,
      8578
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8579,
      8579
    ],
    "disallowed"
  ],
  [
    [
      8580,
      8580
    ],
    "valid"
  ],
  [
    [
      8581,
      8584
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8585,
      8585
    ],
    "mapped",
    [
      48,
      8260,
      51
    ]
  ],
  [
    [
      8586,
      8587
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8588,
      8591
    ],
    "disallowed"
  ],
  [
    [
      8592,
      8682
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8683,
      8691
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8692,
      8703
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8704,
      8747
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8748,
      8748
    ],
    "mapped",
    [
      8747,
      8747
    ]
  ],
  [
    [
      8749,
      8749
    ],
    "mapped",
    [
      8747,
      8747,
      8747
    ]
  ],
  [
    [
      8750,
      8750
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8751,
      8751
    ],
    "mapped",
    [
      8750,
      8750
    ]
  ],
  [
    [
      8752,
      8752
    ],
    "mapped",
    [
      8750,
      8750,
      8750
    ]
  ],
  [
    [
      8753,
      8799
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8800,
      8800
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      8801,
      8813
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8814,
      8815
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      8816,
      8945
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8946,
      8959
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8960,
      8960
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8961,
      8961
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8962,
      9e3
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9001,
      9001
    ],
    "mapped",
    [
      12296
    ]
  ],
  [
    [
      9002,
      9002
    ],
    "mapped",
    [
      12297
    ]
  ],
  [
    [
      9003,
      9082
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9083,
      9083
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9084,
      9084
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9085,
      9114
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9115,
      9166
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9167,
      9168
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9169,
      9179
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9180,
      9191
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9192,
      9192
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9193,
      9203
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9204,
      9210
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9211,
      9215
    ],
    "disallowed"
  ],
  [
    [
      9216,
      9252
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9253,
      9254
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9255,
      9279
    ],
    "disallowed"
  ],
  [
    [
      9280,
      9290
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9291,
      9311
    ],
    "disallowed"
  ],
  [
    [
      9312,
      9312
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      9313,
      9313
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      9314,
      9314
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      9315,
      9315
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      9316,
      9316
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      9317,
      9317
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      9318,
      9318
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      9319,
      9319
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      9320,
      9320
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      9321,
      9321
    ],
    "mapped",
    [
      49,
      48
    ]
  ],
  [
    [
      9322,
      9322
    ],
    "mapped",
    [
      49,
      49
    ]
  ],
  [
    [
      9323,
      9323
    ],
    "mapped",
    [
      49,
      50
    ]
  ],
  [
    [
      9324,
      9324
    ],
    "mapped",
    [
      49,
      51
    ]
  ],
  [
    [
      9325,
      9325
    ],
    "mapped",
    [
      49,
      52
    ]
  ],
  [
    [
      9326,
      9326
    ],
    "mapped",
    [
      49,
      53
    ]
  ],
  [
    [
      9327,
      9327
    ],
    "mapped",
    [
      49,
      54
    ]
  ],
  [
    [
      9328,
      9328
    ],
    "mapped",
    [
      49,
      55
    ]
  ],
  [
    [
      9329,
      9329
    ],
    "mapped",
    [
      49,
      56
    ]
  ],
  [
    [
      9330,
      9330
    ],
    "mapped",
    [
      49,
      57
    ]
  ],
  [
    [
      9331,
      9331
    ],
    "mapped",
    [
      50,
      48
    ]
  ],
  [
    [
      9332,
      9332
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      41
    ]
  ],
  [
    [
      9333,
      9333
    ],
    "disallowed_STD3_mapped",
    [
      40,
      50,
      41
    ]
  ],
  [
    [
      9334,
      9334
    ],
    "disallowed_STD3_mapped",
    [
      40,
      51,
      41
    ]
  ],
  [
    [
      9335,
      9335
    ],
    "disallowed_STD3_mapped",
    [
      40,
      52,
      41
    ]
  ],
  [
    [
      9336,
      9336
    ],
    "disallowed_STD3_mapped",
    [
      40,
      53,
      41
    ]
  ],
  [
    [
      9337,
      9337
    ],
    "disallowed_STD3_mapped",
    [
      40,
      54,
      41
    ]
  ],
  [
    [
      9338,
      9338
    ],
    "disallowed_STD3_mapped",
    [
      40,
      55,
      41
    ]
  ],
  [
    [
      9339,
      9339
    ],
    "disallowed_STD3_mapped",
    [
      40,
      56,
      41
    ]
  ],
  [
    [
      9340,
      9340
    ],
    "disallowed_STD3_mapped",
    [
      40,
      57,
      41
    ]
  ],
  [
    [
      9341,
      9341
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      48,
      41
    ]
  ],
  [
    [
      9342,
      9342
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      49,
      41
    ]
  ],
  [
    [
      9343,
      9343
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      50,
      41
    ]
  ],
  [
    [
      9344,
      9344
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      51,
      41
    ]
  ],
  [
    [
      9345,
      9345
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      52,
      41
    ]
  ],
  [
    [
      9346,
      9346
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      53,
      41
    ]
  ],
  [
    [
      9347,
      9347
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      54,
      41
    ]
  ],
  [
    [
      9348,
      9348
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      55,
      41
    ]
  ],
  [
    [
      9349,
      9349
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      56,
      41
    ]
  ],
  [
    [
      9350,
      9350
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      57,
      41
    ]
  ],
  [
    [
      9351,
      9351
    ],
    "disallowed_STD3_mapped",
    [
      40,
      50,
      48,
      41
    ]
  ],
  [
    [
      9352,
      9371
    ],
    "disallowed"
  ],
  [
    [
      9372,
      9372
    ],
    "disallowed_STD3_mapped",
    [
      40,
      97,
      41
    ]
  ],
  [
    [
      9373,
      9373
    ],
    "disallowed_STD3_mapped",
    [
      40,
      98,
      41
    ]
  ],
  [
    [
      9374,
      9374
    ],
    "disallowed_STD3_mapped",
    [
      40,
      99,
      41
    ]
  ],
  [
    [
      9375,
      9375
    ],
    "disallowed_STD3_mapped",
    [
      40,
      100,
      41
    ]
  ],
  [
    [
      9376,
      9376
    ],
    "disallowed_STD3_mapped",
    [
      40,
      101,
      41
    ]
  ],
  [
    [
      9377,
      9377
    ],
    "disallowed_STD3_mapped",
    [
      40,
      102,
      41
    ]
  ],
  [
    [
      9378,
      9378
    ],
    "disallowed_STD3_mapped",
    [
      40,
      103,
      41
    ]
  ],
  [
    [
      9379,
      9379
    ],
    "disallowed_STD3_mapped",
    [
      40,
      104,
      41
    ]
  ],
  [
    [
      9380,
      9380
    ],
    "disallowed_STD3_mapped",
    [
      40,
      105,
      41
    ]
  ],
  [
    [
      9381,
      9381
    ],
    "disallowed_STD3_mapped",
    [
      40,
      106,
      41
    ]
  ],
  [
    [
      9382,
      9382
    ],
    "disallowed_STD3_mapped",
    [
      40,
      107,
      41
    ]
  ],
  [
    [
      9383,
      9383
    ],
    "disallowed_STD3_mapped",
    [
      40,
      108,
      41
    ]
  ],
  [
    [
      9384,
      9384
    ],
    "disallowed_STD3_mapped",
    [
      40,
      109,
      41
    ]
  ],
  [
    [
      9385,
      9385
    ],
    "disallowed_STD3_mapped",
    [
      40,
      110,
      41
    ]
  ],
  [
    [
      9386,
      9386
    ],
    "disallowed_STD3_mapped",
    [
      40,
      111,
      41
    ]
  ],
  [
    [
      9387,
      9387
    ],
    "disallowed_STD3_mapped",
    [
      40,
      112,
      41
    ]
  ],
  [
    [
      9388,
      9388
    ],
    "disallowed_STD3_mapped",
    [
      40,
      113,
      41
    ]
  ],
  [
    [
      9389,
      9389
    ],
    "disallowed_STD3_mapped",
    [
      40,
      114,
      41
    ]
  ],
  [
    [
      9390,
      9390
    ],
    "disallowed_STD3_mapped",
    [
      40,
      115,
      41
    ]
  ],
  [
    [
      9391,
      9391
    ],
    "disallowed_STD3_mapped",
    [
      40,
      116,
      41
    ]
  ],
  [
    [
      9392,
      9392
    ],
    "disallowed_STD3_mapped",
    [
      40,
      117,
      41
    ]
  ],
  [
    [
      9393,
      9393
    ],
    "disallowed_STD3_mapped",
    [
      40,
      118,
      41
    ]
  ],
  [
    [
      9394,
      9394
    ],
    "disallowed_STD3_mapped",
    [
      40,
      119,
      41
    ]
  ],
  [
    [
      9395,
      9395
    ],
    "disallowed_STD3_mapped",
    [
      40,
      120,
      41
    ]
  ],
  [
    [
      9396,
      9396
    ],
    "disallowed_STD3_mapped",
    [
      40,
      121,
      41
    ]
  ],
  [
    [
      9397,
      9397
    ],
    "disallowed_STD3_mapped",
    [
      40,
      122,
      41
    ]
  ],
  [
    [
      9398,
      9398
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      9399,
      9399
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      9400,
      9400
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      9401,
      9401
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      9402,
      9402
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      9403,
      9403
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      9404,
      9404
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      9405,
      9405
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      9406,
      9406
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      9407,
      9407
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      9408,
      9408
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      9409,
      9409
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      9410,
      9410
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      9411,
      9411
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      9412,
      9412
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      9413,
      9413
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      9414,
      9414
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      9415,
      9415
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      9416,
      9416
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      9417,
      9417
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      9418,
      9418
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      9419,
      9419
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      9420,
      9420
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      9421,
      9421
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      9422,
      9422
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      9423,
      9423
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      9424,
      9424
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      9425,
      9425
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      9426,
      9426
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      9427,
      9427
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      9428,
      9428
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      9429,
      9429
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      9430,
      9430
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      9431,
      9431
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      9432,
      9432
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      9433,
      9433
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      9434,
      9434
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      9435,
      9435
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      9436,
      9436
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      9437,
      9437
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      9438,
      9438
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      9439,
      9439
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      9440,
      9440
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      9441,
      9441
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      9442,
      9442
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      9443,
      9443
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      9444,
      9444
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      9445,
      9445
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      9446,
      9446
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      9447,
      9447
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      9448,
      9448
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      9449,
      9449
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      9450,
      9450
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      9451,
      9470
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9471,
      9471
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9472,
      9621
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9622,
      9631
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9632,
      9711
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9712,
      9719
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9720,
      9727
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9728,
      9747
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9748,
      9749
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9750,
      9751
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9752,
      9752
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9753,
      9753
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9754,
      9839
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9840,
      9841
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9842,
      9853
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9854,
      9855
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9856,
      9865
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9866,
      9873
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9874,
      9884
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9885,
      9885
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9886,
      9887
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9888,
      9889
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9890,
      9905
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9906,
      9906
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9907,
      9916
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9917,
      9919
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9920,
      9923
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9924,
      9933
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9934,
      9934
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9935,
      9953
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9954,
      9954
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9955,
      9955
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9956,
      9959
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9960,
      9983
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9984,
      9984
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9985,
      9988
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9989,
      9989
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9990,
      9993
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9994,
      9995
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9996,
      10023
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10024,
      10024
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10025,
      10059
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10060,
      10060
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10061,
      10061
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10062,
      10062
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10063,
      10066
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10067,
      10069
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10070,
      10070
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10071,
      10071
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10072,
      10078
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10079,
      10080
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10081,
      10087
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10088,
      10101
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10102,
      10132
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10133,
      10135
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10136,
      10159
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10160,
      10160
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10161,
      10174
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10175,
      10175
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10176,
      10182
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10183,
      10186
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10187,
      10187
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10188,
      10188
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10189,
      10189
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10190,
      10191
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10192,
      10219
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10220,
      10223
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10224,
      10239
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10240,
      10495
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10496,
      10763
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10764,
      10764
    ],
    "mapped",
    [
      8747,
      8747,
      8747,
      8747
    ]
  ],
  [
    [
      10765,
      10867
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10868,
      10868
    ],
    "disallowed_STD3_mapped",
    [
      58,
      58,
      61
    ]
  ],
  [
    [
      10869,
      10869
    ],
    "disallowed_STD3_mapped",
    [
      61,
      61
    ]
  ],
  [
    [
      10870,
      10870
    ],
    "disallowed_STD3_mapped",
    [
      61,
      61,
      61
    ]
  ],
  [
    [
      10871,
      10971
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10972,
      10972
    ],
    "mapped",
    [
      10973,
      824
    ]
  ],
  [
    [
      10973,
      11007
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11008,
      11021
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11022,
      11027
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11028,
      11034
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11035,
      11039
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11040,
      11043
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11044,
      11084
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11085,
      11087
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11088,
      11092
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11093,
      11097
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11098,
      11123
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11124,
      11125
    ],
    "disallowed"
  ],
  [
    [
      11126,
      11157
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11158,
      11159
    ],
    "disallowed"
  ],
  [
    [
      11160,
      11193
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11194,
      11196
    ],
    "disallowed"
  ],
  [
    [
      11197,
      11208
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11209,
      11209
    ],
    "disallowed"
  ],
  [
    [
      11210,
      11217
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11218,
      11243
    ],
    "disallowed"
  ],
  [
    [
      11244,
      11247
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11248,
      11263
    ],
    "disallowed"
  ],
  [
    [
      11264,
      11264
    ],
    "mapped",
    [
      11312
    ]
  ],
  [
    [
      11265,
      11265
    ],
    "mapped",
    [
      11313
    ]
  ],
  [
    [
      11266,
      11266
    ],
    "mapped",
    [
      11314
    ]
  ],
  [
    [
      11267,
      11267
    ],
    "mapped",
    [
      11315
    ]
  ],
  [
    [
      11268,
      11268
    ],
    "mapped",
    [
      11316
    ]
  ],
  [
    [
      11269,
      11269
    ],
    "mapped",
    [
      11317
    ]
  ],
  [
    [
      11270,
      11270
    ],
    "mapped",
    [
      11318
    ]
  ],
  [
    [
      11271,
      11271
    ],
    "mapped",
    [
      11319
    ]
  ],
  [
    [
      11272,
      11272
    ],
    "mapped",
    [
      11320
    ]
  ],
  [
    [
      11273,
      11273
    ],
    "mapped",
    [
      11321
    ]
  ],
  [
    [
      11274,
      11274
    ],
    "mapped",
    [
      11322
    ]
  ],
  [
    [
      11275,
      11275
    ],
    "mapped",
    [
      11323
    ]
  ],
  [
    [
      11276,
      11276
    ],
    "mapped",
    [
      11324
    ]
  ],
  [
    [
      11277,
      11277
    ],
    "mapped",
    [
      11325
    ]
  ],
  [
    [
      11278,
      11278
    ],
    "mapped",
    [
      11326
    ]
  ],
  [
    [
      11279,
      11279
    ],
    "mapped",
    [
      11327
    ]
  ],
  [
    [
      11280,
      11280
    ],
    "mapped",
    [
      11328
    ]
  ],
  [
    [
      11281,
      11281
    ],
    "mapped",
    [
      11329
    ]
  ],
  [
    [
      11282,
      11282
    ],
    "mapped",
    [
      11330
    ]
  ],
  [
    [
      11283,
      11283
    ],
    "mapped",
    [
      11331
    ]
  ],
  [
    [
      11284,
      11284
    ],
    "mapped",
    [
      11332
    ]
  ],
  [
    [
      11285,
      11285
    ],
    "mapped",
    [
      11333
    ]
  ],
  [
    [
      11286,
      11286
    ],
    "mapped",
    [
      11334
    ]
  ],
  [
    [
      11287,
      11287
    ],
    "mapped",
    [
      11335
    ]
  ],
  [
    [
      11288,
      11288
    ],
    "mapped",
    [
      11336
    ]
  ],
  [
    [
      11289,
      11289
    ],
    "mapped",
    [
      11337
    ]
  ],
  [
    [
      11290,
      11290
    ],
    "mapped",
    [
      11338
    ]
  ],
  [
    [
      11291,
      11291
    ],
    "mapped",
    [
      11339
    ]
  ],
  [
    [
      11292,
      11292
    ],
    "mapped",
    [
      11340
    ]
  ],
  [
    [
      11293,
      11293
    ],
    "mapped",
    [
      11341
    ]
  ],
  [
    [
      11294,
      11294
    ],
    "mapped",
    [
      11342
    ]
  ],
  [
    [
      11295,
      11295
    ],
    "mapped",
    [
      11343
    ]
  ],
  [
    [
      11296,
      11296
    ],
    "mapped",
    [
      11344
    ]
  ],
  [
    [
      11297,
      11297
    ],
    "mapped",
    [
      11345
    ]
  ],
  [
    [
      11298,
      11298
    ],
    "mapped",
    [
      11346
    ]
  ],
  [
    [
      11299,
      11299
    ],
    "mapped",
    [
      11347
    ]
  ],
  [
    [
      11300,
      11300
    ],
    "mapped",
    [
      11348
    ]
  ],
  [
    [
      11301,
      11301
    ],
    "mapped",
    [
      11349
    ]
  ],
  [
    [
      11302,
      11302
    ],
    "mapped",
    [
      11350
    ]
  ],
  [
    [
      11303,
      11303
    ],
    "mapped",
    [
      11351
    ]
  ],
  [
    [
      11304,
      11304
    ],
    "mapped",
    [
      11352
    ]
  ],
  [
    [
      11305,
      11305
    ],
    "mapped",
    [
      11353
    ]
  ],
  [
    [
      11306,
      11306
    ],
    "mapped",
    [
      11354
    ]
  ],
  [
    [
      11307,
      11307
    ],
    "mapped",
    [
      11355
    ]
  ],
  [
    [
      11308,
      11308
    ],
    "mapped",
    [
      11356
    ]
  ],
  [
    [
      11309,
      11309
    ],
    "mapped",
    [
      11357
    ]
  ],
  [
    [
      11310,
      11310
    ],
    "mapped",
    [
      11358
    ]
  ],
  [
    [
      11311,
      11311
    ],
    "disallowed"
  ],
  [
    [
      11312,
      11358
    ],
    "valid"
  ],
  [
    [
      11359,
      11359
    ],
    "disallowed"
  ],
  [
    [
      11360,
      11360
    ],
    "mapped",
    [
      11361
    ]
  ],
  [
    [
      11361,
      11361
    ],
    "valid"
  ],
  [
    [
      11362,
      11362
    ],
    "mapped",
    [
      619
    ]
  ],
  [
    [
      11363,
      11363
    ],
    "mapped",
    [
      7549
    ]
  ],
  [
    [
      11364,
      11364
    ],
    "mapped",
    [
      637
    ]
  ],
  [
    [
      11365,
      11366
    ],
    "valid"
  ],
  [
    [
      11367,
      11367
    ],
    "mapped",
    [
      11368
    ]
  ],
  [
    [
      11368,
      11368
    ],
    "valid"
  ],
  [
    [
      11369,
      11369
    ],
    "mapped",
    [
      11370
    ]
  ],
  [
    [
      11370,
      11370
    ],
    "valid"
  ],
  [
    [
      11371,
      11371
    ],
    "mapped",
    [
      11372
    ]
  ],
  [
    [
      11372,
      11372
    ],
    "valid"
  ],
  [
    [
      11373,
      11373
    ],
    "mapped",
    [
      593
    ]
  ],
  [
    [
      11374,
      11374
    ],
    "mapped",
    [
      625
    ]
  ],
  [
    [
      11375,
      11375
    ],
    "mapped",
    [
      592
    ]
  ],
  [
    [
      11376,
      11376
    ],
    "mapped",
    [
      594
    ]
  ],
  [
    [
      11377,
      11377
    ],
    "valid"
  ],
  [
    [
      11378,
      11378
    ],
    "mapped",
    [
      11379
    ]
  ],
  [
    [
      11379,
      11379
    ],
    "valid"
  ],
  [
    [
      11380,
      11380
    ],
    "valid"
  ],
  [
    [
      11381,
      11381
    ],
    "mapped",
    [
      11382
    ]
  ],
  [
    [
      11382,
      11383
    ],
    "valid"
  ],
  [
    [
      11384,
      11387
    ],
    "valid"
  ],
  [
    [
      11388,
      11388
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      11389,
      11389
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      11390,
      11390
    ],
    "mapped",
    [
      575
    ]
  ],
  [
    [
      11391,
      11391
    ],
    "mapped",
    [
      576
    ]
  ],
  [
    [
      11392,
      11392
    ],
    "mapped",
    [
      11393
    ]
  ],
  [
    [
      11393,
      11393
    ],
    "valid"
  ],
  [
    [
      11394,
      11394
    ],
    "mapped",
    [
      11395
    ]
  ],
  [
    [
      11395,
      11395
    ],
    "valid"
  ],
  [
    [
      11396,
      11396
    ],
    "mapped",
    [
      11397
    ]
  ],
  [
    [
      11397,
      11397
    ],
    "valid"
  ],
  [
    [
      11398,
      11398
    ],
    "mapped",
    [
      11399
    ]
  ],
  [
    [
      11399,
      11399
    ],
    "valid"
  ],
  [
    [
      11400,
      11400
    ],
    "mapped",
    [
      11401
    ]
  ],
  [
    [
      11401,
      11401
    ],
    "valid"
  ],
  [
    [
      11402,
      11402
    ],
    "mapped",
    [
      11403
    ]
  ],
  [
    [
      11403,
      11403
    ],
    "valid"
  ],
  [
    [
      11404,
      11404
    ],
    "mapped",
    [
      11405
    ]
  ],
  [
    [
      11405,
      11405
    ],
    "valid"
  ],
  [
    [
      11406,
      11406
    ],
    "mapped",
    [
      11407
    ]
  ],
  [
    [
      11407,
      11407
    ],
    "valid"
  ],
  [
    [
      11408,
      11408
    ],
    "mapped",
    [
      11409
    ]
  ],
  [
    [
      11409,
      11409
    ],
    "valid"
  ],
  [
    [
      11410,
      11410
    ],
    "mapped",
    [
      11411
    ]
  ],
  [
    [
      11411,
      11411
    ],
    "valid"
  ],
  [
    [
      11412,
      11412
    ],
    "mapped",
    [
      11413
    ]
  ],
  [
    [
      11413,
      11413
    ],
    "valid"
  ],
  [
    [
      11414,
      11414
    ],
    "mapped",
    [
      11415
    ]
  ],
  [
    [
      11415,
      11415
    ],
    "valid"
  ],
  [
    [
      11416,
      11416
    ],
    "mapped",
    [
      11417
    ]
  ],
  [
    [
      11417,
      11417
    ],
    "valid"
  ],
  [
    [
      11418,
      11418
    ],
    "mapped",
    [
      11419
    ]
  ],
  [
    [
      11419,
      11419
    ],
    "valid"
  ],
  [
    [
      11420,
      11420
    ],
    "mapped",
    [
      11421
    ]
  ],
  [
    [
      11421,
      11421
    ],
    "valid"
  ],
  [
    [
      11422,
      11422
    ],
    "mapped",
    [
      11423
    ]
  ],
  [
    [
      11423,
      11423
    ],
    "valid"
  ],
  [
    [
      11424,
      11424
    ],
    "mapped",
    [
      11425
    ]
  ],
  [
    [
      11425,
      11425
    ],
    "valid"
  ],
  [
    [
      11426,
      11426
    ],
    "mapped",
    [
      11427
    ]
  ],
  [
    [
      11427,
      11427
    ],
    "valid"
  ],
  [
    [
      11428,
      11428
    ],
    "mapped",
    [
      11429
    ]
  ],
  [
    [
      11429,
      11429
    ],
    "valid"
  ],
  [
    [
      11430,
      11430
    ],
    "mapped",
    [
      11431
    ]
  ],
  [
    [
      11431,
      11431
    ],
    "valid"
  ],
  [
    [
      11432,
      11432
    ],
    "mapped",
    [
      11433
    ]
  ],
  [
    [
      11433,
      11433
    ],
    "valid"
  ],
  [
    [
      11434,
      11434
    ],
    "mapped",
    [
      11435
    ]
  ],
  [
    [
      11435,
      11435
    ],
    "valid"
  ],
  [
    [
      11436,
      11436
    ],
    "mapped",
    [
      11437
    ]
  ],
  [
    [
      11437,
      11437
    ],
    "valid"
  ],
  [
    [
      11438,
      11438
    ],
    "mapped",
    [
      11439
    ]
  ],
  [
    [
      11439,
      11439
    ],
    "valid"
  ],
  [
    [
      11440,
      11440
    ],
    "mapped",
    [
      11441
    ]
  ],
  [
    [
      11441,
      11441
    ],
    "valid"
  ],
  [
    [
      11442,
      11442
    ],
    "mapped",
    [
      11443
    ]
  ],
  [
    [
      11443,
      11443
    ],
    "valid"
  ],
  [
    [
      11444,
      11444
    ],
    "mapped",
    [
      11445
    ]
  ],
  [
    [
      11445,
      11445
    ],
    "valid"
  ],
  [
    [
      11446,
      11446
    ],
    "mapped",
    [
      11447
    ]
  ],
  [
    [
      11447,
      11447
    ],
    "valid"
  ],
  [
    [
      11448,
      11448
    ],
    "mapped",
    [
      11449
    ]
  ],
  [
    [
      11449,
      11449
    ],
    "valid"
  ],
  [
    [
      11450,
      11450
    ],
    "mapped",
    [
      11451
    ]
  ],
  [
    [
      11451,
      11451
    ],
    "valid"
  ],
  [
    [
      11452,
      11452
    ],
    "mapped",
    [
      11453
    ]
  ],
  [
    [
      11453,
      11453
    ],
    "valid"
  ],
  [
    [
      11454,
      11454
    ],
    "mapped",
    [
      11455
    ]
  ],
  [
    [
      11455,
      11455
    ],
    "valid"
  ],
  [
    [
      11456,
      11456
    ],
    "mapped",
    [
      11457
    ]
  ],
  [
    [
      11457,
      11457
    ],
    "valid"
  ],
  [
    [
      11458,
      11458
    ],
    "mapped",
    [
      11459
    ]
  ],
  [
    [
      11459,
      11459
    ],
    "valid"
  ],
  [
    [
      11460,
      11460
    ],
    "mapped",
    [
      11461
    ]
  ],
  [
    [
      11461,
      11461
    ],
    "valid"
  ],
  [
    [
      11462,
      11462
    ],
    "mapped",
    [
      11463
    ]
  ],
  [
    [
      11463,
      11463
    ],
    "valid"
  ],
  [
    [
      11464,
      11464
    ],
    "mapped",
    [
      11465
    ]
  ],
  [
    [
      11465,
      11465
    ],
    "valid"
  ],
  [
    [
      11466,
      11466
    ],
    "mapped",
    [
      11467
    ]
  ],
  [
    [
      11467,
      11467
    ],
    "valid"
  ],
  [
    [
      11468,
      11468
    ],
    "mapped",
    [
      11469
    ]
  ],
  [
    [
      11469,
      11469
    ],
    "valid"
  ],
  [
    [
      11470,
      11470
    ],
    "mapped",
    [
      11471
    ]
  ],
  [
    [
      11471,
      11471
    ],
    "valid"
  ],
  [
    [
      11472,
      11472
    ],
    "mapped",
    [
      11473
    ]
  ],
  [
    [
      11473,
      11473
    ],
    "valid"
  ],
  [
    [
      11474,
      11474
    ],
    "mapped",
    [
      11475
    ]
  ],
  [
    [
      11475,
      11475
    ],
    "valid"
  ],
  [
    [
      11476,
      11476
    ],
    "mapped",
    [
      11477
    ]
  ],
  [
    [
      11477,
      11477
    ],
    "valid"
  ],
  [
    [
      11478,
      11478
    ],
    "mapped",
    [
      11479
    ]
  ],
  [
    [
      11479,
      11479
    ],
    "valid"
  ],
  [
    [
      11480,
      11480
    ],
    "mapped",
    [
      11481
    ]
  ],
  [
    [
      11481,
      11481
    ],
    "valid"
  ],
  [
    [
      11482,
      11482
    ],
    "mapped",
    [
      11483
    ]
  ],
  [
    [
      11483,
      11483
    ],
    "valid"
  ],
  [
    [
      11484,
      11484
    ],
    "mapped",
    [
      11485
    ]
  ],
  [
    [
      11485,
      11485
    ],
    "valid"
  ],
  [
    [
      11486,
      11486
    ],
    "mapped",
    [
      11487
    ]
  ],
  [
    [
      11487,
      11487
    ],
    "valid"
  ],
  [
    [
      11488,
      11488
    ],
    "mapped",
    [
      11489
    ]
  ],
  [
    [
      11489,
      11489
    ],
    "valid"
  ],
  [
    [
      11490,
      11490
    ],
    "mapped",
    [
      11491
    ]
  ],
  [
    [
      11491,
      11492
    ],
    "valid"
  ],
  [
    [
      11493,
      11498
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11499,
      11499
    ],
    "mapped",
    [
      11500
    ]
  ],
  [
    [
      11500,
      11500
    ],
    "valid"
  ],
  [
    [
      11501,
      11501
    ],
    "mapped",
    [
      11502
    ]
  ],
  [
    [
      11502,
      11505
    ],
    "valid"
  ],
  [
    [
      11506,
      11506
    ],
    "mapped",
    [
      11507
    ]
  ],
  [
    [
      11507,
      11507
    ],
    "valid"
  ],
  [
    [
      11508,
      11512
    ],
    "disallowed"
  ],
  [
    [
      11513,
      11519
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11520,
      11557
    ],
    "valid"
  ],
  [
    [
      11558,
      11558
    ],
    "disallowed"
  ],
  [
    [
      11559,
      11559
    ],
    "valid"
  ],
  [
    [
      11560,
      11564
    ],
    "disallowed"
  ],
  [
    [
      11565,
      11565
    ],
    "valid"
  ],
  [
    [
      11566,
      11567
    ],
    "disallowed"
  ],
  [
    [
      11568,
      11621
    ],
    "valid"
  ],
  [
    [
      11622,
      11623
    ],
    "valid"
  ],
  [
    [
      11624,
      11630
    ],
    "disallowed"
  ],
  [
    [
      11631,
      11631
    ],
    "mapped",
    [
      11617
    ]
  ],
  [
    [
      11632,
      11632
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11633,
      11646
    ],
    "disallowed"
  ],
  [
    [
      11647,
      11647
    ],
    "valid"
  ],
  [
    [
      11648,
      11670
    ],
    "valid"
  ],
  [
    [
      11671,
      11679
    ],
    "disallowed"
  ],
  [
    [
      11680,
      11686
    ],
    "valid"
  ],
  [
    [
      11687,
      11687
    ],
    "disallowed"
  ],
  [
    [
      11688,
      11694
    ],
    "valid"
  ],
  [
    [
      11695,
      11695
    ],
    "disallowed"
  ],
  [
    [
      11696,
      11702
    ],
    "valid"
  ],
  [
    [
      11703,
      11703
    ],
    "disallowed"
  ],
  [
    [
      11704,
      11710
    ],
    "valid"
  ],
  [
    [
      11711,
      11711
    ],
    "disallowed"
  ],
  [
    [
      11712,
      11718
    ],
    "valid"
  ],
  [
    [
      11719,
      11719
    ],
    "disallowed"
  ],
  [
    [
      11720,
      11726
    ],
    "valid"
  ],
  [
    [
      11727,
      11727
    ],
    "disallowed"
  ],
  [
    [
      11728,
      11734
    ],
    "valid"
  ],
  [
    [
      11735,
      11735
    ],
    "disallowed"
  ],
  [
    [
      11736,
      11742
    ],
    "valid"
  ],
  [
    [
      11743,
      11743
    ],
    "disallowed"
  ],
  [
    [
      11744,
      11775
    ],
    "valid"
  ],
  [
    [
      11776,
      11799
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11800,
      11803
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11804,
      11805
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11806,
      11822
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11823,
      11823
    ],
    "valid"
  ],
  [
    [
      11824,
      11824
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11825,
      11825
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11826,
      11835
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11836,
      11842
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11843,
      11903
    ],
    "disallowed"
  ],
  [
    [
      11904,
      11929
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11930,
      11930
    ],
    "disallowed"
  ],
  [
    [
      11931,
      11934
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11935,
      11935
    ],
    "mapped",
    [
      27597
    ]
  ],
  [
    [
      11936,
      12018
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12019,
      12019
    ],
    "mapped",
    [
      40863
    ]
  ],
  [
    [
      12020,
      12031
    ],
    "disallowed"
  ],
  [
    [
      12032,
      12032
    ],
    "mapped",
    [
      19968
    ]
  ],
  [
    [
      12033,
      12033
    ],
    "mapped",
    [
      20008
    ]
  ],
  [
    [
      12034,
      12034
    ],
    "mapped",
    [
      20022
    ]
  ],
  [
    [
      12035,
      12035
    ],
    "mapped",
    [
      20031
    ]
  ],
  [
    [
      12036,
      12036
    ],
    "mapped",
    [
      20057
    ]
  ],
  [
    [
      12037,
      12037
    ],
    "mapped",
    [
      20101
    ]
  ],
  [
    [
      12038,
      12038
    ],
    "mapped",
    [
      20108
    ]
  ],
  [
    [
      12039,
      12039
    ],
    "mapped",
    [
      20128
    ]
  ],
  [
    [
      12040,
      12040
    ],
    "mapped",
    [
      20154
    ]
  ],
  [
    [
      12041,
      12041
    ],
    "mapped",
    [
      20799
    ]
  ],
  [
    [
      12042,
      12042
    ],
    "mapped",
    [
      20837
    ]
  ],
  [
    [
      12043,
      12043
    ],
    "mapped",
    [
      20843
    ]
  ],
  [
    [
      12044,
      12044
    ],
    "mapped",
    [
      20866
    ]
  ],
  [
    [
      12045,
      12045
    ],
    "mapped",
    [
      20886
    ]
  ],
  [
    [
      12046,
      12046
    ],
    "mapped",
    [
      20907
    ]
  ],
  [
    [
      12047,
      12047
    ],
    "mapped",
    [
      20960
    ]
  ],
  [
    [
      12048,
      12048
    ],
    "mapped",
    [
      20981
    ]
  ],
  [
    [
      12049,
      12049
    ],
    "mapped",
    [
      20992
    ]
  ],
  [
    [
      12050,
      12050
    ],
    "mapped",
    [
      21147
    ]
  ],
  [
    [
      12051,
      12051
    ],
    "mapped",
    [
      21241
    ]
  ],
  [
    [
      12052,
      12052
    ],
    "mapped",
    [
      21269
    ]
  ],
  [
    [
      12053,
      12053
    ],
    "mapped",
    [
      21274
    ]
  ],
  [
    [
      12054,
      12054
    ],
    "mapped",
    [
      21304
    ]
  ],
  [
    [
      12055,
      12055
    ],
    "mapped",
    [
      21313
    ]
  ],
  [
    [
      12056,
      12056
    ],
    "mapped",
    [
      21340
    ]
  ],
  [
    [
      12057,
      12057
    ],
    "mapped",
    [
      21353
    ]
  ],
  [
    [
      12058,
      12058
    ],
    "mapped",
    [
      21378
    ]
  ],
  [
    [
      12059,
      12059
    ],
    "mapped",
    [
      21430
    ]
  ],
  [
    [
      12060,
      12060
    ],
    "mapped",
    [
      21448
    ]
  ],
  [
    [
      12061,
      12061
    ],
    "mapped",
    [
      21475
    ]
  ],
  [
    [
      12062,
      12062
    ],
    "mapped",
    [
      22231
    ]
  ],
  [
    [
      12063,
      12063
    ],
    "mapped",
    [
      22303
    ]
  ],
  [
    [
      12064,
      12064
    ],
    "mapped",
    [
      22763
    ]
  ],
  [
    [
      12065,
      12065
    ],
    "mapped",
    [
      22786
    ]
  ],
  [
    [
      12066,
      12066
    ],
    "mapped",
    [
      22794
    ]
  ],
  [
    [
      12067,
      12067
    ],
    "mapped",
    [
      22805
    ]
  ],
  [
    [
      12068,
      12068
    ],
    "mapped",
    [
      22823
    ]
  ],
  [
    [
      12069,
      12069
    ],
    "mapped",
    [
      22899
    ]
  ],
  [
    [
      12070,
      12070
    ],
    "mapped",
    [
      23376
    ]
  ],
  [
    [
      12071,
      12071
    ],
    "mapped",
    [
      23424
    ]
  ],
  [
    [
      12072,
      12072
    ],
    "mapped",
    [
      23544
    ]
  ],
  [
    [
      12073,
      12073
    ],
    "mapped",
    [
      23567
    ]
  ],
  [
    [
      12074,
      12074
    ],
    "mapped",
    [
      23586
    ]
  ],
  [
    [
      12075,
      12075
    ],
    "mapped",
    [
      23608
    ]
  ],
  [
    [
      12076,
      12076
    ],
    "mapped",
    [
      23662
    ]
  ],
  [
    [
      12077,
      12077
    ],
    "mapped",
    [
      23665
    ]
  ],
  [
    [
      12078,
      12078
    ],
    "mapped",
    [
      24027
    ]
  ],
  [
    [
      12079,
      12079
    ],
    "mapped",
    [
      24037
    ]
  ],
  [
    [
      12080,
      12080
    ],
    "mapped",
    [
      24049
    ]
  ],
  [
    [
      12081,
      12081
    ],
    "mapped",
    [
      24062
    ]
  ],
  [
    [
      12082,
      12082
    ],
    "mapped",
    [
      24178
    ]
  ],
  [
    [
      12083,
      12083
    ],
    "mapped",
    [
      24186
    ]
  ],
  [
    [
      12084,
      12084
    ],
    "mapped",
    [
      24191
    ]
  ],
  [
    [
      12085,
      12085
    ],
    "mapped",
    [
      24308
    ]
  ],
  [
    [
      12086,
      12086
    ],
    "mapped",
    [
      24318
    ]
  ],
  [
    [
      12087,
      12087
    ],
    "mapped",
    [
      24331
    ]
  ],
  [
    [
      12088,
      12088
    ],
    "mapped",
    [
      24339
    ]
  ],
  [
    [
      12089,
      12089
    ],
    "mapped",
    [
      24400
    ]
  ],
  [
    [
      12090,
      12090
    ],
    "mapped",
    [
      24417
    ]
  ],
  [
    [
      12091,
      12091
    ],
    "mapped",
    [
      24435
    ]
  ],
  [
    [
      12092,
      12092
    ],
    "mapped",
    [
      24515
    ]
  ],
  [
    [
      12093,
      12093
    ],
    "mapped",
    [
      25096
    ]
  ],
  [
    [
      12094,
      12094
    ],
    "mapped",
    [
      25142
    ]
  ],
  [
    [
      12095,
      12095
    ],
    "mapped",
    [
      25163
    ]
  ],
  [
    [
      12096,
      12096
    ],
    "mapped",
    [
      25903
    ]
  ],
  [
    [
      12097,
      12097
    ],
    "mapped",
    [
      25908
    ]
  ],
  [
    [
      12098,
      12098
    ],
    "mapped",
    [
      25991
    ]
  ],
  [
    [
      12099,
      12099
    ],
    "mapped",
    [
      26007
    ]
  ],
  [
    [
      12100,
      12100
    ],
    "mapped",
    [
      26020
    ]
  ],
  [
    [
      12101,
      12101
    ],
    "mapped",
    [
      26041
    ]
  ],
  [
    [
      12102,
      12102
    ],
    "mapped",
    [
      26080
    ]
  ],
  [
    [
      12103,
      12103
    ],
    "mapped",
    [
      26085
    ]
  ],
  [
    [
      12104,
      12104
    ],
    "mapped",
    [
      26352
    ]
  ],
  [
    [
      12105,
      12105
    ],
    "mapped",
    [
      26376
    ]
  ],
  [
    [
      12106,
      12106
    ],
    "mapped",
    [
      26408
    ]
  ],
  [
    [
      12107,
      12107
    ],
    "mapped",
    [
      27424
    ]
  ],
  [
    [
      12108,
      12108
    ],
    "mapped",
    [
      27490
    ]
  ],
  [
    [
      12109,
      12109
    ],
    "mapped",
    [
      27513
    ]
  ],
  [
    [
      12110,
      12110
    ],
    "mapped",
    [
      27571
    ]
  ],
  [
    [
      12111,
      12111
    ],
    "mapped",
    [
      27595
    ]
  ],
  [
    [
      12112,
      12112
    ],
    "mapped",
    [
      27604
    ]
  ],
  [
    [
      12113,
      12113
    ],
    "mapped",
    [
      27611
    ]
  ],
  [
    [
      12114,
      12114
    ],
    "mapped",
    [
      27663
    ]
  ],
  [
    [
      12115,
      12115
    ],
    "mapped",
    [
      27668
    ]
  ],
  [
    [
      12116,
      12116
    ],
    "mapped",
    [
      27700
    ]
  ],
  [
    [
      12117,
      12117
    ],
    "mapped",
    [
      28779
    ]
  ],
  [
    [
      12118,
      12118
    ],
    "mapped",
    [
      29226
    ]
  ],
  [
    [
      12119,
      12119
    ],
    "mapped",
    [
      29238
    ]
  ],
  [
    [
      12120,
      12120
    ],
    "mapped",
    [
      29243
    ]
  ],
  [
    [
      12121,
      12121
    ],
    "mapped",
    [
      29247
    ]
  ],
  [
    [
      12122,
      12122
    ],
    "mapped",
    [
      29255
    ]
  ],
  [
    [
      12123,
      12123
    ],
    "mapped",
    [
      29273
    ]
  ],
  [
    [
      12124,
      12124
    ],
    "mapped",
    [
      29275
    ]
  ],
  [
    [
      12125,
      12125
    ],
    "mapped",
    [
      29356
    ]
  ],
  [
    [
      12126,
      12126
    ],
    "mapped",
    [
      29572
    ]
  ],
  [
    [
      12127,
      12127
    ],
    "mapped",
    [
      29577
    ]
  ],
  [
    [
      12128,
      12128
    ],
    "mapped",
    [
      29916
    ]
  ],
  [
    [
      12129,
      12129
    ],
    "mapped",
    [
      29926
    ]
  ],
  [
    [
      12130,
      12130
    ],
    "mapped",
    [
      29976
    ]
  ],
  [
    [
      12131,
      12131
    ],
    "mapped",
    [
      29983
    ]
  ],
  [
    [
      12132,
      12132
    ],
    "mapped",
    [
      29992
    ]
  ],
  [
    [
      12133,
      12133
    ],
    "mapped",
    [
      3e4
    ]
  ],
  [
    [
      12134,
      12134
    ],
    "mapped",
    [
      30091
    ]
  ],
  [
    [
      12135,
      12135
    ],
    "mapped",
    [
      30098
    ]
  ],
  [
    [
      12136,
      12136
    ],
    "mapped",
    [
      30326
    ]
  ],
  [
    [
      12137,
      12137
    ],
    "mapped",
    [
      30333
    ]
  ],
  [
    [
      12138,
      12138
    ],
    "mapped",
    [
      30382
    ]
  ],
  [
    [
      12139,
      12139
    ],
    "mapped",
    [
      30399
    ]
  ],
  [
    [
      12140,
      12140
    ],
    "mapped",
    [
      30446
    ]
  ],
  [
    [
      12141,
      12141
    ],
    "mapped",
    [
      30683
    ]
  ],
  [
    [
      12142,
      12142
    ],
    "mapped",
    [
      30690
    ]
  ],
  [
    [
      12143,
      12143
    ],
    "mapped",
    [
      30707
    ]
  ],
  [
    [
      12144,
      12144
    ],
    "mapped",
    [
      31034
    ]
  ],
  [
    [
      12145,
      12145
    ],
    "mapped",
    [
      31160
    ]
  ],
  [
    [
      12146,
      12146
    ],
    "mapped",
    [
      31166
    ]
  ],
  [
    [
      12147,
      12147
    ],
    "mapped",
    [
      31348
    ]
  ],
  [
    [
      12148,
      12148
    ],
    "mapped",
    [
      31435
    ]
  ],
  [
    [
      12149,
      12149
    ],
    "mapped",
    [
      31481
    ]
  ],
  [
    [
      12150,
      12150
    ],
    "mapped",
    [
      31859
    ]
  ],
  [
    [
      12151,
      12151
    ],
    "mapped",
    [
      31992
    ]
  ],
  [
    [
      12152,
      12152
    ],
    "mapped",
    [
      32566
    ]
  ],
  [
    [
      12153,
      12153
    ],
    "mapped",
    [
      32593
    ]
  ],
  [
    [
      12154,
      12154
    ],
    "mapped",
    [
      32650
    ]
  ],
  [
    [
      12155,
      12155
    ],
    "mapped",
    [
      32701
    ]
  ],
  [
    [
      12156,
      12156
    ],
    "mapped",
    [
      32769
    ]
  ],
  [
    [
      12157,
      12157
    ],
    "mapped",
    [
      32780
    ]
  ],
  [
    [
      12158,
      12158
    ],
    "mapped",
    [
      32786
    ]
  ],
  [
    [
      12159,
      12159
    ],
    "mapped",
    [
      32819
    ]
  ],
  [
    [
      12160,
      12160
    ],
    "mapped",
    [
      32895
    ]
  ],
  [
    [
      12161,
      12161
    ],
    "mapped",
    [
      32905
    ]
  ],
  [
    [
      12162,
      12162
    ],
    "mapped",
    [
      33251
    ]
  ],
  [
    [
      12163,
      12163
    ],
    "mapped",
    [
      33258
    ]
  ],
  [
    [
      12164,
      12164
    ],
    "mapped",
    [
      33267
    ]
  ],
  [
    [
      12165,
      12165
    ],
    "mapped",
    [
      33276
    ]
  ],
  [
    [
      12166,
      12166
    ],
    "mapped",
    [
      33292
    ]
  ],
  [
    [
      12167,
      12167
    ],
    "mapped",
    [
      33307
    ]
  ],
  [
    [
      12168,
      12168
    ],
    "mapped",
    [
      33311
    ]
  ],
  [
    [
      12169,
      12169
    ],
    "mapped",
    [
      33390
    ]
  ],
  [
    [
      12170,
      12170
    ],
    "mapped",
    [
      33394
    ]
  ],
  [
    [
      12171,
      12171
    ],
    "mapped",
    [
      33400
    ]
  ],
  [
    [
      12172,
      12172
    ],
    "mapped",
    [
      34381
    ]
  ],
  [
    [
      12173,
      12173
    ],
    "mapped",
    [
      34411
    ]
  ],
  [
    [
      12174,
      12174
    ],
    "mapped",
    [
      34880
    ]
  ],
  [
    [
      12175,
      12175
    ],
    "mapped",
    [
      34892
    ]
  ],
  [
    [
      12176,
      12176
    ],
    "mapped",
    [
      34915
    ]
  ],
  [
    [
      12177,
      12177
    ],
    "mapped",
    [
      35198
    ]
  ],
  [
    [
      12178,
      12178
    ],
    "mapped",
    [
      35211
    ]
  ],
  [
    [
      12179,
      12179
    ],
    "mapped",
    [
      35282
    ]
  ],
  [
    [
      12180,
      12180
    ],
    "mapped",
    [
      35328
    ]
  ],
  [
    [
      12181,
      12181
    ],
    "mapped",
    [
      35895
    ]
  ],
  [
    [
      12182,
      12182
    ],
    "mapped",
    [
      35910
    ]
  ],
  [
    [
      12183,
      12183
    ],
    "mapped",
    [
      35925
    ]
  ],
  [
    [
      12184,
      12184
    ],
    "mapped",
    [
      35960
    ]
  ],
  [
    [
      12185,
      12185
    ],
    "mapped",
    [
      35997
    ]
  ],
  [
    [
      12186,
      12186
    ],
    "mapped",
    [
      36196
    ]
  ],
  [
    [
      12187,
      12187
    ],
    "mapped",
    [
      36208
    ]
  ],
  [
    [
      12188,
      12188
    ],
    "mapped",
    [
      36275
    ]
  ],
  [
    [
      12189,
      12189
    ],
    "mapped",
    [
      36523
    ]
  ],
  [
    [
      12190,
      12190
    ],
    "mapped",
    [
      36554
    ]
  ],
  [
    [
      12191,
      12191
    ],
    "mapped",
    [
      36763
    ]
  ],
  [
    [
      12192,
      12192
    ],
    "mapped",
    [
      36784
    ]
  ],
  [
    [
      12193,
      12193
    ],
    "mapped",
    [
      36789
    ]
  ],
  [
    [
      12194,
      12194
    ],
    "mapped",
    [
      37009
    ]
  ],
  [
    [
      12195,
      12195
    ],
    "mapped",
    [
      37193
    ]
  ],
  [
    [
      12196,
      12196
    ],
    "mapped",
    [
      37318
    ]
  ],
  [
    [
      12197,
      12197
    ],
    "mapped",
    [
      37324
    ]
  ],
  [
    [
      12198,
      12198
    ],
    "mapped",
    [
      37329
    ]
  ],
  [
    [
      12199,
      12199
    ],
    "mapped",
    [
      38263
    ]
  ],
  [
    [
      12200,
      12200
    ],
    "mapped",
    [
      38272
    ]
  ],
  [
    [
      12201,
      12201
    ],
    "mapped",
    [
      38428
    ]
  ],
  [
    [
      12202,
      12202
    ],
    "mapped",
    [
      38582
    ]
  ],
  [
    [
      12203,
      12203
    ],
    "mapped",
    [
      38585
    ]
  ],
  [
    [
      12204,
      12204
    ],
    "mapped",
    [
      38632
    ]
  ],
  [
    [
      12205,
      12205
    ],
    "mapped",
    [
      38737
    ]
  ],
  [
    [
      12206,
      12206
    ],
    "mapped",
    [
      38750
    ]
  ],
  [
    [
      12207,
      12207
    ],
    "mapped",
    [
      38754
    ]
  ],
  [
    [
      12208,
      12208
    ],
    "mapped",
    [
      38761
    ]
  ],
  [
    [
      12209,
      12209
    ],
    "mapped",
    [
      38859
    ]
  ],
  [
    [
      12210,
      12210
    ],
    "mapped",
    [
      38893
    ]
  ],
  [
    [
      12211,
      12211
    ],
    "mapped",
    [
      38899
    ]
  ],
  [
    [
      12212,
      12212
    ],
    "mapped",
    [
      38913
    ]
  ],
  [
    [
      12213,
      12213
    ],
    "mapped",
    [
      39080
    ]
  ],
  [
    [
      12214,
      12214
    ],
    "mapped",
    [
      39131
    ]
  ],
  [
    [
      12215,
      12215
    ],
    "mapped",
    [
      39135
    ]
  ],
  [
    [
      12216,
      12216
    ],
    "mapped",
    [
      39318
    ]
  ],
  [
    [
      12217,
      12217
    ],
    "mapped",
    [
      39321
    ]
  ],
  [
    [
      12218,
      12218
    ],
    "mapped",
    [
      39340
    ]
  ],
  [
    [
      12219,
      12219
    ],
    "mapped",
    [
      39592
    ]
  ],
  [
    [
      12220,
      12220
    ],
    "mapped",
    [
      39640
    ]
  ],
  [
    [
      12221,
      12221
    ],
    "mapped",
    [
      39647
    ]
  ],
  [
    [
      12222,
      12222
    ],
    "mapped",
    [
      39717
    ]
  ],
  [
    [
      12223,
      12223
    ],
    "mapped",
    [
      39727
    ]
  ],
  [
    [
      12224,
      12224
    ],
    "mapped",
    [
      39730
    ]
  ],
  [
    [
      12225,
      12225
    ],
    "mapped",
    [
      39740
    ]
  ],
  [
    [
      12226,
      12226
    ],
    "mapped",
    [
      39770
    ]
  ],
  [
    [
      12227,
      12227
    ],
    "mapped",
    [
      40165
    ]
  ],
  [
    [
      12228,
      12228
    ],
    "mapped",
    [
      40565
    ]
  ],
  [
    [
      12229,
      12229
    ],
    "mapped",
    [
      40575
    ]
  ],
  [
    [
      12230,
      12230
    ],
    "mapped",
    [
      40613
    ]
  ],
  [
    [
      12231,
      12231
    ],
    "mapped",
    [
      40635
    ]
  ],
  [
    [
      12232,
      12232
    ],
    "mapped",
    [
      40643
    ]
  ],
  [
    [
      12233,
      12233
    ],
    "mapped",
    [
      40653
    ]
  ],
  [
    [
      12234,
      12234
    ],
    "mapped",
    [
      40657
    ]
  ],
  [
    [
      12235,
      12235
    ],
    "mapped",
    [
      40697
    ]
  ],
  [
    [
      12236,
      12236
    ],
    "mapped",
    [
      40701
    ]
  ],
  [
    [
      12237,
      12237
    ],
    "mapped",
    [
      40718
    ]
  ],
  [
    [
      12238,
      12238
    ],
    "mapped",
    [
      40723
    ]
  ],
  [
    [
      12239,
      12239
    ],
    "mapped",
    [
      40736
    ]
  ],
  [
    [
      12240,
      12240
    ],
    "mapped",
    [
      40763
    ]
  ],
  [
    [
      12241,
      12241
    ],
    "mapped",
    [
      40778
    ]
  ],
  [
    [
      12242,
      12242
    ],
    "mapped",
    [
      40786
    ]
  ],
  [
    [
      12243,
      12243
    ],
    "mapped",
    [
      40845
    ]
  ],
  [
    [
      12244,
      12244
    ],
    "mapped",
    [
      40860
    ]
  ],
  [
    [
      12245,
      12245
    ],
    "mapped",
    [
      40864
    ]
  ],
  [
    [
      12246,
      12271
    ],
    "disallowed"
  ],
  [
    [
      12272,
      12283
    ],
    "disallowed"
  ],
  [
    [
      12284,
      12287
    ],
    "disallowed"
  ],
  [
    [
      12288,
      12288
    ],
    "disallowed_STD3_mapped",
    [
      32
    ]
  ],
  [
    [
      12289,
      12289
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12290,
      12290
    ],
    "mapped",
    [
      46
    ]
  ],
  [
    [
      12291,
      12292
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12293,
      12295
    ],
    "valid"
  ],
  [
    [
      12296,
      12329
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12330,
      12333
    ],
    "valid"
  ],
  [
    [
      12334,
      12341
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12342,
      12342
    ],
    "mapped",
    [
      12306
    ]
  ],
  [
    [
      12343,
      12343
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12344,
      12344
    ],
    "mapped",
    [
      21313
    ]
  ],
  [
    [
      12345,
      12345
    ],
    "mapped",
    [
      21316
    ]
  ],
  [
    [
      12346,
      12346
    ],
    "mapped",
    [
      21317
    ]
  ],
  [
    [
      12347,
      12347
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12348,
      12348
    ],
    "valid"
  ],
  [
    [
      12349,
      12349
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12350,
      12350
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12351,
      12351
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12352,
      12352
    ],
    "disallowed"
  ],
  [
    [
      12353,
      12436
    ],
    "valid"
  ],
  [
    [
      12437,
      12438
    ],
    "valid"
  ],
  [
    [
      12439,
      12440
    ],
    "disallowed"
  ],
  [
    [
      12441,
      12442
    ],
    "valid"
  ],
  [
    [
      12443,
      12443
    ],
    "disallowed_STD3_mapped",
    [
      32,
      12441
    ]
  ],
  [
    [
      12444,
      12444
    ],
    "disallowed_STD3_mapped",
    [
      32,
      12442
    ]
  ],
  [
    [
      12445,
      12446
    ],
    "valid"
  ],
  [
    [
      12447,
      12447
    ],
    "mapped",
    [
      12424,
      12426
    ]
  ],
  [
    [
      12448,
      12448
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12449,
      12542
    ],
    "valid"
  ],
  [
    [
      12543,
      12543
    ],
    "mapped",
    [
      12467,
      12488
    ]
  ],
  [
    [
      12544,
      12548
    ],
    "disallowed"
  ],
  [
    [
      12549,
      12588
    ],
    "valid"
  ],
  [
    [
      12589,
      12589
    ],
    "valid"
  ],
  [
    [
      12590,
      12592
    ],
    "disallowed"
  ],
  [
    [
      12593,
      12593
    ],
    "mapped",
    [
      4352
    ]
  ],
  [
    [
      12594,
      12594
    ],
    "mapped",
    [
      4353
    ]
  ],
  [
    [
      12595,
      12595
    ],
    "mapped",
    [
      4522
    ]
  ],
  [
    [
      12596,
      12596
    ],
    "mapped",
    [
      4354
    ]
  ],
  [
    [
      12597,
      12597
    ],
    "mapped",
    [
      4524
    ]
  ],
  [
    [
      12598,
      12598
    ],
    "mapped",
    [
      4525
    ]
  ],
  [
    [
      12599,
      12599
    ],
    "mapped",
    [
      4355
    ]
  ],
  [
    [
      12600,
      12600
    ],
    "mapped",
    [
      4356
    ]
  ],
  [
    [
      12601,
      12601
    ],
    "mapped",
    [
      4357
    ]
  ],
  [
    [
      12602,
      12602
    ],
    "mapped",
    [
      4528
    ]
  ],
  [
    [
      12603,
      12603
    ],
    "mapped",
    [
      4529
    ]
  ],
  [
    [
      12604,
      12604
    ],
    "mapped",
    [
      4530
    ]
  ],
  [
    [
      12605,
      12605
    ],
    "mapped",
    [
      4531
    ]
  ],
  [
    [
      12606,
      12606
    ],
    "mapped",
    [
      4532
    ]
  ],
  [
    [
      12607,
      12607
    ],
    "mapped",
    [
      4533
    ]
  ],
  [
    [
      12608,
      12608
    ],
    "mapped",
    [
      4378
    ]
  ],
  [
    [
      12609,
      12609
    ],
    "mapped",
    [
      4358
    ]
  ],
  [
    [
      12610,
      12610
    ],
    "mapped",
    [
      4359
    ]
  ],
  [
    [
      12611,
      12611
    ],
    "mapped",
    [
      4360
    ]
  ],
  [
    [
      12612,
      12612
    ],
    "mapped",
    [
      4385
    ]
  ],
  [
    [
      12613,
      12613
    ],
    "mapped",
    [
      4361
    ]
  ],
  [
    [
      12614,
      12614
    ],
    "mapped",
    [
      4362
    ]
  ],
  [
    [
      12615,
      12615
    ],
    "mapped",
    [
      4363
    ]
  ],
  [
    [
      12616,
      12616
    ],
    "mapped",
    [
      4364
    ]
  ],
  [
    [
      12617,
      12617
    ],
    "mapped",
    [
      4365
    ]
  ],
  [
    [
      12618,
      12618
    ],
    "mapped",
    [
      4366
    ]
  ],
  [
    [
      12619,
      12619
    ],
    "mapped",
    [
      4367
    ]
  ],
  [
    [
      12620,
      12620
    ],
    "mapped",
    [
      4368
    ]
  ],
  [
    [
      12621,
      12621
    ],
    "mapped",
    [
      4369
    ]
  ],
  [
    [
      12622,
      12622
    ],
    "mapped",
    [
      4370
    ]
  ],
  [
    [
      12623,
      12623
    ],
    "mapped",
    [
      4449
    ]
  ],
  [
    [
      12624,
      12624
    ],
    "mapped",
    [
      4450
    ]
  ],
  [
    [
      12625,
      12625
    ],
    "mapped",
    [
      4451
    ]
  ],
  [
    [
      12626,
      12626
    ],
    "mapped",
    [
      4452
    ]
  ],
  [
    [
      12627,
      12627
    ],
    "mapped",
    [
      4453
    ]
  ],
  [
    [
      12628,
      12628
    ],
    "mapped",
    [
      4454
    ]
  ],
  [
    [
      12629,
      12629
    ],
    "mapped",
    [
      4455
    ]
  ],
  [
    [
      12630,
      12630
    ],
    "mapped",
    [
      4456
    ]
  ],
  [
    [
      12631,
      12631
    ],
    "mapped",
    [
      4457
    ]
  ],
  [
    [
      12632,
      12632
    ],
    "mapped",
    [
      4458
    ]
  ],
  [
    [
      12633,
      12633
    ],
    "mapped",
    [
      4459
    ]
  ],
  [
    [
      12634,
      12634
    ],
    "mapped",
    [
      4460
    ]
  ],
  [
    [
      12635,
      12635
    ],
    "mapped",
    [
      4461
    ]
  ],
  [
    [
      12636,
      12636
    ],
    "mapped",
    [
      4462
    ]
  ],
  [
    [
      12637,
      12637
    ],
    "mapped",
    [
      4463
    ]
  ],
  [
    [
      12638,
      12638
    ],
    "mapped",
    [
      4464
    ]
  ],
  [
    [
      12639,
      12639
    ],
    "mapped",
    [
      4465
    ]
  ],
  [
    [
      12640,
      12640
    ],
    "mapped",
    [
      4466
    ]
  ],
  [
    [
      12641,
      12641
    ],
    "mapped",
    [
      4467
    ]
  ],
  [
    [
      12642,
      12642
    ],
    "mapped",
    [
      4468
    ]
  ],
  [
    [
      12643,
      12643
    ],
    "mapped",
    [
      4469
    ]
  ],
  [
    [
      12644,
      12644
    ],
    "disallowed"
  ],
  [
    [
      12645,
      12645
    ],
    "mapped",
    [
      4372
    ]
  ],
  [
    [
      12646,
      12646
    ],
    "mapped",
    [
      4373
    ]
  ],
  [
    [
      12647,
      12647
    ],
    "mapped",
    [
      4551
    ]
  ],
  [
    [
      12648,
      12648
    ],
    "mapped",
    [
      4552
    ]
  ],
  [
    [
      12649,
      12649
    ],
    "mapped",
    [
      4556
    ]
  ],
  [
    [
      12650,
      12650
    ],
    "mapped",
    [
      4558
    ]
  ],
  [
    [
      12651,
      12651
    ],
    "mapped",
    [
      4563
    ]
  ],
  [
    [
      12652,
      12652
    ],
    "mapped",
    [
      4567
    ]
  ],
  [
    [
      12653,
      12653
    ],
    "mapped",
    [
      4569
    ]
  ],
  [
    [
      12654,
      12654
    ],
    "mapped",
    [
      4380
    ]
  ],
  [
    [
      12655,
      12655
    ],
    "mapped",
    [
      4573
    ]
  ],
  [
    [
      12656,
      12656
    ],
    "mapped",
    [
      4575
    ]
  ],
  [
    [
      12657,
      12657
    ],
    "mapped",
    [
      4381
    ]
  ],
  [
    [
      12658,
      12658
    ],
    "mapped",
    [
      4382
    ]
  ],
  [
    [
      12659,
      12659
    ],
    "mapped",
    [
      4384
    ]
  ],
  [
    [
      12660,
      12660
    ],
    "mapped",
    [
      4386
    ]
  ],
  [
    [
      12661,
      12661
    ],
    "mapped",
    [
      4387
    ]
  ],
  [
    [
      12662,
      12662
    ],
    "mapped",
    [
      4391
    ]
  ],
  [
    [
      12663,
      12663
    ],
    "mapped",
    [
      4393
    ]
  ],
  [
    [
      12664,
      12664
    ],
    "mapped",
    [
      4395
    ]
  ],
  [
    [
      12665,
      12665
    ],
    "mapped",
    [
      4396
    ]
  ],
  [
    [
      12666,
      12666
    ],
    "mapped",
    [
      4397
    ]
  ],
  [
    [
      12667,
      12667
    ],
    "mapped",
    [
      4398
    ]
  ],
  [
    [
      12668,
      12668
    ],
    "mapped",
    [
      4399
    ]
  ],
  [
    [
      12669,
      12669
    ],
    "mapped",
    [
      4402
    ]
  ],
  [
    [
      12670,
      12670
    ],
    "mapped",
    [
      4406
    ]
  ],
  [
    [
      12671,
      12671
    ],
    "mapped",
    [
      4416
    ]
  ],
  [
    [
      12672,
      12672
    ],
    "mapped",
    [
      4423
    ]
  ],
  [
    [
      12673,
      12673
    ],
    "mapped",
    [
      4428
    ]
  ],
  [
    [
      12674,
      12674
    ],
    "mapped",
    [
      4593
    ]
  ],
  [
    [
      12675,
      12675
    ],
    "mapped",
    [
      4594
    ]
  ],
  [
    [
      12676,
      12676
    ],
    "mapped",
    [
      4439
    ]
  ],
  [
    [
      12677,
      12677
    ],
    "mapped",
    [
      4440
    ]
  ],
  [
    [
      12678,
      12678
    ],
    "mapped",
    [
      4441
    ]
  ],
  [
    [
      12679,
      12679
    ],
    "mapped",
    [
      4484
    ]
  ],
  [
    [
      12680,
      12680
    ],
    "mapped",
    [
      4485
    ]
  ],
  [
    [
      12681,
      12681
    ],
    "mapped",
    [
      4488
    ]
  ],
  [
    [
      12682,
      12682
    ],
    "mapped",
    [
      4497
    ]
  ],
  [
    [
      12683,
      12683
    ],
    "mapped",
    [
      4498
    ]
  ],
  [
    [
      12684,
      12684
    ],
    "mapped",
    [
      4500
    ]
  ],
  [
    [
      12685,
      12685
    ],
    "mapped",
    [
      4510
    ]
  ],
  [
    [
      12686,
      12686
    ],
    "mapped",
    [
      4513
    ]
  ],
  [
    [
      12687,
      12687
    ],
    "disallowed"
  ],
  [
    [
      12688,
      12689
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12690,
      12690
    ],
    "mapped",
    [
      19968
    ]
  ],
  [
    [
      12691,
      12691
    ],
    "mapped",
    [
      20108
    ]
  ],
  [
    [
      12692,
      12692
    ],
    "mapped",
    [
      19977
    ]
  ],
  [
    [
      12693,
      12693
    ],
    "mapped",
    [
      22235
    ]
  ],
  [
    [
      12694,
      12694
    ],
    "mapped",
    [
      19978
    ]
  ],
  [
    [
      12695,
      12695
    ],
    "mapped",
    [
      20013
    ]
  ],
  [
    [
      12696,
      12696
    ],
    "mapped",
    [
      19979
    ]
  ],
  [
    [
      12697,
      12697
    ],
    "mapped",
    [
      30002
    ]
  ],
  [
    [
      12698,
      12698
    ],
    "mapped",
    [
      20057
    ]
  ],
  [
    [
      12699,
      12699
    ],
    "mapped",
    [
      19993
    ]
  ],
  [
    [
      12700,
      12700
    ],
    "mapped",
    [
      19969
    ]
  ],
  [
    [
      12701,
      12701
    ],
    "mapped",
    [
      22825
    ]
  ],
  [
    [
      12702,
      12702
    ],
    "mapped",
    [
      22320
    ]
  ],
  [
    [
      12703,
      12703
    ],
    "mapped",
    [
      20154
    ]
  ],
  [
    [
      12704,
      12727
    ],
    "valid"
  ],
  [
    [
      12728,
      12730
    ],
    "valid"
  ],
  [
    [
      12731,
      12735
    ],
    "disallowed"
  ],
  [
    [
      12736,
      12751
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12752,
      12771
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12772,
      12783
    ],
    "disallowed"
  ],
  [
    [
      12784,
      12799
    ],
    "valid"
  ],
  [
    [
      12800,
      12800
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4352,
      41
    ]
  ],
  [
    [
      12801,
      12801
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4354,
      41
    ]
  ],
  [
    [
      12802,
      12802
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4355,
      41
    ]
  ],
  [
    [
      12803,
      12803
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4357,
      41
    ]
  ],
  [
    [
      12804,
      12804
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4358,
      41
    ]
  ],
  [
    [
      12805,
      12805
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4359,
      41
    ]
  ],
  [
    [
      12806,
      12806
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4361,
      41
    ]
  ],
  [
    [
      12807,
      12807
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4363,
      41
    ]
  ],
  [
    [
      12808,
      12808
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4364,
      41
    ]
  ],
  [
    [
      12809,
      12809
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4366,
      41
    ]
  ],
  [
    [
      12810,
      12810
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4367,
      41
    ]
  ],
  [
    [
      12811,
      12811
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4368,
      41
    ]
  ],
  [
    [
      12812,
      12812
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4369,
      41
    ]
  ],
  [
    [
      12813,
      12813
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4370,
      41
    ]
  ],
  [
    [
      12814,
      12814
    ],
    "disallowed_STD3_mapped",
    [
      40,
      44032,
      41
    ]
  ],
  [
    [
      12815,
      12815
    ],
    "disallowed_STD3_mapped",
    [
      40,
      45208,
      41
    ]
  ],
  [
    [
      12816,
      12816
    ],
    "disallowed_STD3_mapped",
    [
      40,
      45796,
      41
    ]
  ],
  [
    [
      12817,
      12817
    ],
    "disallowed_STD3_mapped",
    [
      40,
      46972,
      41
    ]
  ],
  [
    [
      12818,
      12818
    ],
    "disallowed_STD3_mapped",
    [
      40,
      47560,
      41
    ]
  ],
  [
    [
      12819,
      12819
    ],
    "disallowed_STD3_mapped",
    [
      40,
      48148,
      41
    ]
  ],
  [
    [
      12820,
      12820
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49324,
      41
    ]
  ],
  [
    [
      12821,
      12821
    ],
    "disallowed_STD3_mapped",
    [
      40,
      50500,
      41
    ]
  ],
  [
    [
      12822,
      12822
    ],
    "disallowed_STD3_mapped",
    [
      40,
      51088,
      41
    ]
  ],
  [
    [
      12823,
      12823
    ],
    "disallowed_STD3_mapped",
    [
      40,
      52264,
      41
    ]
  ],
  [
    [
      12824,
      12824
    ],
    "disallowed_STD3_mapped",
    [
      40,
      52852,
      41
    ]
  ],
  [
    [
      12825,
      12825
    ],
    "disallowed_STD3_mapped",
    [
      40,
      53440,
      41
    ]
  ],
  [
    [
      12826,
      12826
    ],
    "disallowed_STD3_mapped",
    [
      40,
      54028,
      41
    ]
  ],
  [
    [
      12827,
      12827
    ],
    "disallowed_STD3_mapped",
    [
      40,
      54616,
      41
    ]
  ],
  [
    [
      12828,
      12828
    ],
    "disallowed_STD3_mapped",
    [
      40,
      51452,
      41
    ]
  ],
  [
    [
      12829,
      12829
    ],
    "disallowed_STD3_mapped",
    [
      40,
      50724,
      51204,
      41
    ]
  ],
  [
    [
      12830,
      12830
    ],
    "disallowed_STD3_mapped",
    [
      40,
      50724,
      54980,
      41
    ]
  ],
  [
    [
      12831,
      12831
    ],
    "disallowed"
  ],
  [
    [
      12832,
      12832
    ],
    "disallowed_STD3_mapped",
    [
      40,
      19968,
      41
    ]
  ],
  [
    [
      12833,
      12833
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20108,
      41
    ]
  ],
  [
    [
      12834,
      12834
    ],
    "disallowed_STD3_mapped",
    [
      40,
      19977,
      41
    ]
  ],
  [
    [
      12835,
      12835
    ],
    "disallowed_STD3_mapped",
    [
      40,
      22235,
      41
    ]
  ],
  [
    [
      12836,
      12836
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20116,
      41
    ]
  ],
  [
    [
      12837,
      12837
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20845,
      41
    ]
  ],
  [
    [
      12838,
      12838
    ],
    "disallowed_STD3_mapped",
    [
      40,
      19971,
      41
    ]
  ],
  [
    [
      12839,
      12839
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20843,
      41
    ]
  ],
  [
    [
      12840,
      12840
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20061,
      41
    ]
  ],
  [
    [
      12841,
      12841
    ],
    "disallowed_STD3_mapped",
    [
      40,
      21313,
      41
    ]
  ],
  [
    [
      12842,
      12842
    ],
    "disallowed_STD3_mapped",
    [
      40,
      26376,
      41
    ]
  ],
  [
    [
      12843,
      12843
    ],
    "disallowed_STD3_mapped",
    [
      40,
      28779,
      41
    ]
  ],
  [
    [
      12844,
      12844
    ],
    "disallowed_STD3_mapped",
    [
      40,
      27700,
      41
    ]
  ],
  [
    [
      12845,
      12845
    ],
    "disallowed_STD3_mapped",
    [
      40,
      26408,
      41
    ]
  ],
  [
    [
      12846,
      12846
    ],
    "disallowed_STD3_mapped",
    [
      40,
      37329,
      41
    ]
  ],
  [
    [
      12847,
      12847
    ],
    "disallowed_STD3_mapped",
    [
      40,
      22303,
      41
    ]
  ],
  [
    [
      12848,
      12848
    ],
    "disallowed_STD3_mapped",
    [
      40,
      26085,
      41
    ]
  ],
  [
    [
      12849,
      12849
    ],
    "disallowed_STD3_mapped",
    [
      40,
      26666,
      41
    ]
  ],
  [
    [
      12850,
      12850
    ],
    "disallowed_STD3_mapped",
    [
      40,
      26377,
      41
    ]
  ],
  [
    [
      12851,
      12851
    ],
    "disallowed_STD3_mapped",
    [
      40,
      31038,
      41
    ]
  ],
  [
    [
      12852,
      12852
    ],
    "disallowed_STD3_mapped",
    [
      40,
      21517,
      41
    ]
  ],
  [
    [
      12853,
      12853
    ],
    "disallowed_STD3_mapped",
    [
      40,
      29305,
      41
    ]
  ],
  [
    [
      12854,
      12854
    ],
    "disallowed_STD3_mapped",
    [
      40,
      36001,
      41
    ]
  ],
  [
    [
      12855,
      12855
    ],
    "disallowed_STD3_mapped",
    [
      40,
      31069,
      41
    ]
  ],
  [
    [
      12856,
      12856
    ],
    "disallowed_STD3_mapped",
    [
      40,
      21172,
      41
    ]
  ],
  [
    [
      12857,
      12857
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20195,
      41
    ]
  ],
  [
    [
      12858,
      12858
    ],
    "disallowed_STD3_mapped",
    [
      40,
      21628,
      41
    ]
  ],
  [
    [
      12859,
      12859
    ],
    "disallowed_STD3_mapped",
    [
      40,
      23398,
      41
    ]
  ],
  [
    [
      12860,
      12860
    ],
    "disallowed_STD3_mapped",
    [
      40,
      30435,
      41
    ]
  ],
  [
    [
      12861,
      12861
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20225,
      41
    ]
  ],
  [
    [
      12862,
      12862
    ],
    "disallowed_STD3_mapped",
    [
      40,
      36039,
      41
    ]
  ],
  [
    [
      12863,
      12863
    ],
    "disallowed_STD3_mapped",
    [
      40,
      21332,
      41
    ]
  ],
  [
    [
      12864,
      12864
    ],
    "disallowed_STD3_mapped",
    [
      40,
      31085,
      41
    ]
  ],
  [
    [
      12865,
      12865
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20241,
      41
    ]
  ],
  [
    [
      12866,
      12866
    ],
    "disallowed_STD3_mapped",
    [
      40,
      33258,
      41
    ]
  ],
  [
    [
      12867,
      12867
    ],
    "disallowed_STD3_mapped",
    [
      40,
      33267,
      41
    ]
  ],
  [
    [
      12868,
      12868
    ],
    "mapped",
    [
      21839
    ]
  ],
  [
    [
      12869,
      12869
    ],
    "mapped",
    [
      24188
    ]
  ],
  [
    [
      12870,
      12870
    ],
    "mapped",
    [
      25991
    ]
  ],
  [
    [
      12871,
      12871
    ],
    "mapped",
    [
      31631
    ]
  ],
  [
    [
      12872,
      12879
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12880,
      12880
    ],
    "mapped",
    [
      112,
      116,
      101
    ]
  ],
  [
    [
      12881,
      12881
    ],
    "mapped",
    [
      50,
      49
    ]
  ],
  [
    [
      12882,
      12882
    ],
    "mapped",
    [
      50,
      50
    ]
  ],
  [
    [
      12883,
      12883
    ],
    "mapped",
    [
      50,
      51
    ]
  ],
  [
    [
      12884,
      12884
    ],
    "mapped",
    [
      50,
      52
    ]
  ],
  [
    [
      12885,
      12885
    ],
    "mapped",
    [
      50,
      53
    ]
  ],
  [
    [
      12886,
      12886
    ],
    "mapped",
    [
      50,
      54
    ]
  ],
  [
    [
      12887,
      12887
    ],
    "mapped",
    [
      50,
      55
    ]
  ],
  [
    [
      12888,
      12888
    ],
    "mapped",
    [
      50,
      56
    ]
  ],
  [
    [
      12889,
      12889
    ],
    "mapped",
    [
      50,
      57
    ]
  ],
  [
    [
      12890,
      12890
    ],
    "mapped",
    [
      51,
      48
    ]
  ],
  [
    [
      12891,
      12891
    ],
    "mapped",
    [
      51,
      49
    ]
  ],
  [
    [
      12892,
      12892
    ],
    "mapped",
    [
      51,
      50
    ]
  ],
  [
    [
      12893,
      12893
    ],
    "mapped",
    [
      51,
      51
    ]
  ],
  [
    [
      12894,
      12894
    ],
    "mapped",
    [
      51,
      52
    ]
  ],
  [
    [
      12895,
      12895
    ],
    "mapped",
    [
      51,
      53
    ]
  ],
  [
    [
      12896,
      12896
    ],
    "mapped",
    [
      4352
    ]
  ],
  [
    [
      12897,
      12897
    ],
    "mapped",
    [
      4354
    ]
  ],
  [
    [
      12898,
      12898
    ],
    "mapped",
    [
      4355
    ]
  ],
  [
    [
      12899,
      12899
    ],
    "mapped",
    [
      4357
    ]
  ],
  [
    [
      12900,
      12900
    ],
    "mapped",
    [
      4358
    ]
  ],
  [
    [
      12901,
      12901
    ],
    "mapped",
    [
      4359
    ]
  ],
  [
    [
      12902,
      12902
    ],
    "mapped",
    [
      4361
    ]
  ],
  [
    [
      12903,
      12903
    ],
    "mapped",
    [
      4363
    ]
  ],
  [
    [
      12904,
      12904
    ],
    "mapped",
    [
      4364
    ]
  ],
  [
    [
      12905,
      12905
    ],
    "mapped",
    [
      4366
    ]
  ],
  [
    [
      12906,
      12906
    ],
    "mapped",
    [
      4367
    ]
  ],
  [
    [
      12907,
      12907
    ],
    "mapped",
    [
      4368
    ]
  ],
  [
    [
      12908,
      12908
    ],
    "mapped",
    [
      4369
    ]
  ],
  [
    [
      12909,
      12909
    ],
    "mapped",
    [
      4370
    ]
  ],
  [
    [
      12910,
      12910
    ],
    "mapped",
    [
      44032
    ]
  ],
  [
    [
      12911,
      12911
    ],
    "mapped",
    [
      45208
    ]
  ],
  [
    [
      12912,
      12912
    ],
    "mapped",
    [
      45796
    ]
  ],
  [
    [
      12913,
      12913
    ],
    "mapped",
    [
      46972
    ]
  ],
  [
    [
      12914,
      12914
    ],
    "mapped",
    [
      47560
    ]
  ],
  [
    [
      12915,
      12915
    ],
    "mapped",
    [
      48148
    ]
  ],
  [
    [
      12916,
      12916
    ],
    "mapped",
    [
      49324
    ]
  ],
  [
    [
      12917,
      12917
    ],
    "mapped",
    [
      50500
    ]
  ],
  [
    [
      12918,
      12918
    ],
    "mapped",
    [
      51088
    ]
  ],
  [
    [
      12919,
      12919
    ],
    "mapped",
    [
      52264
    ]
  ],
  [
    [
      12920,
      12920
    ],
    "mapped",
    [
      52852
    ]
  ],
  [
    [
      12921,
      12921
    ],
    "mapped",
    [
      53440
    ]
  ],
  [
    [
      12922,
      12922
    ],
    "mapped",
    [
      54028
    ]
  ],
  [
    [
      12923,
      12923
    ],
    "mapped",
    [
      54616
    ]
  ],
  [
    [
      12924,
      12924
    ],
    "mapped",
    [
      52280,
      44256
    ]
  ],
  [
    [
      12925,
      12925
    ],
    "mapped",
    [
      51452,
      51032
    ]
  ],
  [
    [
      12926,
      12926
    ],
    "mapped",
    [
      50864
    ]
  ],
  [
    [
      12927,
      12927
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12928,
      12928
    ],
    "mapped",
    [
      19968
    ]
  ],
  [
    [
      12929,
      12929
    ],
    "mapped",
    [
      20108
    ]
  ],
  [
    [
      12930,
      12930
    ],
    "mapped",
    [
      19977
    ]
  ],
  [
    [
      12931,
      12931
    ],
    "mapped",
    [
      22235
    ]
  ],
  [
    [
      12932,
      12932
    ],
    "mapped",
    [
      20116
    ]
  ],
  [
    [
      12933,
      12933
    ],
    "mapped",
    [
      20845
    ]
  ],
  [
    [
      12934,
      12934
    ],
    "mapped",
    [
      19971
    ]
  ],
  [
    [
      12935,
      12935
    ],
    "mapped",
    [
      20843
    ]
  ],
  [
    [
      12936,
      12936
    ],
    "mapped",
    [
      20061
    ]
  ],
  [
    [
      12937,
      12937
    ],
    "mapped",
    [
      21313
    ]
  ],
  [
    [
      12938,
      12938
    ],
    "mapped",
    [
      26376
    ]
  ],
  [
    [
      12939,
      12939
    ],
    "mapped",
    [
      28779
    ]
  ],
  [
    [
      12940,
      12940
    ],
    "mapped",
    [
      27700
    ]
  ],
  [
    [
      12941,
      12941
    ],
    "mapped",
    [
      26408
    ]
  ],
  [
    [
      12942,
      12942
    ],
    "mapped",
    [
      37329
    ]
  ],
  [
    [
      12943,
      12943
    ],
    "mapped",
    [
      22303
    ]
  ],
  [
    [
      12944,
      12944
    ],
    "mapped",
    [
      26085
    ]
  ],
  [
    [
      12945,
      12945
    ],
    "mapped",
    [
      26666
    ]
  ],
  [
    [
      12946,
      12946
    ],
    "mapped",
    [
      26377
    ]
  ],
  [
    [
      12947,
      12947
    ],
    "mapped",
    [
      31038
    ]
  ],
  [
    [
      12948,
      12948
    ],
    "mapped",
    [
      21517
    ]
  ],
  [
    [
      12949,
      12949
    ],
    "mapped",
    [
      29305
    ]
  ],
  [
    [
      12950,
      12950
    ],
    "mapped",
    [
      36001
    ]
  ],
  [
    [
      12951,
      12951
    ],
    "mapped",
    [
      31069
    ]
  ],
  [
    [
      12952,
      12952
    ],
    "mapped",
    [
      21172
    ]
  ],
  [
    [
      12953,
      12953
    ],
    "mapped",
    [
      31192
    ]
  ],
  [
    [
      12954,
      12954
    ],
    "mapped",
    [
      30007
    ]
  ],
  [
    [
      12955,
      12955
    ],
    "mapped",
    [
      22899
    ]
  ],
  [
    [
      12956,
      12956
    ],
    "mapped",
    [
      36969
    ]
  ],
  [
    [
      12957,
      12957
    ],
    "mapped",
    [
      20778
    ]
  ],
  [
    [
      12958,
      12958
    ],
    "mapped",
    [
      21360
    ]
  ],
  [
    [
      12959,
      12959
    ],
    "mapped",
    [
      27880
    ]
  ],
  [
    [
      12960,
      12960
    ],
    "mapped",
    [
      38917
    ]
  ],
  [
    [
      12961,
      12961
    ],
    "mapped",
    [
      20241
    ]
  ],
  [
    [
      12962,
      12962
    ],
    "mapped",
    [
      20889
    ]
  ],
  [
    [
      12963,
      12963
    ],
    "mapped",
    [
      27491
    ]
  ],
  [
    [
      12964,
      12964
    ],
    "mapped",
    [
      19978
    ]
  ],
  [
    [
      12965,
      12965
    ],
    "mapped",
    [
      20013
    ]
  ],
  [
    [
      12966,
      12966
    ],
    "mapped",
    [
      19979
    ]
  ],
  [
    [
      12967,
      12967
    ],
    "mapped",
    [
      24038
    ]
  ],
  [
    [
      12968,
      12968
    ],
    "mapped",
    [
      21491
    ]
  ],
  [
    [
      12969,
      12969
    ],
    "mapped",
    [
      21307
    ]
  ],
  [
    [
      12970,
      12970
    ],
    "mapped",
    [
      23447
    ]
  ],
  [
    [
      12971,
      12971
    ],
    "mapped",
    [
      23398
    ]
  ],
  [
    [
      12972,
      12972
    ],
    "mapped",
    [
      30435
    ]
  ],
  [
    [
      12973,
      12973
    ],
    "mapped",
    [
      20225
    ]
  ],
  [
    [
      12974,
      12974
    ],
    "mapped",
    [
      36039
    ]
  ],
  [
    [
      12975,
      12975
    ],
    "mapped",
    [
      21332
    ]
  ],
  [
    [
      12976,
      12976
    ],
    "mapped",
    [
      22812
    ]
  ],
  [
    [
      12977,
      12977
    ],
    "mapped",
    [
      51,
      54
    ]
  ],
  [
    [
      12978,
      12978
    ],
    "mapped",
    [
      51,
      55
    ]
  ],
  [
    [
      12979,
      12979
    ],
    "mapped",
    [
      51,
      56
    ]
  ],
  [
    [
      12980,
      12980
    ],
    "mapped",
    [
      51,
      57
    ]
  ],
  [
    [
      12981,
      12981
    ],
    "mapped",
    [
      52,
      48
    ]
  ],
  [
    [
      12982,
      12982
    ],
    "mapped",
    [
      52,
      49
    ]
  ],
  [
    [
      12983,
      12983
    ],
    "mapped",
    [
      52,
      50
    ]
  ],
  [
    [
      12984,
      12984
    ],
    "mapped",
    [
      52,
      51
    ]
  ],
  [
    [
      12985,
      12985
    ],
    "mapped",
    [
      52,
      52
    ]
  ],
  [
    [
      12986,
      12986
    ],
    "mapped",
    [
      52,
      53
    ]
  ],
  [
    [
      12987,
      12987
    ],
    "mapped",
    [
      52,
      54
    ]
  ],
  [
    [
      12988,
      12988
    ],
    "mapped",
    [
      52,
      55
    ]
  ],
  [
    [
      12989,
      12989
    ],
    "mapped",
    [
      52,
      56
    ]
  ],
  [
    [
      12990,
      12990
    ],
    "mapped",
    [
      52,
      57
    ]
  ],
  [
    [
      12991,
      12991
    ],
    "mapped",
    [
      53,
      48
    ]
  ],
  [
    [
      12992,
      12992
    ],
    "mapped",
    [
      49,
      26376
    ]
  ],
  [
    [
      12993,
      12993
    ],
    "mapped",
    [
      50,
      26376
    ]
  ],
  [
    [
      12994,
      12994
    ],
    "mapped",
    [
      51,
      26376
    ]
  ],
  [
    [
      12995,
      12995
    ],
    "mapped",
    [
      52,
      26376
    ]
  ],
  [
    [
      12996,
      12996
    ],
    "mapped",
    [
      53,
      26376
    ]
  ],
  [
    [
      12997,
      12997
    ],
    "mapped",
    [
      54,
      26376
    ]
  ],
  [
    [
      12998,
      12998
    ],
    "mapped",
    [
      55,
      26376
    ]
  ],
  [
    [
      12999,
      12999
    ],
    "mapped",
    [
      56,
      26376
    ]
  ],
  [
    [
      13e3,
      13e3
    ],
    "mapped",
    [
      57,
      26376
    ]
  ],
  [
    [
      13001,
      13001
    ],
    "mapped",
    [
      49,
      48,
      26376
    ]
  ],
  [
    [
      13002,
      13002
    ],
    "mapped",
    [
      49,
      49,
      26376
    ]
  ],
  [
    [
      13003,
      13003
    ],
    "mapped",
    [
      49,
      50,
      26376
    ]
  ],
  [
    [
      13004,
      13004
    ],
    "mapped",
    [
      104,
      103
    ]
  ],
  [
    [
      13005,
      13005
    ],
    "mapped",
    [
      101,
      114,
      103
    ]
  ],
  [
    [
      13006,
      13006
    ],
    "mapped",
    [
      101,
      118
    ]
  ],
  [
    [
      13007,
      13007
    ],
    "mapped",
    [
      108,
      116,
      100
    ]
  ],
  [
    [
      13008,
      13008
    ],
    "mapped",
    [
      12450
    ]
  ],
  [
    [
      13009,
      13009
    ],
    "mapped",
    [
      12452
    ]
  ],
  [
    [
      13010,
      13010
    ],
    "mapped",
    [
      12454
    ]
  ],
  [
    [
      13011,
      13011
    ],
    "mapped",
    [
      12456
    ]
  ],
  [
    [
      13012,
      13012
    ],
    "mapped",
    [
      12458
    ]
  ],
  [
    [
      13013,
      13013
    ],
    "mapped",
    [
      12459
    ]
  ],
  [
    [
      13014,
      13014
    ],
    "mapped",
    [
      12461
    ]
  ],
  [
    [
      13015,
      13015
    ],
    "mapped",
    [
      12463
    ]
  ],
  [
    [
      13016,
      13016
    ],
    "mapped",
    [
      12465
    ]
  ],
  [
    [
      13017,
      13017
    ],
    "mapped",
    [
      12467
    ]
  ],
  [
    [
      13018,
      13018
    ],
    "mapped",
    [
      12469
    ]
  ],
  [
    [
      13019,
      13019
    ],
    "mapped",
    [
      12471
    ]
  ],
  [
    [
      13020,
      13020
    ],
    "mapped",
    [
      12473
    ]
  ],
  [
    [
      13021,
      13021
    ],
    "mapped",
    [
      12475
    ]
  ],
  [
    [
      13022,
      13022
    ],
    "mapped",
    [
      12477
    ]
  ],
  [
    [
      13023,
      13023
    ],
    "mapped",
    [
      12479
    ]
  ],
  [
    [
      13024,
      13024
    ],
    "mapped",
    [
      12481
    ]
  ],
  [
    [
      13025,
      13025
    ],
    "mapped",
    [
      12484
    ]
  ],
  [
    [
      13026,
      13026
    ],
    "mapped",
    [
      12486
    ]
  ],
  [
    [
      13027,
      13027
    ],
    "mapped",
    [
      12488
    ]
  ],
  [
    [
      13028,
      13028
    ],
    "mapped",
    [
      12490
    ]
  ],
  [
    [
      13029,
      13029
    ],
    "mapped",
    [
      12491
    ]
  ],
  [
    [
      13030,
      13030
    ],
    "mapped",
    [
      12492
    ]
  ],
  [
    [
      13031,
      13031
    ],
    "mapped",
    [
      12493
    ]
  ],
  [
    [
      13032,
      13032
    ],
    "mapped",
    [
      12494
    ]
  ],
  [
    [
      13033,
      13033
    ],
    "mapped",
    [
      12495
    ]
  ],
  [
    [
      13034,
      13034
    ],
    "mapped",
    [
      12498
    ]
  ],
  [
    [
      13035,
      13035
    ],
    "mapped",
    [
      12501
    ]
  ],
  [
    [
      13036,
      13036
    ],
    "mapped",
    [
      12504
    ]
  ],
  [
    [
      13037,
      13037
    ],
    "mapped",
    [
      12507
    ]
  ],
  [
    [
      13038,
      13038
    ],
    "mapped",
    [
      12510
    ]
  ],
  [
    [
      13039,
      13039
    ],
    "mapped",
    [
      12511
    ]
  ],
  [
    [
      13040,
      13040
    ],
    "mapped",
    [
      12512
    ]
  ],
  [
    [
      13041,
      13041
    ],
    "mapped",
    [
      12513
    ]
  ],
  [
    [
      13042,
      13042
    ],
    "mapped",
    [
      12514
    ]
  ],
  [
    [
      13043,
      13043
    ],
    "mapped",
    [
      12516
    ]
  ],
  [
    [
      13044,
      13044
    ],
    "mapped",
    [
      12518
    ]
  ],
  [
    [
      13045,
      13045
    ],
    "mapped",
    [
      12520
    ]
  ],
  [
    [
      13046,
      13046
    ],
    "mapped",
    [
      12521
    ]
  ],
  [
    [
      13047,
      13047
    ],
    "mapped",
    [
      12522
    ]
  ],
  [
    [
      13048,
      13048
    ],
    "mapped",
    [
      12523
    ]
  ],
  [
    [
      13049,
      13049
    ],
    "mapped",
    [
      12524
    ]
  ],
  [
    [
      13050,
      13050
    ],
    "mapped",
    [
      12525
    ]
  ],
  [
    [
      13051,
      13051
    ],
    "mapped",
    [
      12527
    ]
  ],
  [
    [
      13052,
      13052
    ],
    "mapped",
    [
      12528
    ]
  ],
  [
    [
      13053,
      13053
    ],
    "mapped",
    [
      12529
    ]
  ],
  [
    [
      13054,
      13054
    ],
    "mapped",
    [
      12530
    ]
  ],
  [
    [
      13055,
      13055
    ],
    "disallowed"
  ],
  [
    [
      13056,
      13056
    ],
    "mapped",
    [
      12450,
      12497,
      12540,
      12488
    ]
  ],
  [
    [
      13057,
      13057
    ],
    "mapped",
    [
      12450,
      12523,
      12501,
      12449
    ]
  ],
  [
    [
      13058,
      13058
    ],
    "mapped",
    [
      12450,
      12531,
      12506,
      12450
    ]
  ],
  [
    [
      13059,
      13059
    ],
    "mapped",
    [
      12450,
      12540,
      12523
    ]
  ],
  [
    [
      13060,
      13060
    ],
    "mapped",
    [
      12452,
      12491,
      12531,
      12464
    ]
  ],
  [
    [
      13061,
      13061
    ],
    "mapped",
    [
      12452,
      12531,
      12481
    ]
  ],
  [
    [
      13062,
      13062
    ],
    "mapped",
    [
      12454,
      12457,
      12531
    ]
  ],
  [
    [
      13063,
      13063
    ],
    "mapped",
    [
      12456,
      12473,
      12463,
      12540,
      12489
    ]
  ],
  [
    [
      13064,
      13064
    ],
    "mapped",
    [
      12456,
      12540,
      12459,
      12540
    ]
  ],
  [
    [
      13065,
      13065
    ],
    "mapped",
    [
      12458,
      12531,
      12473
    ]
  ],
  [
    [
      13066,
      13066
    ],
    "mapped",
    [
      12458,
      12540,
      12512
    ]
  ],
  [
    [
      13067,
      13067
    ],
    "mapped",
    [
      12459,
      12452,
      12522
    ]
  ],
  [
    [
      13068,
      13068
    ],
    "mapped",
    [
      12459,
      12521,
      12483,
      12488
    ]
  ],
  [
    [
      13069,
      13069
    ],
    "mapped",
    [
      12459,
      12525,
      12522,
      12540
    ]
  ],
  [
    [
      13070,
      13070
    ],
    "mapped",
    [
      12460,
      12525,
      12531
    ]
  ],
  [
    [
      13071,
      13071
    ],
    "mapped",
    [
      12460,
      12531,
      12510
    ]
  ],
  [
    [
      13072,
      13072
    ],
    "mapped",
    [
      12462,
      12460
    ]
  ],
  [
    [
      13073,
      13073
    ],
    "mapped",
    [
      12462,
      12491,
      12540
    ]
  ],
  [
    [
      13074,
      13074
    ],
    "mapped",
    [
      12461,
      12517,
      12522,
      12540
    ]
  ],
  [
    [
      13075,
      13075
    ],
    "mapped",
    [
      12462,
      12523,
      12480,
      12540
    ]
  ],
  [
    [
      13076,
      13076
    ],
    "mapped",
    [
      12461,
      12525
    ]
  ],
  [
    [
      13077,
      13077
    ],
    "mapped",
    [
      12461,
      12525,
      12464,
      12521,
      12512
    ]
  ],
  [
    [
      13078,
      13078
    ],
    "mapped",
    [
      12461,
      12525,
      12513,
      12540,
      12488,
      12523
    ]
  ],
  [
    [
      13079,
      13079
    ],
    "mapped",
    [
      12461,
      12525,
      12527,
      12483,
      12488
    ]
  ],
  [
    [
      13080,
      13080
    ],
    "mapped",
    [
      12464,
      12521,
      12512
    ]
  ],
  [
    [
      13081,
      13081
    ],
    "mapped",
    [
      12464,
      12521,
      12512,
      12488,
      12531
    ]
  ],
  [
    [
      13082,
      13082
    ],
    "mapped",
    [
      12463,
      12523,
      12476,
      12452,
      12525
    ]
  ],
  [
    [
      13083,
      13083
    ],
    "mapped",
    [
      12463,
      12525,
      12540,
      12493
    ]
  ],
  [
    [
      13084,
      13084
    ],
    "mapped",
    [
      12465,
      12540,
      12473
    ]
  ],
  [
    [
      13085,
      13085
    ],
    "mapped",
    [
      12467,
      12523,
      12490
    ]
  ],
  [
    [
      13086,
      13086
    ],
    "mapped",
    [
      12467,
      12540,
      12509
    ]
  ],
  [
    [
      13087,
      13087
    ],
    "mapped",
    [
      12469,
      12452,
      12463,
      12523
    ]
  ],
  [
    [
      13088,
      13088
    ],
    "mapped",
    [
      12469,
      12531,
      12481,
      12540,
      12512
    ]
  ],
  [
    [
      13089,
      13089
    ],
    "mapped",
    [
      12471,
      12522,
      12531,
      12464
    ]
  ],
  [
    [
      13090,
      13090
    ],
    "mapped",
    [
      12475,
      12531,
      12481
    ]
  ],
  [
    [
      13091,
      13091
    ],
    "mapped",
    [
      12475,
      12531,
      12488
    ]
  ],
  [
    [
      13092,
      13092
    ],
    "mapped",
    [
      12480,
      12540,
      12473
    ]
  ],
  [
    [
      13093,
      13093
    ],
    "mapped",
    [
      12487,
      12471
    ]
  ],
  [
    [
      13094,
      13094
    ],
    "mapped",
    [
      12489,
      12523
    ]
  ],
  [
    [
      13095,
      13095
    ],
    "mapped",
    [
      12488,
      12531
    ]
  ],
  [
    [
      13096,
      13096
    ],
    "mapped",
    [
      12490,
      12494
    ]
  ],
  [
    [
      13097,
      13097
    ],
    "mapped",
    [
      12494,
      12483,
      12488
    ]
  ],
  [
    [
      13098,
      13098
    ],
    "mapped",
    [
      12495,
      12452,
      12484
    ]
  ],
  [
    [
      13099,
      13099
    ],
    "mapped",
    [
      12497,
      12540,
      12475,
      12531,
      12488
    ]
  ],
  [
    [
      13100,
      13100
    ],
    "mapped",
    [
      12497,
      12540,
      12484
    ]
  ],
  [
    [
      13101,
      13101
    ],
    "mapped",
    [
      12496,
      12540,
      12524,
      12523
    ]
  ],
  [
    [
      13102,
      13102
    ],
    "mapped",
    [
      12500,
      12450,
      12473,
      12488,
      12523
    ]
  ],
  [
    [
      13103,
      13103
    ],
    "mapped",
    [
      12500,
      12463,
      12523
    ]
  ],
  [
    [
      13104,
      13104
    ],
    "mapped",
    [
      12500,
      12467
    ]
  ],
  [
    [
      13105,
      13105
    ],
    "mapped",
    [
      12499,
      12523
    ]
  ],
  [
    [
      13106,
      13106
    ],
    "mapped",
    [
      12501,
      12449,
      12521,
      12483,
      12489
    ]
  ],
  [
    [
      13107,
      13107
    ],
    "mapped",
    [
      12501,
      12451,
      12540,
      12488
    ]
  ],
  [
    [
      13108,
      13108
    ],
    "mapped",
    [
      12502,
      12483,
      12471,
      12455,
      12523
    ]
  ],
  [
    [
      13109,
      13109
    ],
    "mapped",
    [
      12501,
      12521,
      12531
    ]
  ],
  [
    [
      13110,
      13110
    ],
    "mapped",
    [
      12504,
      12463,
      12479,
      12540,
      12523
    ]
  ],
  [
    [
      13111,
      13111
    ],
    "mapped",
    [
      12506,
      12477
    ]
  ],
  [
    [
      13112,
      13112
    ],
    "mapped",
    [
      12506,
      12491,
      12498
    ]
  ],
  [
    [
      13113,
      13113
    ],
    "mapped",
    [
      12504,
      12523,
      12484
    ]
  ],
  [
    [
      13114,
      13114
    ],
    "mapped",
    [
      12506,
      12531,
      12473
    ]
  ],
  [
    [
      13115,
      13115
    ],
    "mapped",
    [
      12506,
      12540,
      12472
    ]
  ],
  [
    [
      13116,
      13116
    ],
    "mapped",
    [
      12505,
      12540,
      12479
    ]
  ],
  [
    [
      13117,
      13117
    ],
    "mapped",
    [
      12509,
      12452,
      12531,
      12488
    ]
  ],
  [
    [
      13118,
      13118
    ],
    "mapped",
    [
      12508,
      12523,
      12488
    ]
  ],
  [
    [
      13119,
      13119
    ],
    "mapped",
    [
      12507,
      12531
    ]
  ],
  [
    [
      13120,
      13120
    ],
    "mapped",
    [
      12509,
      12531,
      12489
    ]
  ],
  [
    [
      13121,
      13121
    ],
    "mapped",
    [
      12507,
      12540,
      12523
    ]
  ],
  [
    [
      13122,
      13122
    ],
    "mapped",
    [
      12507,
      12540,
      12531
    ]
  ],
  [
    [
      13123,
      13123
    ],
    "mapped",
    [
      12510,
      12452,
      12463,
      12525
    ]
  ],
  [
    [
      13124,
      13124
    ],
    "mapped",
    [
      12510,
      12452,
      12523
    ]
  ],
  [
    [
      13125,
      13125
    ],
    "mapped",
    [
      12510,
      12483,
      12495
    ]
  ],
  [
    [
      13126,
      13126
    ],
    "mapped",
    [
      12510,
      12523,
      12463
    ]
  ],
  [
    [
      13127,
      13127
    ],
    "mapped",
    [
      12510,
      12531,
      12471,
      12519,
      12531
    ]
  ],
  [
    [
      13128,
      13128
    ],
    "mapped",
    [
      12511,
      12463,
      12525,
      12531
    ]
  ],
  [
    [
      13129,
      13129
    ],
    "mapped",
    [
      12511,
      12522
    ]
  ],
  [
    [
      13130,
      13130
    ],
    "mapped",
    [
      12511,
      12522,
      12496,
      12540,
      12523
    ]
  ],
  [
    [
      13131,
      13131
    ],
    "mapped",
    [
      12513,
      12460
    ]
  ],
  [
    [
      13132,
      13132
    ],
    "mapped",
    [
      12513,
      12460,
      12488,
      12531
    ]
  ],
  [
    [
      13133,
      13133
    ],
    "mapped",
    [
      12513,
      12540,
      12488,
      12523
    ]
  ],
  [
    [
      13134,
      13134
    ],
    "mapped",
    [
      12516,
      12540,
      12489
    ]
  ],
  [
    [
      13135,
      13135
    ],
    "mapped",
    [
      12516,
      12540,
      12523
    ]
  ],
  [
    [
      13136,
      13136
    ],
    "mapped",
    [
      12518,
      12450,
      12531
    ]
  ],
  [
    [
      13137,
      13137
    ],
    "mapped",
    [
      12522,
      12483,
      12488,
      12523
    ]
  ],
  [
    [
      13138,
      13138
    ],
    "mapped",
    [
      12522,
      12521
    ]
  ],
  [
    [
      13139,
      13139
    ],
    "mapped",
    [
      12523,
      12500,
      12540
    ]
  ],
  [
    [
      13140,
      13140
    ],
    "mapped",
    [
      12523,
      12540,
      12502,
      12523
    ]
  ],
  [
    [
      13141,
      13141
    ],
    "mapped",
    [
      12524,
      12512
    ]
  ],
  [
    [
      13142,
      13142
    ],
    "mapped",
    [
      12524,
      12531,
      12488,
      12466,
      12531
    ]
  ],
  [
    [
      13143,
      13143
    ],
    "mapped",
    [
      12527,
      12483,
      12488
    ]
  ],
  [
    [
      13144,
      13144
    ],
    "mapped",
    [
      48,
      28857
    ]
  ],
  [
    [
      13145,
      13145
    ],
    "mapped",
    [
      49,
      28857
    ]
  ],
  [
    [
      13146,
      13146
    ],
    "mapped",
    [
      50,
      28857
    ]
  ],
  [
    [
      13147,
      13147
    ],
    "mapped",
    [
      51,
      28857
    ]
  ],
  [
    [
      13148,
      13148
    ],
    "mapped",
    [
      52,
      28857
    ]
  ],
  [
    [
      13149,
      13149
    ],
    "mapped",
    [
      53,
      28857
    ]
  ],
  [
    [
      13150,
      13150
    ],
    "mapped",
    [
      54,
      28857
    ]
  ],
  [
    [
      13151,
      13151
    ],
    "mapped",
    [
      55,
      28857
    ]
  ],
  [
    [
      13152,
      13152
    ],
    "mapped",
    [
      56,
      28857
    ]
  ],
  [
    [
      13153,
      13153
    ],
    "mapped",
    [
      57,
      28857
    ]
  ],
  [
    [
      13154,
      13154
    ],
    "mapped",
    [
      49,
      48,
      28857
    ]
  ],
  [
    [
      13155,
      13155
    ],
    "mapped",
    [
      49,
      49,
      28857
    ]
  ],
  [
    [
      13156,
      13156
    ],
    "mapped",
    [
      49,
      50,
      28857
    ]
  ],
  [
    [
      13157,
      13157
    ],
    "mapped",
    [
      49,
      51,
      28857
    ]
  ],
  [
    [
      13158,
      13158
    ],
    "mapped",
    [
      49,
      52,
      28857
    ]
  ],
  [
    [
      13159,
      13159
    ],
    "mapped",
    [
      49,
      53,
      28857
    ]
  ],
  [
    [
      13160,
      13160
    ],
    "mapped",
    [
      49,
      54,
      28857
    ]
  ],
  [
    [
      13161,
      13161
    ],
    "mapped",
    [
      49,
      55,
      28857
    ]
  ],
  [
    [
      13162,
      13162
    ],
    "mapped",
    [
      49,
      56,
      28857
    ]
  ],
  [
    [
      13163,
      13163
    ],
    "mapped",
    [
      49,
      57,
      28857
    ]
  ],
  [
    [
      13164,
      13164
    ],
    "mapped",
    [
      50,
      48,
      28857
    ]
  ],
  [
    [
      13165,
      13165
    ],
    "mapped",
    [
      50,
      49,
      28857
    ]
  ],
  [
    [
      13166,
      13166
    ],
    "mapped",
    [
      50,
      50,
      28857
    ]
  ],
  [
    [
      13167,
      13167
    ],
    "mapped",
    [
      50,
      51,
      28857
    ]
  ],
  [
    [
      13168,
      13168
    ],
    "mapped",
    [
      50,
      52,
      28857
    ]
  ],
  [
    [
      13169,
      13169
    ],
    "mapped",
    [
      104,
      112,
      97
    ]
  ],
  [
    [
      13170,
      13170
    ],
    "mapped",
    [
      100,
      97
    ]
  ],
  [
    [
      13171,
      13171
    ],
    "mapped",
    [
      97,
      117
    ]
  ],
  [
    [
      13172,
      13172
    ],
    "mapped",
    [
      98,
      97,
      114
    ]
  ],
  [
    [
      13173,
      13173
    ],
    "mapped",
    [
      111,
      118
    ]
  ],
  [
    [
      13174,
      13174
    ],
    "mapped",
    [
      112,
      99
    ]
  ],
  [
    [
      13175,
      13175
    ],
    "mapped",
    [
      100,
      109
    ]
  ],
  [
    [
      13176,
      13176
    ],
    "mapped",
    [
      100,
      109,
      50
    ]
  ],
  [
    [
      13177,
      13177
    ],
    "mapped",
    [
      100,
      109,
      51
    ]
  ],
  [
    [
      13178,
      13178
    ],
    "mapped",
    [
      105,
      117
    ]
  ],
  [
    [
      13179,
      13179
    ],
    "mapped",
    [
      24179,
      25104
    ]
  ],
  [
    [
      13180,
      13180
    ],
    "mapped",
    [
      26157,
      21644
    ]
  ],
  [
    [
      13181,
      13181
    ],
    "mapped",
    [
      22823,
      27491
    ]
  ],
  [
    [
      13182,
      13182
    ],
    "mapped",
    [
      26126,
      27835
    ]
  ],
  [
    [
      13183,
      13183
    ],
    "mapped",
    [
      26666,
      24335,
      20250,
      31038
    ]
  ],
  [
    [
      13184,
      13184
    ],
    "mapped",
    [
      112,
      97
    ]
  ],
  [
    [
      13185,
      13185
    ],
    "mapped",
    [
      110,
      97
    ]
  ],
  [
    [
      13186,
      13186
    ],
    "mapped",
    [
      956,
      97
    ]
  ],
  [
    [
      13187,
      13187
    ],
    "mapped",
    [
      109,
      97
    ]
  ],
  [
    [
      13188,
      13188
    ],
    "mapped",
    [
      107,
      97
    ]
  ],
  [
    [
      13189,
      13189
    ],
    "mapped",
    [
      107,
      98
    ]
  ],
  [
    [
      13190,
      13190
    ],
    "mapped",
    [
      109,
      98
    ]
  ],
  [
    [
      13191,
      13191
    ],
    "mapped",
    [
      103,
      98
    ]
  ],
  [
    [
      13192,
      13192
    ],
    "mapped",
    [
      99,
      97,
      108
    ]
  ],
  [
    [
      13193,
      13193
    ],
    "mapped",
    [
      107,
      99,
      97,
      108
    ]
  ],
  [
    [
      13194,
      13194
    ],
    "mapped",
    [
      112,
      102
    ]
  ],
  [
    [
      13195,
      13195
    ],
    "mapped",
    [
      110,
      102
    ]
  ],
  [
    [
      13196,
      13196
    ],
    "mapped",
    [
      956,
      102
    ]
  ],
  [
    [
      13197,
      13197
    ],
    "mapped",
    [
      956,
      103
    ]
  ],
  [
    [
      13198,
      13198
    ],
    "mapped",
    [
      109,
      103
    ]
  ],
  [
    [
      13199,
      13199
    ],
    "mapped",
    [
      107,
      103
    ]
  ],
  [
    [
      13200,
      13200
    ],
    "mapped",
    [
      104,
      122
    ]
  ],
  [
    [
      13201,
      13201
    ],
    "mapped",
    [
      107,
      104,
      122
    ]
  ],
  [
    [
      13202,
      13202
    ],
    "mapped",
    [
      109,
      104,
      122
    ]
  ],
  [
    [
      13203,
      13203
    ],
    "mapped",
    [
      103,
      104,
      122
    ]
  ],
  [
    [
      13204,
      13204
    ],
    "mapped",
    [
      116,
      104,
      122
    ]
  ],
  [
    [
      13205,
      13205
    ],
    "mapped",
    [
      956,
      108
    ]
  ],
  [
    [
      13206,
      13206
    ],
    "mapped",
    [
      109,
      108
    ]
  ],
  [
    [
      13207,
      13207
    ],
    "mapped",
    [
      100,
      108
    ]
  ],
  [
    [
      13208,
      13208
    ],
    "mapped",
    [
      107,
      108
    ]
  ],
  [
    [
      13209,
      13209
    ],
    "mapped",
    [
      102,
      109
    ]
  ],
  [
    [
      13210,
      13210
    ],
    "mapped",
    [
      110,
      109
    ]
  ],
  [
    [
      13211,
      13211
    ],
    "mapped",
    [
      956,
      109
    ]
  ],
  [
    [
      13212,
      13212
    ],
    "mapped",
    [
      109,
      109
    ]
  ],
  [
    [
      13213,
      13213
    ],
    "mapped",
    [
      99,
      109
    ]
  ],
  [
    [
      13214,
      13214
    ],
    "mapped",
    [
      107,
      109
    ]
  ],
  [
    [
      13215,
      13215
    ],
    "mapped",
    [
      109,
      109,
      50
    ]
  ],
  [
    [
      13216,
      13216
    ],
    "mapped",
    [
      99,
      109,
      50
    ]
  ],
  [
    [
      13217,
      13217
    ],
    "mapped",
    [
      109,
      50
    ]
  ],
  [
    [
      13218,
      13218
    ],
    "mapped",
    [
      107,
      109,
      50
    ]
  ],
  [
    [
      13219,
      13219
    ],
    "mapped",
    [
      109,
      109,
      51
    ]
  ],
  [
    [
      13220,
      13220
    ],
    "mapped",
    [
      99,
      109,
      51
    ]
  ],
  [
    [
      13221,
      13221
    ],
    "mapped",
    [
      109,
      51
    ]
  ],
  [
    [
      13222,
      13222
    ],
    "mapped",
    [
      107,
      109,
      51
    ]
  ],
  [
    [
      13223,
      13223
    ],
    "mapped",
    [
      109,
      8725,
      115
    ]
  ],
  [
    [
      13224,
      13224
    ],
    "mapped",
    [
      109,
      8725,
      115,
      50
    ]
  ],
  [
    [
      13225,
      13225
    ],
    "mapped",
    [
      112,
      97
    ]
  ],
  [
    [
      13226,
      13226
    ],
    "mapped",
    [
      107,
      112,
      97
    ]
  ],
  [
    [
      13227,
      13227
    ],
    "mapped",
    [
      109,
      112,
      97
    ]
  ],
  [
    [
      13228,
      13228
    ],
    "mapped",
    [
      103,
      112,
      97
    ]
  ],
  [
    [
      13229,
      13229
    ],
    "mapped",
    [
      114,
      97,
      100
    ]
  ],
  [
    [
      13230,
      13230
    ],
    "mapped",
    [
      114,
      97,
      100,
      8725,
      115
    ]
  ],
  [
    [
      13231,
      13231
    ],
    "mapped",
    [
      114,
      97,
      100,
      8725,
      115,
      50
    ]
  ],
  [
    [
      13232,
      13232
    ],
    "mapped",
    [
      112,
      115
    ]
  ],
  [
    [
      13233,
      13233
    ],
    "mapped",
    [
      110,
      115
    ]
  ],
  [
    [
      13234,
      13234
    ],
    "mapped",
    [
      956,
      115
    ]
  ],
  [
    [
      13235,
      13235
    ],
    "mapped",
    [
      109,
      115
    ]
  ],
  [
    [
      13236,
      13236
    ],
    "mapped",
    [
      112,
      118
    ]
  ],
  [
    [
      13237,
      13237
    ],
    "mapped",
    [
      110,
      118
    ]
  ],
  [
    [
      13238,
      13238
    ],
    "mapped",
    [
      956,
      118
    ]
  ],
  [
    [
      13239,
      13239
    ],
    "mapped",
    [
      109,
      118
    ]
  ],
  [
    [
      13240,
      13240
    ],
    "mapped",
    [
      107,
      118
    ]
  ],
  [
    [
      13241,
      13241
    ],
    "mapped",
    [
      109,
      118
    ]
  ],
  [
    [
      13242,
      13242
    ],
    "mapped",
    [
      112,
      119
    ]
  ],
  [
    [
      13243,
      13243
    ],
    "mapped",
    [
      110,
      119
    ]
  ],
  [
    [
      13244,
      13244
    ],
    "mapped",
    [
      956,
      119
    ]
  ],
  [
    [
      13245,
      13245
    ],
    "mapped",
    [
      109,
      119
    ]
  ],
  [
    [
      13246,
      13246
    ],
    "mapped",
    [
      107,
      119
    ]
  ],
  [
    [
      13247,
      13247
    ],
    "mapped",
    [
      109,
      119
    ]
  ],
  [
    [
      13248,
      13248
    ],
    "mapped",
    [
      107,
      969
    ]
  ],
  [
    [
      13249,
      13249
    ],
    "mapped",
    [
      109,
      969
    ]
  ],
  [
    [
      13250,
      13250
    ],
    "disallowed"
  ],
  [
    [
      13251,
      13251
    ],
    "mapped",
    [
      98,
      113
    ]
  ],
  [
    [
      13252,
      13252
    ],
    "mapped",
    [
      99,
      99
    ]
  ],
  [
    [
      13253,
      13253
    ],
    "mapped",
    [
      99,
      100
    ]
  ],
  [
    [
      13254,
      13254
    ],
    "mapped",
    [
      99,
      8725,
      107,
      103
    ]
  ],
  [
    [
      13255,
      13255
    ],
    "disallowed"
  ],
  [
    [
      13256,
      13256
    ],
    "mapped",
    [
      100,
      98
    ]
  ],
  [
    [
      13257,
      13257
    ],
    "mapped",
    [
      103,
      121
    ]
  ],
  [
    [
      13258,
      13258
    ],
    "mapped",
    [
      104,
      97
    ]
  ],
  [
    [
      13259,
      13259
    ],
    "mapped",
    [
      104,
      112
    ]
  ],
  [
    [
      13260,
      13260
    ],
    "mapped",
    [
      105,
      110
    ]
  ],
  [
    [
      13261,
      13261
    ],
    "mapped",
    [
      107,
      107
    ]
  ],
  [
    [
      13262,
      13262
    ],
    "mapped",
    [
      107,
      109
    ]
  ],
  [
    [
      13263,
      13263
    ],
    "mapped",
    [
      107,
      116
    ]
  ],
  [
    [
      13264,
      13264
    ],
    "mapped",
    [
      108,
      109
    ]
  ],
  [
    [
      13265,
      13265
    ],
    "mapped",
    [
      108,
      110
    ]
  ],
  [
    [
      13266,
      13266
    ],
    "mapped",
    [
      108,
      111,
      103
    ]
  ],
  [
    [
      13267,
      13267
    ],
    "mapped",
    [
      108,
      120
    ]
  ],
  [
    [
      13268,
      13268
    ],
    "mapped",
    [
      109,
      98
    ]
  ],
  [
    [
      13269,
      13269
    ],
    "mapped",
    [
      109,
      105,
      108
    ]
  ],
  [
    [
      13270,
      13270
    ],
    "mapped",
    [
      109,
      111,
      108
    ]
  ],
  [
    [
      13271,
      13271
    ],
    "mapped",
    [
      112,
      104
    ]
  ],
  [
    [
      13272,
      13272
    ],
    "disallowed"
  ],
  [
    [
      13273,
      13273
    ],
    "mapped",
    [
      112,
      112,
      109
    ]
  ],
  [
    [
      13274,
      13274
    ],
    "mapped",
    [
      112,
      114
    ]
  ],
  [
    [
      13275,
      13275
    ],
    "mapped",
    [
      115,
      114
    ]
  ],
  [
    [
      13276,
      13276
    ],
    "mapped",
    [
      115,
      118
    ]
  ],
  [
    [
      13277,
      13277
    ],
    "mapped",
    [
      119,
      98
    ]
  ],
  [
    [
      13278,
      13278
    ],
    "mapped",
    [
      118,
      8725,
      109
    ]
  ],
  [
    [
      13279,
      13279
    ],
    "mapped",
    [
      97,
      8725,
      109
    ]
  ],
  [
    [
      13280,
      13280
    ],
    "mapped",
    [
      49,
      26085
    ]
  ],
  [
    [
      13281,
      13281
    ],
    "mapped",
    [
      50,
      26085
    ]
  ],
  [
    [
      13282,
      13282
    ],
    "mapped",
    [
      51,
      26085
    ]
  ],
  [
    [
      13283,
      13283
    ],
    "mapped",
    [
      52,
      26085
    ]
  ],
  [
    [
      13284,
      13284
    ],
    "mapped",
    [
      53,
      26085
    ]
  ],
  [
    [
      13285,
      13285
    ],
    "mapped",
    [
      54,
      26085
    ]
  ],
  [
    [
      13286,
      13286
    ],
    "mapped",
    [
      55,
      26085
    ]
  ],
  [
    [
      13287,
      13287
    ],
    "mapped",
    [
      56,
      26085
    ]
  ],
  [
    [
      13288,
      13288
    ],
    "mapped",
    [
      57,
      26085
    ]
  ],
  [
    [
      13289,
      13289
    ],
    "mapped",
    [
      49,
      48,
      26085
    ]
  ],
  [
    [
      13290,
      13290
    ],
    "mapped",
    [
      49,
      49,
      26085
    ]
  ],
  [
    [
      13291,
      13291
    ],
    "mapped",
    [
      49,
      50,
      26085
    ]
  ],
  [
    [
      13292,
      13292
    ],
    "mapped",
    [
      49,
      51,
      26085
    ]
  ],
  [
    [
      13293,
      13293
    ],
    "mapped",
    [
      49,
      52,
      26085
    ]
  ],
  [
    [
      13294,
      13294
    ],
    "mapped",
    [
      49,
      53,
      26085
    ]
  ],
  [
    [
      13295,
      13295
    ],
    "mapped",
    [
      49,
      54,
      26085
    ]
  ],
  [
    [
      13296,
      13296
    ],
    "mapped",
    [
      49,
      55,
      26085
    ]
  ],
  [
    [
      13297,
      13297
    ],
    "mapped",
    [
      49,
      56,
      26085
    ]
  ],
  [
    [
      13298,
      13298
    ],
    "mapped",
    [
      49,
      57,
      26085
    ]
  ],
  [
    [
      13299,
      13299
    ],
    "mapped",
    [
      50,
      48,
      26085
    ]
  ],
  [
    [
      13300,
      13300
    ],
    "mapped",
    [
      50,
      49,
      26085
    ]
  ],
  [
    [
      13301,
      13301
    ],
    "mapped",
    [
      50,
      50,
      26085
    ]
  ],
  [
    [
      13302,
      13302
    ],
    "mapped",
    [
      50,
      51,
      26085
    ]
  ],
  [
    [
      13303,
      13303
    ],
    "mapped",
    [
      50,
      52,
      26085
    ]
  ],
  [
    [
      13304,
      13304
    ],
    "mapped",
    [
      50,
      53,
      26085
    ]
  ],
  [
    [
      13305,
      13305
    ],
    "mapped",
    [
      50,
      54,
      26085
    ]
  ],
  [
    [
      13306,
      13306
    ],
    "mapped",
    [
      50,
      55,
      26085
    ]
  ],
  [
    [
      13307,
      13307
    ],
    "mapped",
    [
      50,
      56,
      26085
    ]
  ],
  [
    [
      13308,
      13308
    ],
    "mapped",
    [
      50,
      57,
      26085
    ]
  ],
  [
    [
      13309,
      13309
    ],
    "mapped",
    [
      51,
      48,
      26085
    ]
  ],
  [
    [
      13310,
      13310
    ],
    "mapped",
    [
      51,
      49,
      26085
    ]
  ],
  [
    [
      13311,
      13311
    ],
    "mapped",
    [
      103,
      97,
      108
    ]
  ],
  [
    [
      13312,
      19893
    ],
    "valid"
  ],
  [
    [
      19894,
      19903
    ],
    "disallowed"
  ],
  [
    [
      19904,
      19967
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      19968,
      40869
    ],
    "valid"
  ],
  [
    [
      40870,
      40891
    ],
    "valid"
  ],
  [
    [
      40892,
      40899
    ],
    "valid"
  ],
  [
    [
      40900,
      40907
    ],
    "valid"
  ],
  [
    [
      40908,
      40908
    ],
    "valid"
  ],
  [
    [
      40909,
      40917
    ],
    "valid"
  ],
  [
    [
      40918,
      40959
    ],
    "disallowed"
  ],
  [
    [
      40960,
      42124
    ],
    "valid"
  ],
  [
    [
      42125,
      42127
    ],
    "disallowed"
  ],
  [
    [
      42128,
      42145
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42146,
      42147
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42148,
      42163
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42164,
      42164
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42165,
      42176
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42177,
      42177
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42178,
      42180
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42181,
      42181
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42182,
      42182
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42183,
      42191
    ],
    "disallowed"
  ],
  [
    [
      42192,
      42237
    ],
    "valid"
  ],
  [
    [
      42238,
      42239
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42240,
      42508
    ],
    "valid"
  ],
  [
    [
      42509,
      42511
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42512,
      42539
    ],
    "valid"
  ],
  [
    [
      42540,
      42559
    ],
    "disallowed"
  ],
  [
    [
      42560,
      42560
    ],
    "mapped",
    [
      42561
    ]
  ],
  [
    [
      42561,
      42561
    ],
    "valid"
  ],
  [
    [
      42562,
      42562
    ],
    "mapped",
    [
      42563
    ]
  ],
  [
    [
      42563,
      42563
    ],
    "valid"
  ],
  [
    [
      42564,
      42564
    ],
    "mapped",
    [
      42565
    ]
  ],
  [
    [
      42565,
      42565
    ],
    "valid"
  ],
  [
    [
      42566,
      42566
    ],
    "mapped",
    [
      42567
    ]
  ],
  [
    [
      42567,
      42567
    ],
    "valid"
  ],
  [
    [
      42568,
      42568
    ],
    "mapped",
    [
      42569
    ]
  ],
  [
    [
      42569,
      42569
    ],
    "valid"
  ],
  [
    [
      42570,
      42570
    ],
    "mapped",
    [
      42571
    ]
  ],
  [
    [
      42571,
      42571
    ],
    "valid"
  ],
  [
    [
      42572,
      42572
    ],
    "mapped",
    [
      42573
    ]
  ],
  [
    [
      42573,
      42573
    ],
    "valid"
  ],
  [
    [
      42574,
      42574
    ],
    "mapped",
    [
      42575
    ]
  ],
  [
    [
      42575,
      42575
    ],
    "valid"
  ],
  [
    [
      42576,
      42576
    ],
    "mapped",
    [
      42577
    ]
  ],
  [
    [
      42577,
      42577
    ],
    "valid"
  ],
  [
    [
      42578,
      42578
    ],
    "mapped",
    [
      42579
    ]
  ],
  [
    [
      42579,
      42579
    ],
    "valid"
  ],
  [
    [
      42580,
      42580
    ],
    "mapped",
    [
      42581
    ]
  ],
  [
    [
      42581,
      42581
    ],
    "valid"
  ],
  [
    [
      42582,
      42582
    ],
    "mapped",
    [
      42583
    ]
  ],
  [
    [
      42583,
      42583
    ],
    "valid"
  ],
  [
    [
      42584,
      42584
    ],
    "mapped",
    [
      42585
    ]
  ],
  [
    [
      42585,
      42585
    ],
    "valid"
  ],
  [
    [
      42586,
      42586
    ],
    "mapped",
    [
      42587
    ]
  ],
  [
    [
      42587,
      42587
    ],
    "valid"
  ],
  [
    [
      42588,
      42588
    ],
    "mapped",
    [
      42589
    ]
  ],
  [
    [
      42589,
      42589
    ],
    "valid"
  ],
  [
    [
      42590,
      42590
    ],
    "mapped",
    [
      42591
    ]
  ],
  [
    [
      42591,
      42591
    ],
    "valid"
  ],
  [
    [
      42592,
      42592
    ],
    "mapped",
    [
      42593
    ]
  ],
  [
    [
      42593,
      42593
    ],
    "valid"
  ],
  [
    [
      42594,
      42594
    ],
    "mapped",
    [
      42595
    ]
  ],
  [
    [
      42595,
      42595
    ],
    "valid"
  ],
  [
    [
      42596,
      42596
    ],
    "mapped",
    [
      42597
    ]
  ],
  [
    [
      42597,
      42597
    ],
    "valid"
  ],
  [
    [
      42598,
      42598
    ],
    "mapped",
    [
      42599
    ]
  ],
  [
    [
      42599,
      42599
    ],
    "valid"
  ],
  [
    [
      42600,
      42600
    ],
    "mapped",
    [
      42601
    ]
  ],
  [
    [
      42601,
      42601
    ],
    "valid"
  ],
  [
    [
      42602,
      42602
    ],
    "mapped",
    [
      42603
    ]
  ],
  [
    [
      42603,
      42603
    ],
    "valid"
  ],
  [
    [
      42604,
      42604
    ],
    "mapped",
    [
      42605
    ]
  ],
  [
    [
      42605,
      42607
    ],
    "valid"
  ],
  [
    [
      42608,
      42611
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42612,
      42619
    ],
    "valid"
  ],
  [
    [
      42620,
      42621
    ],
    "valid"
  ],
  [
    [
      42622,
      42622
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42623,
      42623
    ],
    "valid"
  ],
  [
    [
      42624,
      42624
    ],
    "mapped",
    [
      42625
    ]
  ],
  [
    [
      42625,
      42625
    ],
    "valid"
  ],
  [
    [
      42626,
      42626
    ],
    "mapped",
    [
      42627
    ]
  ],
  [
    [
      42627,
      42627
    ],
    "valid"
  ],
  [
    [
      42628,
      42628
    ],
    "mapped",
    [
      42629
    ]
  ],
  [
    [
      42629,
      42629
    ],
    "valid"
  ],
  [
    [
      42630,
      42630
    ],
    "mapped",
    [
      42631
    ]
  ],
  [
    [
      42631,
      42631
    ],
    "valid"
  ],
  [
    [
      42632,
      42632
    ],
    "mapped",
    [
      42633
    ]
  ],
  [
    [
      42633,
      42633
    ],
    "valid"
  ],
  [
    [
      42634,
      42634
    ],
    "mapped",
    [
      42635
    ]
  ],
  [
    [
      42635,
      42635
    ],
    "valid"
  ],
  [
    [
      42636,
      42636
    ],
    "mapped",
    [
      42637
    ]
  ],
  [
    [
      42637,
      42637
    ],
    "valid"
  ],
  [
    [
      42638,
      42638
    ],
    "mapped",
    [
      42639
    ]
  ],
  [
    [
      42639,
      42639
    ],
    "valid"
  ],
  [
    [
      42640,
      42640
    ],
    "mapped",
    [
      42641
    ]
  ],
  [
    [
      42641,
      42641
    ],
    "valid"
  ],
  [
    [
      42642,
      42642
    ],
    "mapped",
    [
      42643
    ]
  ],
  [
    [
      42643,
      42643
    ],
    "valid"
  ],
  [
    [
      42644,
      42644
    ],
    "mapped",
    [
      42645
    ]
  ],
  [
    [
      42645,
      42645
    ],
    "valid"
  ],
  [
    [
      42646,
      42646
    ],
    "mapped",
    [
      42647
    ]
  ],
  [
    [
      42647,
      42647
    ],
    "valid"
  ],
  [
    [
      42648,
      42648
    ],
    "mapped",
    [
      42649
    ]
  ],
  [
    [
      42649,
      42649
    ],
    "valid"
  ],
  [
    [
      42650,
      42650
    ],
    "mapped",
    [
      42651
    ]
  ],
  [
    [
      42651,
      42651
    ],
    "valid"
  ],
  [
    [
      42652,
      42652
    ],
    "mapped",
    [
      1098
    ]
  ],
  [
    [
      42653,
      42653
    ],
    "mapped",
    [
      1100
    ]
  ],
  [
    [
      42654,
      42654
    ],
    "valid"
  ],
  [
    [
      42655,
      42655
    ],
    "valid"
  ],
  [
    [
      42656,
      42725
    ],
    "valid"
  ],
  [
    [
      42726,
      42735
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42736,
      42737
    ],
    "valid"
  ],
  [
    [
      42738,
      42743
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42744,
      42751
    ],
    "disallowed"
  ],
  [
    [
      42752,
      42774
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42775,
      42778
    ],
    "valid"
  ],
  [
    [
      42779,
      42783
    ],
    "valid"
  ],
  [
    [
      42784,
      42785
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42786,
      42786
    ],
    "mapped",
    [
      42787
    ]
  ],
  [
    [
      42787,
      42787
    ],
    "valid"
  ],
  [
    [
      42788,
      42788
    ],
    "mapped",
    [
      42789
    ]
  ],
  [
    [
      42789,
      42789
    ],
    "valid"
  ],
  [
    [
      42790,
      42790
    ],
    "mapped",
    [
      42791
    ]
  ],
  [
    [
      42791,
      42791
    ],
    "valid"
  ],
  [
    [
      42792,
      42792
    ],
    "mapped",
    [
      42793
    ]
  ],
  [
    [
      42793,
      42793
    ],
    "valid"
  ],
  [
    [
      42794,
      42794
    ],
    "mapped",
    [
      42795
    ]
  ],
  [
    [
      42795,
      42795
    ],
    "valid"
  ],
  [
    [
      42796,
      42796
    ],
    "mapped",
    [
      42797
    ]
  ],
  [
    [
      42797,
      42797
    ],
    "valid"
  ],
  [
    [
      42798,
      42798
    ],
    "mapped",
    [
      42799
    ]
  ],
  [
    [
      42799,
      42801
    ],
    "valid"
  ],
  [
    [
      42802,
      42802
    ],
    "mapped",
    [
      42803
    ]
  ],
  [
    [
      42803,
      42803
    ],
    "valid"
  ],
  [
    [
      42804,
      42804
    ],
    "mapped",
    [
      42805
    ]
  ],
  [
    [
      42805,
      42805
    ],
    "valid"
  ],
  [
    [
      42806,
      42806
    ],
    "mapped",
    [
      42807
    ]
  ],
  [
    [
      42807,
      42807
    ],
    "valid"
  ],
  [
    [
      42808,
      42808
    ],
    "mapped",
    [
      42809
    ]
  ],
  [
    [
      42809,
      42809
    ],
    "valid"
  ],
  [
    [
      42810,
      42810
    ],
    "mapped",
    [
      42811
    ]
  ],
  [
    [
      42811,
      42811
    ],
    "valid"
  ],
  [
    [
      42812,
      42812
    ],
    "mapped",
    [
      42813
    ]
  ],
  [
    [
      42813,
      42813
    ],
    "valid"
  ],
  [
    [
      42814,
      42814
    ],
    "mapped",
    [
      42815
    ]
  ],
  [
    [
      42815,
      42815
    ],
    "valid"
  ],
  [
    [
      42816,
      42816
    ],
    "mapped",
    [
      42817
    ]
  ],
  [
    [
      42817,
      42817
    ],
    "valid"
  ],
  [
    [
      42818,
      42818
    ],
    "mapped",
    [
      42819
    ]
  ],
  [
    [
      42819,
      42819
    ],
    "valid"
  ],
  [
    [
      42820,
      42820
    ],
    "mapped",
    [
      42821
    ]
  ],
  [
    [
      42821,
      42821
    ],
    "valid"
  ],
  [
    [
      42822,
      42822
    ],
    "mapped",
    [
      42823
    ]
  ],
  [
    [
      42823,
      42823
    ],
    "valid"
  ],
  [
    [
      42824,
      42824
    ],
    "mapped",
    [
      42825
    ]
  ],
  [
    [
      42825,
      42825
    ],
    "valid"
  ],
  [
    [
      42826,
      42826
    ],
    "mapped",
    [
      42827
    ]
  ],
  [
    [
      42827,
      42827
    ],
    "valid"
  ],
  [
    [
      42828,
      42828
    ],
    "mapped",
    [
      42829
    ]
  ],
  [
    [
      42829,
      42829
    ],
    "valid"
  ],
  [
    [
      42830,
      42830
    ],
    "mapped",
    [
      42831
    ]
  ],
  [
    [
      42831,
      42831
    ],
    "valid"
  ],
  [
    [
      42832,
      42832
    ],
    "mapped",
    [
      42833
    ]
  ],
  [
    [
      42833,
      42833
    ],
    "valid"
  ],
  [
    [
      42834,
      42834
    ],
    "mapped",
    [
      42835
    ]
  ],
  [
    [
      42835,
      42835
    ],
    "valid"
  ],
  [
    [
      42836,
      42836
    ],
    "mapped",
    [
      42837
    ]
  ],
  [
    [
      42837,
      42837
    ],
    "valid"
  ],
  [
    [
      42838,
      42838
    ],
    "mapped",
    [
      42839
    ]
  ],
  [
    [
      42839,
      42839
    ],
    "valid"
  ],
  [
    [
      42840,
      42840
    ],
    "mapped",
    [
      42841
    ]
  ],
  [
    [
      42841,
      42841
    ],
    "valid"
  ],
  [
    [
      42842,
      42842
    ],
    "mapped",
    [
      42843
    ]
  ],
  [
    [
      42843,
      42843
    ],
    "valid"
  ],
  [
    [
      42844,
      42844
    ],
    "mapped",
    [
      42845
    ]
  ],
  [
    [
      42845,
      42845
    ],
    "valid"
  ],
  [
    [
      42846,
      42846
    ],
    "mapped",
    [
      42847
    ]
  ],
  [
    [
      42847,
      42847
    ],
    "valid"
  ],
  [
    [
      42848,
      42848
    ],
    "mapped",
    [
      42849
    ]
  ],
  [
    [
      42849,
      42849
    ],
    "valid"
  ],
  [
    [
      42850,
      42850
    ],
    "mapped",
    [
      42851
    ]
  ],
  [
    [
      42851,
      42851
    ],
    "valid"
  ],
  [
    [
      42852,
      42852
    ],
    "mapped",
    [
      42853
    ]
  ],
  [
    [
      42853,
      42853
    ],
    "valid"
  ],
  [
    [
      42854,
      42854
    ],
    "mapped",
    [
      42855
    ]
  ],
  [
    [
      42855,
      42855
    ],
    "valid"
  ],
  [
    [
      42856,
      42856
    ],
    "mapped",
    [
      42857
    ]
  ],
  [
    [
      42857,
      42857
    ],
    "valid"
  ],
  [
    [
      42858,
      42858
    ],
    "mapped",
    [
      42859
    ]
  ],
  [
    [
      42859,
      42859
    ],
    "valid"
  ],
  [
    [
      42860,
      42860
    ],
    "mapped",
    [
      42861
    ]
  ],
  [
    [
      42861,
      42861
    ],
    "valid"
  ],
  [
    [
      42862,
      42862
    ],
    "mapped",
    [
      42863
    ]
  ],
  [
    [
      42863,
      42863
    ],
    "valid"
  ],
  [
    [
      42864,
      42864
    ],
    "mapped",
    [
      42863
    ]
  ],
  [
    [
      42865,
      42872
    ],
    "valid"
  ],
  [
    [
      42873,
      42873
    ],
    "mapped",
    [
      42874
    ]
  ],
  [
    [
      42874,
      42874
    ],
    "valid"
  ],
  [
    [
      42875,
      42875
    ],
    "mapped",
    [
      42876
    ]
  ],
  [
    [
      42876,
      42876
    ],
    "valid"
  ],
  [
    [
      42877,
      42877
    ],
    "mapped",
    [
      7545
    ]
  ],
  [
    [
      42878,
      42878
    ],
    "mapped",
    [
      42879
    ]
  ],
  [
    [
      42879,
      42879
    ],
    "valid"
  ],
  [
    [
      42880,
      42880
    ],
    "mapped",
    [
      42881
    ]
  ],
  [
    [
      42881,
      42881
    ],
    "valid"
  ],
  [
    [
      42882,
      42882
    ],
    "mapped",
    [
      42883
    ]
  ],
  [
    [
      42883,
      42883
    ],
    "valid"
  ],
  [
    [
      42884,
      42884
    ],
    "mapped",
    [
      42885
    ]
  ],
  [
    [
      42885,
      42885
    ],
    "valid"
  ],
  [
    [
      42886,
      42886
    ],
    "mapped",
    [
      42887
    ]
  ],
  [
    [
      42887,
      42888
    ],
    "valid"
  ],
  [
    [
      42889,
      42890
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42891,
      42891
    ],
    "mapped",
    [
      42892
    ]
  ],
  [
    [
      42892,
      42892
    ],
    "valid"
  ],
  [
    [
      42893,
      42893
    ],
    "mapped",
    [
      613
    ]
  ],
  [
    [
      42894,
      42894
    ],
    "valid"
  ],
  [
    [
      42895,
      42895
    ],
    "valid"
  ],
  [
    [
      42896,
      42896
    ],
    "mapped",
    [
      42897
    ]
  ],
  [
    [
      42897,
      42897
    ],
    "valid"
  ],
  [
    [
      42898,
      42898
    ],
    "mapped",
    [
      42899
    ]
  ],
  [
    [
      42899,
      42899
    ],
    "valid"
  ],
  [
    [
      42900,
      42901
    ],
    "valid"
  ],
  [
    [
      42902,
      42902
    ],
    "mapped",
    [
      42903
    ]
  ],
  [
    [
      42903,
      42903
    ],
    "valid"
  ],
  [
    [
      42904,
      42904
    ],
    "mapped",
    [
      42905
    ]
  ],
  [
    [
      42905,
      42905
    ],
    "valid"
  ],
  [
    [
      42906,
      42906
    ],
    "mapped",
    [
      42907
    ]
  ],
  [
    [
      42907,
      42907
    ],
    "valid"
  ],
  [
    [
      42908,
      42908
    ],
    "mapped",
    [
      42909
    ]
  ],
  [
    [
      42909,
      42909
    ],
    "valid"
  ],
  [
    [
      42910,
      42910
    ],
    "mapped",
    [
      42911
    ]
  ],
  [
    [
      42911,
      42911
    ],
    "valid"
  ],
  [
    [
      42912,
      42912
    ],
    "mapped",
    [
      42913
    ]
  ],
  [
    [
      42913,
      42913
    ],
    "valid"
  ],
  [
    [
      42914,
      42914
    ],
    "mapped",
    [
      42915
    ]
  ],
  [
    [
      42915,
      42915
    ],
    "valid"
  ],
  [
    [
      42916,
      42916
    ],
    "mapped",
    [
      42917
    ]
  ],
  [
    [
      42917,
      42917
    ],
    "valid"
  ],
  [
    [
      42918,
      42918
    ],
    "mapped",
    [
      42919
    ]
  ],
  [
    [
      42919,
      42919
    ],
    "valid"
  ],
  [
    [
      42920,
      42920
    ],
    "mapped",
    [
      42921
    ]
  ],
  [
    [
      42921,
      42921
    ],
    "valid"
  ],
  [
    [
      42922,
      42922
    ],
    "mapped",
    [
      614
    ]
  ],
  [
    [
      42923,
      42923
    ],
    "mapped",
    [
      604
    ]
  ],
  [
    [
      42924,
      42924
    ],
    "mapped",
    [
      609
    ]
  ],
  [
    [
      42925,
      42925
    ],
    "mapped",
    [
      620
    ]
  ],
  [
    [
      42926,
      42927
    ],
    "disallowed"
  ],
  [
    [
      42928,
      42928
    ],
    "mapped",
    [
      670
    ]
  ],
  [
    [
      42929,
      42929
    ],
    "mapped",
    [
      647
    ]
  ],
  [
    [
      42930,
      42930
    ],
    "mapped",
    [
      669
    ]
  ],
  [
    [
      42931,
      42931
    ],
    "mapped",
    [
      43859
    ]
  ],
  [
    [
      42932,
      42932
    ],
    "mapped",
    [
      42933
    ]
  ],
  [
    [
      42933,
      42933
    ],
    "valid"
  ],
  [
    [
      42934,
      42934
    ],
    "mapped",
    [
      42935
    ]
  ],
  [
    [
      42935,
      42935
    ],
    "valid"
  ],
  [
    [
      42936,
      42998
    ],
    "disallowed"
  ],
  [
    [
      42999,
      42999
    ],
    "valid"
  ],
  [
    [
      43e3,
      43e3
    ],
    "mapped",
    [
      295
    ]
  ],
  [
    [
      43001,
      43001
    ],
    "mapped",
    [
      339
    ]
  ],
  [
    [
      43002,
      43002
    ],
    "valid"
  ],
  [
    [
      43003,
      43007
    ],
    "valid"
  ],
  [
    [
      43008,
      43047
    ],
    "valid"
  ],
  [
    [
      43048,
      43051
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43052,
      43055
    ],
    "disallowed"
  ],
  [
    [
      43056,
      43065
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43066,
      43071
    ],
    "disallowed"
  ],
  [
    [
      43072,
      43123
    ],
    "valid"
  ],
  [
    [
      43124,
      43127
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43128,
      43135
    ],
    "disallowed"
  ],
  [
    [
      43136,
      43204
    ],
    "valid"
  ],
  [
    [
      43205,
      43213
    ],
    "disallowed"
  ],
  [
    [
      43214,
      43215
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43216,
      43225
    ],
    "valid"
  ],
  [
    [
      43226,
      43231
    ],
    "disallowed"
  ],
  [
    [
      43232,
      43255
    ],
    "valid"
  ],
  [
    [
      43256,
      43258
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43259,
      43259
    ],
    "valid"
  ],
  [
    [
      43260,
      43260
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43261,
      43261
    ],
    "valid"
  ],
  [
    [
      43262,
      43263
    ],
    "disallowed"
  ],
  [
    [
      43264,
      43309
    ],
    "valid"
  ],
  [
    [
      43310,
      43311
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43312,
      43347
    ],
    "valid"
  ],
  [
    [
      43348,
      43358
    ],
    "disallowed"
  ],
  [
    [
      43359,
      43359
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43360,
      43388
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43389,
      43391
    ],
    "disallowed"
  ],
  [
    [
      43392,
      43456
    ],
    "valid"
  ],
  [
    [
      43457,
      43469
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43470,
      43470
    ],
    "disallowed"
  ],
  [
    [
      43471,
      43481
    ],
    "valid"
  ],
  [
    [
      43482,
      43485
    ],
    "disallowed"
  ],
  [
    [
      43486,
      43487
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43488,
      43518
    ],
    "valid"
  ],
  [
    [
      43519,
      43519
    ],
    "disallowed"
  ],
  [
    [
      43520,
      43574
    ],
    "valid"
  ],
  [
    [
      43575,
      43583
    ],
    "disallowed"
  ],
  [
    [
      43584,
      43597
    ],
    "valid"
  ],
  [
    [
      43598,
      43599
    ],
    "disallowed"
  ],
  [
    [
      43600,
      43609
    ],
    "valid"
  ],
  [
    [
      43610,
      43611
    ],
    "disallowed"
  ],
  [
    [
      43612,
      43615
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43616,
      43638
    ],
    "valid"
  ],
  [
    [
      43639,
      43641
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43642,
      43643
    ],
    "valid"
  ],
  [
    [
      43644,
      43647
    ],
    "valid"
  ],
  [
    [
      43648,
      43714
    ],
    "valid"
  ],
  [
    [
      43715,
      43738
    ],
    "disallowed"
  ],
  [
    [
      43739,
      43741
    ],
    "valid"
  ],
  [
    [
      43742,
      43743
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43744,
      43759
    ],
    "valid"
  ],
  [
    [
      43760,
      43761
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43762,
      43766
    ],
    "valid"
  ],
  [
    [
      43767,
      43776
    ],
    "disallowed"
  ],
  [
    [
      43777,
      43782
    ],
    "valid"
  ],
  [
    [
      43783,
      43784
    ],
    "disallowed"
  ],
  [
    [
      43785,
      43790
    ],
    "valid"
  ],
  [
    [
      43791,
      43792
    ],
    "disallowed"
  ],
  [
    [
      43793,
      43798
    ],
    "valid"
  ],
  [
    [
      43799,
      43807
    ],
    "disallowed"
  ],
  [
    [
      43808,
      43814
    ],
    "valid"
  ],
  [
    [
      43815,
      43815
    ],
    "disallowed"
  ],
  [
    [
      43816,
      43822
    ],
    "valid"
  ],
  [
    [
      43823,
      43823
    ],
    "disallowed"
  ],
  [
    [
      43824,
      43866
    ],
    "valid"
  ],
  [
    [
      43867,
      43867
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43868,
      43868
    ],
    "mapped",
    [
      42791
    ]
  ],
  [
    [
      43869,
      43869
    ],
    "mapped",
    [
      43831
    ]
  ],
  [
    [
      43870,
      43870
    ],
    "mapped",
    [
      619
    ]
  ],
  [
    [
      43871,
      43871
    ],
    "mapped",
    [
      43858
    ]
  ],
  [
    [
      43872,
      43875
    ],
    "valid"
  ],
  [
    [
      43876,
      43877
    ],
    "valid"
  ],
  [
    [
      43878,
      43887
    ],
    "disallowed"
  ],
  [
    [
      43888,
      43888
    ],
    "mapped",
    [
      5024
    ]
  ],
  [
    [
      43889,
      43889
    ],
    "mapped",
    [
      5025
    ]
  ],
  [
    [
      43890,
      43890
    ],
    "mapped",
    [
      5026
    ]
  ],
  [
    [
      43891,
      43891
    ],
    "mapped",
    [
      5027
    ]
  ],
  [
    [
      43892,
      43892
    ],
    "mapped",
    [
      5028
    ]
  ],
  [
    [
      43893,
      43893
    ],
    "mapped",
    [
      5029
    ]
  ],
  [
    [
      43894,
      43894
    ],
    "mapped",
    [
      5030
    ]
  ],
  [
    [
      43895,
      43895
    ],
    "mapped",
    [
      5031
    ]
  ],
  [
    [
      43896,
      43896
    ],
    "mapped",
    [
      5032
    ]
  ],
  [
    [
      43897,
      43897
    ],
    "mapped",
    [
      5033
    ]
  ],
  [
    [
      43898,
      43898
    ],
    "mapped",
    [
      5034
    ]
  ],
  [
    [
      43899,
      43899
    ],
    "mapped",
    [
      5035
    ]
  ],
  [
    [
      43900,
      43900
    ],
    "mapped",
    [
      5036
    ]
  ],
  [
    [
      43901,
      43901
    ],
    "mapped",
    [
      5037
    ]
  ],
  [
    [
      43902,
      43902
    ],
    "mapped",
    [
      5038
    ]
  ],
  [
    [
      43903,
      43903
    ],
    "mapped",
    [
      5039
    ]
  ],
  [
    [
      43904,
      43904
    ],
    "mapped",
    [
      5040
    ]
  ],
  [
    [
      43905,
      43905
    ],
    "mapped",
    [
      5041
    ]
  ],
  [
    [
      43906,
      43906
    ],
    "mapped",
    [
      5042
    ]
  ],
  [
    [
      43907,
      43907
    ],
    "mapped",
    [
      5043
    ]
  ],
  [
    [
      43908,
      43908
    ],
    "mapped",
    [
      5044
    ]
  ],
  [
    [
      43909,
      43909
    ],
    "mapped",
    [
      5045
    ]
  ],
  [
    [
      43910,
      43910
    ],
    "mapped",
    [
      5046
    ]
  ],
  [
    [
      43911,
      43911
    ],
    "mapped",
    [
      5047
    ]
  ],
  [
    [
      43912,
      43912
    ],
    "mapped",
    [
      5048
    ]
  ],
  [
    [
      43913,
      43913
    ],
    "mapped",
    [
      5049
    ]
  ],
  [
    [
      43914,
      43914
    ],
    "mapped",
    [
      5050
    ]
  ],
  [
    [
      43915,
      43915
    ],
    "mapped",
    [
      5051
    ]
  ],
  [
    [
      43916,
      43916
    ],
    "mapped",
    [
      5052
    ]
  ],
  [
    [
      43917,
      43917
    ],
    "mapped",
    [
      5053
    ]
  ],
  [
    [
      43918,
      43918
    ],
    "mapped",
    [
      5054
    ]
  ],
  [
    [
      43919,
      43919
    ],
    "mapped",
    [
      5055
    ]
  ],
  [
    [
      43920,
      43920
    ],
    "mapped",
    [
      5056
    ]
  ],
  [
    [
      43921,
      43921
    ],
    "mapped",
    [
      5057
    ]
  ],
  [
    [
      43922,
      43922
    ],
    "mapped",
    [
      5058
    ]
  ],
  [
    [
      43923,
      43923
    ],
    "mapped",
    [
      5059
    ]
  ],
  [
    [
      43924,
      43924
    ],
    "mapped",
    [
      5060
    ]
  ],
  [
    [
      43925,
      43925
    ],
    "mapped",
    [
      5061
    ]
  ],
  [
    [
      43926,
      43926
    ],
    "mapped",
    [
      5062
    ]
  ],
  [
    [
      43927,
      43927
    ],
    "mapped",
    [
      5063
    ]
  ],
  [
    [
      43928,
      43928
    ],
    "mapped",
    [
      5064
    ]
  ],
  [
    [
      43929,
      43929
    ],
    "mapped",
    [
      5065
    ]
  ],
  [
    [
      43930,
      43930
    ],
    "mapped",
    [
      5066
    ]
  ],
  [
    [
      43931,
      43931
    ],
    "mapped",
    [
      5067
    ]
  ],
  [
    [
      43932,
      43932
    ],
    "mapped",
    [
      5068
    ]
  ],
  [
    [
      43933,
      43933
    ],
    "mapped",
    [
      5069
    ]
  ],
  [
    [
      43934,
      43934
    ],
    "mapped",
    [
      5070
    ]
  ],
  [
    [
      43935,
      43935
    ],
    "mapped",
    [
      5071
    ]
  ],
  [
    [
      43936,
      43936
    ],
    "mapped",
    [
      5072
    ]
  ],
  [
    [
      43937,
      43937
    ],
    "mapped",
    [
      5073
    ]
  ],
  [
    [
      43938,
      43938
    ],
    "mapped",
    [
      5074
    ]
  ],
  [
    [
      43939,
      43939
    ],
    "mapped",
    [
      5075
    ]
  ],
  [
    [
      43940,
      43940
    ],
    "mapped",
    [
      5076
    ]
  ],
  [
    [
      43941,
      43941
    ],
    "mapped",
    [
      5077
    ]
  ],
  [
    [
      43942,
      43942
    ],
    "mapped",
    [
      5078
    ]
  ],
  [
    [
      43943,
      43943
    ],
    "mapped",
    [
      5079
    ]
  ],
  [
    [
      43944,
      43944
    ],
    "mapped",
    [
      5080
    ]
  ],
  [
    [
      43945,
      43945
    ],
    "mapped",
    [
      5081
    ]
  ],
  [
    [
      43946,
      43946
    ],
    "mapped",
    [
      5082
    ]
  ],
  [
    [
      43947,
      43947
    ],
    "mapped",
    [
      5083
    ]
  ],
  [
    [
      43948,
      43948
    ],
    "mapped",
    [
      5084
    ]
  ],
  [
    [
      43949,
      43949
    ],
    "mapped",
    [
      5085
    ]
  ],
  [
    [
      43950,
      43950
    ],
    "mapped",
    [
      5086
    ]
  ],
  [
    [
      43951,
      43951
    ],
    "mapped",
    [
      5087
    ]
  ],
  [
    [
      43952,
      43952
    ],
    "mapped",
    [
      5088
    ]
  ],
  [
    [
      43953,
      43953
    ],
    "mapped",
    [
      5089
    ]
  ],
  [
    [
      43954,
      43954
    ],
    "mapped",
    [
      5090
    ]
  ],
  [
    [
      43955,
      43955
    ],
    "mapped",
    [
      5091
    ]
  ],
  [
    [
      43956,
      43956
    ],
    "mapped",
    [
      5092
    ]
  ],
  [
    [
      43957,
      43957
    ],
    "mapped",
    [
      5093
    ]
  ],
  [
    [
      43958,
      43958
    ],
    "mapped",
    [
      5094
    ]
  ],
  [
    [
      43959,
      43959
    ],
    "mapped",
    [
      5095
    ]
  ],
  [
    [
      43960,
      43960
    ],
    "mapped",
    [
      5096
    ]
  ],
  [
    [
      43961,
      43961
    ],
    "mapped",
    [
      5097
    ]
  ],
  [
    [
      43962,
      43962
    ],
    "mapped",
    [
      5098
    ]
  ],
  [
    [
      43963,
      43963
    ],
    "mapped",
    [
      5099
    ]
  ],
  [
    [
      43964,
      43964
    ],
    "mapped",
    [
      5100
    ]
  ],
  [
    [
      43965,
      43965
    ],
    "mapped",
    [
      5101
    ]
  ],
  [
    [
      43966,
      43966
    ],
    "mapped",
    [
      5102
    ]
  ],
  [
    [
      43967,
      43967
    ],
    "mapped",
    [
      5103
    ]
  ],
  [
    [
      43968,
      44010
    ],
    "valid"
  ],
  [
    [
      44011,
      44011
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      44012,
      44013
    ],
    "valid"
  ],
  [
    [
      44014,
      44015
    ],
    "disallowed"
  ],
  [
    [
      44016,
      44025
    ],
    "valid"
  ],
  [
    [
      44026,
      44031
    ],
    "disallowed"
  ],
  [
    [
      44032,
      55203
    ],
    "valid"
  ],
  [
    [
      55204,
      55215
    ],
    "disallowed"
  ],
  [
    [
      55216,
      55238
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      55239,
      55242
    ],
    "disallowed"
  ],
  [
    [
      55243,
      55291
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      55292,
      55295
    ],
    "disallowed"
  ],
  [
    [
      55296,
      57343
    ],
    "disallowed"
  ],
  [
    [
      57344,
      63743
    ],
    "disallowed"
  ],
  [
    [
      63744,
      63744
    ],
    "mapped",
    [
      35912
    ]
  ],
  [
    [
      63745,
      63745
    ],
    "mapped",
    [
      26356
    ]
  ],
  [
    [
      63746,
      63746
    ],
    "mapped",
    [
      36554
    ]
  ],
  [
    [
      63747,
      63747
    ],
    "mapped",
    [
      36040
    ]
  ],
  [
    [
      63748,
      63748
    ],
    "mapped",
    [
      28369
    ]
  ],
  [
    [
      63749,
      63749
    ],
    "mapped",
    [
      20018
    ]
  ],
  [
    [
      63750,
      63750
    ],
    "mapped",
    [
      21477
    ]
  ],
  [
    [
      63751,
      63752
    ],
    "mapped",
    [
      40860
    ]
  ],
  [
    [
      63753,
      63753
    ],
    "mapped",
    [
      22865
    ]
  ],
  [
    [
      63754,
      63754
    ],
    "mapped",
    [
      37329
    ]
  ],
  [
    [
      63755,
      63755
    ],
    "mapped",
    [
      21895
    ]
  ],
  [
    [
      63756,
      63756
    ],
    "mapped",
    [
      22856
    ]
  ],
  [
    [
      63757,
      63757
    ],
    "mapped",
    [
      25078
    ]
  ],
  [
    [
      63758,
      63758
    ],
    "mapped",
    [
      30313
    ]
  ],
  [
    [
      63759,
      63759
    ],
    "mapped",
    [
      32645
    ]
  ],
  [
    [
      63760,
      63760
    ],
    "mapped",
    [
      34367
    ]
  ],
  [
    [
      63761,
      63761
    ],
    "mapped",
    [
      34746
    ]
  ],
  [
    [
      63762,
      63762
    ],
    "mapped",
    [
      35064
    ]
  ],
  [
    [
      63763,
      63763
    ],
    "mapped",
    [
      37007
    ]
  ],
  [
    [
      63764,
      63764
    ],
    "mapped",
    [
      27138
    ]
  ],
  [
    [
      63765,
      63765
    ],
    "mapped",
    [
      27931
    ]
  ],
  [
    [
      63766,
      63766
    ],
    "mapped",
    [
      28889
    ]
  ],
  [
    [
      63767,
      63767
    ],
    "mapped",
    [
      29662
    ]
  ],
  [
    [
      63768,
      63768
    ],
    "mapped",
    [
      33853
    ]
  ],
  [
    [
      63769,
      63769
    ],
    "mapped",
    [
      37226
    ]
  ],
  [
    [
      63770,
      63770
    ],
    "mapped",
    [
      39409
    ]
  ],
  [
    [
      63771,
      63771
    ],
    "mapped",
    [
      20098
    ]
  ],
  [
    [
      63772,
      63772
    ],
    "mapped",
    [
      21365
    ]
  ],
  [
    [
      63773,
      63773
    ],
    "mapped",
    [
      27396
    ]
  ],
  [
    [
      63774,
      63774
    ],
    "mapped",
    [
      29211
    ]
  ],
  [
    [
      63775,
      63775
    ],
    "mapped",
    [
      34349
    ]
  ],
  [
    [
      63776,
      63776
    ],
    "mapped",
    [
      40478
    ]
  ],
  [
    [
      63777,
      63777
    ],
    "mapped",
    [
      23888
    ]
  ],
  [
    [
      63778,
      63778
    ],
    "mapped",
    [
      28651
    ]
  ],
  [
    [
      63779,
      63779
    ],
    "mapped",
    [
      34253
    ]
  ],
  [
    [
      63780,
      63780
    ],
    "mapped",
    [
      35172
    ]
  ],
  [
    [
      63781,
      63781
    ],
    "mapped",
    [
      25289
    ]
  ],
  [
    [
      63782,
      63782
    ],
    "mapped",
    [
      33240
    ]
  ],
  [
    [
      63783,
      63783
    ],
    "mapped",
    [
      34847
    ]
  ],
  [
    [
      63784,
      63784
    ],
    "mapped",
    [
      24266
    ]
  ],
  [
    [
      63785,
      63785
    ],
    "mapped",
    [
      26391
    ]
  ],
  [
    [
      63786,
      63786
    ],
    "mapped",
    [
      28010
    ]
  ],
  [
    [
      63787,
      63787
    ],
    "mapped",
    [
      29436
    ]
  ],
  [
    [
      63788,
      63788
    ],
    "mapped",
    [
      37070
    ]
  ],
  [
    [
      63789,
      63789
    ],
    "mapped",
    [
      20358
    ]
  ],
  [
    [
      63790,
      63790
    ],
    "mapped",
    [
      20919
    ]
  ],
  [
    [
      63791,
      63791
    ],
    "mapped",
    [
      21214
    ]
  ],
  [
    [
      63792,
      63792
    ],
    "mapped",
    [
      25796
    ]
  ],
  [
    [
      63793,
      63793
    ],
    "mapped",
    [
      27347
    ]
  ],
  [
    [
      63794,
      63794
    ],
    "mapped",
    [
      29200
    ]
  ],
  [
    [
      63795,
      63795
    ],
    "mapped",
    [
      30439
    ]
  ],
  [
    [
      63796,
      63796
    ],
    "mapped",
    [
      32769
    ]
  ],
  [
    [
      63797,
      63797
    ],
    "mapped",
    [
      34310
    ]
  ],
  [
    [
      63798,
      63798
    ],
    "mapped",
    [
      34396
    ]
  ],
  [
    [
      63799,
      63799
    ],
    "mapped",
    [
      36335
    ]
  ],
  [
    [
      63800,
      63800
    ],
    "mapped",
    [
      38706
    ]
  ],
  [
    [
      63801,
      63801
    ],
    "mapped",
    [
      39791
    ]
  ],
  [
    [
      63802,
      63802
    ],
    "mapped",
    [
      40442
    ]
  ],
  [
    [
      63803,
      63803
    ],
    "mapped",
    [
      30860
    ]
  ],
  [
    [
      63804,
      63804
    ],
    "mapped",
    [
      31103
    ]
  ],
  [
    [
      63805,
      63805
    ],
    "mapped",
    [
      32160
    ]
  ],
  [
    [
      63806,
      63806
    ],
    "mapped",
    [
      33737
    ]
  ],
  [
    [
      63807,
      63807
    ],
    "mapped",
    [
      37636
    ]
  ],
  [
    [
      63808,
      63808
    ],
    "mapped",
    [
      40575
    ]
  ],
  [
    [
      63809,
      63809
    ],
    "mapped",
    [
      35542
    ]
  ],
  [
    [
      63810,
      63810
    ],
    "mapped",
    [
      22751
    ]
  ],
  [
    [
      63811,
      63811
    ],
    "mapped",
    [
      24324
    ]
  ],
  [
    [
      63812,
      63812
    ],
    "mapped",
    [
      31840
    ]
  ],
  [
    [
      63813,
      63813
    ],
    "mapped",
    [
      32894
    ]
  ],
  [
    [
      63814,
      63814
    ],
    "mapped",
    [
      29282
    ]
  ],
  [
    [
      63815,
      63815
    ],
    "mapped",
    [
      30922
    ]
  ],
  [
    [
      63816,
      63816
    ],
    "mapped",
    [
      36034
    ]
  ],
  [
    [
      63817,
      63817
    ],
    "mapped",
    [
      38647
    ]
  ],
  [
    [
      63818,
      63818
    ],
    "mapped",
    [
      22744
    ]
  ],
  [
    [
      63819,
      63819
    ],
    "mapped",
    [
      23650
    ]
  ],
  [
    [
      63820,
      63820
    ],
    "mapped",
    [
      27155
    ]
  ],
  [
    [
      63821,
      63821
    ],
    "mapped",
    [
      28122
    ]
  ],
  [
    [
      63822,
      63822
    ],
    "mapped",
    [
      28431
    ]
  ],
  [
    [
      63823,
      63823
    ],
    "mapped",
    [
      32047
    ]
  ],
  [
    [
      63824,
      63824
    ],
    "mapped",
    [
      32311
    ]
  ],
  [
    [
      63825,
      63825
    ],
    "mapped",
    [
      38475
    ]
  ],
  [
    [
      63826,
      63826
    ],
    "mapped",
    [
      21202
    ]
  ],
  [
    [
      63827,
      63827
    ],
    "mapped",
    [
      32907
    ]
  ],
  [
    [
      63828,
      63828
    ],
    "mapped",
    [
      20956
    ]
  ],
  [
    [
      63829,
      63829
    ],
    "mapped",
    [
      20940
    ]
  ],
  [
    [
      63830,
      63830
    ],
    "mapped",
    [
      31260
    ]
  ],
  [
    [
      63831,
      63831
    ],
    "mapped",
    [
      32190
    ]
  ],
  [
    [
      63832,
      63832
    ],
    "mapped",
    [
      33777
    ]
  ],
  [
    [
      63833,
      63833
    ],
    "mapped",
    [
      38517
    ]
  ],
  [
    [
      63834,
      63834
    ],
    "mapped",
    [
      35712
    ]
  ],
  [
    [
      63835,
      63835
    ],
    "mapped",
    [
      25295
    ]
  ],
  [
    [
      63836,
      63836
    ],
    "mapped",
    [
      27138
    ]
  ],
  [
    [
      63837,
      63837
    ],
    "mapped",
    [
      35582
    ]
  ],
  [
    [
      63838,
      63838
    ],
    "mapped",
    [
      20025
    ]
  ],
  [
    [
      63839,
      63839
    ],
    "mapped",
    [
      23527
    ]
  ],
  [
    [
      63840,
      63840
    ],
    "mapped",
    [
      24594
    ]
  ],
  [
    [
      63841,
      63841
    ],
    "mapped",
    [
      29575
    ]
  ],
  [
    [
      63842,
      63842
    ],
    "mapped",
    [
      30064
    ]
  ],
  [
    [
      63843,
      63843
    ],
    "mapped",
    [
      21271
    ]
  ],
  [
    [
      63844,
      63844
    ],
    "mapped",
    [
      30971
    ]
  ],
  [
    [
      63845,
      63845
    ],
    "mapped",
    [
      20415
    ]
  ],
  [
    [
      63846,
      63846
    ],
    "mapped",
    [
      24489
    ]
  ],
  [
    [
      63847,
      63847
    ],
    "mapped",
    [
      19981
    ]
  ],
  [
    [
      63848,
      63848
    ],
    "mapped",
    [
      27852
    ]
  ],
  [
    [
      63849,
      63849
    ],
    "mapped",
    [
      25976
    ]
  ],
  [
    [
      63850,
      63850
    ],
    "mapped",
    [
      32034
    ]
  ],
  [
    [
      63851,
      63851
    ],
    "mapped",
    [
      21443
    ]
  ],
  [
    [
      63852,
      63852
    ],
    "mapped",
    [
      22622
    ]
  ],
  [
    [
      63853,
      63853
    ],
    "mapped",
    [
      30465
    ]
  ],
  [
    [
      63854,
      63854
    ],
    "mapped",
    [
      33865
    ]
  ],
  [
    [
      63855,
      63855
    ],
    "mapped",
    [
      35498
    ]
  ],
  [
    [
      63856,
      63856
    ],
    "mapped",
    [
      27578
    ]
  ],
  [
    [
      63857,
      63857
    ],
    "mapped",
    [
      36784
    ]
  ],
  [
    [
      63858,
      63858
    ],
    "mapped",
    [
      27784
    ]
  ],
  [
    [
      63859,
      63859
    ],
    "mapped",
    [
      25342
    ]
  ],
  [
    [
      63860,
      63860
    ],
    "mapped",
    [
      33509
    ]
  ],
  [
    [
      63861,
      63861
    ],
    "mapped",
    [
      25504
    ]
  ],
  [
    [
      63862,
      63862
    ],
    "mapped",
    [
      30053
    ]
  ],
  [
    [
      63863,
      63863
    ],
    "mapped",
    [
      20142
    ]
  ],
  [
    [
      63864,
      63864
    ],
    "mapped",
    [
      20841
    ]
  ],
  [
    [
      63865,
      63865
    ],
    "mapped",
    [
      20937
    ]
  ],
  [
    [
      63866,
      63866
    ],
    "mapped",
    [
      26753
    ]
  ],
  [
    [
      63867,
      63867
    ],
    "mapped",
    [
      31975
    ]
  ],
  [
    [
      63868,
      63868
    ],
    "mapped",
    [
      33391
    ]
  ],
  [
    [
      63869,
      63869
    ],
    "mapped",
    [
      35538
    ]
  ],
  [
    [
      63870,
      63870
    ],
    "mapped",
    [
      37327
    ]
  ],
  [
    [
      63871,
      63871
    ],
    "mapped",
    [
      21237
    ]
  ],
  [
    [
      63872,
      63872
    ],
    "mapped",
    [
      21570
    ]
  ],
  [
    [
      63873,
      63873
    ],
    "mapped",
    [
      22899
    ]
  ],
  [
    [
      63874,
      63874
    ],
    "mapped",
    [
      24300
    ]
  ],
  [
    [
      63875,
      63875
    ],
    "mapped",
    [
      26053
    ]
  ],
  [
    [
      63876,
      63876
    ],
    "mapped",
    [
      28670
    ]
  ],
  [
    [
      63877,
      63877
    ],
    "mapped",
    [
      31018
    ]
  ],
  [
    [
      63878,
      63878
    ],
    "mapped",
    [
      38317
    ]
  ],
  [
    [
      63879,
      63879
    ],
    "mapped",
    [
      39530
    ]
  ],
  [
    [
      63880,
      63880
    ],
    "mapped",
    [
      40599
    ]
  ],
  [
    [
      63881,
      63881
    ],
    "mapped",
    [
      40654
    ]
  ],
  [
    [
      63882,
      63882
    ],
    "mapped",
    [
      21147
    ]
  ],
  [
    [
      63883,
      63883
    ],
    "mapped",
    [
      26310
    ]
  ],
  [
    [
      63884,
      63884
    ],
    "mapped",
    [
      27511
    ]
  ],
  [
    [
      63885,
      63885
    ],
    "mapped",
    [
      36706
    ]
  ],
  [
    [
      63886,
      63886
    ],
    "mapped",
    [
      24180
    ]
  ],
  [
    [
      63887,
      63887
    ],
    "mapped",
    [
      24976
    ]
  ],
  [
    [
      63888,
      63888
    ],
    "mapped",
    [
      25088
    ]
  ],
  [
    [
      63889,
      63889
    ],
    "mapped",
    [
      25754
    ]
  ],
  [
    [
      63890,
      63890
    ],
    "mapped",
    [
      28451
    ]
  ],
  [
    [
      63891,
      63891
    ],
    "mapped",
    [
      29001
    ]
  ],
  [
    [
      63892,
      63892
    ],
    "mapped",
    [
      29833
    ]
  ],
  [
    [
      63893,
      63893
    ],
    "mapped",
    [
      31178
    ]
  ],
  [
    [
      63894,
      63894
    ],
    "mapped",
    [
      32244
    ]
  ],
  [
    [
      63895,
      63895
    ],
    "mapped",
    [
      32879
    ]
  ],
  [
    [
      63896,
      63896
    ],
    "mapped",
    [
      36646
    ]
  ],
  [
    [
      63897,
      63897
    ],
    "mapped",
    [
      34030
    ]
  ],
  [
    [
      63898,
      63898
    ],
    "mapped",
    [
      36899
    ]
  ],
  [
    [
      63899,
      63899
    ],
    "mapped",
    [
      37706
    ]
  ],
  [
    [
      63900,
      63900
    ],
    "mapped",
    [
      21015
    ]
  ],
  [
    [
      63901,
      63901
    ],
    "mapped",
    [
      21155
    ]
  ],
  [
    [
      63902,
      63902
    ],
    "mapped",
    [
      21693
    ]
  ],
  [
    [
      63903,
      63903
    ],
    "mapped",
    [
      28872
    ]
  ],
  [
    [
      63904,
      63904
    ],
    "mapped",
    [
      35010
    ]
  ],
  [
    [
      63905,
      63905
    ],
    "mapped",
    [
      35498
    ]
  ],
  [
    [
      63906,
      63906
    ],
    "mapped",
    [
      24265
    ]
  ],
  [
    [
      63907,
      63907
    ],
    "mapped",
    [
      24565
    ]
  ],
  [
    [
      63908,
      63908
    ],
    "mapped",
    [
      25467
    ]
  ],
  [
    [
      63909,
      63909
    ],
    "mapped",
    [
      27566
    ]
  ],
  [
    [
      63910,
      63910
    ],
    "mapped",
    [
      31806
    ]
  ],
  [
    [
      63911,
      63911
    ],
    "mapped",
    [
      29557
    ]
  ],
  [
    [
      63912,
      63912
    ],
    "mapped",
    [
      20196
    ]
  ],
  [
    [
      63913,
      63913
    ],
    "mapped",
    [
      22265
    ]
  ],
  [
    [
      63914,
      63914
    ],
    "mapped",
    [
      23527
    ]
  ],
  [
    [
      63915,
      63915
    ],
    "mapped",
    [
      23994
    ]
  ],
  [
    [
      63916,
      63916
    ],
    "mapped",
    [
      24604
    ]
  ],
  [
    [
      63917,
      63917
    ],
    "mapped",
    [
      29618
    ]
  ],
  [
    [
      63918,
      63918
    ],
    "mapped",
    [
      29801
    ]
  ],
  [
    [
      63919,
      63919
    ],
    "mapped",
    [
      32666
    ]
  ],
  [
    [
      63920,
      63920
    ],
    "mapped",
    [
      32838
    ]
  ],
  [
    [
      63921,
      63921
    ],
    "mapped",
    [
      37428
    ]
  ],
  [
    [
      63922,
      63922
    ],
    "mapped",
    [
      38646
    ]
  ],
  [
    [
      63923,
      63923
    ],
    "mapped",
    [
      38728
    ]
  ],
  [
    [
      63924,
      63924
    ],
    "mapped",
    [
      38936
    ]
  ],
  [
    [
      63925,
      63925
    ],
    "mapped",
    [
      20363
    ]
  ],
  [
    [
      63926,
      63926
    ],
    "mapped",
    [
      31150
    ]
  ],
  [
    [
      63927,
      63927
    ],
    "mapped",
    [
      37300
    ]
  ],
  [
    [
      63928,
      63928
    ],
    "mapped",
    [
      38584
    ]
  ],
  [
    [
      63929,
      63929
    ],
    "mapped",
    [
      24801
    ]
  ],
  [
    [
      63930,
      63930
    ],
    "mapped",
    [
      20102
    ]
  ],
  [
    [
      63931,
      63931
    ],
    "mapped",
    [
      20698
    ]
  ],
  [
    [
      63932,
      63932
    ],
    "mapped",
    [
      23534
    ]
  ],
  [
    [
      63933,
      63933
    ],
    "mapped",
    [
      23615
    ]
  ],
  [
    [
      63934,
      63934
    ],
    "mapped",
    [
      26009
    ]
  ],
  [
    [
      63935,
      63935
    ],
    "mapped",
    [
      27138
    ]
  ],
  [
    [
      63936,
      63936
    ],
    "mapped",
    [
      29134
    ]
  ],
  [
    [
      63937,
      63937
    ],
    "mapped",
    [
      30274
    ]
  ],
  [
    [
      63938,
      63938
    ],
    "mapped",
    [
      34044
    ]
  ],
  [
    [
      63939,
      63939
    ],
    "mapped",
    [
      36988
    ]
  ],
  [
    [
      63940,
      63940
    ],
    "mapped",
    [
      40845
    ]
  ],
  [
    [
      63941,
      63941
    ],
    "mapped",
    [
      26248
    ]
  ],
  [
    [
      63942,
      63942
    ],
    "mapped",
    [
      38446
    ]
  ],
  [
    [
      63943,
      63943
    ],
    "mapped",
    [
      21129
    ]
  ],
  [
    [
      63944,
      63944
    ],
    "mapped",
    [
      26491
    ]
  ],
  [
    [
      63945,
      63945
    ],
    "mapped",
    [
      26611
    ]
  ],
  [
    [
      63946,
      63946
    ],
    "mapped",
    [
      27969
    ]
  ],
  [
    [
      63947,
      63947
    ],
    "mapped",
    [
      28316
    ]
  ],
  [
    [
      63948,
      63948
    ],
    "mapped",
    [
      29705
    ]
  ],
  [
    [
      63949,
      63949
    ],
    "mapped",
    [
      30041
    ]
  ],
  [
    [
      63950,
      63950
    ],
    "mapped",
    [
      30827
    ]
  ],
  [
    [
      63951,
      63951
    ],
    "mapped",
    [
      32016
    ]
  ],
  [
    [
      63952,
      63952
    ],
    "mapped",
    [
      39006
    ]
  ],
  [
    [
      63953,
      63953
    ],
    "mapped",
    [
      20845
    ]
  ],
  [
    [
      63954,
      63954
    ],
    "mapped",
    [
      25134
    ]
  ],
  [
    [
      63955,
      63955
    ],
    "mapped",
    [
      38520
    ]
  ],
  [
    [
      63956,
      63956
    ],
    "mapped",
    [
      20523
    ]
  ],
  [
    [
      63957,
      63957
    ],
    "mapped",
    [
      23833
    ]
  ],
  [
    [
      63958,
      63958
    ],
    "mapped",
    [
      28138
    ]
  ],
  [
    [
      63959,
      63959
    ],
    "mapped",
    [
      36650
    ]
  ],
  [
    [
      63960,
      63960
    ],
    "mapped",
    [
      24459
    ]
  ],
  [
    [
      63961,
      63961
    ],
    "mapped",
    [
      24900
    ]
  ],
  [
    [
      63962,
      63962
    ],
    "mapped",
    [
      26647
    ]
  ],
  [
    [
      63963,
      63963
    ],
    "mapped",
    [
      29575
    ]
  ],
  [
    [
      63964,
      63964
    ],
    "mapped",
    [
      38534
    ]
  ],
  [
    [
      63965,
      63965
    ],
    "mapped",
    [
      21033
    ]
  ],
  [
    [
      63966,
      63966
    ],
    "mapped",
    [
      21519
    ]
  ],
  [
    [
      63967,
      63967
    ],
    "mapped",
    [
      23653
    ]
  ],
  [
    [
      63968,
      63968
    ],
    "mapped",
    [
      26131
    ]
  ],
  [
    [
      63969,
      63969
    ],
    "mapped",
    [
      26446
    ]
  ],
  [
    [
      63970,
      63970
    ],
    "mapped",
    [
      26792
    ]
  ],
  [
    [
      63971,
      63971
    ],
    "mapped",
    [
      27877
    ]
  ],
  [
    [
      63972,
      63972
    ],
    "mapped",
    [
      29702
    ]
  ],
  [
    [
      63973,
      63973
    ],
    "mapped",
    [
      30178
    ]
  ],
  [
    [
      63974,
      63974
    ],
    "mapped",
    [
      32633
    ]
  ],
  [
    [
      63975,
      63975
    ],
    "mapped",
    [
      35023
    ]
  ],
  [
    [
      63976,
      63976
    ],
    "mapped",
    [
      35041
    ]
  ],
  [
    [
      63977,
      63977
    ],
    "mapped",
    [
      37324
    ]
  ],
  [
    [
      63978,
      63978
    ],
    "mapped",
    [
      38626
    ]
  ],
  [
    [
      63979,
      63979
    ],
    "mapped",
    [
      21311
    ]
  ],
  [
    [
      63980,
      63980
    ],
    "mapped",
    [
      28346
    ]
  ],
  [
    [
      63981,
      63981
    ],
    "mapped",
    [
      21533
    ]
  ],
  [
    [
      63982,
      63982
    ],
    "mapped",
    [
      29136
    ]
  ],
  [
    [
      63983,
      63983
    ],
    "mapped",
    [
      29848
    ]
  ],
  [
    [
      63984,
      63984
    ],
    "mapped",
    [
      34298
    ]
  ],
  [
    [
      63985,
      63985
    ],
    "mapped",
    [
      38563
    ]
  ],
  [
    [
      63986,
      63986
    ],
    "mapped",
    [
      40023
    ]
  ],
  [
    [
      63987,
      63987
    ],
    "mapped",
    [
      40607
    ]
  ],
  [
    [
      63988,
      63988
    ],
    "mapped",
    [
      26519
    ]
  ],
  [
    [
      63989,
      63989
    ],
    "mapped",
    [
      28107
    ]
  ],
  [
    [
      63990,
      63990
    ],
    "mapped",
    [
      33256
    ]
  ],
  [
    [
      63991,
      63991
    ],
    "mapped",
    [
      31435
    ]
  ],
  [
    [
      63992,
      63992
    ],
    "mapped",
    [
      31520
    ]
  ],
  [
    [
      63993,
      63993
    ],
    "mapped",
    [
      31890
    ]
  ],
  [
    [
      63994,
      63994
    ],
    "mapped",
    [
      29376
    ]
  ],
  [
    [
      63995,
      63995
    ],
    "mapped",
    [
      28825
    ]
  ],
  [
    [
      63996,
      63996
    ],
    "mapped",
    [
      35672
    ]
  ],
  [
    [
      63997,
      63997
    ],
    "mapped",
    [
      20160
    ]
  ],
  [
    [
      63998,
      63998
    ],
    "mapped",
    [
      33590
    ]
  ],
  [
    [
      63999,
      63999
    ],
    "mapped",
    [
      21050
    ]
  ],
  [
    [
      64e3,
      64e3
    ],
    "mapped",
    [
      20999
    ]
  ],
  [
    [
      64001,
      64001
    ],
    "mapped",
    [
      24230
    ]
  ],
  [
    [
      64002,
      64002
    ],
    "mapped",
    [
      25299
    ]
  ],
  [
    [
      64003,
      64003
    ],
    "mapped",
    [
      31958
    ]
  ],
  [
    [
      64004,
      64004
    ],
    "mapped",
    [
      23429
    ]
  ],
  [
    [
      64005,
      64005
    ],
    "mapped",
    [
      27934
    ]
  ],
  [
    [
      64006,
      64006
    ],
    "mapped",
    [
      26292
    ]
  ],
  [
    [
      64007,
      64007
    ],
    "mapped",
    [
      36667
    ]
  ],
  [
    [
      64008,
      64008
    ],
    "mapped",
    [
      34892
    ]
  ],
  [
    [
      64009,
      64009
    ],
    "mapped",
    [
      38477
    ]
  ],
  [
    [
      64010,
      64010
    ],
    "mapped",
    [
      35211
    ]
  ],
  [
    [
      64011,
      64011
    ],
    "mapped",
    [
      24275
    ]
  ],
  [
    [
      64012,
      64012
    ],
    "mapped",
    [
      20800
    ]
  ],
  [
    [
      64013,
      64013
    ],
    "mapped",
    [
      21952
    ]
  ],
  [
    [
      64014,
      64015
    ],
    "valid"
  ],
  [
    [
      64016,
      64016
    ],
    "mapped",
    [
      22618
    ]
  ],
  [
    [
      64017,
      64017
    ],
    "valid"
  ],
  [
    [
      64018,
      64018
    ],
    "mapped",
    [
      26228
    ]
  ],
  [
    [
      64019,
      64020
    ],
    "valid"
  ],
  [
    [
      64021,
      64021
    ],
    "mapped",
    [
      20958
    ]
  ],
  [
    [
      64022,
      64022
    ],
    "mapped",
    [
      29482
    ]
  ],
  [
    [
      64023,
      64023
    ],
    "mapped",
    [
      30410
    ]
  ],
  [
    [
      64024,
      64024
    ],
    "mapped",
    [
      31036
    ]
  ],
  [
    [
      64025,
      64025
    ],
    "mapped",
    [
      31070
    ]
  ],
  [
    [
      64026,
      64026
    ],
    "mapped",
    [
      31077
    ]
  ],
  [
    [
      64027,
      64027
    ],
    "mapped",
    [
      31119
    ]
  ],
  [
    [
      64028,
      64028
    ],
    "mapped",
    [
      38742
    ]
  ],
  [
    [
      64029,
      64029
    ],
    "mapped",
    [
      31934
    ]
  ],
  [
    [
      64030,
      64030
    ],
    "mapped",
    [
      32701
    ]
  ],
  [
    [
      64031,
      64031
    ],
    "valid"
  ],
  [
    [
      64032,
      64032
    ],
    "mapped",
    [
      34322
    ]
  ],
  [
    [
      64033,
      64033
    ],
    "valid"
  ],
  [
    [
      64034,
      64034
    ],
    "mapped",
    [
      35576
    ]
  ],
  [
    [
      64035,
      64036
    ],
    "valid"
  ],
  [
    [
      64037,
      64037
    ],
    "mapped",
    [
      36920
    ]
  ],
  [
    [
      64038,
      64038
    ],
    "mapped",
    [
      37117
    ]
  ],
  [
    [
      64039,
      64041
    ],
    "valid"
  ],
  [
    [
      64042,
      64042
    ],
    "mapped",
    [
      39151
    ]
  ],
  [
    [
      64043,
      64043
    ],
    "mapped",
    [
      39164
    ]
  ],
  [
    [
      64044,
      64044
    ],
    "mapped",
    [
      39208
    ]
  ],
  [
    [
      64045,
      64045
    ],
    "mapped",
    [
      40372
    ]
  ],
  [
    [
      64046,
      64046
    ],
    "mapped",
    [
      37086
    ]
  ],
  [
    [
      64047,
      64047
    ],
    "mapped",
    [
      38583
    ]
  ],
  [
    [
      64048,
      64048
    ],
    "mapped",
    [
      20398
    ]
  ],
  [
    [
      64049,
      64049
    ],
    "mapped",
    [
      20711
    ]
  ],
  [
    [
      64050,
      64050
    ],
    "mapped",
    [
      20813
    ]
  ],
  [
    [
      64051,
      64051
    ],
    "mapped",
    [
      21193
    ]
  ],
  [
    [
      64052,
      64052
    ],
    "mapped",
    [
      21220
    ]
  ],
  [
    [
      64053,
      64053
    ],
    "mapped",
    [
      21329
    ]
  ],
  [
    [
      64054,
      64054
    ],
    "mapped",
    [
      21917
    ]
  ],
  [
    [
      64055,
      64055
    ],
    "mapped",
    [
      22022
    ]
  ],
  [
    [
      64056,
      64056
    ],
    "mapped",
    [
      22120
    ]
  ],
  [
    [
      64057,
      64057
    ],
    "mapped",
    [
      22592
    ]
  ],
  [
    [
      64058,
      64058
    ],
    "mapped",
    [
      22696
    ]
  ],
  [
    [
      64059,
      64059
    ],
    "mapped",
    [
      23652
    ]
  ],
  [
    [
      64060,
      64060
    ],
    "mapped",
    [
      23662
    ]
  ],
  [
    [
      64061,
      64061
    ],
    "mapped",
    [
      24724
    ]
  ],
  [
    [
      64062,
      64062
    ],
    "mapped",
    [
      24936
    ]
  ],
  [
    [
      64063,
      64063
    ],
    "mapped",
    [
      24974
    ]
  ],
  [
    [
      64064,
      64064
    ],
    "mapped",
    [
      25074
    ]
  ],
  [
    [
      64065,
      64065
    ],
    "mapped",
    [
      25935
    ]
  ],
  [
    [
      64066,
      64066
    ],
    "mapped",
    [
      26082
    ]
  ],
  [
    [
      64067,
      64067
    ],
    "mapped",
    [
      26257
    ]
  ],
  [
    [
      64068,
      64068
    ],
    "mapped",
    [
      26757
    ]
  ],
  [
    [
      64069,
      64069
    ],
    "mapped",
    [
      28023
    ]
  ],
  [
    [
      64070,
      64070
    ],
    "mapped",
    [
      28186
    ]
  ],
  [
    [
      64071,
      64071
    ],
    "mapped",
    [
      28450
    ]
  ],
  [
    [
      64072,
      64072
    ],
    "mapped",
    [
      29038
    ]
  ],
  [
    [
      64073,
      64073
    ],
    "mapped",
    [
      29227
    ]
  ],
  [
    [
      64074,
      64074
    ],
    "mapped",
    [
      29730
    ]
  ],
  [
    [
      64075,
      64075
    ],
    "mapped",
    [
      30865
    ]
  ],
  [
    [
      64076,
      64076
    ],
    "mapped",
    [
      31038
    ]
  ],
  [
    [
      64077,
      64077
    ],
    "mapped",
    [
      31049
    ]
  ],
  [
    [
      64078,
      64078
    ],
    "mapped",
    [
      31048
    ]
  ],
  [
    [
      64079,
      64079
    ],
    "mapped",
    [
      31056
    ]
  ],
  [
    [
      64080,
      64080
    ],
    "mapped",
    [
      31062
    ]
  ],
  [
    [
      64081,
      64081
    ],
    "mapped",
    [
      31069
    ]
  ],
  [
    [
      64082,
      64082
    ],
    "mapped",
    [
      31117
    ]
  ],
  [
    [
      64083,
      64083
    ],
    "mapped",
    [
      31118
    ]
  ],
  [
    [
      64084,
      64084
    ],
    "mapped",
    [
      31296
    ]
  ],
  [
    [
      64085,
      64085
    ],
    "mapped",
    [
      31361
    ]
  ],
  [
    [
      64086,
      64086
    ],
    "mapped",
    [
      31680
    ]
  ],
  [
    [
      64087,
      64087
    ],
    "mapped",
    [
      32244
    ]
  ],
  [
    [
      64088,
      64088
    ],
    "mapped",
    [
      32265
    ]
  ],
  [
    [
      64089,
      64089
    ],
    "mapped",
    [
      32321
    ]
  ],
  [
    [
      64090,
      64090
    ],
    "mapped",
    [
      32626
    ]
  ],
  [
    [
      64091,
      64091
    ],
    "mapped",
    [
      32773
    ]
  ],
  [
    [
      64092,
      64092
    ],
    "mapped",
    [
      33261
    ]
  ],
  [
    [
      64093,
      64094
    ],
    "mapped",
    [
      33401
    ]
  ],
  [
    [
      64095,
      64095
    ],
    "mapped",
    [
      33879
    ]
  ],
  [
    [
      64096,
      64096
    ],
    "mapped",
    [
      35088
    ]
  ],
  [
    [
      64097,
      64097
    ],
    "mapped",
    [
      35222
    ]
  ],
  [
    [
      64098,
      64098
    ],
    "mapped",
    [
      35585
    ]
  ],
  [
    [
      64099,
      64099
    ],
    "mapped",
    [
      35641
    ]
  ],
  [
    [
      64100,
      64100
    ],
    "mapped",
    [
      36051
    ]
  ],
  [
    [
      64101,
      64101
    ],
    "mapped",
    [
      36104
    ]
  ],
  [
    [
      64102,
      64102
    ],
    "mapped",
    [
      36790
    ]
  ],
  [
    [
      64103,
      64103
    ],
    "mapped",
    [
      36920
    ]
  ],
  [
    [
      64104,
      64104
    ],
    "mapped",
    [
      38627
    ]
  ],
  [
    [
      64105,
      64105
    ],
    "mapped",
    [
      38911
    ]
  ],
  [
    [
      64106,
      64106
    ],
    "mapped",
    [
      38971
    ]
  ],
  [
    [
      64107,
      64107
    ],
    "mapped",
    [
      24693
    ]
  ],
  [
    [
      64108,
      64108
    ],
    "mapped",
    [
      148206
    ]
  ],
  [
    [
      64109,
      64109
    ],
    "mapped",
    [
      33304
    ]
  ],
  [
    [
      64110,
      64111
    ],
    "disallowed"
  ],
  [
    [
      64112,
      64112
    ],
    "mapped",
    [
      20006
    ]
  ],
  [
    [
      64113,
      64113
    ],
    "mapped",
    [
      20917
    ]
  ],
  [
    [
      64114,
      64114
    ],
    "mapped",
    [
      20840
    ]
  ],
  [
    [
      64115,
      64115
    ],
    "mapped",
    [
      20352
    ]
  ],
  [
    [
      64116,
      64116
    ],
    "mapped",
    [
      20805
    ]
  ],
  [
    [
      64117,
      64117
    ],
    "mapped",
    [
      20864
    ]
  ],
  [
    [
      64118,
      64118
    ],
    "mapped",
    [
      21191
    ]
  ],
  [
    [
      64119,
      64119
    ],
    "mapped",
    [
      21242
    ]
  ],
  [
    [
      64120,
      64120
    ],
    "mapped",
    [
      21917
    ]
  ],
  [
    [
      64121,
      64121
    ],
    "mapped",
    [
      21845
    ]
  ],
  [
    [
      64122,
      64122
    ],
    "mapped",
    [
      21913
    ]
  ],
  [
    [
      64123,
      64123
    ],
    "mapped",
    [
      21986
    ]
  ],
  [
    [
      64124,
      64124
    ],
    "mapped",
    [
      22618
    ]
  ],
  [
    [
      64125,
      64125
    ],
    "mapped",
    [
      22707
    ]
  ],
  [
    [
      64126,
      64126
    ],
    "mapped",
    [
      22852
    ]
  ],
  [
    [
      64127,
      64127
    ],
    "mapped",
    [
      22868
    ]
  ],
  [
    [
      64128,
      64128
    ],
    "mapped",
    [
      23138
    ]
  ],
  [
    [
      64129,
      64129
    ],
    "mapped",
    [
      23336
    ]
  ],
  [
    [
      64130,
      64130
    ],
    "mapped",
    [
      24274
    ]
  ],
  [
    [
      64131,
      64131
    ],
    "mapped",
    [
      24281
    ]
  ],
  [
    [
      64132,
      64132
    ],
    "mapped",
    [
      24425
    ]
  ],
  [
    [
      64133,
      64133
    ],
    "mapped",
    [
      24493
    ]
  ],
  [
    [
      64134,
      64134
    ],
    "mapped",
    [
      24792
    ]
  ],
  [
    [
      64135,
      64135
    ],
    "mapped",
    [
      24910
    ]
  ],
  [
    [
      64136,
      64136
    ],
    "mapped",
    [
      24840
    ]
  ],
  [
    [
      64137,
      64137
    ],
    "mapped",
    [
      24974
    ]
  ],
  [
    [
      64138,
      64138
    ],
    "mapped",
    [
      24928
    ]
  ],
  [
    [
      64139,
      64139
    ],
    "mapped",
    [
      25074
    ]
  ],
  [
    [
      64140,
      64140
    ],
    "mapped",
    [
      25140
    ]
  ],
  [
    [
      64141,
      64141
    ],
    "mapped",
    [
      25540
    ]
  ],
  [
    [
      64142,
      64142
    ],
    "mapped",
    [
      25628
    ]
  ],
  [
    [
      64143,
      64143
    ],
    "mapped",
    [
      25682
    ]
  ],
  [
    [
      64144,
      64144
    ],
    "mapped",
    [
      25942
    ]
  ],
  [
    [
      64145,
      64145
    ],
    "mapped",
    [
      26228
    ]
  ],
  [
    [
      64146,
      64146
    ],
    "mapped",
    [
      26391
    ]
  ],
  [
    [
      64147,
      64147
    ],
    "mapped",
    [
      26395
    ]
  ],
  [
    [
      64148,
      64148
    ],
    "mapped",
    [
      26454
    ]
  ],
  [
    [
      64149,
      64149
    ],
    "mapped",
    [
      27513
    ]
  ],
  [
    [
      64150,
      64150
    ],
    "mapped",
    [
      27578
    ]
  ],
  [
    [
      64151,
      64151
    ],
    "mapped",
    [
      27969
    ]
  ],
  [
    [
      64152,
      64152
    ],
    "mapped",
    [
      28379
    ]
  ],
  [
    [
      64153,
      64153
    ],
    "mapped",
    [
      28363
    ]
  ],
  [
    [
      64154,
      64154
    ],
    "mapped",
    [
      28450
    ]
  ],
  [
    [
      64155,
      64155
    ],
    "mapped",
    [
      28702
    ]
  ],
  [
    [
      64156,
      64156
    ],
    "mapped",
    [
      29038
    ]
  ],
  [
    [
      64157,
      64157
    ],
    "mapped",
    [
      30631
    ]
  ],
  [
    [
      64158,
      64158
    ],
    "mapped",
    [
      29237
    ]
  ],
  [
    [
      64159,
      64159
    ],
    "mapped",
    [
      29359
    ]
  ],
  [
    [
      64160,
      64160
    ],
    "mapped",
    [
      29482
    ]
  ],
  [
    [
      64161,
      64161
    ],
    "mapped",
    [
      29809
    ]
  ],
  [
    [
      64162,
      64162
    ],
    "mapped",
    [
      29958
    ]
  ],
  [
    [
      64163,
      64163
    ],
    "mapped",
    [
      30011
    ]
  ],
  [
    [
      64164,
      64164
    ],
    "mapped",
    [
      30237
    ]
  ],
  [
    [
      64165,
      64165
    ],
    "mapped",
    [
      30239
    ]
  ],
  [
    [
      64166,
      64166
    ],
    "mapped",
    [
      30410
    ]
  ],
  [
    [
      64167,
      64167
    ],
    "mapped",
    [
      30427
    ]
  ],
  [
    [
      64168,
      64168
    ],
    "mapped",
    [
      30452
    ]
  ],
  [
    [
      64169,
      64169
    ],
    "mapped",
    [
      30538
    ]
  ],
  [
    [
      64170,
      64170
    ],
    "mapped",
    [
      30528
    ]
  ],
  [
    [
      64171,
      64171
    ],
    "mapped",
    [
      30924
    ]
  ],
  [
    [
      64172,
      64172
    ],
    "mapped",
    [
      31409
    ]
  ],
  [
    [
      64173,
      64173
    ],
    "mapped",
    [
      31680
    ]
  ],
  [
    [
      64174,
      64174
    ],
    "mapped",
    [
      31867
    ]
  ],
  [
    [
      64175,
      64175
    ],
    "mapped",
    [
      32091
    ]
  ],
  [
    [
      64176,
      64176
    ],
    "mapped",
    [
      32244
    ]
  ],
  [
    [
      64177,
      64177
    ],
    "mapped",
    [
      32574
    ]
  ],
  [
    [
      64178,
      64178
    ],
    "mapped",
    [
      32773
    ]
  ],
  [
    [
      64179,
      64179
    ],
    "mapped",
    [
      33618
    ]
  ],
  [
    [
      64180,
      64180
    ],
    "mapped",
    [
      33775
    ]
  ],
  [
    [
      64181,
      64181
    ],
    "mapped",
    [
      34681
    ]
  ],
  [
    [
      64182,
      64182
    ],
    "mapped",
    [
      35137
    ]
  ],
  [
    [
      64183,
      64183
    ],
    "mapped",
    [
      35206
    ]
  ],
  [
    [
      64184,
      64184
    ],
    "mapped",
    [
      35222
    ]
  ],
  [
    [
      64185,
      64185
    ],
    "mapped",
    [
      35519
    ]
  ],
  [
    [
      64186,
      64186
    ],
    "mapped",
    [
      35576
    ]
  ],
  [
    [
      64187,
      64187
    ],
    "mapped",
    [
      35531
    ]
  ],
  [
    [
      64188,
      64188
    ],
    "mapped",
    [
      35585
    ]
  ],
  [
    [
      64189,
      64189
    ],
    "mapped",
    [
      35582
    ]
  ],
  [
    [
      64190,
      64190
    ],
    "mapped",
    [
      35565
    ]
  ],
  [
    [
      64191,
      64191
    ],
    "mapped",
    [
      35641
    ]
  ],
  [
    [
      64192,
      64192
    ],
    "mapped",
    [
      35722
    ]
  ],
  [
    [
      64193,
      64193
    ],
    "mapped",
    [
      36104
    ]
  ],
  [
    [
      64194,
      64194
    ],
    "mapped",
    [
      36664
    ]
  ],
  [
    [
      64195,
      64195
    ],
    "mapped",
    [
      36978
    ]
  ],
  [
    [
      64196,
      64196
    ],
    "mapped",
    [
      37273
    ]
  ],
  [
    [
      64197,
      64197
    ],
    "mapped",
    [
      37494
    ]
  ],
  [
    [
      64198,
      64198
    ],
    "mapped",
    [
      38524
    ]
  ],
  [
    [
      64199,
      64199
    ],
    "mapped",
    [
      38627
    ]
  ],
  [
    [
      64200,
      64200
    ],
    "mapped",
    [
      38742
    ]
  ],
  [
    [
      64201,
      64201
    ],
    "mapped",
    [
      38875
    ]
  ],
  [
    [
      64202,
      64202
    ],
    "mapped",
    [
      38911
    ]
  ],
  [
    [
      64203,
      64203
    ],
    "mapped",
    [
      38923
    ]
  ],
  [
    [
      64204,
      64204
    ],
    "mapped",
    [
      38971
    ]
  ],
  [
    [
      64205,
      64205
    ],
    "mapped",
    [
      39698
    ]
  ],
  [
    [
      64206,
      64206
    ],
    "mapped",
    [
      40860
    ]
  ],
  [
    [
      64207,
      64207
    ],
    "mapped",
    [
      141386
    ]
  ],
  [
    [
      64208,
      64208
    ],
    "mapped",
    [
      141380
    ]
  ],
  [
    [
      64209,
      64209
    ],
    "mapped",
    [
      144341
    ]
  ],
  [
    [
      64210,
      64210
    ],
    "mapped",
    [
      15261
    ]
  ],
  [
    [
      64211,
      64211
    ],
    "mapped",
    [
      16408
    ]
  ],
  [
    [
      64212,
      64212
    ],
    "mapped",
    [
      16441
    ]
  ],
  [
    [
      64213,
      64213
    ],
    "mapped",
    [
      152137
    ]
  ],
  [
    [
      64214,
      64214
    ],
    "mapped",
    [
      154832
    ]
  ],
  [
    [
      64215,
      64215
    ],
    "mapped",
    [
      163539
    ]
  ],
  [
    [
      64216,
      64216
    ],
    "mapped",
    [
      40771
    ]
  ],
  [
    [
      64217,
      64217
    ],
    "mapped",
    [
      40846
    ]
  ],
  [
    [
      64218,
      64255
    ],
    "disallowed"
  ],
  [
    [
      64256,
      64256
    ],
    "mapped",
    [
      102,
      102
    ]
  ],
  [
    [
      64257,
      64257
    ],
    "mapped",
    [
      102,
      105
    ]
  ],
  [
    [
      64258,
      64258
    ],
    "mapped",
    [
      102,
      108
    ]
  ],
  [
    [
      64259,
      64259
    ],
    "mapped",
    [
      102,
      102,
      105
    ]
  ],
  [
    [
      64260,
      64260
    ],
    "mapped",
    [
      102,
      102,
      108
    ]
  ],
  [
    [
      64261,
      64262
    ],
    "mapped",
    [
      115,
      116
    ]
  ],
  [
    [
      64263,
      64274
    ],
    "disallowed"
  ],
  [
    [
      64275,
      64275
    ],
    "mapped",
    [
      1396,
      1398
    ]
  ],
  [
    [
      64276,
      64276
    ],
    "mapped",
    [
      1396,
      1381
    ]
  ],
  [
    [
      64277,
      64277
    ],
    "mapped",
    [
      1396,
      1387
    ]
  ],
  [
    [
      64278,
      64278
    ],
    "mapped",
    [
      1406,
      1398
    ]
  ],
  [
    [
      64279,
      64279
    ],
    "mapped",
    [
      1396,
      1389
    ]
  ],
  [
    [
      64280,
      64284
    ],
    "disallowed"
  ],
  [
    [
      64285,
      64285
    ],
    "mapped",
    [
      1497,
      1460
    ]
  ],
  [
    [
      64286,
      64286
    ],
    "valid"
  ],
  [
    [
      64287,
      64287
    ],
    "mapped",
    [
      1522,
      1463
    ]
  ],
  [
    [
      64288,
      64288
    ],
    "mapped",
    [
      1506
    ]
  ],
  [
    [
      64289,
      64289
    ],
    "mapped",
    [
      1488
    ]
  ],
  [
    [
      64290,
      64290
    ],
    "mapped",
    [
      1491
    ]
  ],
  [
    [
      64291,
      64291
    ],
    "mapped",
    [
      1492
    ]
  ],
  [
    [
      64292,
      64292
    ],
    "mapped",
    [
      1499
    ]
  ],
  [
    [
      64293,
      64293
    ],
    "mapped",
    [
      1500
    ]
  ],
  [
    [
      64294,
      64294
    ],
    "mapped",
    [
      1501
    ]
  ],
  [
    [
      64295,
      64295
    ],
    "mapped",
    [
      1512
    ]
  ],
  [
    [
      64296,
      64296
    ],
    "mapped",
    [
      1514
    ]
  ],
  [
    [
      64297,
      64297
    ],
    "disallowed_STD3_mapped",
    [
      43
    ]
  ],
  [
    [
      64298,
      64298
    ],
    "mapped",
    [
      1513,
      1473
    ]
  ],
  [
    [
      64299,
      64299
    ],
    "mapped",
    [
      1513,
      1474
    ]
  ],
  [
    [
      64300,
      64300
    ],
    "mapped",
    [
      1513,
      1468,
      1473
    ]
  ],
  [
    [
      64301,
      64301
    ],
    "mapped",
    [
      1513,
      1468,
      1474
    ]
  ],
  [
    [
      64302,
      64302
    ],
    "mapped",
    [
      1488,
      1463
    ]
  ],
  [
    [
      64303,
      64303
    ],
    "mapped",
    [
      1488,
      1464
    ]
  ],
  [
    [
      64304,
      64304
    ],
    "mapped",
    [
      1488,
      1468
    ]
  ],
  [
    [
      64305,
      64305
    ],
    "mapped",
    [
      1489,
      1468
    ]
  ],
  [
    [
      64306,
      64306
    ],
    "mapped",
    [
      1490,
      1468
    ]
  ],
  [
    [
      64307,
      64307
    ],
    "mapped",
    [
      1491,
      1468
    ]
  ],
  [
    [
      64308,
      64308
    ],
    "mapped",
    [
      1492,
      1468
    ]
  ],
  [
    [
      64309,
      64309
    ],
    "mapped",
    [
      1493,
      1468
    ]
  ],
  [
    [
      64310,
      64310
    ],
    "mapped",
    [
      1494,
      1468
    ]
  ],
  [
    [
      64311,
      64311
    ],
    "disallowed"
  ],
  [
    [
      64312,
      64312
    ],
    "mapped",
    [
      1496,
      1468
    ]
  ],
  [
    [
      64313,
      64313
    ],
    "mapped",
    [
      1497,
      1468
    ]
  ],
  [
    [
      64314,
      64314
    ],
    "mapped",
    [
      1498,
      1468
    ]
  ],
  [
    [
      64315,
      64315
    ],
    "mapped",
    [
      1499,
      1468
    ]
  ],
  [
    [
      64316,
      64316
    ],
    "mapped",
    [
      1500,
      1468
    ]
  ],
  [
    [
      64317,
      64317
    ],
    "disallowed"
  ],
  [
    [
      64318,
      64318
    ],
    "mapped",
    [
      1502,
      1468
    ]
  ],
  [
    [
      64319,
      64319
    ],
    "disallowed"
  ],
  [
    [
      64320,
      64320
    ],
    "mapped",
    [
      1504,
      1468
    ]
  ],
  [
    [
      64321,
      64321
    ],
    "mapped",
    [
      1505,
      1468
    ]
  ],
  [
    [
      64322,
      64322
    ],
    "disallowed"
  ],
  [
    [
      64323,
      64323
    ],
    "mapped",
    [
      1507,
      1468
    ]
  ],
  [
    [
      64324,
      64324
    ],
    "mapped",
    [
      1508,
      1468
    ]
  ],
  [
    [
      64325,
      64325
    ],
    "disallowed"
  ],
  [
    [
      64326,
      64326
    ],
    "mapped",
    [
      1510,
      1468
    ]
  ],
  [
    [
      64327,
      64327
    ],
    "mapped",
    [
      1511,
      1468
    ]
  ],
  [
    [
      64328,
      64328
    ],
    "mapped",
    [
      1512,
      1468
    ]
  ],
  [
    [
      64329,
      64329
    ],
    "mapped",
    [
      1513,
      1468
    ]
  ],
  [
    [
      64330,
      64330
    ],
    "mapped",
    [
      1514,
      1468
    ]
  ],
  [
    [
      64331,
      64331
    ],
    "mapped",
    [
      1493,
      1465
    ]
  ],
  [
    [
      64332,
      64332
    ],
    "mapped",
    [
      1489,
      1471
    ]
  ],
  [
    [
      64333,
      64333
    ],
    "mapped",
    [
      1499,
      1471
    ]
  ],
  [
    [
      64334,
      64334
    ],
    "mapped",
    [
      1508,
      1471
    ]
  ],
  [
    [
      64335,
      64335
    ],
    "mapped",
    [
      1488,
      1500
    ]
  ],
  [
    [
      64336,
      64337
    ],
    "mapped",
    [
      1649
    ]
  ],
  [
    [
      64338,
      64341
    ],
    "mapped",
    [
      1659
    ]
  ],
  [
    [
      64342,
      64345
    ],
    "mapped",
    [
      1662
    ]
  ],
  [
    [
      64346,
      64349
    ],
    "mapped",
    [
      1664
    ]
  ],
  [
    [
      64350,
      64353
    ],
    "mapped",
    [
      1658
    ]
  ],
  [
    [
      64354,
      64357
    ],
    "mapped",
    [
      1663
    ]
  ],
  [
    [
      64358,
      64361
    ],
    "mapped",
    [
      1657
    ]
  ],
  [
    [
      64362,
      64365
    ],
    "mapped",
    [
      1700
    ]
  ],
  [
    [
      64366,
      64369
    ],
    "mapped",
    [
      1702
    ]
  ],
  [
    [
      64370,
      64373
    ],
    "mapped",
    [
      1668
    ]
  ],
  [
    [
      64374,
      64377
    ],
    "mapped",
    [
      1667
    ]
  ],
  [
    [
      64378,
      64381
    ],
    "mapped",
    [
      1670
    ]
  ],
  [
    [
      64382,
      64385
    ],
    "mapped",
    [
      1671
    ]
  ],
  [
    [
      64386,
      64387
    ],
    "mapped",
    [
      1677
    ]
  ],
  [
    [
      64388,
      64389
    ],
    "mapped",
    [
      1676
    ]
  ],
  [
    [
      64390,
      64391
    ],
    "mapped",
    [
      1678
    ]
  ],
  [
    [
      64392,
      64393
    ],
    "mapped",
    [
      1672
    ]
  ],
  [
    [
      64394,
      64395
    ],
    "mapped",
    [
      1688
    ]
  ],
  [
    [
      64396,
      64397
    ],
    "mapped",
    [
      1681
    ]
  ],
  [
    [
      64398,
      64401
    ],
    "mapped",
    [
      1705
    ]
  ],
  [
    [
      64402,
      64405
    ],
    "mapped",
    [
      1711
    ]
  ],
  [
    [
      64406,
      64409
    ],
    "mapped",
    [
      1715
    ]
  ],
  [
    [
      64410,
      64413
    ],
    "mapped",
    [
      1713
    ]
  ],
  [
    [
      64414,
      64415
    ],
    "mapped",
    [
      1722
    ]
  ],
  [
    [
      64416,
      64419
    ],
    "mapped",
    [
      1723
    ]
  ],
  [
    [
      64420,
      64421
    ],
    "mapped",
    [
      1728
    ]
  ],
  [
    [
      64422,
      64425
    ],
    "mapped",
    [
      1729
    ]
  ],
  [
    [
      64426,
      64429
    ],
    "mapped",
    [
      1726
    ]
  ],
  [
    [
      64430,
      64431
    ],
    "mapped",
    [
      1746
    ]
  ],
  [
    [
      64432,
      64433
    ],
    "mapped",
    [
      1747
    ]
  ],
  [
    [
      64434,
      64449
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      64450,
      64466
    ],
    "disallowed"
  ],
  [
    [
      64467,
      64470
    ],
    "mapped",
    [
      1709
    ]
  ],
  [
    [
      64471,
      64472
    ],
    "mapped",
    [
      1735
    ]
  ],
  [
    [
      64473,
      64474
    ],
    "mapped",
    [
      1734
    ]
  ],
  [
    [
      64475,
      64476
    ],
    "mapped",
    [
      1736
    ]
  ],
  [
    [
      64477,
      64477
    ],
    "mapped",
    [
      1735,
      1652
    ]
  ],
  [
    [
      64478,
      64479
    ],
    "mapped",
    [
      1739
    ]
  ],
  [
    [
      64480,
      64481
    ],
    "mapped",
    [
      1733
    ]
  ],
  [
    [
      64482,
      64483
    ],
    "mapped",
    [
      1737
    ]
  ],
  [
    [
      64484,
      64487
    ],
    "mapped",
    [
      1744
    ]
  ],
  [
    [
      64488,
      64489
    ],
    "mapped",
    [
      1609
    ]
  ],
  [
    [
      64490,
      64491
    ],
    "mapped",
    [
      1574,
      1575
    ]
  ],
  [
    [
      64492,
      64493
    ],
    "mapped",
    [
      1574,
      1749
    ]
  ],
  [
    [
      64494,
      64495
    ],
    "mapped",
    [
      1574,
      1608
    ]
  ],
  [
    [
      64496,
      64497
    ],
    "mapped",
    [
      1574,
      1735
    ]
  ],
  [
    [
      64498,
      64499
    ],
    "mapped",
    [
      1574,
      1734
    ]
  ],
  [
    [
      64500,
      64501
    ],
    "mapped",
    [
      1574,
      1736
    ]
  ],
  [
    [
      64502,
      64504
    ],
    "mapped",
    [
      1574,
      1744
    ]
  ],
  [
    [
      64505,
      64507
    ],
    "mapped",
    [
      1574,
      1609
    ]
  ],
  [
    [
      64508,
      64511
    ],
    "mapped",
    [
      1740
    ]
  ],
  [
    [
      64512,
      64512
    ],
    "mapped",
    [
      1574,
      1580
    ]
  ],
  [
    [
      64513,
      64513
    ],
    "mapped",
    [
      1574,
      1581
    ]
  ],
  [
    [
      64514,
      64514
    ],
    "mapped",
    [
      1574,
      1605
    ]
  ],
  [
    [
      64515,
      64515
    ],
    "mapped",
    [
      1574,
      1609
    ]
  ],
  [
    [
      64516,
      64516
    ],
    "mapped",
    [
      1574,
      1610
    ]
  ],
  [
    [
      64517,
      64517
    ],
    "mapped",
    [
      1576,
      1580
    ]
  ],
  [
    [
      64518,
      64518
    ],
    "mapped",
    [
      1576,
      1581
    ]
  ],
  [
    [
      64519,
      64519
    ],
    "mapped",
    [
      1576,
      1582
    ]
  ],
  [
    [
      64520,
      64520
    ],
    "mapped",
    [
      1576,
      1605
    ]
  ],
  [
    [
      64521,
      64521
    ],
    "mapped",
    [
      1576,
      1609
    ]
  ],
  [
    [
      64522,
      64522
    ],
    "mapped",
    [
      1576,
      1610
    ]
  ],
  [
    [
      64523,
      64523
    ],
    "mapped",
    [
      1578,
      1580
    ]
  ],
  [
    [
      64524,
      64524
    ],
    "mapped",
    [
      1578,
      1581
    ]
  ],
  [
    [
      64525,
      64525
    ],
    "mapped",
    [
      1578,
      1582
    ]
  ],
  [
    [
      64526,
      64526
    ],
    "mapped",
    [
      1578,
      1605
    ]
  ],
  [
    [
      64527,
      64527
    ],
    "mapped",
    [
      1578,
      1609
    ]
  ],
  [
    [
      64528,
      64528
    ],
    "mapped",
    [
      1578,
      1610
    ]
  ],
  [
    [
      64529,
      64529
    ],
    "mapped",
    [
      1579,
      1580
    ]
  ],
  [
    [
      64530,
      64530
    ],
    "mapped",
    [
      1579,
      1605
    ]
  ],
  [
    [
      64531,
      64531
    ],
    "mapped",
    [
      1579,
      1609
    ]
  ],
  [
    [
      64532,
      64532
    ],
    "mapped",
    [
      1579,
      1610
    ]
  ],
  [
    [
      64533,
      64533
    ],
    "mapped",
    [
      1580,
      1581
    ]
  ],
  [
    [
      64534,
      64534
    ],
    "mapped",
    [
      1580,
      1605
    ]
  ],
  [
    [
      64535,
      64535
    ],
    "mapped",
    [
      1581,
      1580
    ]
  ],
  [
    [
      64536,
      64536
    ],
    "mapped",
    [
      1581,
      1605
    ]
  ],
  [
    [
      64537,
      64537
    ],
    "mapped",
    [
      1582,
      1580
    ]
  ],
  [
    [
      64538,
      64538
    ],
    "mapped",
    [
      1582,
      1581
    ]
  ],
  [
    [
      64539,
      64539
    ],
    "mapped",
    [
      1582,
      1605
    ]
  ],
  [
    [
      64540,
      64540
    ],
    "mapped",
    [
      1587,
      1580
    ]
  ],
  [
    [
      64541,
      64541
    ],
    "mapped",
    [
      1587,
      1581
    ]
  ],
  [
    [
      64542,
      64542
    ],
    "mapped",
    [
      1587,
      1582
    ]
  ],
  [
    [
      64543,
      64543
    ],
    "mapped",
    [
      1587,
      1605
    ]
  ],
  [
    [
      64544,
      64544
    ],
    "mapped",
    [
      1589,
      1581
    ]
  ],
  [
    [
      64545,
      64545
    ],
    "mapped",
    [
      1589,
      1605
    ]
  ],
  [
    [
      64546,
      64546
    ],
    "mapped",
    [
      1590,
      1580
    ]
  ],
  [
    [
      64547,
      64547
    ],
    "mapped",
    [
      1590,
      1581
    ]
  ],
  [
    [
      64548,
      64548
    ],
    "mapped",
    [
      1590,
      1582
    ]
  ],
  [
    [
      64549,
      64549
    ],
    "mapped",
    [
      1590,
      1605
    ]
  ],
  [
    [
      64550,
      64550
    ],
    "mapped",
    [
      1591,
      1581
    ]
  ],
  [
    [
      64551,
      64551
    ],
    "mapped",
    [
      1591,
      1605
    ]
  ],
  [
    [
      64552,
      64552
    ],
    "mapped",
    [
      1592,
      1605
    ]
  ],
  [
    [
      64553,
      64553
    ],
    "mapped",
    [
      1593,
      1580
    ]
  ],
  [
    [
      64554,
      64554
    ],
    "mapped",
    [
      1593,
      1605
    ]
  ],
  [
    [
      64555,
      64555
    ],
    "mapped",
    [
      1594,
      1580
    ]
  ],
  [
    [
      64556,
      64556
    ],
    "mapped",
    [
      1594,
      1605
    ]
  ],
  [
    [
      64557,
      64557
    ],
    "mapped",
    [
      1601,
      1580
    ]
  ],
  [
    [
      64558,
      64558
    ],
    "mapped",
    [
      1601,
      1581
    ]
  ],
  [
    [
      64559,
      64559
    ],
    "mapped",
    [
      1601,
      1582
    ]
  ],
  [
    [
      64560,
      64560
    ],
    "mapped",
    [
      1601,
      1605
    ]
  ],
  [
    [
      64561,
      64561
    ],
    "mapped",
    [
      1601,
      1609
    ]
  ],
  [
    [
      64562,
      64562
    ],
    "mapped",
    [
      1601,
      1610
    ]
  ],
  [
    [
      64563,
      64563
    ],
    "mapped",
    [
      1602,
      1581
    ]
  ],
  [
    [
      64564,
      64564
    ],
    "mapped",
    [
      1602,
      1605
    ]
  ],
  [
    [
      64565,
      64565
    ],
    "mapped",
    [
      1602,
      1609
    ]
  ],
  [
    [
      64566,
      64566
    ],
    "mapped",
    [
      1602,
      1610
    ]
  ],
  [
    [
      64567,
      64567
    ],
    "mapped",
    [
      1603,
      1575
    ]
  ],
  [
    [
      64568,
      64568
    ],
    "mapped",
    [
      1603,
      1580
    ]
  ],
  [
    [
      64569,
      64569
    ],
    "mapped",
    [
      1603,
      1581
    ]
  ],
  [
    [
      64570,
      64570
    ],
    "mapped",
    [
      1603,
      1582
    ]
  ],
  [
    [
      64571,
      64571
    ],
    "mapped",
    [
      1603,
      1604
    ]
  ],
  [
    [
      64572,
      64572
    ],
    "mapped",
    [
      1603,
      1605
    ]
  ],
  [
    [
      64573,
      64573
    ],
    "mapped",
    [
      1603,
      1609
    ]
  ],
  [
    [
      64574,
      64574
    ],
    "mapped",
    [
      1603,
      1610
    ]
  ],
  [
    [
      64575,
      64575
    ],
    "mapped",
    [
      1604,
      1580
    ]
  ],
  [
    [
      64576,
      64576
    ],
    "mapped",
    [
      1604,
      1581
    ]
  ],
  [
    [
      64577,
      64577
    ],
    "mapped",
    [
      1604,
      1582
    ]
  ],
  [
    [
      64578,
      64578
    ],
    "mapped",
    [
      1604,
      1605
    ]
  ],
  [
    [
      64579,
      64579
    ],
    "mapped",
    [
      1604,
      1609
    ]
  ],
  [
    [
      64580,
      64580
    ],
    "mapped",
    [
      1604,
      1610
    ]
  ],
  [
    [
      64581,
      64581
    ],
    "mapped",
    [
      1605,
      1580
    ]
  ],
  [
    [
      64582,
      64582
    ],
    "mapped",
    [
      1605,
      1581
    ]
  ],
  [
    [
      64583,
      64583
    ],
    "mapped",
    [
      1605,
      1582
    ]
  ],
  [
    [
      64584,
      64584
    ],
    "mapped",
    [
      1605,
      1605
    ]
  ],
  [
    [
      64585,
      64585
    ],
    "mapped",
    [
      1605,
      1609
    ]
  ],
  [
    [
      64586,
      64586
    ],
    "mapped",
    [
      1605,
      1610
    ]
  ],
  [
    [
      64587,
      64587
    ],
    "mapped",
    [
      1606,
      1580
    ]
  ],
  [
    [
      64588,
      64588
    ],
    "mapped",
    [
      1606,
      1581
    ]
  ],
  [
    [
      64589,
      64589
    ],
    "mapped",
    [
      1606,
      1582
    ]
  ],
  [
    [
      64590,
      64590
    ],
    "mapped",
    [
      1606,
      1605
    ]
  ],
  [
    [
      64591,
      64591
    ],
    "mapped",
    [
      1606,
      1609
    ]
  ],
  [
    [
      64592,
      64592
    ],
    "mapped",
    [
      1606,
      1610
    ]
  ],
  [
    [
      64593,
      64593
    ],
    "mapped",
    [
      1607,
      1580
    ]
  ],
  [
    [
      64594,
      64594
    ],
    "mapped",
    [
      1607,
      1605
    ]
  ],
  [
    [
      64595,
      64595
    ],
    "mapped",
    [
      1607,
      1609
    ]
  ],
  [
    [
      64596,
      64596
    ],
    "mapped",
    [
      1607,
      1610
    ]
  ],
  [
    [
      64597,
      64597
    ],
    "mapped",
    [
      1610,
      1580
    ]
  ],
  [
    [
      64598,
      64598
    ],
    "mapped",
    [
      1610,
      1581
    ]
  ],
  [
    [
      64599,
      64599
    ],
    "mapped",
    [
      1610,
      1582
    ]
  ],
  [
    [
      64600,
      64600
    ],
    "mapped",
    [
      1610,
      1605
    ]
  ],
  [
    [
      64601,
      64601
    ],
    "mapped",
    [
      1610,
      1609
    ]
  ],
  [
    [
      64602,
      64602
    ],
    "mapped",
    [
      1610,
      1610
    ]
  ],
  [
    [
      64603,
      64603
    ],
    "mapped",
    [
      1584,
      1648
    ]
  ],
  [
    [
      64604,
      64604
    ],
    "mapped",
    [
      1585,
      1648
    ]
  ],
  [
    [
      64605,
      64605
    ],
    "mapped",
    [
      1609,
      1648
    ]
  ],
  [
    [
      64606,
      64606
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1612,
      1617
    ]
  ],
  [
    [
      64607,
      64607
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1613,
      1617
    ]
  ],
  [
    [
      64608,
      64608
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1614,
      1617
    ]
  ],
  [
    [
      64609,
      64609
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1615,
      1617
    ]
  ],
  [
    [
      64610,
      64610
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1616,
      1617
    ]
  ],
  [
    [
      64611,
      64611
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1617,
      1648
    ]
  ],
  [
    [
      64612,
      64612
    ],
    "mapped",
    [
      1574,
      1585
    ]
  ],
  [
    [
      64613,
      64613
    ],
    "mapped",
    [
      1574,
      1586
    ]
  ],
  [
    [
      64614,
      64614
    ],
    "mapped",
    [
      1574,
      1605
    ]
  ],
  [
    [
      64615,
      64615
    ],
    "mapped",
    [
      1574,
      1606
    ]
  ],
  [
    [
      64616,
      64616
    ],
    "mapped",
    [
      1574,
      1609
    ]
  ],
  [
    [
      64617,
      64617
    ],
    "mapped",
    [
      1574,
      1610
    ]
  ],
  [
    [
      64618,
      64618
    ],
    "mapped",
    [
      1576,
      1585
    ]
  ],
  [
    [
      64619,
      64619
    ],
    "mapped",
    [
      1576,
      1586
    ]
  ],
  [
    [
      64620,
      64620
    ],
    "mapped",
    [
      1576,
      1605
    ]
  ],
  [
    [
      64621,
      64621
    ],
    "mapped",
    [
      1576,
      1606
    ]
  ],
  [
    [
      64622,
      64622
    ],
    "mapped",
    [
      1576,
      1609
    ]
  ],
  [
    [
      64623,
      64623
    ],
    "mapped",
    [
      1576,
      1610
    ]
  ],
  [
    [
      64624,
      64624
    ],
    "mapped",
    [
      1578,
      1585
    ]
  ],
  [
    [
      64625,
      64625
    ],
    "mapped",
    [
      1578,
      1586
    ]
  ],
  [
    [
      64626,
      64626
    ],
    "mapped",
    [
      1578,
      1605
    ]
  ],
  [
    [
      64627,
      64627
    ],
    "mapped",
    [
      1578,
      1606
    ]
  ],
  [
    [
      64628,
      64628
    ],
    "mapped",
    [
      1578,
      1609
    ]
  ],
  [
    [
      64629,
      64629
    ],
    "mapped",
    [
      1578,
      1610
    ]
  ],
  [
    [
      64630,
      64630
    ],
    "mapped",
    [
      1579,
      1585
    ]
  ],
  [
    [
      64631,
      64631
    ],
    "mapped",
    [
      1579,
      1586
    ]
  ],
  [
    [
      64632,
      64632
    ],
    "mapped",
    [
      1579,
      1605
    ]
  ],
  [
    [
      64633,
      64633
    ],
    "mapped",
    [
      1579,
      1606
    ]
  ],
  [
    [
      64634,
      64634
    ],
    "mapped",
    [
      1579,
      1609
    ]
  ],
  [
    [
      64635,
      64635
    ],
    "mapped",
    [
      1579,
      1610
    ]
  ],
  [
    [
      64636,
      64636
    ],
    "mapped",
    [
      1601,
      1609
    ]
  ],
  [
    [
      64637,
      64637
    ],
    "mapped",
    [
      1601,
      1610
    ]
  ],
  [
    [
      64638,
      64638
    ],
    "mapped",
    [
      1602,
      1609
    ]
  ],
  [
    [
      64639,
      64639
    ],
    "mapped",
    [
      1602,
      1610
    ]
  ],
  [
    [
      64640,
      64640
    ],
    "mapped",
    [
      1603,
      1575
    ]
  ],
  [
    [
      64641,
      64641
    ],
    "mapped",
    [
      1603,
      1604
    ]
  ],
  [
    [
      64642,
      64642
    ],
    "mapped",
    [
      1603,
      1605
    ]
  ],
  [
    [
      64643,
      64643
    ],
    "mapped",
    [
      1603,
      1609
    ]
  ],
  [
    [
      64644,
      64644
    ],
    "mapped",
    [
      1603,
      1610
    ]
  ],
  [
    [
      64645,
      64645
    ],
    "mapped",
    [
      1604,
      1605
    ]
  ],
  [
    [
      64646,
      64646
    ],
    "mapped",
    [
      1604,
      1609
    ]
  ],
  [
    [
      64647,
      64647
    ],
    "mapped",
    [
      1604,
      1610
    ]
  ],
  [
    [
      64648,
      64648
    ],
    "mapped",
    [
      1605,
      1575
    ]
  ],
  [
    [
      64649,
      64649
    ],
    "mapped",
    [
      1605,
      1605
    ]
  ],
  [
    [
      64650,
      64650
    ],
    "mapped",
    [
      1606,
      1585
    ]
  ],
  [
    [
      64651,
      64651
    ],
    "mapped",
    [
      1606,
      1586
    ]
  ],
  [
    [
      64652,
      64652
    ],
    "mapped",
    [
      1606,
      1605
    ]
  ],
  [
    [
      64653,
      64653
    ],
    "mapped",
    [
      1606,
      1606
    ]
  ],
  [
    [
      64654,
      64654
    ],
    "mapped",
    [
      1606,
      1609
    ]
  ],
  [
    [
      64655,
      64655
    ],
    "mapped",
    [
      1606,
      1610
    ]
  ],
  [
    [
      64656,
      64656
    ],
    "mapped",
    [
      1609,
      1648
    ]
  ],
  [
    [
      64657,
      64657
    ],
    "mapped",
    [
      1610,
      1585
    ]
  ],
  [
    [
      64658,
      64658
    ],
    "mapped",
    [
      1610,
      1586
    ]
  ],
  [
    [
      64659,
      64659
    ],
    "mapped",
    [
      1610,
      1605
    ]
  ],
  [
    [
      64660,
      64660
    ],
    "mapped",
    [
      1610,
      1606
    ]
  ],
  [
    [
      64661,
      64661
    ],
    "mapped",
    [
      1610,
      1609
    ]
  ],
  [
    [
      64662,
      64662
    ],
    "mapped",
    [
      1610,
      1610
    ]
  ],
  [
    [
      64663,
      64663
    ],
    "mapped",
    [
      1574,
      1580
    ]
  ],
  [
    [
      64664,
      64664
    ],
    "mapped",
    [
      1574,
      1581
    ]
  ],
  [
    [
      64665,
      64665
    ],
    "mapped",
    [
      1574,
      1582
    ]
  ],
  [
    [
      64666,
      64666
    ],
    "mapped",
    [
      1574,
      1605
    ]
  ],
  [
    [
      64667,
      64667
    ],
    "mapped",
    [
      1574,
      1607
    ]
  ],
  [
    [
      64668,
      64668
    ],
    "mapped",
    [
      1576,
      1580
    ]
  ],
  [
    [
      64669,
      64669
    ],
    "mapped",
    [
      1576,
      1581
    ]
  ],
  [
    [
      64670,
      64670
    ],
    "mapped",
    [
      1576,
      1582
    ]
  ],
  [
    [
      64671,
      64671
    ],
    "mapped",
    [
      1576,
      1605
    ]
  ],
  [
    [
      64672,
      64672
    ],
    "mapped",
    [
      1576,
      1607
    ]
  ],
  [
    [
      64673,
      64673
    ],
    "mapped",
    [
      1578,
      1580
    ]
  ],
  [
    [
      64674,
      64674
    ],
    "mapped",
    [
      1578,
      1581
    ]
  ],
  [
    [
      64675,
      64675
    ],
    "mapped",
    [
      1578,
      1582
    ]
  ],
  [
    [
      64676,
      64676
    ],
    "mapped",
    [
      1578,
      1605
    ]
  ],
  [
    [
      64677,
      64677
    ],
    "mapped",
    [
      1578,
      1607
    ]
  ],
  [
    [
      64678,
      64678
    ],
    "mapped",
    [
      1579,
      1605
    ]
  ],
  [
    [
      64679,
      64679
    ],
    "mapped",
    [
      1580,
      1581
    ]
  ],
  [
    [
      64680,
      64680
    ],
    "mapped",
    [
      1580,
      1605
    ]
  ],
  [
    [
      64681,
      64681
    ],
    "mapped",
    [
      1581,
      1580
    ]
  ],
  [
    [
      64682,
      64682
    ],
    "mapped",
    [
      1581,
      1605
    ]
  ],
  [
    [
      64683,
      64683
    ],
    "mapped",
    [
      1582,
      1580
    ]
  ],
  [
    [
      64684,
      64684
    ],
    "mapped",
    [
      1582,
      1605
    ]
  ],
  [
    [
      64685,
      64685
    ],
    "mapped",
    [
      1587,
      1580
    ]
  ],
  [
    [
      64686,
      64686
    ],
    "mapped",
    [
      1587,
      1581
    ]
  ],
  [
    [
      64687,
      64687
    ],
    "mapped",
    [
      1587,
      1582
    ]
  ],
  [
    [
      64688,
      64688
    ],
    "mapped",
    [
      1587,
      1605
    ]
  ],
  [
    [
      64689,
      64689
    ],
    "mapped",
    [
      1589,
      1581
    ]
  ],
  [
    [
      64690,
      64690
    ],
    "mapped",
    [
      1589,
      1582
    ]
  ],
  [
    [
      64691,
      64691
    ],
    "mapped",
    [
      1589,
      1605
    ]
  ],
  [
    [
      64692,
      64692
    ],
    "mapped",
    [
      1590,
      1580
    ]
  ],
  [
    [
      64693,
      64693
    ],
    "mapped",
    [
      1590,
      1581
    ]
  ],
  [
    [
      64694,
      64694
    ],
    "mapped",
    [
      1590,
      1582
    ]
  ],
  [
    [
      64695,
      64695
    ],
    "mapped",
    [
      1590,
      1605
    ]
  ],
  [
    [
      64696,
      64696
    ],
    "mapped",
    [
      1591,
      1581
    ]
  ],
  [
    [
      64697,
      64697
    ],
    "mapped",
    [
      1592,
      1605
    ]
  ],
  [
    [
      64698,
      64698
    ],
    "mapped",
    [
      1593,
      1580
    ]
  ],
  [
    [
      64699,
      64699
    ],
    "mapped",
    [
      1593,
      1605
    ]
  ],
  [
    [
      64700,
      64700
    ],
    "mapped",
    [
      1594,
      1580
    ]
  ],
  [
    [
      64701,
      64701
    ],
    "mapped",
    [
      1594,
      1605
    ]
  ],
  [
    [
      64702,
      64702
    ],
    "mapped",
    [
      1601,
      1580
    ]
  ],
  [
    [
      64703,
      64703
    ],
    "mapped",
    [
      1601,
      1581
    ]
  ],
  [
    [
      64704,
      64704
    ],
    "mapped",
    [
      1601,
      1582
    ]
  ],
  [
    [
      64705,
      64705
    ],
    "mapped",
    [
      1601,
      1605
    ]
  ],
  [
    [
      64706,
      64706
    ],
    "mapped",
    [
      1602,
      1581
    ]
  ],
  [
    [
      64707,
      64707
    ],
    "mapped",
    [
      1602,
      1605
    ]
  ],
  [
    [
      64708,
      64708
    ],
    "mapped",
    [
      1603,
      1580
    ]
  ],
  [
    [
      64709,
      64709
    ],
    "mapped",
    [
      1603,
      1581
    ]
  ],
  [
    [
      64710,
      64710
    ],
    "mapped",
    [
      1603,
      1582
    ]
  ],
  [
    [
      64711,
      64711
    ],
    "mapped",
    [
      1603,
      1604
    ]
  ],
  [
    [
      64712,
      64712
    ],
    "mapped",
    [
      1603,
      1605
    ]
  ],
  [
    [
      64713,
      64713
    ],
    "mapped",
    [
      1604,
      1580
    ]
  ],
  [
    [
      64714,
      64714
    ],
    "mapped",
    [
      1604,
      1581
    ]
  ],
  [
    [
      64715,
      64715
    ],
    "mapped",
    [
      1604,
      1582
    ]
  ],
  [
    [
      64716,
      64716
    ],
    "mapped",
    [
      1604,
      1605
    ]
  ],
  [
    [
      64717,
      64717
    ],
    "mapped",
    [
      1604,
      1607
    ]
  ],
  [
    [
      64718,
      64718
    ],
    "mapped",
    [
      1605,
      1580
    ]
  ],
  [
    [
      64719,
      64719
    ],
    "mapped",
    [
      1605,
      1581
    ]
  ],
  [
    [
      64720,
      64720
    ],
    "mapped",
    [
      1605,
      1582
    ]
  ],
  [
    [
      64721,
      64721
    ],
    "mapped",
    [
      1605,
      1605
    ]
  ],
  [
    [
      64722,
      64722
    ],
    "mapped",
    [
      1606,
      1580
    ]
  ],
  [
    [
      64723,
      64723
    ],
    "mapped",
    [
      1606,
      1581
    ]
  ],
  [
    [
      64724,
      64724
    ],
    "mapped",
    [
      1606,
      1582
    ]
  ],
  [
    [
      64725,
      64725
    ],
    "mapped",
    [
      1606,
      1605
    ]
  ],
  [
    [
      64726,
      64726
    ],
    "mapped",
    [
      1606,
      1607
    ]
  ],
  [
    [
      64727,
      64727
    ],
    "mapped",
    [
      1607,
      1580
    ]
  ],
  [
    [
      64728,
      64728
    ],
    "mapped",
    [
      1607,
      1605
    ]
  ],
  [
    [
      64729,
      64729
    ],
    "mapped",
    [
      1607,
      1648
    ]
  ],
  [
    [
      64730,
      64730
    ],
    "mapped",
    [
      1610,
      1580
    ]
  ],
  [
    [
      64731,
      64731
    ],
    "mapped",
    [
      1610,
      1581
    ]
  ],
  [
    [
      64732,
      64732
    ],
    "mapped",
    [
      1610,
      1582
    ]
  ],
  [
    [
      64733,
      64733
    ],
    "mapped",
    [
      1610,
      1605
    ]
  ],
  [
    [
      64734,
      64734
    ],
    "mapped",
    [
      1610,
      1607
    ]
  ],
  [
    [
      64735,
      64735
    ],
    "mapped",
    [
      1574,
      1605
    ]
  ],
  [
    [
      64736,
      64736
    ],
    "mapped",
    [
      1574,
      1607
    ]
  ],
  [
    [
      64737,
      64737
    ],
    "mapped",
    [
      1576,
      1605
    ]
  ],
  [
    [
      64738,
      64738
    ],
    "mapped",
    [
      1576,
      1607
    ]
  ],
  [
    [
      64739,
      64739
    ],
    "mapped",
    [
      1578,
      1605
    ]
  ],
  [
    [
      64740,
      64740
    ],
    "mapped",
    [
      1578,
      1607
    ]
  ],
  [
    [
      64741,
      64741
    ],
    "mapped",
    [
      1579,
      1605
    ]
  ],
  [
    [
      64742,
      64742
    ],
    "mapped",
    [
      1579,
      1607
    ]
  ],
  [
    [
      64743,
      64743
    ],
    "mapped",
    [
      1587,
      1605
    ]
  ],
  [
    [
      64744,
      64744
    ],
    "mapped",
    [
      1587,
      1607
    ]
  ],
  [
    [
      64745,
      64745
    ],
    "mapped",
    [
      1588,
      1605
    ]
  ],
  [
    [
      64746,
      64746
    ],
    "mapped",
    [
      1588,
      1607
    ]
  ],
  [
    [
      64747,
      64747
    ],
    "mapped",
    [
      1603,
      1604
    ]
  ],
  [
    [
      64748,
      64748
    ],
    "mapped",
    [
      1603,
      1605
    ]
  ],
  [
    [
      64749,
      64749
    ],
    "mapped",
    [
      1604,
      1605
    ]
  ],
  [
    [
      64750,
      64750
    ],
    "mapped",
    [
      1606,
      1605
    ]
  ],
  [
    [
      64751,
      64751
    ],
    "mapped",
    [
      1606,
      1607
    ]
  ],
  [
    [
      64752,
      64752
    ],
    "mapped",
    [
      1610,
      1605
    ]
  ],
  [
    [
      64753,
      64753
    ],
    "mapped",
    [
      1610,
      1607
    ]
  ],
  [
    [
      64754,
      64754
    ],
    "mapped",
    [
      1600,
      1614,
      1617
    ]
  ],
  [
    [
      64755,
      64755
    ],
    "mapped",
    [
      1600,
      1615,
      1617
    ]
  ],
  [
    [
      64756,
      64756
    ],
    "mapped",
    [
      1600,
      1616,
      1617
    ]
  ],
  [
    [
      64757,
      64757
    ],
    "mapped",
    [
      1591,
      1609
    ]
  ],
  [
    [
      64758,
      64758
    ],
    "mapped",
    [
      1591,
      1610
    ]
  ],
  [
    [
      64759,
      64759
    ],
    "mapped",
    [
      1593,
      1609
    ]
  ],
  [
    [
      64760,
      64760
    ],
    "mapped",
    [
      1593,
      1610
    ]
  ],
  [
    [
      64761,
      64761
    ],
    "mapped",
    [
      1594,
      1609
    ]
  ],
  [
    [
      64762,
      64762
    ],
    "mapped",
    [
      1594,
      1610
    ]
  ],
  [
    [
      64763,
      64763
    ],
    "mapped",
    [
      1587,
      1609
    ]
  ],
  [
    [
      64764,
      64764
    ],
    "mapped",
    [
      1587,
      1610
    ]
  ],
  [
    [
      64765,
      64765
    ],
    "mapped",
    [
      1588,
      1609
    ]
  ],
  [
    [
      64766,
      64766
    ],
    "mapped",
    [
      1588,
      1610
    ]
  ],
  [
    [
      64767,
      64767
    ],
    "mapped",
    [
      1581,
      1609
    ]
  ],
  [
    [
      64768,
      64768
    ],
    "mapped",
    [
      1581,
      1610
    ]
  ],
  [
    [
      64769,
      64769
    ],
    "mapped",
    [
      1580,
      1609
    ]
  ],
  [
    [
      64770,
      64770
    ],
    "mapped",
    [
      1580,
      1610
    ]
  ],
  [
    [
      64771,
      64771
    ],
    "mapped",
    [
      1582,
      1609
    ]
  ],
  [
    [
      64772,
      64772
    ],
    "mapped",
    [
      1582,
      1610
    ]
  ],
  [
    [
      64773,
      64773
    ],
    "mapped",
    [
      1589,
      1609
    ]
  ],
  [
    [
      64774,
      64774
    ],
    "mapped",
    [
      1589,
      1610
    ]
  ],
  [
    [
      64775,
      64775
    ],
    "mapped",
    [
      1590,
      1609
    ]
  ],
  [
    [
      64776,
      64776
    ],
    "mapped",
    [
      1590,
      1610
    ]
  ],
  [
    [
      64777,
      64777
    ],
    "mapped",
    [
      1588,
      1580
    ]
  ],
  [
    [
      64778,
      64778
    ],
    "mapped",
    [
      1588,
      1581
    ]
  ],
  [
    [
      64779,
      64779
    ],
    "mapped",
    [
      1588,
      1582
    ]
  ],
  [
    [
      64780,
      64780
    ],
    "mapped",
    [
      1588,
      1605
    ]
  ],
  [
    [
      64781,
      64781
    ],
    "mapped",
    [
      1588,
      1585
    ]
  ],
  [
    [
      64782,
      64782
    ],
    "mapped",
    [
      1587,
      1585
    ]
  ],
  [
    [
      64783,
      64783
    ],
    "mapped",
    [
      1589,
      1585
    ]
  ],
  [
    [
      64784,
      64784
    ],
    "mapped",
    [
      1590,
      1585
    ]
  ],
  [
    [
      64785,
      64785
    ],
    "mapped",
    [
      1591,
      1609
    ]
  ],
  [
    [
      64786,
      64786
    ],
    "mapped",
    [
      1591,
      1610
    ]
  ],
  [
    [
      64787,
      64787
    ],
    "mapped",
    [
      1593,
      1609
    ]
  ],
  [
    [
      64788,
      64788
    ],
    "mapped",
    [
      1593,
      1610
    ]
  ],
  [
    [
      64789,
      64789
    ],
    "mapped",
    [
      1594,
      1609
    ]
  ],
  [
    [
      64790,
      64790
    ],
    "mapped",
    [
      1594,
      1610
    ]
  ],
  [
    [
      64791,
      64791
    ],
    "mapped",
    [
      1587,
      1609
    ]
  ],
  [
    [
      64792,
      64792
    ],
    "mapped",
    [
      1587,
      1610
    ]
  ],
  [
    [
      64793,
      64793
    ],
    "mapped",
    [
      1588,
      1609
    ]
  ],
  [
    [
      64794,
      64794
    ],
    "mapped",
    [
      1588,
      1610
    ]
  ],
  [
    [
      64795,
      64795
    ],
    "mapped",
    [
      1581,
      1609
    ]
  ],
  [
    [
      64796,
      64796
    ],
    "mapped",
    [
      1581,
      1610
    ]
  ],
  [
    [
      64797,
      64797
    ],
    "mapped",
    [
      1580,
      1609
    ]
  ],
  [
    [
      64798,
      64798
    ],
    "mapped",
    [
      1580,
      1610
    ]
  ],
  [
    [
      64799,
      64799
    ],
    "mapped",
    [
      1582,
      1609
    ]
  ],
  [
    [
      64800,
      64800
    ],
    "mapped",
    [
      1582,
      1610
    ]
  ],
  [
    [
      64801,
      64801
    ],
    "mapped",
    [
      1589,
      1609
    ]
  ],
  [
    [
      64802,
      64802
    ],
    "mapped",
    [
      1589,
      1610
    ]
  ],
  [
    [
      64803,
      64803
    ],
    "mapped",
    [
      1590,
      1609
    ]
  ],
  [
    [
      64804,
      64804
    ],
    "mapped",
    [
      1590,
      1610
    ]
  ],
  [
    [
      64805,
      64805
    ],
    "mapped",
    [
      1588,
      1580
    ]
  ],
  [
    [
      64806,
      64806
    ],
    "mapped",
    [
      1588,
      1581
    ]
  ],
  [
    [
      64807,
      64807
    ],
    "mapped",
    [
      1588,
      1582
    ]
  ],
  [
    [
      64808,
      64808
    ],
    "mapped",
    [
      1588,
      1605
    ]
  ],
  [
    [
      64809,
      64809
    ],
    "mapped",
    [
      1588,
      1585
    ]
  ],
  [
    [
      64810,
      64810
    ],
    "mapped",
    [
      1587,
      1585
    ]
  ],
  [
    [
      64811,
      64811
    ],
    "mapped",
    [
      1589,
      1585
    ]
  ],
  [
    [
      64812,
      64812
    ],
    "mapped",
    [
      1590,
      1585
    ]
  ],
  [
    [
      64813,
      64813
    ],
    "mapped",
    [
      1588,
      1580
    ]
  ],
  [
    [
      64814,
      64814
    ],
    "mapped",
    [
      1588,
      1581
    ]
  ],
  [
    [
      64815,
      64815
    ],
    "mapped",
    [
      1588,
      1582
    ]
  ],
  [
    [
      64816,
      64816
    ],
    "mapped",
    [
      1588,
      1605
    ]
  ],
  [
    [
      64817,
      64817
    ],
    "mapped",
    [
      1587,
      1607
    ]
  ],
  [
    [
      64818,
      64818
    ],
    "mapped",
    [
      1588,
      1607
    ]
  ],
  [
    [
      64819,
      64819
    ],
    "mapped",
    [
      1591,
      1605
    ]
  ],
  [
    [
      64820,
      64820
    ],
    "mapped",
    [
      1587,
      1580
    ]
  ],
  [
    [
      64821,
      64821
    ],
    "mapped",
    [
      1587,
      1581
    ]
  ],
  [
    [
      64822,
      64822
    ],
    "mapped",
    [
      1587,
      1582
    ]
  ],
  [
    [
      64823,
      64823
    ],
    "mapped",
    [
      1588,
      1580
    ]
  ],
  [
    [
      64824,
      64824
    ],
    "mapped",
    [
      1588,
      1581
    ]
  ],
  [
    [
      64825,
      64825
    ],
    "mapped",
    [
      1588,
      1582
    ]
  ],
  [
    [
      64826,
      64826
    ],
    "mapped",
    [
      1591,
      1605
    ]
  ],
  [
    [
      64827,
      64827
    ],
    "mapped",
    [
      1592,
      1605
    ]
  ],
  [
    [
      64828,
      64829
    ],
    "mapped",
    [
      1575,
      1611
    ]
  ],
  [
    [
      64830,
      64831
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      64832,
      64847
    ],
    "disallowed"
  ],
  [
    [
      64848,
      64848
    ],
    "mapped",
    [
      1578,
      1580,
      1605
    ]
  ],
  [
    [
      64849,
      64850
    ],
    "mapped",
    [
      1578,
      1581,
      1580
    ]
  ],
  [
    [
      64851,
      64851
    ],
    "mapped",
    [
      1578,
      1581,
      1605
    ]
  ],
  [
    [
      64852,
      64852
    ],
    "mapped",
    [
      1578,
      1582,
      1605
    ]
  ],
  [
    [
      64853,
      64853
    ],
    "mapped",
    [
      1578,
      1605,
      1580
    ]
  ],
  [
    [
      64854,
      64854
    ],
    "mapped",
    [
      1578,
      1605,
      1581
    ]
  ],
  [
    [
      64855,
      64855
    ],
    "mapped",
    [
      1578,
      1605,
      1582
    ]
  ],
  [
    [
      64856,
      64857
    ],
    "mapped",
    [
      1580,
      1605,
      1581
    ]
  ],
  [
    [
      64858,
      64858
    ],
    "mapped",
    [
      1581,
      1605,
      1610
    ]
  ],
  [
    [
      64859,
      64859
    ],
    "mapped",
    [
      1581,
      1605,
      1609
    ]
  ],
  [
    [
      64860,
      64860
    ],
    "mapped",
    [
      1587,
      1581,
      1580
    ]
  ],
  [
    [
      64861,
      64861
    ],
    "mapped",
    [
      1587,
      1580,
      1581
    ]
  ],
  [
    [
      64862,
      64862
    ],
    "mapped",
    [
      1587,
      1580,
      1609
    ]
  ],
  [
    [
      64863,
      64864
    ],
    "mapped",
    [
      1587,
      1605,
      1581
    ]
  ],
  [
    [
      64865,
      64865
    ],
    "mapped",
    [
      1587,
      1605,
      1580
    ]
  ],
  [
    [
      64866,
      64867
    ],
    "mapped",
    [
      1587,
      1605,
      1605
    ]
  ],
  [
    [
      64868,
      64869
    ],
    "mapped",
    [
      1589,
      1581,
      1581
    ]
  ],
  [
    [
      64870,
      64870
    ],
    "mapped",
    [
      1589,
      1605,
      1605
    ]
  ],
  [
    [
      64871,
      64872
    ],
    "mapped",
    [
      1588,
      1581,
      1605
    ]
  ],
  [
    [
      64873,
      64873
    ],
    "mapped",
    [
      1588,
      1580,
      1610
    ]
  ],
  [
    [
      64874,
      64875
    ],
    "mapped",
    [
      1588,
      1605,
      1582
    ]
  ],
  [
    [
      64876,
      64877
    ],
    "mapped",
    [
      1588,
      1605,
      1605
    ]
  ],
  [
    [
      64878,
      64878
    ],
    "mapped",
    [
      1590,
      1581,
      1609
    ]
  ],
  [
    [
      64879,
      64880
    ],
    "mapped",
    [
      1590,
      1582,
      1605
    ]
  ],
  [
    [
      64881,
      64882
    ],
    "mapped",
    [
      1591,
      1605,
      1581
    ]
  ],
  [
    [
      64883,
      64883
    ],
    "mapped",
    [
      1591,
      1605,
      1605
    ]
  ],
  [
    [
      64884,
      64884
    ],
    "mapped",
    [
      1591,
      1605,
      1610
    ]
  ],
  [
    [
      64885,
      64885
    ],
    "mapped",
    [
      1593,
      1580,
      1605
    ]
  ],
  [
    [
      64886,
      64887
    ],
    "mapped",
    [
      1593,
      1605,
      1605
    ]
  ],
  [
    [
      64888,
      64888
    ],
    "mapped",
    [
      1593,
      1605,
      1609
    ]
  ],
  [
    [
      64889,
      64889
    ],
    "mapped",
    [
      1594,
      1605,
      1605
    ]
  ],
  [
    [
      64890,
      64890
    ],
    "mapped",
    [
      1594,
      1605,
      1610
    ]
  ],
  [
    [
      64891,
      64891
    ],
    "mapped",
    [
      1594,
      1605,
      1609
    ]
  ],
  [
    [
      64892,
      64893
    ],
    "mapped",
    [
      1601,
      1582,
      1605
    ]
  ],
  [
    [
      64894,
      64894
    ],
    "mapped",
    [
      1602,
      1605,
      1581
    ]
  ],
  [
    [
      64895,
      64895
    ],
    "mapped",
    [
      1602,
      1605,
      1605
    ]
  ],
  [
    [
      64896,
      64896
    ],
    "mapped",
    [
      1604,
      1581,
      1605
    ]
  ],
  [
    [
      64897,
      64897
    ],
    "mapped",
    [
      1604,
      1581,
      1610
    ]
  ],
  [
    [
      64898,
      64898
    ],
    "mapped",
    [
      1604,
      1581,
      1609
    ]
  ],
  [
    [
      64899,
      64900
    ],
    "mapped",
    [
      1604,
      1580,
      1580
    ]
  ],
  [
    [
      64901,
      64902
    ],
    "mapped",
    [
      1604,
      1582,
      1605
    ]
  ],
  [
    [
      64903,
      64904
    ],
    "mapped",
    [
      1604,
      1605,
      1581
    ]
  ],
  [
    [
      64905,
      64905
    ],
    "mapped",
    [
      1605,
      1581,
      1580
    ]
  ],
  [
    [
      64906,
      64906
    ],
    "mapped",
    [
      1605,
      1581,
      1605
    ]
  ],
  [
    [
      64907,
      64907
    ],
    "mapped",
    [
      1605,
      1581,
      1610
    ]
  ],
  [
    [
      64908,
      64908
    ],
    "mapped",
    [
      1605,
      1580,
      1581
    ]
  ],
  [
    [
      64909,
      64909
    ],
    "mapped",
    [
      1605,
      1580,
      1605
    ]
  ],
  [
    [
      64910,
      64910
    ],
    "mapped",
    [
      1605,
      1582,
      1580
    ]
  ],
  [
    [
      64911,
      64911
    ],
    "mapped",
    [
      1605,
      1582,
      1605
    ]
  ],
  [
    [
      64912,
      64913
    ],
    "disallowed"
  ],
  [
    [
      64914,
      64914
    ],
    "mapped",
    [
      1605,
      1580,
      1582
    ]
  ],
  [
    [
      64915,
      64915
    ],
    "mapped",
    [
      1607,
      1605,
      1580
    ]
  ],
  [
    [
      64916,
      64916
    ],
    "mapped",
    [
      1607,
      1605,
      1605
    ]
  ],
  [
    [
      64917,
      64917
    ],
    "mapped",
    [
      1606,
      1581,
      1605
    ]
  ],
  [
    [
      64918,
      64918
    ],
    "mapped",
    [
      1606,
      1581,
      1609
    ]
  ],
  [
    [
      64919,
      64920
    ],
    "mapped",
    [
      1606,
      1580,
      1605
    ]
  ],
  [
    [
      64921,
      64921
    ],
    "mapped",
    [
      1606,
      1580,
      1609
    ]
  ],
  [
    [
      64922,
      64922
    ],
    "mapped",
    [
      1606,
      1605,
      1610
    ]
  ],
  [
    [
      64923,
      64923
    ],
    "mapped",
    [
      1606,
      1605,
      1609
    ]
  ],
  [
    [
      64924,
      64925
    ],
    "mapped",
    [
      1610,
      1605,
      1605
    ]
  ],
  [
    [
      64926,
      64926
    ],
    "mapped",
    [
      1576,
      1582,
      1610
    ]
  ],
  [
    [
      64927,
      64927
    ],
    "mapped",
    [
      1578,
      1580,
      1610
    ]
  ],
  [
    [
      64928,
      64928
    ],
    "mapped",
    [
      1578,
      1580,
      1609
    ]
  ],
  [
    [
      64929,
      64929
    ],
    "mapped",
    [
      1578,
      1582,
      1610
    ]
  ],
  [
    [
      64930,
      64930
    ],
    "mapped",
    [
      1578,
      1582,
      1609
    ]
  ],
  [
    [
      64931,
      64931
    ],
    "mapped",
    [
      1578,
      1605,
      1610
    ]
  ],
  [
    [
      64932,
      64932
    ],
    "mapped",
    [
      1578,
      1605,
      1609
    ]
  ],
  [
    [
      64933,
      64933
    ],
    "mapped",
    [
      1580,
      1605,
      1610
    ]
  ],
  [
    [
      64934,
      64934
    ],
    "mapped",
    [
      1580,
      1581,
      1609
    ]
  ],
  [
    [
      64935,
      64935
    ],
    "mapped",
    [
      1580,
      1605,
      1609
    ]
  ],
  [
    [
      64936,
      64936
    ],
    "mapped",
    [
      1587,
      1582,
      1609
    ]
  ],
  [
    [
      64937,
      64937
    ],
    "mapped",
    [
      1589,
      1581,
      1610
    ]
  ],
  [
    [
      64938,
      64938
    ],
    "mapped",
    [
      1588,
      1581,
      1610
    ]
  ],
  [
    [
      64939,
      64939
    ],
    "mapped",
    [
      1590,
      1581,
      1610
    ]
  ],
  [
    [
      64940,
      64940
    ],
    "mapped",
    [
      1604,
      1580,
      1610
    ]
  ],
  [
    [
      64941,
      64941
    ],
    "mapped",
    [
      1604,
      1605,
      1610
    ]
  ],
  [
    [
      64942,
      64942
    ],
    "mapped",
    [
      1610,
      1581,
      1610
    ]
  ],
  [
    [
      64943,
      64943
    ],
    "mapped",
    [
      1610,
      1580,
      1610
    ]
  ],
  [
    [
      64944,
      64944
    ],
    "mapped",
    [
      1610,
      1605,
      1610
    ]
  ],
  [
    [
      64945,
      64945
    ],
    "mapped",
    [
      1605,
      1605,
      1610
    ]
  ],
  [
    [
      64946,
      64946
    ],
    "mapped",
    [
      1602,
      1605,
      1610
    ]
  ],
  [
    [
      64947,
      64947
    ],
    "mapped",
    [
      1606,
      1581,
      1610
    ]
  ],
  [
    [
      64948,
      64948
    ],
    "mapped",
    [
      1602,
      1605,
      1581
    ]
  ],
  [
    [
      64949,
      64949
    ],
    "mapped",
    [
      1604,
      1581,
      1605
    ]
  ],
  [
    [
      64950,
      64950
    ],
    "mapped",
    [
      1593,
      1605,
      1610
    ]
  ],
  [
    [
      64951,
      64951
    ],
    "mapped",
    [
      1603,
      1605,
      1610
    ]
  ],
  [
    [
      64952,
      64952
    ],
    "mapped",
    [
      1606,
      1580,
      1581
    ]
  ],
  [
    [
      64953,
      64953
    ],
    "mapped",
    [
      1605,
      1582,
      1610
    ]
  ],
  [
    [
      64954,
      64954
    ],
    "mapped",
    [
      1604,
      1580,
      1605
    ]
  ],
  [
    [
      64955,
      64955
    ],
    "mapped",
    [
      1603,
      1605,
      1605
    ]
  ],
  [
    [
      64956,
      64956
    ],
    "mapped",
    [
      1604,
      1580,
      1605
    ]
  ],
  [
    [
      64957,
      64957
    ],
    "mapped",
    [
      1606,
      1580,
      1581
    ]
  ],
  [
    [
      64958,
      64958
    ],
    "mapped",
    [
      1580,
      1581,
      1610
    ]
  ],
  [
    [
      64959,
      64959
    ],
    "mapped",
    [
      1581,
      1580,
      1610
    ]
  ],
  [
    [
      64960,
      64960
    ],
    "mapped",
    [
      1605,
      1580,
      1610
    ]
  ],
  [
    [
      64961,
      64961
    ],
    "mapped",
    [
      1601,
      1605,
      1610
    ]
  ],
  [
    [
      64962,
      64962
    ],
    "mapped",
    [
      1576,
      1581,
      1610
    ]
  ],
  [
    [
      64963,
      64963
    ],
    "mapped",
    [
      1603,
      1605,
      1605
    ]
  ],
  [
    [
      64964,
      64964
    ],
    "mapped",
    [
      1593,
      1580,
      1605
    ]
  ],
  [
    [
      64965,
      64965
    ],
    "mapped",
    [
      1589,
      1605,
      1605
    ]
  ],
  [
    [
      64966,
      64966
    ],
    "mapped",
    [
      1587,
      1582,
      1610
    ]
  ],
  [
    [
      64967,
      64967
    ],
    "mapped",
    [
      1606,
      1580,
      1610
    ]
  ],
  [
    [
      64968,
      64975
    ],
    "disallowed"
  ],
  [
    [
      64976,
      65007
    ],
    "disallowed"
  ],
  [
    [
      65008,
      65008
    ],
    "mapped",
    [
      1589,
      1604,
      1746
    ]
  ],
  [
    [
      65009,
      65009
    ],
    "mapped",
    [
      1602,
      1604,
      1746
    ]
  ],
  [
    [
      65010,
      65010
    ],
    "mapped",
    [
      1575,
      1604,
      1604,
      1607
    ]
  ],
  [
    [
      65011,
      65011
    ],
    "mapped",
    [
      1575,
      1603,
      1576,
      1585
    ]
  ],
  [
    [
      65012,
      65012
    ],
    "mapped",
    [
      1605,
      1581,
      1605,
      1583
    ]
  ],
  [
    [
      65013,
      65013
    ],
    "mapped",
    [
      1589,
      1604,
      1593,
      1605
    ]
  ],
  [
    [
      65014,
      65014
    ],
    "mapped",
    [
      1585,
      1587,
      1608,
      1604
    ]
  ],
  [
    [
      65015,
      65015
    ],
    "mapped",
    [
      1593,
      1604,
      1610,
      1607
    ]
  ],
  [
    [
      65016,
      65016
    ],
    "mapped",
    [
      1608,
      1587,
      1604,
      1605
    ]
  ],
  [
    [
      65017,
      65017
    ],
    "mapped",
    [
      1589,
      1604,
      1609
    ]
  ],
  [
    [
      65018,
      65018
    ],
    "disallowed_STD3_mapped",
    [
      1589,
      1604,
      1609,
      32,
      1575,
      1604,
      1604,
      1607,
      32,
      1593,
      1604,
      1610,
      1607,
      32,
      1608,
      1587,
      1604,
      1605
    ]
  ],
  [
    [
      65019,
      65019
    ],
    "disallowed_STD3_mapped",
    [
      1580,
      1604,
      32,
      1580,
      1604,
      1575,
      1604,
      1607
    ]
  ],
  [
    [
      65020,
      65020
    ],
    "mapped",
    [
      1585,
      1740,
      1575,
      1604
    ]
  ],
  [
    [
      65021,
      65021
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65022,
      65023
    ],
    "disallowed"
  ],
  [
    [
      65024,
      65039
    ],
    "ignored"
  ],
  [
    [
      65040,
      65040
    ],
    "disallowed_STD3_mapped",
    [
      44
    ]
  ],
  [
    [
      65041,
      65041
    ],
    "mapped",
    [
      12289
    ]
  ],
  [
    [
      65042,
      65042
    ],
    "disallowed"
  ],
  [
    [
      65043,
      65043
    ],
    "disallowed_STD3_mapped",
    [
      58
    ]
  ],
  [
    [
      65044,
      65044
    ],
    "disallowed_STD3_mapped",
    [
      59
    ]
  ],
  [
    [
      65045,
      65045
    ],
    "disallowed_STD3_mapped",
    [
      33
    ]
  ],
  [
    [
      65046,
      65046
    ],
    "disallowed_STD3_mapped",
    [
      63
    ]
  ],
  [
    [
      65047,
      65047
    ],
    "mapped",
    [
      12310
    ]
  ],
  [
    [
      65048,
      65048
    ],
    "mapped",
    [
      12311
    ]
  ],
  [
    [
      65049,
      65049
    ],
    "disallowed"
  ],
  [
    [
      65050,
      65055
    ],
    "disallowed"
  ],
  [
    [
      65056,
      65059
    ],
    "valid"
  ],
  [
    [
      65060,
      65062
    ],
    "valid"
  ],
  [
    [
      65063,
      65069
    ],
    "valid"
  ],
  [
    [
      65070,
      65071
    ],
    "valid"
  ],
  [
    [
      65072,
      65072
    ],
    "disallowed"
  ],
  [
    [
      65073,
      65073
    ],
    "mapped",
    [
      8212
    ]
  ],
  [
    [
      65074,
      65074
    ],
    "mapped",
    [
      8211
    ]
  ],
  [
    [
      65075,
      65076
    ],
    "disallowed_STD3_mapped",
    [
      95
    ]
  ],
  [
    [
      65077,
      65077
    ],
    "disallowed_STD3_mapped",
    [
      40
    ]
  ],
  [
    [
      65078,
      65078
    ],
    "disallowed_STD3_mapped",
    [
      41
    ]
  ],
  [
    [
      65079,
      65079
    ],
    "disallowed_STD3_mapped",
    [
      123
    ]
  ],
  [
    [
      65080,
      65080
    ],
    "disallowed_STD3_mapped",
    [
      125
    ]
  ],
  [
    [
      65081,
      65081
    ],
    "mapped",
    [
      12308
    ]
  ],
  [
    [
      65082,
      65082
    ],
    "mapped",
    [
      12309
    ]
  ],
  [
    [
      65083,
      65083
    ],
    "mapped",
    [
      12304
    ]
  ],
  [
    [
      65084,
      65084
    ],
    "mapped",
    [
      12305
    ]
  ],
  [
    [
      65085,
      65085
    ],
    "mapped",
    [
      12298
    ]
  ],
  [
    [
      65086,
      65086
    ],
    "mapped",
    [
      12299
    ]
  ],
  [
    [
      65087,
      65087
    ],
    "mapped",
    [
      12296
    ]
  ],
  [
    [
      65088,
      65088
    ],
    "mapped",
    [
      12297
    ]
  ],
  [
    [
      65089,
      65089
    ],
    "mapped",
    [
      12300
    ]
  ],
  [
    [
      65090,
      65090
    ],
    "mapped",
    [
      12301
    ]
  ],
  [
    [
      65091,
      65091
    ],
    "mapped",
    [
      12302
    ]
  ],
  [
    [
      65092,
      65092
    ],
    "mapped",
    [
      12303
    ]
  ],
  [
    [
      65093,
      65094
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65095,
      65095
    ],
    "disallowed_STD3_mapped",
    [
      91
    ]
  ],
  [
    [
      65096,
      65096
    ],
    "disallowed_STD3_mapped",
    [
      93
    ]
  ],
  [
    [
      65097,
      65100
    ],
    "disallowed_STD3_mapped",
    [
      32,
      773
    ]
  ],
  [
    [
      65101,
      65103
    ],
    "disallowed_STD3_mapped",
    [
      95
    ]
  ],
  [
    [
      65104,
      65104
    ],
    "disallowed_STD3_mapped",
    [
      44
    ]
  ],
  [
    [
      65105,
      65105
    ],
    "mapped",
    [
      12289
    ]
  ],
  [
    [
      65106,
      65106
    ],
    "disallowed"
  ],
  [
    [
      65107,
      65107
    ],
    "disallowed"
  ],
  [
    [
      65108,
      65108
    ],
    "disallowed_STD3_mapped",
    [
      59
    ]
  ],
  [
    [
      65109,
      65109
    ],
    "disallowed_STD3_mapped",
    [
      58
    ]
  ],
  [
    [
      65110,
      65110
    ],
    "disallowed_STD3_mapped",
    [
      63
    ]
  ],
  [
    [
      65111,
      65111
    ],
    "disallowed_STD3_mapped",
    [
      33
    ]
  ],
  [
    [
      65112,
      65112
    ],
    "mapped",
    [
      8212
    ]
  ],
  [
    [
      65113,
      65113
    ],
    "disallowed_STD3_mapped",
    [
      40
    ]
  ],
  [
    [
      65114,
      65114
    ],
    "disallowed_STD3_mapped",
    [
      41
    ]
  ],
  [
    [
      65115,
      65115
    ],
    "disallowed_STD3_mapped",
    [
      123
    ]
  ],
  [
    [
      65116,
      65116
    ],
    "disallowed_STD3_mapped",
    [
      125
    ]
  ],
  [
    [
      65117,
      65117
    ],
    "mapped",
    [
      12308
    ]
  ],
  [
    [
      65118,
      65118
    ],
    "mapped",
    [
      12309
    ]
  ],
  [
    [
      65119,
      65119
    ],
    "disallowed_STD3_mapped",
    [
      35
    ]
  ],
  [
    [
      65120,
      65120
    ],
    "disallowed_STD3_mapped",
    [
      38
    ]
  ],
  [
    [
      65121,
      65121
    ],
    "disallowed_STD3_mapped",
    [
      42
    ]
  ],
  [
    [
      65122,
      65122
    ],
    "disallowed_STD3_mapped",
    [
      43
    ]
  ],
  [
    [
      65123,
      65123
    ],
    "mapped",
    [
      45
    ]
  ],
  [
    [
      65124,
      65124
    ],
    "disallowed_STD3_mapped",
    [
      60
    ]
  ],
  [
    [
      65125,
      65125
    ],
    "disallowed_STD3_mapped",
    [
      62
    ]
  ],
  [
    [
      65126,
      65126
    ],
    "disallowed_STD3_mapped",
    [
      61
    ]
  ],
  [
    [
      65127,
      65127
    ],
    "disallowed"
  ],
  [
    [
      65128,
      65128
    ],
    "disallowed_STD3_mapped",
    [
      92
    ]
  ],
  [
    [
      65129,
      65129
    ],
    "disallowed_STD3_mapped",
    [
      36
    ]
  ],
  [
    [
      65130,
      65130
    ],
    "disallowed_STD3_mapped",
    [
      37
    ]
  ],
  [
    [
      65131,
      65131
    ],
    "disallowed_STD3_mapped",
    [
      64
    ]
  ],
  [
    [
      65132,
      65135
    ],
    "disallowed"
  ],
  [
    [
      65136,
      65136
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1611
    ]
  ],
  [
    [
      65137,
      65137
    ],
    "mapped",
    [
      1600,
      1611
    ]
  ],
  [
    [
      65138,
      65138
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1612
    ]
  ],
  [
    [
      65139,
      65139
    ],
    "valid"
  ],
  [
    [
      65140,
      65140
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1613
    ]
  ],
  [
    [
      65141,
      65141
    ],
    "disallowed"
  ],
  [
    [
      65142,
      65142
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1614
    ]
  ],
  [
    [
      65143,
      65143
    ],
    "mapped",
    [
      1600,
      1614
    ]
  ],
  [
    [
      65144,
      65144
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1615
    ]
  ],
  [
    [
      65145,
      65145
    ],
    "mapped",
    [
      1600,
      1615
    ]
  ],
  [
    [
      65146,
      65146
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1616
    ]
  ],
  [
    [
      65147,
      65147
    ],
    "mapped",
    [
      1600,
      1616
    ]
  ],
  [
    [
      65148,
      65148
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1617
    ]
  ],
  [
    [
      65149,
      65149
    ],
    "mapped",
    [
      1600,
      1617
    ]
  ],
  [
    [
      65150,
      65150
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1618
    ]
  ],
  [
    [
      65151,
      65151
    ],
    "mapped",
    [
      1600,
      1618
    ]
  ],
  [
    [
      65152,
      65152
    ],
    "mapped",
    [
      1569
    ]
  ],
  [
    [
      65153,
      65154
    ],
    "mapped",
    [
      1570
    ]
  ],
  [
    [
      65155,
      65156
    ],
    "mapped",
    [
      1571
    ]
  ],
  [
    [
      65157,
      65158
    ],
    "mapped",
    [
      1572
    ]
  ],
  [
    [
      65159,
      65160
    ],
    "mapped",
    [
      1573
    ]
  ],
  [
    [
      65161,
      65164
    ],
    "mapped",
    [
      1574
    ]
  ],
  [
    [
      65165,
      65166
    ],
    "mapped",
    [
      1575
    ]
  ],
  [
    [
      65167,
      65170
    ],
    "mapped",
    [
      1576
    ]
  ],
  [
    [
      65171,
      65172
    ],
    "mapped",
    [
      1577
    ]
  ],
  [
    [
      65173,
      65176
    ],
    "mapped",
    [
      1578
    ]
  ],
  [
    [
      65177,
      65180
    ],
    "mapped",
    [
      1579
    ]
  ],
  [
    [
      65181,
      65184
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      65185,
      65188
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      65189,
      65192
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      65193,
      65194
    ],
    "mapped",
    [
      1583
    ]
  ],
  [
    [
      65195,
      65196
    ],
    "mapped",
    [
      1584
    ]
  ],
  [
    [
      65197,
      65198
    ],
    "mapped",
    [
      1585
    ]
  ],
  [
    [
      65199,
      65200
    ],
    "mapped",
    [
      1586
    ]
  ],
  [
    [
      65201,
      65204
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      65205,
      65208
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      65209,
      65212
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      65213,
      65216
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      65217,
      65220
    ],
    "mapped",
    [
      1591
    ]
  ],
  [
    [
      65221,
      65224
    ],
    "mapped",
    [
      1592
    ]
  ],
  [
    [
      65225,
      65228
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      65229,
      65232
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      65233,
      65236
    ],
    "mapped",
    [
      1601
    ]
  ],
  [
    [
      65237,
      65240
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      65241,
      65244
    ],
    "mapped",
    [
      1603
    ]
  ],
  [
    [
      65245,
      65248
    ],
    "mapped",
    [
      1604
    ]
  ],
  [
    [
      65249,
      65252
    ],
    "mapped",
    [
      1605
    ]
  ],
  [
    [
      65253,
      65256
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      65257,
      65260
    ],
    "mapped",
    [
      1607
    ]
  ],
  [
    [
      65261,
      65262
    ],
    "mapped",
    [
      1608
    ]
  ],
  [
    [
      65263,
      65264
    ],
    "mapped",
    [
      1609
    ]
  ],
  [
    [
      65265,
      65268
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      65269,
      65270
    ],
    "mapped",
    [
      1604,
      1570
    ]
  ],
  [
    [
      65271,
      65272
    ],
    "mapped",
    [
      1604,
      1571
    ]
  ],
  [
    [
      65273,
      65274
    ],
    "mapped",
    [
      1604,
      1573
    ]
  ],
  [
    [
      65275,
      65276
    ],
    "mapped",
    [
      1604,
      1575
    ]
  ],
  [
    [
      65277,
      65278
    ],
    "disallowed"
  ],
  [
    [
      65279,
      65279
    ],
    "ignored"
  ],
  [
    [
      65280,
      65280
    ],
    "disallowed"
  ],
  [
    [
      65281,
      65281
    ],
    "disallowed_STD3_mapped",
    [
      33
    ]
  ],
  [
    [
      65282,
      65282
    ],
    "disallowed_STD3_mapped",
    [
      34
    ]
  ],
  [
    [
      65283,
      65283
    ],
    "disallowed_STD3_mapped",
    [
      35
    ]
  ],
  [
    [
      65284,
      65284
    ],
    "disallowed_STD3_mapped",
    [
      36
    ]
  ],
  [
    [
      65285,
      65285
    ],
    "disallowed_STD3_mapped",
    [
      37
    ]
  ],
  [
    [
      65286,
      65286
    ],
    "disallowed_STD3_mapped",
    [
      38
    ]
  ],
  [
    [
      65287,
      65287
    ],
    "disallowed_STD3_mapped",
    [
      39
    ]
  ],
  [
    [
      65288,
      65288
    ],
    "disallowed_STD3_mapped",
    [
      40
    ]
  ],
  [
    [
      65289,
      65289
    ],
    "disallowed_STD3_mapped",
    [
      41
    ]
  ],
  [
    [
      65290,
      65290
    ],
    "disallowed_STD3_mapped",
    [
      42
    ]
  ],
  [
    [
      65291,
      65291
    ],
    "disallowed_STD3_mapped",
    [
      43
    ]
  ],
  [
    [
      65292,
      65292
    ],
    "disallowed_STD3_mapped",
    [
      44
    ]
  ],
  [
    [
      65293,
      65293
    ],
    "mapped",
    [
      45
    ]
  ],
  [
    [
      65294,
      65294
    ],
    "mapped",
    [
      46
    ]
  ],
  [
    [
      65295,
      65295
    ],
    "disallowed_STD3_mapped",
    [
      47
    ]
  ],
  [
    [
      65296,
      65296
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      65297,
      65297
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      65298,
      65298
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      65299,
      65299
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      65300,
      65300
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      65301,
      65301
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      65302,
      65302
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      65303,
      65303
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      65304,
      65304
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      65305,
      65305
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      65306,
      65306
    ],
    "disallowed_STD3_mapped",
    [
      58
    ]
  ],
  [
    [
      65307,
      65307
    ],
    "disallowed_STD3_mapped",
    [
      59
    ]
  ],
  [
    [
      65308,
      65308
    ],
    "disallowed_STD3_mapped",
    [
      60
    ]
  ],
  [
    [
      65309,
      65309
    ],
    "disallowed_STD3_mapped",
    [
      61
    ]
  ],
  [
    [
      65310,
      65310
    ],
    "disallowed_STD3_mapped",
    [
      62
    ]
  ],
  [
    [
      65311,
      65311
    ],
    "disallowed_STD3_mapped",
    [
      63
    ]
  ],
  [
    [
      65312,
      65312
    ],
    "disallowed_STD3_mapped",
    [
      64
    ]
  ],
  [
    [
      65313,
      65313
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      65314,
      65314
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      65315,
      65315
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      65316,
      65316
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      65317,
      65317
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      65318,
      65318
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      65319,
      65319
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      65320,
      65320
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      65321,
      65321
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      65322,
      65322
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      65323,
      65323
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      65324,
      65324
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      65325,
      65325
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      65326,
      65326
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      65327,
      65327
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      65328,
      65328
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      65329,
      65329
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      65330,
      65330
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      65331,
      65331
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      65332,
      65332
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      65333,
      65333
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      65334,
      65334
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      65335,
      65335
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      65336,
      65336
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      65337,
      65337
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      65338,
      65338
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      65339,
      65339
    ],
    "disallowed_STD3_mapped",
    [
      91
    ]
  ],
  [
    [
      65340,
      65340
    ],
    "disallowed_STD3_mapped",
    [
      92
    ]
  ],
  [
    [
      65341,
      65341
    ],
    "disallowed_STD3_mapped",
    [
      93
    ]
  ],
  [
    [
      65342,
      65342
    ],
    "disallowed_STD3_mapped",
    [
      94
    ]
  ],
  [
    [
      65343,
      65343
    ],
    "disallowed_STD3_mapped",
    [
      95
    ]
  ],
  [
    [
      65344,
      65344
    ],
    "disallowed_STD3_mapped",
    [
      96
    ]
  ],
  [
    [
      65345,
      65345
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      65346,
      65346
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      65347,
      65347
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      65348,
      65348
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      65349,
      65349
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      65350,
      65350
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      65351,
      65351
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      65352,
      65352
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      65353,
      65353
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      65354,
      65354
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      65355,
      65355
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      65356,
      65356
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      65357,
      65357
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      65358,
      65358
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      65359,
      65359
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      65360,
      65360
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      65361,
      65361
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      65362,
      65362
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      65363,
      65363
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      65364,
      65364
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      65365,
      65365
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      65366,
      65366
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      65367,
      65367
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      65368,
      65368
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      65369,
      65369
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      65370,
      65370
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      65371,
      65371
    ],
    "disallowed_STD3_mapped",
    [
      123
    ]
  ],
  [
    [
      65372,
      65372
    ],
    "disallowed_STD3_mapped",
    [
      124
    ]
  ],
  [
    [
      65373,
      65373
    ],
    "disallowed_STD3_mapped",
    [
      125
    ]
  ],
  [
    [
      65374,
      65374
    ],
    "disallowed_STD3_mapped",
    [
      126
    ]
  ],
  [
    [
      65375,
      65375
    ],
    "mapped",
    [
      10629
    ]
  ],
  [
    [
      65376,
      65376
    ],
    "mapped",
    [
      10630
    ]
  ],
  [
    [
      65377,
      65377
    ],
    "mapped",
    [
      46
    ]
  ],
  [
    [
      65378,
      65378
    ],
    "mapped",
    [
      12300
    ]
  ],
  [
    [
      65379,
      65379
    ],
    "mapped",
    [
      12301
    ]
  ],
  [
    [
      65380,
      65380
    ],
    "mapped",
    [
      12289
    ]
  ],
  [
    [
      65381,
      65381
    ],
    "mapped",
    [
      12539
    ]
  ],
  [
    [
      65382,
      65382
    ],
    "mapped",
    [
      12530
    ]
  ],
  [
    [
      65383,
      65383
    ],
    "mapped",
    [
      12449
    ]
  ],
  [
    [
      65384,
      65384
    ],
    "mapped",
    [
      12451
    ]
  ],
  [
    [
      65385,
      65385
    ],
    "mapped",
    [
      12453
    ]
  ],
  [
    [
      65386,
      65386
    ],
    "mapped",
    [
      12455
    ]
  ],
  [
    [
      65387,
      65387
    ],
    "mapped",
    [
      12457
    ]
  ],
  [
    [
      65388,
      65388
    ],
    "mapped",
    [
      12515
    ]
  ],
  [
    [
      65389,
      65389
    ],
    "mapped",
    [
      12517
    ]
  ],
  [
    [
      65390,
      65390
    ],
    "mapped",
    [
      12519
    ]
  ],
  [
    [
      65391,
      65391
    ],
    "mapped",
    [
      12483
    ]
  ],
  [
    [
      65392,
      65392
    ],
    "mapped",
    [
      12540
    ]
  ],
  [
    [
      65393,
      65393
    ],
    "mapped",
    [
      12450
    ]
  ],
  [
    [
      65394,
      65394
    ],
    "mapped",
    [
      12452
    ]
  ],
  [
    [
      65395,
      65395
    ],
    "mapped",
    [
      12454
    ]
  ],
  [
    [
      65396,
      65396
    ],
    "mapped",
    [
      12456
    ]
  ],
  [
    [
      65397,
      65397
    ],
    "mapped",
    [
      12458
    ]
  ],
  [
    [
      65398,
      65398
    ],
    "mapped",
    [
      12459
    ]
  ],
  [
    [
      65399,
      65399
    ],
    "mapped",
    [
      12461
    ]
  ],
  [
    [
      65400,
      65400
    ],
    "mapped",
    [
      12463
    ]
  ],
  [
    [
      65401,
      65401
    ],
    "mapped",
    [
      12465
    ]
  ],
  [
    [
      65402,
      65402
    ],
    "mapped",
    [
      12467
    ]
  ],
  [
    [
      65403,
      65403
    ],
    "mapped",
    [
      12469
    ]
  ],
  [
    [
      65404,
      65404
    ],
    "mapped",
    [
      12471
    ]
  ],
  [
    [
      65405,
      65405
    ],
    "mapped",
    [
      12473
    ]
  ],
  [
    [
      65406,
      65406
    ],
    "mapped",
    [
      12475
    ]
  ],
  [
    [
      65407,
      65407
    ],
    "mapped",
    [
      12477
    ]
  ],
  [
    [
      65408,
      65408
    ],
    "mapped",
    [
      12479
    ]
  ],
  [
    [
      65409,
      65409
    ],
    "mapped",
    [
      12481
    ]
  ],
  [
    [
      65410,
      65410
    ],
    "mapped",
    [
      12484
    ]
  ],
  [
    [
      65411,
      65411
    ],
    "mapped",
    [
      12486
    ]
  ],
  [
    [
      65412,
      65412
    ],
    "mapped",
    [
      12488
    ]
  ],
  [
    [
      65413,
      65413
    ],
    "mapped",
    [
      12490
    ]
  ],
  [
    [
      65414,
      65414
    ],
    "mapped",
    [
      12491
    ]
  ],
  [
    [
      65415,
      65415
    ],
    "mapped",
    [
      12492
    ]
  ],
  [
    [
      65416,
      65416
    ],
    "mapped",
    [
      12493
    ]
  ],
  [
    [
      65417,
      65417
    ],
    "mapped",
    [
      12494
    ]
  ],
  [
    [
      65418,
      65418
    ],
    "mapped",
    [
      12495
    ]
  ],
  [
    [
      65419,
      65419
    ],
    "mapped",
    [
      12498
    ]
  ],
  [
    [
      65420,
      65420
    ],
    "mapped",
    [
      12501
    ]
  ],
  [
    [
      65421,
      65421
    ],
    "mapped",
    [
      12504
    ]
  ],
  [
    [
      65422,
      65422
    ],
    "mapped",
    [
      12507
    ]
  ],
  [
    [
      65423,
      65423
    ],
    "mapped",
    [
      12510
    ]
  ],
  [
    [
      65424,
      65424
    ],
    "mapped",
    [
      12511
    ]
  ],
  [
    [
      65425,
      65425
    ],
    "mapped",
    [
      12512
    ]
  ],
  [
    [
      65426,
      65426
    ],
    "mapped",
    [
      12513
    ]
  ],
  [
    [
      65427,
      65427
    ],
    "mapped",
    [
      12514
    ]
  ],
  [
    [
      65428,
      65428
    ],
    "mapped",
    [
      12516
    ]
  ],
  [
    [
      65429,
      65429
    ],
    "mapped",
    [
      12518
    ]
  ],
  [
    [
      65430,
      65430
    ],
    "mapped",
    [
      12520
    ]
  ],
  [
    [
      65431,
      65431
    ],
    "mapped",
    [
      12521
    ]
  ],
  [
    [
      65432,
      65432
    ],
    "mapped",
    [
      12522
    ]
  ],
  [
    [
      65433,
      65433
    ],
    "mapped",
    [
      12523
    ]
  ],
  [
    [
      65434,
      65434
    ],
    "mapped",
    [
      12524
    ]
  ],
  [
    [
      65435,
      65435
    ],
    "mapped",
    [
      12525
    ]
  ],
  [
    [
      65436,
      65436
    ],
    "mapped",
    [
      12527
    ]
  ],
  [
    [
      65437,
      65437
    ],
    "mapped",
    [
      12531
    ]
  ],
  [
    [
      65438,
      65438
    ],
    "mapped",
    [
      12441
    ]
  ],
  [
    [
      65439,
      65439
    ],
    "mapped",
    [
      12442
    ]
  ],
  [
    [
      65440,
      65440
    ],
    "disallowed"
  ],
  [
    [
      65441,
      65441
    ],
    "mapped",
    [
      4352
    ]
  ],
  [
    [
      65442,
      65442
    ],
    "mapped",
    [
      4353
    ]
  ],
  [
    [
      65443,
      65443
    ],
    "mapped",
    [
      4522
    ]
  ],
  [
    [
      65444,
      65444
    ],
    "mapped",
    [
      4354
    ]
  ],
  [
    [
      65445,
      65445
    ],
    "mapped",
    [
      4524
    ]
  ],
  [
    [
      65446,
      65446
    ],
    "mapped",
    [
      4525
    ]
  ],
  [
    [
      65447,
      65447
    ],
    "mapped",
    [
      4355
    ]
  ],
  [
    [
      65448,
      65448
    ],
    "mapped",
    [
      4356
    ]
  ],
  [
    [
      65449,
      65449
    ],
    "mapped",
    [
      4357
    ]
  ],
  [
    [
      65450,
      65450
    ],
    "mapped",
    [
      4528
    ]
  ],
  [
    [
      65451,
      65451
    ],
    "mapped",
    [
      4529
    ]
  ],
  [
    [
      65452,
      65452
    ],
    "mapped",
    [
      4530
    ]
  ],
  [
    [
      65453,
      65453
    ],
    "mapped",
    [
      4531
    ]
  ],
  [
    [
      65454,
      65454
    ],
    "mapped",
    [
      4532
    ]
  ],
  [
    [
      65455,
      65455
    ],
    "mapped",
    [
      4533
    ]
  ],
  [
    [
      65456,
      65456
    ],
    "mapped",
    [
      4378
    ]
  ],
  [
    [
      65457,
      65457
    ],
    "mapped",
    [
      4358
    ]
  ],
  [
    [
      65458,
      65458
    ],
    "mapped",
    [
      4359
    ]
  ],
  [
    [
      65459,
      65459
    ],
    "mapped",
    [
      4360
    ]
  ],
  [
    [
      65460,
      65460
    ],
    "mapped",
    [
      4385
    ]
  ],
  [
    [
      65461,
      65461
    ],
    "mapped",
    [
      4361
    ]
  ],
  [
    [
      65462,
      65462
    ],
    "mapped",
    [
      4362
    ]
  ],
  [
    [
      65463,
      65463
    ],
    "mapped",
    [
      4363
    ]
  ],
  [
    [
      65464,
      65464
    ],
    "mapped",
    [
      4364
    ]
  ],
  [
    [
      65465,
      65465
    ],
    "mapped",
    [
      4365
    ]
  ],
  [
    [
      65466,
      65466
    ],
    "mapped",
    [
      4366
    ]
  ],
  [
    [
      65467,
      65467
    ],
    "mapped",
    [
      4367
    ]
  ],
  [
    [
      65468,
      65468
    ],
    "mapped",
    [
      4368
    ]
  ],
  [
    [
      65469,
      65469
    ],
    "mapped",
    [
      4369
    ]
  ],
  [
    [
      65470,
      65470
    ],
    "mapped",
    [
      4370
    ]
  ],
  [
    [
      65471,
      65473
    ],
    "disallowed"
  ],
  [
    [
      65474,
      65474
    ],
    "mapped",
    [
      4449
    ]
  ],
  [
    [
      65475,
      65475
    ],
    "mapped",
    [
      4450
    ]
  ],
  [
    [
      65476,
      65476
    ],
    "mapped",
    [
      4451
    ]
  ],
  [
    [
      65477,
      65477
    ],
    "mapped",
    [
      4452
    ]
  ],
  [
    [
      65478,
      65478
    ],
    "mapped",
    [
      4453
    ]
  ],
  [
    [
      65479,
      65479
    ],
    "mapped",
    [
      4454
    ]
  ],
  [
    [
      65480,
      65481
    ],
    "disallowed"
  ],
  [
    [
      65482,
      65482
    ],
    "mapped",
    [
      4455
    ]
  ],
  [
    [
      65483,
      65483
    ],
    "mapped",
    [
      4456
    ]
  ],
  [
    [
      65484,
      65484
    ],
    "mapped",
    [
      4457
    ]
  ],
  [
    [
      65485,
      65485
    ],
    "mapped",
    [
      4458
    ]
  ],
  [
    [
      65486,
      65486
    ],
    "mapped",
    [
      4459
    ]
  ],
  [
    [
      65487,
      65487
    ],
    "mapped",
    [
      4460
    ]
  ],
  [
    [
      65488,
      65489
    ],
    "disallowed"
  ],
  [
    [
      65490,
      65490
    ],
    "mapped",
    [
      4461
    ]
  ],
  [
    [
      65491,
      65491
    ],
    "mapped",
    [
      4462
    ]
  ],
  [
    [
      65492,
      65492
    ],
    "mapped",
    [
      4463
    ]
  ],
  [
    [
      65493,
      65493
    ],
    "mapped",
    [
      4464
    ]
  ],
  [
    [
      65494,
      65494
    ],
    "mapped",
    [
      4465
    ]
  ],
  [
    [
      65495,
      65495
    ],
    "mapped",
    [
      4466
    ]
  ],
  [
    [
      65496,
      65497
    ],
    "disallowed"
  ],
  [
    [
      65498,
      65498
    ],
    "mapped",
    [
      4467
    ]
  ],
  [
    [
      65499,
      65499
    ],
    "mapped",
    [
      4468
    ]
  ],
  [
    [
      65500,
      65500
    ],
    "mapped",
    [
      4469
    ]
  ],
  [
    [
      65501,
      65503
    ],
    "disallowed"
  ],
  [
    [
      65504,
      65504
    ],
    "mapped",
    [
      162
    ]
  ],
  [
    [
      65505,
      65505
    ],
    "mapped",
    [
      163
    ]
  ],
  [
    [
      65506,
      65506
    ],
    "mapped",
    [
      172
    ]
  ],
  [
    [
      65507,
      65507
    ],
    "disallowed_STD3_mapped",
    [
      32,
      772
    ]
  ],
  [
    [
      65508,
      65508
    ],
    "mapped",
    [
      166
    ]
  ],
  [
    [
      65509,
      65509
    ],
    "mapped",
    [
      165
    ]
  ],
  [
    [
      65510,
      65510
    ],
    "mapped",
    [
      8361
    ]
  ],
  [
    [
      65511,
      65511
    ],
    "disallowed"
  ],
  [
    [
      65512,
      65512
    ],
    "mapped",
    [
      9474
    ]
  ],
  [
    [
      65513,
      65513
    ],
    "mapped",
    [
      8592
    ]
  ],
  [
    [
      65514,
      65514
    ],
    "mapped",
    [
      8593
    ]
  ],
  [
    [
      65515,
      65515
    ],
    "mapped",
    [
      8594
    ]
  ],
  [
    [
      65516,
      65516
    ],
    "mapped",
    [
      8595
    ]
  ],
  [
    [
      65517,
      65517
    ],
    "mapped",
    [
      9632
    ]
  ],
  [
    [
      65518,
      65518
    ],
    "mapped",
    [
      9675
    ]
  ],
  [
    [
      65519,
      65528
    ],
    "disallowed"
  ],
  [
    [
      65529,
      65531
    ],
    "disallowed"
  ],
  [
    [
      65532,
      65532
    ],
    "disallowed"
  ],
  [
    [
      65533,
      65533
    ],
    "disallowed"
  ],
  [
    [
      65534,
      65535
    ],
    "disallowed"
  ],
  [
    [
      65536,
      65547
    ],
    "valid"
  ],
  [
    [
      65548,
      65548
    ],
    "disallowed"
  ],
  [
    [
      65549,
      65574
    ],
    "valid"
  ],
  [
    [
      65575,
      65575
    ],
    "disallowed"
  ],
  [
    [
      65576,
      65594
    ],
    "valid"
  ],
  [
    [
      65595,
      65595
    ],
    "disallowed"
  ],
  [
    [
      65596,
      65597
    ],
    "valid"
  ],
  [
    [
      65598,
      65598
    ],
    "disallowed"
  ],
  [
    [
      65599,
      65613
    ],
    "valid"
  ],
  [
    [
      65614,
      65615
    ],
    "disallowed"
  ],
  [
    [
      65616,
      65629
    ],
    "valid"
  ],
  [
    [
      65630,
      65663
    ],
    "disallowed"
  ],
  [
    [
      65664,
      65786
    ],
    "valid"
  ],
  [
    [
      65787,
      65791
    ],
    "disallowed"
  ],
  [
    [
      65792,
      65794
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65795,
      65798
    ],
    "disallowed"
  ],
  [
    [
      65799,
      65843
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65844,
      65846
    ],
    "disallowed"
  ],
  [
    [
      65847,
      65855
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65856,
      65930
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65931,
      65932
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65933,
      65935
    ],
    "disallowed"
  ],
  [
    [
      65936,
      65947
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65948,
      65951
    ],
    "disallowed"
  ],
  [
    [
      65952,
      65952
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65953,
      65999
    ],
    "disallowed"
  ],
  [
    [
      66e3,
      66044
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66045,
      66045
    ],
    "valid"
  ],
  [
    [
      66046,
      66175
    ],
    "disallowed"
  ],
  [
    [
      66176,
      66204
    ],
    "valid"
  ],
  [
    [
      66205,
      66207
    ],
    "disallowed"
  ],
  [
    [
      66208,
      66256
    ],
    "valid"
  ],
  [
    [
      66257,
      66271
    ],
    "disallowed"
  ],
  [
    [
      66272,
      66272
    ],
    "valid"
  ],
  [
    [
      66273,
      66299
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66300,
      66303
    ],
    "disallowed"
  ],
  [
    [
      66304,
      66334
    ],
    "valid"
  ],
  [
    [
      66335,
      66335
    ],
    "valid"
  ],
  [
    [
      66336,
      66339
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66340,
      66351
    ],
    "disallowed"
  ],
  [
    [
      66352,
      66368
    ],
    "valid"
  ],
  [
    [
      66369,
      66369
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66370,
      66377
    ],
    "valid"
  ],
  [
    [
      66378,
      66378
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66379,
      66383
    ],
    "disallowed"
  ],
  [
    [
      66384,
      66426
    ],
    "valid"
  ],
  [
    [
      66427,
      66431
    ],
    "disallowed"
  ],
  [
    [
      66432,
      66461
    ],
    "valid"
  ],
  [
    [
      66462,
      66462
    ],
    "disallowed"
  ],
  [
    [
      66463,
      66463
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66464,
      66499
    ],
    "valid"
  ],
  [
    [
      66500,
      66503
    ],
    "disallowed"
  ],
  [
    [
      66504,
      66511
    ],
    "valid"
  ],
  [
    [
      66512,
      66517
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66518,
      66559
    ],
    "disallowed"
  ],
  [
    [
      66560,
      66560
    ],
    "mapped",
    [
      66600
    ]
  ],
  [
    [
      66561,
      66561
    ],
    "mapped",
    [
      66601
    ]
  ],
  [
    [
      66562,
      66562
    ],
    "mapped",
    [
      66602
    ]
  ],
  [
    [
      66563,
      66563
    ],
    "mapped",
    [
      66603
    ]
  ],
  [
    [
      66564,
      66564
    ],
    "mapped",
    [
      66604
    ]
  ],
  [
    [
      66565,
      66565
    ],
    "mapped",
    [
      66605
    ]
  ],
  [
    [
      66566,
      66566
    ],
    "mapped",
    [
      66606
    ]
  ],
  [
    [
      66567,
      66567
    ],
    "mapped",
    [
      66607
    ]
  ],
  [
    [
      66568,
      66568
    ],
    "mapped",
    [
      66608
    ]
  ],
  [
    [
      66569,
      66569
    ],
    "mapped",
    [
      66609
    ]
  ],
  [
    [
      66570,
      66570
    ],
    "mapped",
    [
      66610
    ]
  ],
  [
    [
      66571,
      66571
    ],
    "mapped",
    [
      66611
    ]
  ],
  [
    [
      66572,
      66572
    ],
    "mapped",
    [
      66612
    ]
  ],
  [
    [
      66573,
      66573
    ],
    "mapped",
    [
      66613
    ]
  ],
  [
    [
      66574,
      66574
    ],
    "mapped",
    [
      66614
    ]
  ],
  [
    [
      66575,
      66575
    ],
    "mapped",
    [
      66615
    ]
  ],
  [
    [
      66576,
      66576
    ],
    "mapped",
    [
      66616
    ]
  ],
  [
    [
      66577,
      66577
    ],
    "mapped",
    [
      66617
    ]
  ],
  [
    [
      66578,
      66578
    ],
    "mapped",
    [
      66618
    ]
  ],
  [
    [
      66579,
      66579
    ],
    "mapped",
    [
      66619
    ]
  ],
  [
    [
      66580,
      66580
    ],
    "mapped",
    [
      66620
    ]
  ],
  [
    [
      66581,
      66581
    ],
    "mapped",
    [
      66621
    ]
  ],
  [
    [
      66582,
      66582
    ],
    "mapped",
    [
      66622
    ]
  ],
  [
    [
      66583,
      66583
    ],
    "mapped",
    [
      66623
    ]
  ],
  [
    [
      66584,
      66584
    ],
    "mapped",
    [
      66624
    ]
  ],
  [
    [
      66585,
      66585
    ],
    "mapped",
    [
      66625
    ]
  ],
  [
    [
      66586,
      66586
    ],
    "mapped",
    [
      66626
    ]
  ],
  [
    [
      66587,
      66587
    ],
    "mapped",
    [
      66627
    ]
  ],
  [
    [
      66588,
      66588
    ],
    "mapped",
    [
      66628
    ]
  ],
  [
    [
      66589,
      66589
    ],
    "mapped",
    [
      66629
    ]
  ],
  [
    [
      66590,
      66590
    ],
    "mapped",
    [
      66630
    ]
  ],
  [
    [
      66591,
      66591
    ],
    "mapped",
    [
      66631
    ]
  ],
  [
    [
      66592,
      66592
    ],
    "mapped",
    [
      66632
    ]
  ],
  [
    [
      66593,
      66593
    ],
    "mapped",
    [
      66633
    ]
  ],
  [
    [
      66594,
      66594
    ],
    "mapped",
    [
      66634
    ]
  ],
  [
    [
      66595,
      66595
    ],
    "mapped",
    [
      66635
    ]
  ],
  [
    [
      66596,
      66596
    ],
    "mapped",
    [
      66636
    ]
  ],
  [
    [
      66597,
      66597
    ],
    "mapped",
    [
      66637
    ]
  ],
  [
    [
      66598,
      66598
    ],
    "mapped",
    [
      66638
    ]
  ],
  [
    [
      66599,
      66599
    ],
    "mapped",
    [
      66639
    ]
  ],
  [
    [
      66600,
      66637
    ],
    "valid"
  ],
  [
    [
      66638,
      66717
    ],
    "valid"
  ],
  [
    [
      66718,
      66719
    ],
    "disallowed"
  ],
  [
    [
      66720,
      66729
    ],
    "valid"
  ],
  [
    [
      66730,
      66815
    ],
    "disallowed"
  ],
  [
    [
      66816,
      66855
    ],
    "valid"
  ],
  [
    [
      66856,
      66863
    ],
    "disallowed"
  ],
  [
    [
      66864,
      66915
    ],
    "valid"
  ],
  [
    [
      66916,
      66926
    ],
    "disallowed"
  ],
  [
    [
      66927,
      66927
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66928,
      67071
    ],
    "disallowed"
  ],
  [
    [
      67072,
      67382
    ],
    "valid"
  ],
  [
    [
      67383,
      67391
    ],
    "disallowed"
  ],
  [
    [
      67392,
      67413
    ],
    "valid"
  ],
  [
    [
      67414,
      67423
    ],
    "disallowed"
  ],
  [
    [
      67424,
      67431
    ],
    "valid"
  ],
  [
    [
      67432,
      67583
    ],
    "disallowed"
  ],
  [
    [
      67584,
      67589
    ],
    "valid"
  ],
  [
    [
      67590,
      67591
    ],
    "disallowed"
  ],
  [
    [
      67592,
      67592
    ],
    "valid"
  ],
  [
    [
      67593,
      67593
    ],
    "disallowed"
  ],
  [
    [
      67594,
      67637
    ],
    "valid"
  ],
  [
    [
      67638,
      67638
    ],
    "disallowed"
  ],
  [
    [
      67639,
      67640
    ],
    "valid"
  ],
  [
    [
      67641,
      67643
    ],
    "disallowed"
  ],
  [
    [
      67644,
      67644
    ],
    "valid"
  ],
  [
    [
      67645,
      67646
    ],
    "disallowed"
  ],
  [
    [
      67647,
      67647
    ],
    "valid"
  ],
  [
    [
      67648,
      67669
    ],
    "valid"
  ],
  [
    [
      67670,
      67670
    ],
    "disallowed"
  ],
  [
    [
      67671,
      67679
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67680,
      67702
    ],
    "valid"
  ],
  [
    [
      67703,
      67711
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67712,
      67742
    ],
    "valid"
  ],
  [
    [
      67743,
      67750
    ],
    "disallowed"
  ],
  [
    [
      67751,
      67759
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67760,
      67807
    ],
    "disallowed"
  ],
  [
    [
      67808,
      67826
    ],
    "valid"
  ],
  [
    [
      67827,
      67827
    ],
    "disallowed"
  ],
  [
    [
      67828,
      67829
    ],
    "valid"
  ],
  [
    [
      67830,
      67834
    ],
    "disallowed"
  ],
  [
    [
      67835,
      67839
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67840,
      67861
    ],
    "valid"
  ],
  [
    [
      67862,
      67865
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67866,
      67867
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67868,
      67870
    ],
    "disallowed"
  ],
  [
    [
      67871,
      67871
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67872,
      67897
    ],
    "valid"
  ],
  [
    [
      67898,
      67902
    ],
    "disallowed"
  ],
  [
    [
      67903,
      67903
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67904,
      67967
    ],
    "disallowed"
  ],
  [
    [
      67968,
      68023
    ],
    "valid"
  ],
  [
    [
      68024,
      68027
    ],
    "disallowed"
  ],
  [
    [
      68028,
      68029
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68030,
      68031
    ],
    "valid"
  ],
  [
    [
      68032,
      68047
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68048,
      68049
    ],
    "disallowed"
  ],
  [
    [
      68050,
      68095
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68096,
      68099
    ],
    "valid"
  ],
  [
    [
      68100,
      68100
    ],
    "disallowed"
  ],
  [
    [
      68101,
      68102
    ],
    "valid"
  ],
  [
    [
      68103,
      68107
    ],
    "disallowed"
  ],
  [
    [
      68108,
      68115
    ],
    "valid"
  ],
  [
    [
      68116,
      68116
    ],
    "disallowed"
  ],
  [
    [
      68117,
      68119
    ],
    "valid"
  ],
  [
    [
      68120,
      68120
    ],
    "disallowed"
  ],
  [
    [
      68121,
      68147
    ],
    "valid"
  ],
  [
    [
      68148,
      68151
    ],
    "disallowed"
  ],
  [
    [
      68152,
      68154
    ],
    "valid"
  ],
  [
    [
      68155,
      68158
    ],
    "disallowed"
  ],
  [
    [
      68159,
      68159
    ],
    "valid"
  ],
  [
    [
      68160,
      68167
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68168,
      68175
    ],
    "disallowed"
  ],
  [
    [
      68176,
      68184
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68185,
      68191
    ],
    "disallowed"
  ],
  [
    [
      68192,
      68220
    ],
    "valid"
  ],
  [
    [
      68221,
      68223
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68224,
      68252
    ],
    "valid"
  ],
  [
    [
      68253,
      68255
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68256,
      68287
    ],
    "disallowed"
  ],
  [
    [
      68288,
      68295
    ],
    "valid"
  ],
  [
    [
      68296,
      68296
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68297,
      68326
    ],
    "valid"
  ],
  [
    [
      68327,
      68330
    ],
    "disallowed"
  ],
  [
    [
      68331,
      68342
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68343,
      68351
    ],
    "disallowed"
  ],
  [
    [
      68352,
      68405
    ],
    "valid"
  ],
  [
    [
      68406,
      68408
    ],
    "disallowed"
  ],
  [
    [
      68409,
      68415
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68416,
      68437
    ],
    "valid"
  ],
  [
    [
      68438,
      68439
    ],
    "disallowed"
  ],
  [
    [
      68440,
      68447
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68448,
      68466
    ],
    "valid"
  ],
  [
    [
      68467,
      68471
    ],
    "disallowed"
  ],
  [
    [
      68472,
      68479
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68480,
      68497
    ],
    "valid"
  ],
  [
    [
      68498,
      68504
    ],
    "disallowed"
  ],
  [
    [
      68505,
      68508
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68509,
      68520
    ],
    "disallowed"
  ],
  [
    [
      68521,
      68527
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68528,
      68607
    ],
    "disallowed"
  ],
  [
    [
      68608,
      68680
    ],
    "valid"
  ],
  [
    [
      68681,
      68735
    ],
    "disallowed"
  ],
  [
    [
      68736,
      68736
    ],
    "mapped",
    [
      68800
    ]
  ],
  [
    [
      68737,
      68737
    ],
    "mapped",
    [
      68801
    ]
  ],
  [
    [
      68738,
      68738
    ],
    "mapped",
    [
      68802
    ]
  ],
  [
    [
      68739,
      68739
    ],
    "mapped",
    [
      68803
    ]
  ],
  [
    [
      68740,
      68740
    ],
    "mapped",
    [
      68804
    ]
  ],
  [
    [
      68741,
      68741
    ],
    "mapped",
    [
      68805
    ]
  ],
  [
    [
      68742,
      68742
    ],
    "mapped",
    [
      68806
    ]
  ],
  [
    [
      68743,
      68743
    ],
    "mapped",
    [
      68807
    ]
  ],
  [
    [
      68744,
      68744
    ],
    "mapped",
    [
      68808
    ]
  ],
  [
    [
      68745,
      68745
    ],
    "mapped",
    [
      68809
    ]
  ],
  [
    [
      68746,
      68746
    ],
    "mapped",
    [
      68810
    ]
  ],
  [
    [
      68747,
      68747
    ],
    "mapped",
    [
      68811
    ]
  ],
  [
    [
      68748,
      68748
    ],
    "mapped",
    [
      68812
    ]
  ],
  [
    [
      68749,
      68749
    ],
    "mapped",
    [
      68813
    ]
  ],
  [
    [
      68750,
      68750
    ],
    "mapped",
    [
      68814
    ]
  ],
  [
    [
      68751,
      68751
    ],
    "mapped",
    [
      68815
    ]
  ],
  [
    [
      68752,
      68752
    ],
    "mapped",
    [
      68816
    ]
  ],
  [
    [
      68753,
      68753
    ],
    "mapped",
    [
      68817
    ]
  ],
  [
    [
      68754,
      68754
    ],
    "mapped",
    [
      68818
    ]
  ],
  [
    [
      68755,
      68755
    ],
    "mapped",
    [
      68819
    ]
  ],
  [
    [
      68756,
      68756
    ],
    "mapped",
    [
      68820
    ]
  ],
  [
    [
      68757,
      68757
    ],
    "mapped",
    [
      68821
    ]
  ],
  [
    [
      68758,
      68758
    ],
    "mapped",
    [
      68822
    ]
  ],
  [
    [
      68759,
      68759
    ],
    "mapped",
    [
      68823
    ]
  ],
  [
    [
      68760,
      68760
    ],
    "mapped",
    [
      68824
    ]
  ],
  [
    [
      68761,
      68761
    ],
    "mapped",
    [
      68825
    ]
  ],
  [
    [
      68762,
      68762
    ],
    "mapped",
    [
      68826
    ]
  ],
  [
    [
      68763,
      68763
    ],
    "mapped",
    [
      68827
    ]
  ],
  [
    [
      68764,
      68764
    ],
    "mapped",
    [
      68828
    ]
  ],
  [
    [
      68765,
      68765
    ],
    "mapped",
    [
      68829
    ]
  ],
  [
    [
      68766,
      68766
    ],
    "mapped",
    [
      68830
    ]
  ],
  [
    [
      68767,
      68767
    ],
    "mapped",
    [
      68831
    ]
  ],
  [
    [
      68768,
      68768
    ],
    "mapped",
    [
      68832
    ]
  ],
  [
    [
      68769,
      68769
    ],
    "mapped",
    [
      68833
    ]
  ],
  [
    [
      68770,
      68770
    ],
    "mapped",
    [
      68834
    ]
  ],
  [
    [
      68771,
      68771
    ],
    "mapped",
    [
      68835
    ]
  ],
  [
    [
      68772,
      68772
    ],
    "mapped",
    [
      68836
    ]
  ],
  [
    [
      68773,
      68773
    ],
    "mapped",
    [
      68837
    ]
  ],
  [
    [
      68774,
      68774
    ],
    "mapped",
    [
      68838
    ]
  ],
  [
    [
      68775,
      68775
    ],
    "mapped",
    [
      68839
    ]
  ],
  [
    [
      68776,
      68776
    ],
    "mapped",
    [
      68840
    ]
  ],
  [
    [
      68777,
      68777
    ],
    "mapped",
    [
      68841
    ]
  ],
  [
    [
      68778,
      68778
    ],
    "mapped",
    [
      68842
    ]
  ],
  [
    [
      68779,
      68779
    ],
    "mapped",
    [
      68843
    ]
  ],
  [
    [
      68780,
      68780
    ],
    "mapped",
    [
      68844
    ]
  ],
  [
    [
      68781,
      68781
    ],
    "mapped",
    [
      68845
    ]
  ],
  [
    [
      68782,
      68782
    ],
    "mapped",
    [
      68846
    ]
  ],
  [
    [
      68783,
      68783
    ],
    "mapped",
    [
      68847
    ]
  ],
  [
    [
      68784,
      68784
    ],
    "mapped",
    [
      68848
    ]
  ],
  [
    [
      68785,
      68785
    ],
    "mapped",
    [
      68849
    ]
  ],
  [
    [
      68786,
      68786
    ],
    "mapped",
    [
      68850
    ]
  ],
  [
    [
      68787,
      68799
    ],
    "disallowed"
  ],
  [
    [
      68800,
      68850
    ],
    "valid"
  ],
  [
    [
      68851,
      68857
    ],
    "disallowed"
  ],
  [
    [
      68858,
      68863
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68864,
      69215
    ],
    "disallowed"
  ],
  [
    [
      69216,
      69246
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      69247,
      69631
    ],
    "disallowed"
  ],
  [
    [
      69632,
      69702
    ],
    "valid"
  ],
  [
    [
      69703,
      69709
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      69710,
      69713
    ],
    "disallowed"
  ],
  [
    [
      69714,
      69733
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      69734,
      69743
    ],
    "valid"
  ],
  [
    [
      69744,
      69758
    ],
    "disallowed"
  ],
  [
    [
      69759,
      69759
    ],
    "valid"
  ],
  [
    [
      69760,
      69818
    ],
    "valid"
  ],
  [
    [
      69819,
      69820
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      69821,
      69821
    ],
    "disallowed"
  ],
  [
    [
      69822,
      69825
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      69826,
      69839
    ],
    "disallowed"
  ],
  [
    [
      69840,
      69864
    ],
    "valid"
  ],
  [
    [
      69865,
      69871
    ],
    "disallowed"
  ],
  [
    [
      69872,
      69881
    ],
    "valid"
  ],
  [
    [
      69882,
      69887
    ],
    "disallowed"
  ],
  [
    [
      69888,
      69940
    ],
    "valid"
  ],
  [
    [
      69941,
      69941
    ],
    "disallowed"
  ],
  [
    [
      69942,
      69951
    ],
    "valid"
  ],
  [
    [
      69952,
      69955
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      69956,
      69967
    ],
    "disallowed"
  ],
  [
    [
      69968,
      70003
    ],
    "valid"
  ],
  [
    [
      70004,
      70005
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70006,
      70006
    ],
    "valid"
  ],
  [
    [
      70007,
      70015
    ],
    "disallowed"
  ],
  [
    [
      70016,
      70084
    ],
    "valid"
  ],
  [
    [
      70085,
      70088
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70089,
      70089
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70090,
      70092
    ],
    "valid"
  ],
  [
    [
      70093,
      70093
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70094,
      70095
    ],
    "disallowed"
  ],
  [
    [
      70096,
      70105
    ],
    "valid"
  ],
  [
    [
      70106,
      70106
    ],
    "valid"
  ],
  [
    [
      70107,
      70107
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70108,
      70108
    ],
    "valid"
  ],
  [
    [
      70109,
      70111
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70112,
      70112
    ],
    "disallowed"
  ],
  [
    [
      70113,
      70132
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70133,
      70143
    ],
    "disallowed"
  ],
  [
    [
      70144,
      70161
    ],
    "valid"
  ],
  [
    [
      70162,
      70162
    ],
    "disallowed"
  ],
  [
    [
      70163,
      70199
    ],
    "valid"
  ],
  [
    [
      70200,
      70205
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70206,
      70271
    ],
    "disallowed"
  ],
  [
    [
      70272,
      70278
    ],
    "valid"
  ],
  [
    [
      70279,
      70279
    ],
    "disallowed"
  ],
  [
    [
      70280,
      70280
    ],
    "valid"
  ],
  [
    [
      70281,
      70281
    ],
    "disallowed"
  ],
  [
    [
      70282,
      70285
    ],
    "valid"
  ],
  [
    [
      70286,
      70286
    ],
    "disallowed"
  ],
  [
    [
      70287,
      70301
    ],
    "valid"
  ],
  [
    [
      70302,
      70302
    ],
    "disallowed"
  ],
  [
    [
      70303,
      70312
    ],
    "valid"
  ],
  [
    [
      70313,
      70313
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70314,
      70319
    ],
    "disallowed"
  ],
  [
    [
      70320,
      70378
    ],
    "valid"
  ],
  [
    [
      70379,
      70383
    ],
    "disallowed"
  ],
  [
    [
      70384,
      70393
    ],
    "valid"
  ],
  [
    [
      70394,
      70399
    ],
    "disallowed"
  ],
  [
    [
      70400,
      70400
    ],
    "valid"
  ],
  [
    [
      70401,
      70403
    ],
    "valid"
  ],
  [
    [
      70404,
      70404
    ],
    "disallowed"
  ],
  [
    [
      70405,
      70412
    ],
    "valid"
  ],
  [
    [
      70413,
      70414
    ],
    "disallowed"
  ],
  [
    [
      70415,
      70416
    ],
    "valid"
  ],
  [
    [
      70417,
      70418
    ],
    "disallowed"
  ],
  [
    [
      70419,
      70440
    ],
    "valid"
  ],
  [
    [
      70441,
      70441
    ],
    "disallowed"
  ],
  [
    [
      70442,
      70448
    ],
    "valid"
  ],
  [
    [
      70449,
      70449
    ],
    "disallowed"
  ],
  [
    [
      70450,
      70451
    ],
    "valid"
  ],
  [
    [
      70452,
      70452
    ],
    "disallowed"
  ],
  [
    [
      70453,
      70457
    ],
    "valid"
  ],
  [
    [
      70458,
      70459
    ],
    "disallowed"
  ],
  [
    [
      70460,
      70468
    ],
    "valid"
  ],
  [
    [
      70469,
      70470
    ],
    "disallowed"
  ],
  [
    [
      70471,
      70472
    ],
    "valid"
  ],
  [
    [
      70473,
      70474
    ],
    "disallowed"
  ],
  [
    [
      70475,
      70477
    ],
    "valid"
  ],
  [
    [
      70478,
      70479
    ],
    "disallowed"
  ],
  [
    [
      70480,
      70480
    ],
    "valid"
  ],
  [
    [
      70481,
      70486
    ],
    "disallowed"
  ],
  [
    [
      70487,
      70487
    ],
    "valid"
  ],
  [
    [
      70488,
      70492
    ],
    "disallowed"
  ],
  [
    [
      70493,
      70499
    ],
    "valid"
  ],
  [
    [
      70500,
      70501
    ],
    "disallowed"
  ],
  [
    [
      70502,
      70508
    ],
    "valid"
  ],
  [
    [
      70509,
      70511
    ],
    "disallowed"
  ],
  [
    [
      70512,
      70516
    ],
    "valid"
  ],
  [
    [
      70517,
      70783
    ],
    "disallowed"
  ],
  [
    [
      70784,
      70853
    ],
    "valid"
  ],
  [
    [
      70854,
      70854
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70855,
      70855
    ],
    "valid"
  ],
  [
    [
      70856,
      70863
    ],
    "disallowed"
  ],
  [
    [
      70864,
      70873
    ],
    "valid"
  ],
  [
    [
      70874,
      71039
    ],
    "disallowed"
  ],
  [
    [
      71040,
      71093
    ],
    "valid"
  ],
  [
    [
      71094,
      71095
    ],
    "disallowed"
  ],
  [
    [
      71096,
      71104
    ],
    "valid"
  ],
  [
    [
      71105,
      71113
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      71114,
      71127
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      71128,
      71133
    ],
    "valid"
  ],
  [
    [
      71134,
      71167
    ],
    "disallowed"
  ],
  [
    [
      71168,
      71232
    ],
    "valid"
  ],
  [
    [
      71233,
      71235
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      71236,
      71236
    ],
    "valid"
  ],
  [
    [
      71237,
      71247
    ],
    "disallowed"
  ],
  [
    [
      71248,
      71257
    ],
    "valid"
  ],
  [
    [
      71258,
      71295
    ],
    "disallowed"
  ],
  [
    [
      71296,
      71351
    ],
    "valid"
  ],
  [
    [
      71352,
      71359
    ],
    "disallowed"
  ],
  [
    [
      71360,
      71369
    ],
    "valid"
  ],
  [
    [
      71370,
      71423
    ],
    "disallowed"
  ],
  [
    [
      71424,
      71449
    ],
    "valid"
  ],
  [
    [
      71450,
      71452
    ],
    "disallowed"
  ],
  [
    [
      71453,
      71467
    ],
    "valid"
  ],
  [
    [
      71468,
      71471
    ],
    "disallowed"
  ],
  [
    [
      71472,
      71481
    ],
    "valid"
  ],
  [
    [
      71482,
      71487
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      71488,
      71839
    ],
    "disallowed"
  ],
  [
    [
      71840,
      71840
    ],
    "mapped",
    [
      71872
    ]
  ],
  [
    [
      71841,
      71841
    ],
    "mapped",
    [
      71873
    ]
  ],
  [
    [
      71842,
      71842
    ],
    "mapped",
    [
      71874
    ]
  ],
  [
    [
      71843,
      71843
    ],
    "mapped",
    [
      71875
    ]
  ],
  [
    [
      71844,
      71844
    ],
    "mapped",
    [
      71876
    ]
  ],
  [
    [
      71845,
      71845
    ],
    "mapped",
    [
      71877
    ]
  ],
  [
    [
      71846,
      71846
    ],
    "mapped",
    [
      71878
    ]
  ],
  [
    [
      71847,
      71847
    ],
    "mapped",
    [
      71879
    ]
  ],
  [
    [
      71848,
      71848
    ],
    "mapped",
    [
      71880
    ]
  ],
  [
    [
      71849,
      71849
    ],
    "mapped",
    [
      71881
    ]
  ],
  [
    [
      71850,
      71850
    ],
    "mapped",
    [
      71882
    ]
  ],
  [
    [
      71851,
      71851
    ],
    "mapped",
    [
      71883
    ]
  ],
  [
    [
      71852,
      71852
    ],
    "mapped",
    [
      71884
    ]
  ],
  [
    [
      71853,
      71853
    ],
    "mapped",
    [
      71885
    ]
  ],
  [
    [
      71854,
      71854
    ],
    "mapped",
    [
      71886
    ]
  ],
  [
    [
      71855,
      71855
    ],
    "mapped",
    [
      71887
    ]
  ],
  [
    [
      71856,
      71856
    ],
    "mapped",
    [
      71888
    ]
  ],
  [
    [
      71857,
      71857
    ],
    "mapped",
    [
      71889
    ]
  ],
  [
    [
      71858,
      71858
    ],
    "mapped",
    [
      71890
    ]
  ],
  [
    [
      71859,
      71859
    ],
    "mapped",
    [
      71891
    ]
  ],
  [
    [
      71860,
      71860
    ],
    "mapped",
    [
      71892
    ]
  ],
  [
    [
      71861,
      71861
    ],
    "mapped",
    [
      71893
    ]
  ],
  [
    [
      71862,
      71862
    ],
    "mapped",
    [
      71894
    ]
  ],
  [
    [
      71863,
      71863
    ],
    "mapped",
    [
      71895
    ]
  ],
  [
    [
      71864,
      71864
    ],
    "mapped",
    [
      71896
    ]
  ],
  [
    [
      71865,
      71865
    ],
    "mapped",
    [
      71897
    ]
  ],
  [
    [
      71866,
      71866
    ],
    "mapped",
    [
      71898
    ]
  ],
  [
    [
      71867,
      71867
    ],
    "mapped",
    [
      71899
    ]
  ],
  [
    [
      71868,
      71868
    ],
    "mapped",
    [
      71900
    ]
  ],
  [
    [
      71869,
      71869
    ],
    "mapped",
    [
      71901
    ]
  ],
  [
    [
      71870,
      71870
    ],
    "mapped",
    [
      71902
    ]
  ],
  [
    [
      71871,
      71871
    ],
    "mapped",
    [
      71903
    ]
  ],
  [
    [
      71872,
      71913
    ],
    "valid"
  ],
  [
    [
      71914,
      71922
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      71923,
      71934
    ],
    "disallowed"
  ],
  [
    [
      71935,
      71935
    ],
    "valid"
  ],
  [
    [
      71936,
      72383
    ],
    "disallowed"
  ],
  [
    [
      72384,
      72440
    ],
    "valid"
  ],
  [
    [
      72441,
      73727
    ],
    "disallowed"
  ],
  [
    [
      73728,
      74606
    ],
    "valid"
  ],
  [
    [
      74607,
      74648
    ],
    "valid"
  ],
  [
    [
      74649,
      74649
    ],
    "valid"
  ],
  [
    [
      74650,
      74751
    ],
    "disallowed"
  ],
  [
    [
      74752,
      74850
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      74851,
      74862
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      74863,
      74863
    ],
    "disallowed"
  ],
  [
    [
      74864,
      74867
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      74868,
      74868
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      74869,
      74879
    ],
    "disallowed"
  ],
  [
    [
      74880,
      75075
    ],
    "valid"
  ],
  [
    [
      75076,
      77823
    ],
    "disallowed"
  ],
  [
    [
      77824,
      78894
    ],
    "valid"
  ],
  [
    [
      78895,
      82943
    ],
    "disallowed"
  ],
  [
    [
      82944,
      83526
    ],
    "valid"
  ],
  [
    [
      83527,
      92159
    ],
    "disallowed"
  ],
  [
    [
      92160,
      92728
    ],
    "valid"
  ],
  [
    [
      92729,
      92735
    ],
    "disallowed"
  ],
  [
    [
      92736,
      92766
    ],
    "valid"
  ],
  [
    [
      92767,
      92767
    ],
    "disallowed"
  ],
  [
    [
      92768,
      92777
    ],
    "valid"
  ],
  [
    [
      92778,
      92781
    ],
    "disallowed"
  ],
  [
    [
      92782,
      92783
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      92784,
      92879
    ],
    "disallowed"
  ],
  [
    [
      92880,
      92909
    ],
    "valid"
  ],
  [
    [
      92910,
      92911
    ],
    "disallowed"
  ],
  [
    [
      92912,
      92916
    ],
    "valid"
  ],
  [
    [
      92917,
      92917
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      92918,
      92927
    ],
    "disallowed"
  ],
  [
    [
      92928,
      92982
    ],
    "valid"
  ],
  [
    [
      92983,
      92991
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      92992,
      92995
    ],
    "valid"
  ],
  [
    [
      92996,
      92997
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      92998,
      93007
    ],
    "disallowed"
  ],
  [
    [
      93008,
      93017
    ],
    "valid"
  ],
  [
    [
      93018,
      93018
    ],
    "disallowed"
  ],
  [
    [
      93019,
      93025
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      93026,
      93026
    ],
    "disallowed"
  ],
  [
    [
      93027,
      93047
    ],
    "valid"
  ],
  [
    [
      93048,
      93052
    ],
    "disallowed"
  ],
  [
    [
      93053,
      93071
    ],
    "valid"
  ],
  [
    [
      93072,
      93951
    ],
    "disallowed"
  ],
  [
    [
      93952,
      94020
    ],
    "valid"
  ],
  [
    [
      94021,
      94031
    ],
    "disallowed"
  ],
  [
    [
      94032,
      94078
    ],
    "valid"
  ],
  [
    [
      94079,
      94094
    ],
    "disallowed"
  ],
  [
    [
      94095,
      94111
    ],
    "valid"
  ],
  [
    [
      94112,
      110591
    ],
    "disallowed"
  ],
  [
    [
      110592,
      110593
    ],
    "valid"
  ],
  [
    [
      110594,
      113663
    ],
    "disallowed"
  ],
  [
    [
      113664,
      113770
    ],
    "valid"
  ],
  [
    [
      113771,
      113775
    ],
    "disallowed"
  ],
  [
    [
      113776,
      113788
    ],
    "valid"
  ],
  [
    [
      113789,
      113791
    ],
    "disallowed"
  ],
  [
    [
      113792,
      113800
    ],
    "valid"
  ],
  [
    [
      113801,
      113807
    ],
    "disallowed"
  ],
  [
    [
      113808,
      113817
    ],
    "valid"
  ],
  [
    [
      113818,
      113819
    ],
    "disallowed"
  ],
  [
    [
      113820,
      113820
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      113821,
      113822
    ],
    "valid"
  ],
  [
    [
      113823,
      113823
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      113824,
      113827
    ],
    "ignored"
  ],
  [
    [
      113828,
      118783
    ],
    "disallowed"
  ],
  [
    [
      118784,
      119029
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119030,
      119039
    ],
    "disallowed"
  ],
  [
    [
      119040,
      119078
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119079,
      119080
    ],
    "disallowed"
  ],
  [
    [
      119081,
      119081
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119082,
      119133
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119134,
      119134
    ],
    "mapped",
    [
      119127,
      119141
    ]
  ],
  [
    [
      119135,
      119135
    ],
    "mapped",
    [
      119128,
      119141
    ]
  ],
  [
    [
      119136,
      119136
    ],
    "mapped",
    [
      119128,
      119141,
      119150
    ]
  ],
  [
    [
      119137,
      119137
    ],
    "mapped",
    [
      119128,
      119141,
      119151
    ]
  ],
  [
    [
      119138,
      119138
    ],
    "mapped",
    [
      119128,
      119141,
      119152
    ]
  ],
  [
    [
      119139,
      119139
    ],
    "mapped",
    [
      119128,
      119141,
      119153
    ]
  ],
  [
    [
      119140,
      119140
    ],
    "mapped",
    [
      119128,
      119141,
      119154
    ]
  ],
  [
    [
      119141,
      119154
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119155,
      119162
    ],
    "disallowed"
  ],
  [
    [
      119163,
      119226
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119227,
      119227
    ],
    "mapped",
    [
      119225,
      119141
    ]
  ],
  [
    [
      119228,
      119228
    ],
    "mapped",
    [
      119226,
      119141
    ]
  ],
  [
    [
      119229,
      119229
    ],
    "mapped",
    [
      119225,
      119141,
      119150
    ]
  ],
  [
    [
      119230,
      119230
    ],
    "mapped",
    [
      119226,
      119141,
      119150
    ]
  ],
  [
    [
      119231,
      119231
    ],
    "mapped",
    [
      119225,
      119141,
      119151
    ]
  ],
  [
    [
      119232,
      119232
    ],
    "mapped",
    [
      119226,
      119141,
      119151
    ]
  ],
  [
    [
      119233,
      119261
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119262,
      119272
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119273,
      119295
    ],
    "disallowed"
  ],
  [
    [
      119296,
      119365
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119366,
      119551
    ],
    "disallowed"
  ],
  [
    [
      119552,
      119638
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119639,
      119647
    ],
    "disallowed"
  ],
  [
    [
      119648,
      119665
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119666,
      119807
    ],
    "disallowed"
  ],
  [
    [
      119808,
      119808
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119809,
      119809
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119810,
      119810
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119811,
      119811
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119812,
      119812
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      119813,
      119813
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119814,
      119814
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119815,
      119815
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      119816,
      119816
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119817,
      119817
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119818,
      119818
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119819,
      119819
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      119820,
      119820
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      119821,
      119821
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119822,
      119822
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119823,
      119823
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119824,
      119824
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119825,
      119825
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      119826,
      119826
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119827,
      119827
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119828,
      119828
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119829,
      119829
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119830,
      119830
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119831,
      119831
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119832,
      119832
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119833,
      119833
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119834,
      119834
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119835,
      119835
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119836,
      119836
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119837,
      119837
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119838,
      119838
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      119839,
      119839
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119840,
      119840
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119841,
      119841
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      119842,
      119842
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119843,
      119843
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119844,
      119844
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119845,
      119845
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      119846,
      119846
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      119847,
      119847
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119848,
      119848
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119849,
      119849
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119850,
      119850
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119851,
      119851
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      119852,
      119852
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119853,
      119853
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119854,
      119854
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119855,
      119855
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119856,
      119856
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119857,
      119857
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119858,
      119858
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119859,
      119859
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119860,
      119860
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119861,
      119861
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119862,
      119862
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119863,
      119863
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119864,
      119864
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      119865,
      119865
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119866,
      119866
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119867,
      119867
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      119868,
      119868
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119869,
      119869
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119870,
      119870
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119871,
      119871
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      119872,
      119872
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      119873,
      119873
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119874,
      119874
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119875,
      119875
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119876,
      119876
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119877,
      119877
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      119878,
      119878
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119879,
      119879
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119880,
      119880
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119881,
      119881
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119882,
      119882
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119883,
      119883
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119884,
      119884
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119885,
      119885
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119886,
      119886
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119887,
      119887
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119888,
      119888
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119889,
      119889
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119890,
      119890
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      119891,
      119891
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119892,
      119892
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119893,
      119893
    ],
    "disallowed"
  ],
  [
    [
      119894,
      119894
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119895,
      119895
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119896,
      119896
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119897,
      119897
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      119898,
      119898
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      119899,
      119899
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119900,
      119900
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119901,
      119901
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119902,
      119902
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119903,
      119903
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      119904,
      119904
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119905,
      119905
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119906,
      119906
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119907,
      119907
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119908,
      119908
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119909,
      119909
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119910,
      119910
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119911,
      119911
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119912,
      119912
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119913,
      119913
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119914,
      119914
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119915,
      119915
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119916,
      119916
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      119917,
      119917
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119918,
      119918
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119919,
      119919
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      119920,
      119920
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119921,
      119921
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119922,
      119922
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119923,
      119923
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      119924,
      119924
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      119925,
      119925
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119926,
      119926
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119927,
      119927
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119928,
      119928
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119929,
      119929
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      119930,
      119930
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119931,
      119931
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119932,
      119932
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119933,
      119933
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119934,
      119934
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119935,
      119935
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119936,
      119936
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119937,
      119937
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119938,
      119938
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119939,
      119939
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119940,
      119940
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119941,
      119941
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119942,
      119942
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      119943,
      119943
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119944,
      119944
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119945,
      119945
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      119946,
      119946
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119947,
      119947
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119948,
      119948
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119949,
      119949
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      119950,
      119950
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      119951,
      119951
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119952,
      119952
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119953,
      119953
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119954,
      119954
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119955,
      119955
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      119956,
      119956
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119957,
      119957
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119958,
      119958
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119959,
      119959
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119960,
      119960
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119961,
      119961
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119962,
      119962
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119963,
      119963
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119964,
      119964
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119965,
      119965
    ],
    "disallowed"
  ],
  [
    [
      119966,
      119966
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119967,
      119967
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119968,
      119969
    ],
    "disallowed"
  ],
  [
    [
      119970,
      119970
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119971,
      119972
    ],
    "disallowed"
  ],
  [
    [
      119973,
      119973
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119974,
      119974
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119975,
      119976
    ],
    "disallowed"
  ],
  [
    [
      119977,
      119977
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119978,
      119978
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119979,
      119979
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119980,
      119980
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119981,
      119981
    ],
    "disallowed"
  ],
  [
    [
      119982,
      119982
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119983,
      119983
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119984,
      119984
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119985,
      119985
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119986,
      119986
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119987,
      119987
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119988,
      119988
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119989,
      119989
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119990,
      119990
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119991,
      119991
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119992,
      119992
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119993,
      119993
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119994,
      119994
    ],
    "disallowed"
  ],
  [
    [
      119995,
      119995
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119996,
      119996
    ],
    "disallowed"
  ],
  [
    [
      119997,
      119997
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      119998,
      119998
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119999,
      119999
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      12e4,
      12e4
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120001,
      120001
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120002,
      120002
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120003,
      120003
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120004,
      120004
    ],
    "disallowed"
  ],
  [
    [
      120005,
      120005
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120006,
      120006
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120007,
      120007
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120008,
      120008
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120009,
      120009
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120010,
      120010
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120011,
      120011
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120012,
      120012
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120013,
      120013
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120014,
      120014
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120015,
      120015
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120016,
      120016
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120017,
      120017
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120018,
      120018
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120019,
      120019
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120020,
      120020
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120021,
      120021
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120022,
      120022
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120023,
      120023
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120024,
      120024
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120025,
      120025
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120026,
      120026
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120027,
      120027
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120028,
      120028
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120029,
      120029
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120030,
      120030
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120031,
      120031
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120032,
      120032
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120033,
      120033
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120034,
      120034
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120035,
      120035
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120036,
      120036
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120037,
      120037
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120038,
      120038
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120039,
      120039
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120040,
      120040
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120041,
      120041
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120042,
      120042
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120043,
      120043
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120044,
      120044
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120045,
      120045
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120046,
      120046
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120047,
      120047
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120048,
      120048
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120049,
      120049
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120050,
      120050
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120051,
      120051
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120052,
      120052
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120053,
      120053
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120054,
      120054
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120055,
      120055
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120056,
      120056
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120057,
      120057
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120058,
      120058
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120059,
      120059
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120060,
      120060
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120061,
      120061
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120062,
      120062
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120063,
      120063
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120064,
      120064
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120065,
      120065
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120066,
      120066
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120067,
      120067
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120068,
      120068
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120069,
      120069
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120070,
      120070
    ],
    "disallowed"
  ],
  [
    [
      120071,
      120071
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120072,
      120072
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120073,
      120073
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120074,
      120074
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120075,
      120076
    ],
    "disallowed"
  ],
  [
    [
      120077,
      120077
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120078,
      120078
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120079,
      120079
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120080,
      120080
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120081,
      120081
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120082,
      120082
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120083,
      120083
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120084,
      120084
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120085,
      120085
    ],
    "disallowed"
  ],
  [
    [
      120086,
      120086
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120087,
      120087
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120088,
      120088
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120089,
      120089
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120090,
      120090
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120091,
      120091
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120092,
      120092
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120093,
      120093
    ],
    "disallowed"
  ],
  [
    [
      120094,
      120094
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120095,
      120095
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120096,
      120096
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120097,
      120097
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120098,
      120098
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120099,
      120099
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120100,
      120100
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120101,
      120101
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120102,
      120102
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120103,
      120103
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120104,
      120104
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120105,
      120105
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120106,
      120106
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120107,
      120107
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120108,
      120108
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120109,
      120109
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120110,
      120110
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120111,
      120111
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120112,
      120112
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120113,
      120113
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120114,
      120114
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120115,
      120115
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120116,
      120116
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120117,
      120117
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120118,
      120118
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120119,
      120119
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120120,
      120120
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120121,
      120121
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120122,
      120122
    ],
    "disallowed"
  ],
  [
    [
      120123,
      120123
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120124,
      120124
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120125,
      120125
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120126,
      120126
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120127,
      120127
    ],
    "disallowed"
  ],
  [
    [
      120128,
      120128
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120129,
      120129
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120130,
      120130
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120131,
      120131
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120132,
      120132
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120133,
      120133
    ],
    "disallowed"
  ],
  [
    [
      120134,
      120134
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120135,
      120137
    ],
    "disallowed"
  ],
  [
    [
      120138,
      120138
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120139,
      120139
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120140,
      120140
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120141,
      120141
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120142,
      120142
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120143,
      120143
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120144,
      120144
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120145,
      120145
    ],
    "disallowed"
  ],
  [
    [
      120146,
      120146
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120147,
      120147
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120148,
      120148
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120149,
      120149
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120150,
      120150
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120151,
      120151
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120152,
      120152
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120153,
      120153
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120154,
      120154
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120155,
      120155
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120156,
      120156
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120157,
      120157
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120158,
      120158
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120159,
      120159
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120160,
      120160
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120161,
      120161
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120162,
      120162
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120163,
      120163
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120164,
      120164
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120165,
      120165
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120166,
      120166
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120167,
      120167
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120168,
      120168
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120169,
      120169
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120170,
      120170
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120171,
      120171
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120172,
      120172
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120173,
      120173
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120174,
      120174
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120175,
      120175
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120176,
      120176
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120177,
      120177
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120178,
      120178
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120179,
      120179
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120180,
      120180
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120181,
      120181
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120182,
      120182
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120183,
      120183
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120184,
      120184
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120185,
      120185
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120186,
      120186
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120187,
      120187
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120188,
      120188
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120189,
      120189
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120190,
      120190
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120191,
      120191
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120192,
      120192
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120193,
      120193
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120194,
      120194
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120195,
      120195
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120196,
      120196
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120197,
      120197
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120198,
      120198
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120199,
      120199
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120200,
      120200
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120201,
      120201
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120202,
      120202
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120203,
      120203
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120204,
      120204
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120205,
      120205
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120206,
      120206
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120207,
      120207
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120208,
      120208
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120209,
      120209
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120210,
      120210
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120211,
      120211
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120212,
      120212
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120213,
      120213
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120214,
      120214
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120215,
      120215
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120216,
      120216
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120217,
      120217
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120218,
      120218
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120219,
      120219
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120220,
      120220
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120221,
      120221
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120222,
      120222
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120223,
      120223
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120224,
      120224
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120225,
      120225
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120226,
      120226
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120227,
      120227
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120228,
      120228
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120229,
      120229
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120230,
      120230
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120231,
      120231
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120232,
      120232
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120233,
      120233
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120234,
      120234
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120235,
      120235
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120236,
      120236
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120237,
      120237
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120238,
      120238
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120239,
      120239
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120240,
      120240
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120241,
      120241
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120242,
      120242
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120243,
      120243
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120244,
      120244
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120245,
      120245
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120246,
      120246
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120247,
      120247
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120248,
      120248
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120249,
      120249
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120250,
      120250
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120251,
      120251
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120252,
      120252
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120253,
      120253
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120254,
      120254
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120255,
      120255
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120256,
      120256
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120257,
      120257
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120258,
      120258
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120259,
      120259
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120260,
      120260
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120261,
      120261
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120262,
      120262
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120263,
      120263
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120264,
      120264
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120265,
      120265
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120266,
      120266
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120267,
      120267
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120268,
      120268
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120269,
      120269
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120270,
      120270
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120271,
      120271
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120272,
      120272
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120273,
      120273
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120274,
      120274
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120275,
      120275
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120276,
      120276
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120277,
      120277
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120278,
      120278
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120279,
      120279
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120280,
      120280
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120281,
      120281
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120282,
      120282
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120283,
      120283
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120284,
      120284
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120285,
      120285
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120286,
      120286
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120287,
      120287
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120288,
      120288
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120289,
      120289
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120290,
      120290
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120291,
      120291
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120292,
      120292
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120293,
      120293
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120294,
      120294
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120295,
      120295
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120296,
      120296
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120297,
      120297
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120298,
      120298
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120299,
      120299
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120300,
      120300
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120301,
      120301
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120302,
      120302
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120303,
      120303
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120304,
      120304
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120305,
      120305
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120306,
      120306
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120307,
      120307
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120308,
      120308
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120309,
      120309
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120310,
      120310
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120311,
      120311
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120312,
      120312
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120313,
      120313
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120314,
      120314
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120315,
      120315
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120316,
      120316
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120317,
      120317
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120318,
      120318
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120319,
      120319
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120320,
      120320
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120321,
      120321
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120322,
      120322
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120323,
      120323
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120324,
      120324
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120325,
      120325
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120326,
      120326
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120327,
      120327
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120328,
      120328
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120329,
      120329
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120330,
      120330
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120331,
      120331
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120332,
      120332
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120333,
      120333
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120334,
      120334
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120335,
      120335
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120336,
      120336
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120337,
      120337
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120338,
      120338
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120339,
      120339
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120340,
      120340
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120341,
      120341
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120342,
      120342
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120343,
      120343
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120344,
      120344
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120345,
      120345
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120346,
      120346
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120347,
      120347
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120348,
      120348
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120349,
      120349
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120350,
      120350
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120351,
      120351
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120352,
      120352
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120353,
      120353
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120354,
      120354
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120355,
      120355
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120356,
      120356
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120357,
      120357
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120358,
      120358
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120359,
      120359
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120360,
      120360
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120361,
      120361
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120362,
      120362
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120363,
      120363
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120364,
      120364
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120365,
      120365
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120366,
      120366
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120367,
      120367
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120368,
      120368
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120369,
      120369
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120370,
      120370
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120371,
      120371
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120372,
      120372
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120373,
      120373
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120374,
      120374
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120375,
      120375
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120376,
      120376
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120377,
      120377
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120378,
      120378
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120379,
      120379
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120380,
      120380
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120381,
      120381
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120382,
      120382
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120383,
      120383
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120384,
      120384
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120385,
      120385
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120386,
      120386
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120387,
      120387
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120388,
      120388
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120389,
      120389
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120390,
      120390
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120391,
      120391
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120392,
      120392
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120393,
      120393
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120394,
      120394
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120395,
      120395
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120396,
      120396
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120397,
      120397
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120398,
      120398
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120399,
      120399
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120400,
      120400
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120401,
      120401
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120402,
      120402
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120403,
      120403
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120404,
      120404
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120405,
      120405
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120406,
      120406
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120407,
      120407
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120408,
      120408
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120409,
      120409
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120410,
      120410
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120411,
      120411
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120412,
      120412
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120413,
      120413
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120414,
      120414
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120415,
      120415
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120416,
      120416
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120417,
      120417
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120418,
      120418
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120419,
      120419
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120420,
      120420
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120421,
      120421
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120422,
      120422
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120423,
      120423
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120424,
      120424
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120425,
      120425
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120426,
      120426
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120427,
      120427
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120428,
      120428
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120429,
      120429
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120430,
      120430
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120431,
      120431
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120432,
      120432
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120433,
      120433
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120434,
      120434
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120435,
      120435
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120436,
      120436
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120437,
      120437
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120438,
      120438
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120439,
      120439
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120440,
      120440
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120441,
      120441
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120442,
      120442
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120443,
      120443
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120444,
      120444
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120445,
      120445
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120446,
      120446
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120447,
      120447
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120448,
      120448
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120449,
      120449
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120450,
      120450
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120451,
      120451
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120452,
      120452
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120453,
      120453
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120454,
      120454
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120455,
      120455
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120456,
      120456
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120457,
      120457
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120458,
      120458
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120459,
      120459
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120460,
      120460
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120461,
      120461
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120462,
      120462
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120463,
      120463
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120464,
      120464
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120465,
      120465
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120466,
      120466
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120467,
      120467
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120468,
      120468
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120469,
      120469
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120470,
      120470
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120471,
      120471
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120472,
      120472
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120473,
      120473
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120474,
      120474
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120475,
      120475
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120476,
      120476
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120477,
      120477
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120478,
      120478
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120479,
      120479
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120480,
      120480
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120481,
      120481
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120482,
      120482
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120483,
      120483
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120484,
      120484
    ],
    "mapped",
    [
      305
    ]
  ],
  [
    [
      120485,
      120485
    ],
    "mapped",
    [
      567
    ]
  ],
  [
    [
      120486,
      120487
    ],
    "disallowed"
  ],
  [
    [
      120488,
      120488
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120489,
      120489
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120490,
      120490
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120491,
      120491
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120492,
      120492
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120493,
      120493
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120494,
      120494
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120495,
      120495
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120496,
      120496
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120497,
      120497
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120498,
      120498
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120499,
      120499
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120500,
      120500
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120501,
      120501
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120502,
      120502
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120503,
      120503
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120504,
      120504
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120505,
      120505
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120506,
      120506
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120507,
      120507
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120508,
      120508
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120509,
      120509
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120510,
      120510
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120511,
      120511
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120512,
      120512
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120513,
      120513
    ],
    "mapped",
    [
      8711
    ]
  ],
  [
    [
      120514,
      120514
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120515,
      120515
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120516,
      120516
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120517,
      120517
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120518,
      120518
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120519,
      120519
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120520,
      120520
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120521,
      120521
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120522,
      120522
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120523,
      120523
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120524,
      120524
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120525,
      120525
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120526,
      120526
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120527,
      120527
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120528,
      120528
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120529,
      120529
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120530,
      120530
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120531,
      120532
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120533,
      120533
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120534,
      120534
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120535,
      120535
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120536,
      120536
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120537,
      120537
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120538,
      120538
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120539,
      120539
    ],
    "mapped",
    [
      8706
    ]
  ],
  [
    [
      120540,
      120540
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120541,
      120541
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120542,
      120542
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120543,
      120543
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120544,
      120544
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120545,
      120545
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120546,
      120546
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120547,
      120547
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120548,
      120548
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120549,
      120549
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120550,
      120550
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120551,
      120551
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120552,
      120552
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120553,
      120553
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120554,
      120554
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120555,
      120555
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120556,
      120556
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120557,
      120557
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120558,
      120558
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120559,
      120559
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120560,
      120560
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120561,
      120561
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120562,
      120562
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120563,
      120563
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120564,
      120564
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120565,
      120565
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120566,
      120566
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120567,
      120567
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120568,
      120568
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120569,
      120569
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120570,
      120570
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120571,
      120571
    ],
    "mapped",
    [
      8711
    ]
  ],
  [
    [
      120572,
      120572
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120573,
      120573
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120574,
      120574
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120575,
      120575
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120576,
      120576
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120577,
      120577
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120578,
      120578
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120579,
      120579
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120580,
      120580
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120581,
      120581
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120582,
      120582
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120583,
      120583
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120584,
      120584
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120585,
      120585
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120586,
      120586
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120587,
      120587
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120588,
      120588
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120589,
      120590
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120591,
      120591
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120592,
      120592
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120593,
      120593
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120594,
      120594
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120595,
      120595
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120596,
      120596
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120597,
      120597
    ],
    "mapped",
    [
      8706
    ]
  ],
  [
    [
      120598,
      120598
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120599,
      120599
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120600,
      120600
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120601,
      120601
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120602,
      120602
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120603,
      120603
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120604,
      120604
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120605,
      120605
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120606,
      120606
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120607,
      120607
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120608,
      120608
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120609,
      120609
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120610,
      120610
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120611,
      120611
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120612,
      120612
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120613,
      120613
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120614,
      120614
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120615,
      120615
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120616,
      120616
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120617,
      120617
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120618,
      120618
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120619,
      120619
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120620,
      120620
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120621,
      120621
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120622,
      120622
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120623,
      120623
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120624,
      120624
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120625,
      120625
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120626,
      120626
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120627,
      120627
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120628,
      120628
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120629,
      120629
    ],
    "mapped",
    [
      8711
    ]
  ],
  [
    [
      120630,
      120630
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120631,
      120631
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120632,
      120632
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120633,
      120633
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120634,
      120634
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120635,
      120635
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120636,
      120636
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120637,
      120637
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120638,
      120638
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120639,
      120639
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120640,
      120640
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120641,
      120641
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120642,
      120642
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120643,
      120643
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120644,
      120644
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120645,
      120645
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120646,
      120646
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120647,
      120648
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120649,
      120649
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120650,
      120650
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120651,
      120651
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120652,
      120652
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120653,
      120653
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120654,
      120654
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120655,
      120655
    ],
    "mapped",
    [
      8706
    ]
  ],
  [
    [
      120656,
      120656
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120657,
      120657
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120658,
      120658
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120659,
      120659
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120660,
      120660
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120661,
      120661
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120662,
      120662
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120663,
      120663
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120664,
      120664
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120665,
      120665
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120666,
      120666
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120667,
      120667
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120668,
      120668
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120669,
      120669
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120670,
      120670
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120671,
      120671
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120672,
      120672
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120673,
      120673
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120674,
      120674
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120675,
      120675
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120676,
      120676
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120677,
      120677
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120678,
      120678
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120679,
      120679
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120680,
      120680
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120681,
      120681
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120682,
      120682
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120683,
      120683
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120684,
      120684
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120685,
      120685
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120686,
      120686
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120687,
      120687
    ],
    "mapped",
    [
      8711
    ]
  ],
  [
    [
      120688,
      120688
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120689,
      120689
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120690,
      120690
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120691,
      120691
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120692,
      120692
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120693,
      120693
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120694,
      120694
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120695,
      120695
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120696,
      120696
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120697,
      120697
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120698,
      120698
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120699,
      120699
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120700,
      120700
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120701,
      120701
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120702,
      120702
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120703,
      120703
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120704,
      120704
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120705,
      120706
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120707,
      120707
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120708,
      120708
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120709,
      120709
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120710,
      120710
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120711,
      120711
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120712,
      120712
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120713,
      120713
    ],
    "mapped",
    [
      8706
    ]
  ],
  [
    [
      120714,
      120714
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120715,
      120715
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120716,
      120716
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120717,
      120717
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120718,
      120718
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120719,
      120719
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120720,
      120720
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120721,
      120721
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120722,
      120722
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120723,
      120723
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120724,
      120724
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120725,
      120725
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120726,
      120726
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120727,
      120727
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120728,
      120728
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120729,
      120729
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120730,
      120730
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120731,
      120731
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120732,
      120732
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120733,
      120733
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120734,
      120734
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120735,
      120735
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120736,
      120736
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120737,
      120737
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120738,
      120738
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120739,
      120739
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120740,
      120740
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120741,
      120741
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120742,
      120742
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120743,
      120743
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120744,
      120744
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120745,
      120745
    ],
    "mapped",
    [
      8711
    ]
  ],
  [
    [
      120746,
      120746
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120747,
      120747
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120748,
      120748
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120749,
      120749
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120750,
      120750
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120751,
      120751
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120752,
      120752
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120753,
      120753
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120754,
      120754
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120755,
      120755
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120756,
      120756
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120757,
      120757
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120758,
      120758
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120759,
      120759
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120760,
      120760
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120761,
      120761
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120762,
      120762
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120763,
      120764
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120765,
      120765
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120766,
      120766
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120767,
      120767
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120768,
      120768
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120769,
      120769
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120770,
      120770
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120771,
      120771
    ],
    "mapped",
    [
      8706
    ]
  ],
  [
    [
      120772,
      120772
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120773,
      120773
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120774,
      120774
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120775,
      120775
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120776,
      120776
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120777,
      120777
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120778,
      120779
    ],
    "mapped",
    [
      989
    ]
  ],
  [
    [
      120780,
      120781
    ],
    "disallowed"
  ],
  [
    [
      120782,
      120782
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      120783,
      120783
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      120784,
      120784
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      120785,
      120785
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      120786,
      120786
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      120787,
      120787
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      120788,
      120788
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      120789,
      120789
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      120790,
      120790
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      120791,
      120791
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      120792,
      120792
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      120793,
      120793
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      120794,
      120794
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      120795,
      120795
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      120796,
      120796
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      120797,
      120797
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      120798,
      120798
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      120799,
      120799
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      120800,
      120800
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      120801,
      120801
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      120802,
      120802
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      120803,
      120803
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      120804,
      120804
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      120805,
      120805
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      120806,
      120806
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      120807,
      120807
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      120808,
      120808
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      120809,
      120809
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      120810,
      120810
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      120811,
      120811
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      120812,
      120812
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      120813,
      120813
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      120814,
      120814
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      120815,
      120815
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      120816,
      120816
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      120817,
      120817
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      120818,
      120818
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      120819,
      120819
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      120820,
      120820
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      120821,
      120821
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      120822,
      120822
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      120823,
      120823
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      120824,
      120824
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      120825,
      120825
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      120826,
      120826
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      120827,
      120827
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      120828,
      120828
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      120829,
      120829
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      120830,
      120830
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      120831,
      120831
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      120832,
      121343
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      121344,
      121398
    ],
    "valid"
  ],
  [
    [
      121399,
      121402
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      121403,
      121452
    ],
    "valid"
  ],
  [
    [
      121453,
      121460
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      121461,
      121461
    ],
    "valid"
  ],
  [
    [
      121462,
      121475
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      121476,
      121476
    ],
    "valid"
  ],
  [
    [
      121477,
      121483
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      121484,
      121498
    ],
    "disallowed"
  ],
  [
    [
      121499,
      121503
    ],
    "valid"
  ],
  [
    [
      121504,
      121504
    ],
    "disallowed"
  ],
  [
    [
      121505,
      121519
    ],
    "valid"
  ],
  [
    [
      121520,
      124927
    ],
    "disallowed"
  ],
  [
    [
      124928,
      125124
    ],
    "valid"
  ],
  [
    [
      125125,
      125126
    ],
    "disallowed"
  ],
  [
    [
      125127,
      125135
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      125136,
      125142
    ],
    "valid"
  ],
  [
    [
      125143,
      126463
    ],
    "disallowed"
  ],
  [
    [
      126464,
      126464
    ],
    "mapped",
    [
      1575
    ]
  ],
  [
    [
      126465,
      126465
    ],
    "mapped",
    [
      1576
    ]
  ],
  [
    [
      126466,
      126466
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      126467,
      126467
    ],
    "mapped",
    [
      1583
    ]
  ],
  [
    [
      126468,
      126468
    ],
    "disallowed"
  ],
  [
    [
      126469,
      126469
    ],
    "mapped",
    [
      1608
    ]
  ],
  [
    [
      126470,
      126470
    ],
    "mapped",
    [
      1586
    ]
  ],
  [
    [
      126471,
      126471
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      126472,
      126472
    ],
    "mapped",
    [
      1591
    ]
  ],
  [
    [
      126473,
      126473
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      126474,
      126474
    ],
    "mapped",
    [
      1603
    ]
  ],
  [
    [
      126475,
      126475
    ],
    "mapped",
    [
      1604
    ]
  ],
  [
    [
      126476,
      126476
    ],
    "mapped",
    [
      1605
    ]
  ],
  [
    [
      126477,
      126477
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      126478,
      126478
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      126479,
      126479
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      126480,
      126480
    ],
    "mapped",
    [
      1601
    ]
  ],
  [
    [
      126481,
      126481
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      126482,
      126482
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      126483,
      126483
    ],
    "mapped",
    [
      1585
    ]
  ],
  [
    [
      126484,
      126484
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      126485,
      126485
    ],
    "mapped",
    [
      1578
    ]
  ],
  [
    [
      126486,
      126486
    ],
    "mapped",
    [
      1579
    ]
  ],
  [
    [
      126487,
      126487
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      126488,
      126488
    ],
    "mapped",
    [
      1584
    ]
  ],
  [
    [
      126489,
      126489
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      126490,
      126490
    ],
    "mapped",
    [
      1592
    ]
  ],
  [
    [
      126491,
      126491
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      126492,
      126492
    ],
    "mapped",
    [
      1646
    ]
  ],
  [
    [
      126493,
      126493
    ],
    "mapped",
    [
      1722
    ]
  ],
  [
    [
      126494,
      126494
    ],
    "mapped",
    [
      1697
    ]
  ],
  [
    [
      126495,
      126495
    ],
    "mapped",
    [
      1647
    ]
  ],
  [
    [
      126496,
      126496
    ],
    "disallowed"
  ],
  [
    [
      126497,
      126497
    ],
    "mapped",
    [
      1576
    ]
  ],
  [
    [
      126498,
      126498
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      126499,
      126499
    ],
    "disallowed"
  ],
  [
    [
      126500,
      126500
    ],
    "mapped",
    [
      1607
    ]
  ],
  [
    [
      126501,
      126502
    ],
    "disallowed"
  ],
  [
    [
      126503,
      126503
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      126504,
      126504
    ],
    "disallowed"
  ],
  [
    [
      126505,
      126505
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      126506,
      126506
    ],
    "mapped",
    [
      1603
    ]
  ],
  [
    [
      126507,
      126507
    ],
    "mapped",
    [
      1604
    ]
  ],
  [
    [
      126508,
      126508
    ],
    "mapped",
    [
      1605
    ]
  ],
  [
    [
      126509,
      126509
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      126510,
      126510
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      126511,
      126511
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      126512,
      126512
    ],
    "mapped",
    [
      1601
    ]
  ],
  [
    [
      126513,
      126513
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      126514,
      126514
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      126515,
      126515
    ],
    "disallowed"
  ],
  [
    [
      126516,
      126516
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      126517,
      126517
    ],
    "mapped",
    [
      1578
    ]
  ],
  [
    [
      126518,
      126518
    ],
    "mapped",
    [
      1579
    ]
  ],
  [
    [
      126519,
      126519
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      126520,
      126520
    ],
    "disallowed"
  ],
  [
    [
      126521,
      126521
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      126522,
      126522
    ],
    "disallowed"
  ],
  [
    [
      126523,
      126523
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      126524,
      126529
    ],
    "disallowed"
  ],
  [
    [
      126530,
      126530
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      126531,
      126534
    ],
    "disallowed"
  ],
  [
    [
      126535,
      126535
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      126536,
      126536
    ],
    "disallowed"
  ],
  [
    [
      126537,
      126537
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      126538,
      126538
    ],
    "disallowed"
  ],
  [
    [
      126539,
      126539
    ],
    "mapped",
    [
      1604
    ]
  ],
  [
    [
      126540,
      126540
    ],
    "disallowed"
  ],
  [
    [
      126541,
      126541
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      126542,
      126542
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      126543,
      126543
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      126544,
      126544
    ],
    "disallowed"
  ],
  [
    [
      126545,
      126545
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      126546,
      126546
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      126547,
      126547
    ],
    "disallowed"
  ],
  [
    [
      126548,
      126548
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      126549,
      126550
    ],
    "disallowed"
  ],
  [
    [
      126551,
      126551
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      126552,
      126552
    ],
    "disallowed"
  ],
  [
    [
      126553,
      126553
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      126554,
      126554
    ],
    "disallowed"
  ],
  [
    [
      126555,
      126555
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      126556,
      126556
    ],
    "disallowed"
  ],
  [
    [
      126557,
      126557
    ],
    "mapped",
    [
      1722
    ]
  ],
  [
    [
      126558,
      126558
    ],
    "disallowed"
  ],
  [
    [
      126559,
      126559
    ],
    "mapped",
    [
      1647
    ]
  ],
  [
    [
      126560,
      126560
    ],
    "disallowed"
  ],
  [
    [
      126561,
      126561
    ],
    "mapped",
    [
      1576
    ]
  ],
  [
    [
      126562,
      126562
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      126563,
      126563
    ],
    "disallowed"
  ],
  [
    [
      126564,
      126564
    ],
    "mapped",
    [
      1607
    ]
  ],
  [
    [
      126565,
      126566
    ],
    "disallowed"
  ],
  [
    [
      126567,
      126567
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      126568,
      126568
    ],
    "mapped",
    [
      1591
    ]
  ],
  [
    [
      126569,
      126569
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      126570,
      126570
    ],
    "mapped",
    [
      1603
    ]
  ],
  [
    [
      126571,
      126571
    ],
    "disallowed"
  ],
  [
    [
      126572,
      126572
    ],
    "mapped",
    [
      1605
    ]
  ],
  [
    [
      126573,
      126573
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      126574,
      126574
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      126575,
      126575
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      126576,
      126576
    ],
    "mapped",
    [
      1601
    ]
  ],
  [
    [
      126577,
      126577
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      126578,
      126578
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      126579,
      126579
    ],
    "disallowed"
  ],
  [
    [
      126580,
      126580
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      126581,
      126581
    ],
    "mapped",
    [
      1578
    ]
  ],
  [
    [
      126582,
      126582
    ],
    "mapped",
    [
      1579
    ]
  ],
  [
    [
      126583,
      126583
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      126584,
      126584
    ],
    "disallowed"
  ],
  [
    [
      126585,
      126585
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      126586,
      126586
    ],
    "mapped",
    [
      1592
    ]
  ],
  [
    [
      126587,
      126587
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      126588,
      126588
    ],
    "mapped",
    [
      1646
    ]
  ],
  [
    [
      126589,
      126589
    ],
    "disallowed"
  ],
  [
    [
      126590,
      126590
    ],
    "mapped",
    [
      1697
    ]
  ],
  [
    [
      126591,
      126591
    ],
    "disallowed"
  ],
  [
    [
      126592,
      126592
    ],
    "mapped",
    [
      1575
    ]
  ],
  [
    [
      126593,
      126593
    ],
    "mapped",
    [
      1576
    ]
  ],
  [
    [
      126594,
      126594
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      126595,
      126595
    ],
    "mapped",
    [
      1583
    ]
  ],
  [
    [
      126596,
      126596
    ],
    "mapped",
    [
      1607
    ]
  ],
  [
    [
      126597,
      126597
    ],
    "mapped",
    [
      1608
    ]
  ],
  [
    [
      126598,
      126598
    ],
    "mapped",
    [
      1586
    ]
  ],
  [
    [
      126599,
      126599
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      126600,
      126600
    ],
    "mapped",
    [
      1591
    ]
  ],
  [
    [
      126601,
      126601
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      126602,
      126602
    ],
    "disallowed"
  ],
  [
    [
      126603,
      126603
    ],
    "mapped",
    [
      1604
    ]
  ],
  [
    [
      126604,
      126604
    ],
    "mapped",
    [
      1605
    ]
  ],
  [
    [
      126605,
      126605
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      126606,
      126606
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      126607,
      126607
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      126608,
      126608
    ],
    "mapped",
    [
      1601
    ]
  ],
  [
    [
      126609,
      126609
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      126610,
      126610
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      126611,
      126611
    ],
    "mapped",
    [
      1585
    ]
  ],
  [
    [
      126612,
      126612
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      126613,
      126613
    ],
    "mapped",
    [
      1578
    ]
  ],
  [
    [
      126614,
      126614
    ],
    "mapped",
    [
      1579
    ]
  ],
  [
    [
      126615,
      126615
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      126616,
      126616
    ],
    "mapped",
    [
      1584
    ]
  ],
  [
    [
      126617,
      126617
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      126618,
      126618
    ],
    "mapped",
    [
      1592
    ]
  ],
  [
    [
      126619,
      126619
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      126620,
      126624
    ],
    "disallowed"
  ],
  [
    [
      126625,
      126625
    ],
    "mapped",
    [
      1576
    ]
  ],
  [
    [
      126626,
      126626
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      126627,
      126627
    ],
    "mapped",
    [
      1583
    ]
  ],
  [
    [
      126628,
      126628
    ],
    "disallowed"
  ],
  [
    [
      126629,
      126629
    ],
    "mapped",
    [
      1608
    ]
  ],
  [
    [
      126630,
      126630
    ],
    "mapped",
    [
      1586
    ]
  ],
  [
    [
      126631,
      126631
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      126632,
      126632
    ],
    "mapped",
    [
      1591
    ]
  ],
  [
    [
      126633,
      126633
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      126634,
      126634
    ],
    "disallowed"
  ],
  [
    [
      126635,
      126635
    ],
    "mapped",
    [
      1604
    ]
  ],
  [
    [
      126636,
      126636
    ],
    "mapped",
    [
      1605
    ]
  ],
  [
    [
      126637,
      126637
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      126638,
      126638
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      126639,
      126639
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      126640,
      126640
    ],
    "mapped",
    [
      1601
    ]
  ],
  [
    [
      126641,
      126641
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      126642,
      126642
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      126643,
      126643
    ],
    "mapped",
    [
      1585
    ]
  ],
  [
    [
      126644,
      126644
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      126645,
      126645
    ],
    "mapped",
    [
      1578
    ]
  ],
  [
    [
      126646,
      126646
    ],
    "mapped",
    [
      1579
    ]
  ],
  [
    [
      126647,
      126647
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      126648,
      126648
    ],
    "mapped",
    [
      1584
    ]
  ],
  [
    [
      126649,
      126649
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      126650,
      126650
    ],
    "mapped",
    [
      1592
    ]
  ],
  [
    [
      126651,
      126651
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      126652,
      126703
    ],
    "disallowed"
  ],
  [
    [
      126704,
      126705
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      126706,
      126975
    ],
    "disallowed"
  ],
  [
    [
      126976,
      127019
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127020,
      127023
    ],
    "disallowed"
  ],
  [
    [
      127024,
      127123
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127124,
      127135
    ],
    "disallowed"
  ],
  [
    [
      127136,
      127150
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127151,
      127152
    ],
    "disallowed"
  ],
  [
    [
      127153,
      127166
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127167,
      127167
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127168,
      127168
    ],
    "disallowed"
  ],
  [
    [
      127169,
      127183
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127184,
      127184
    ],
    "disallowed"
  ],
  [
    [
      127185,
      127199
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127200,
      127221
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127222,
      127231
    ],
    "disallowed"
  ],
  [
    [
      127232,
      127232
    ],
    "disallowed"
  ],
  [
    [
      127233,
      127233
    ],
    "disallowed_STD3_mapped",
    [
      48,
      44
    ]
  ],
  [
    [
      127234,
      127234
    ],
    "disallowed_STD3_mapped",
    [
      49,
      44
    ]
  ],
  [
    [
      127235,
      127235
    ],
    "disallowed_STD3_mapped",
    [
      50,
      44
    ]
  ],
  [
    [
      127236,
      127236
    ],
    "disallowed_STD3_mapped",
    [
      51,
      44
    ]
  ],
  [
    [
      127237,
      127237
    ],
    "disallowed_STD3_mapped",
    [
      52,
      44
    ]
  ],
  [
    [
      127238,
      127238
    ],
    "disallowed_STD3_mapped",
    [
      53,
      44
    ]
  ],
  [
    [
      127239,
      127239
    ],
    "disallowed_STD3_mapped",
    [
      54,
      44
    ]
  ],
  [
    [
      127240,
      127240
    ],
    "disallowed_STD3_mapped",
    [
      55,
      44
    ]
  ],
  [
    [
      127241,
      127241
    ],
    "disallowed_STD3_mapped",
    [
      56,
      44
    ]
  ],
  [
    [
      127242,
      127242
    ],
    "disallowed_STD3_mapped",
    [
      57,
      44
    ]
  ],
  [
    [
      127243,
      127244
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127245,
      127247
    ],
    "disallowed"
  ],
  [
    [
      127248,
      127248
    ],
    "disallowed_STD3_mapped",
    [
      40,
      97,
      41
    ]
  ],
  [
    [
      127249,
      127249
    ],
    "disallowed_STD3_mapped",
    [
      40,
      98,
      41
    ]
  ],
  [
    [
      127250,
      127250
    ],
    "disallowed_STD3_mapped",
    [
      40,
      99,
      41
    ]
  ],
  [
    [
      127251,
      127251
    ],
    "disallowed_STD3_mapped",
    [
      40,
      100,
      41
    ]
  ],
  [
    [
      127252,
      127252
    ],
    "disallowed_STD3_mapped",
    [
      40,
      101,
      41
    ]
  ],
  [
    [
      127253,
      127253
    ],
    "disallowed_STD3_mapped",
    [
      40,
      102,
      41
    ]
  ],
  [
    [
      127254,
      127254
    ],
    "disallowed_STD3_mapped",
    [
      40,
      103,
      41
    ]
  ],
  [
    [
      127255,
      127255
    ],
    "disallowed_STD3_mapped",
    [
      40,
      104,
      41
    ]
  ],
  [
    [
      127256,
      127256
    ],
    "disallowed_STD3_mapped",
    [
      40,
      105,
      41
    ]
  ],
  [
    [
      127257,
      127257
    ],
    "disallowed_STD3_mapped",
    [
      40,
      106,
      41
    ]
  ],
  [
    [
      127258,
      127258
    ],
    "disallowed_STD3_mapped",
    [
      40,
      107,
      41
    ]
  ],
  [
    [
      127259,
      127259
    ],
    "disallowed_STD3_mapped",
    [
      40,
      108,
      41
    ]
  ],
  [
    [
      127260,
      127260
    ],
    "disallowed_STD3_mapped",
    [
      40,
      109,
      41
    ]
  ],
  [
    [
      127261,
      127261
    ],
    "disallowed_STD3_mapped",
    [
      40,
      110,
      41
    ]
  ],
  [
    [
      127262,
      127262
    ],
    "disallowed_STD3_mapped",
    [
      40,
      111,
      41
    ]
  ],
  [
    [
      127263,
      127263
    ],
    "disallowed_STD3_mapped",
    [
      40,
      112,
      41
    ]
  ],
  [
    [
      127264,
      127264
    ],
    "disallowed_STD3_mapped",
    [
      40,
      113,
      41
    ]
  ],
  [
    [
      127265,
      127265
    ],
    "disallowed_STD3_mapped",
    [
      40,
      114,
      41
    ]
  ],
  [
    [
      127266,
      127266
    ],
    "disallowed_STD3_mapped",
    [
      40,
      115,
      41
    ]
  ],
  [
    [
      127267,
      127267
    ],
    "disallowed_STD3_mapped",
    [
      40,
      116,
      41
    ]
  ],
  [
    [
      127268,
      127268
    ],
    "disallowed_STD3_mapped",
    [
      40,
      117,
      41
    ]
  ],
  [
    [
      127269,
      127269
    ],
    "disallowed_STD3_mapped",
    [
      40,
      118,
      41
    ]
  ],
  [
    [
      127270,
      127270
    ],
    "disallowed_STD3_mapped",
    [
      40,
      119,
      41
    ]
  ],
  [
    [
      127271,
      127271
    ],
    "disallowed_STD3_mapped",
    [
      40,
      120,
      41
    ]
  ],
  [
    [
      127272,
      127272
    ],
    "disallowed_STD3_mapped",
    [
      40,
      121,
      41
    ]
  ],
  [
    [
      127273,
      127273
    ],
    "disallowed_STD3_mapped",
    [
      40,
      122,
      41
    ]
  ],
  [
    [
      127274,
      127274
    ],
    "mapped",
    [
      12308,
      115,
      12309
    ]
  ],
  [
    [
      127275,
      127275
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      127276,
      127276
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      127277,
      127277
    ],
    "mapped",
    [
      99,
      100
    ]
  ],
  [
    [
      127278,
      127278
    ],
    "mapped",
    [
      119,
      122
    ]
  ],
  [
    [
      127279,
      127279
    ],
    "disallowed"
  ],
  [
    [
      127280,
      127280
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      127281,
      127281
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      127282,
      127282
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      127283,
      127283
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      127284,
      127284
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      127285,
      127285
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      127286,
      127286
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      127287,
      127287
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      127288,
      127288
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      127289,
      127289
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      127290,
      127290
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      127291,
      127291
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      127292,
      127292
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      127293,
      127293
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      127294,
      127294
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      127295,
      127295
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      127296,
      127296
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      127297,
      127297
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      127298,
      127298
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      127299,
      127299
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      127300,
      127300
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      127301,
      127301
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      127302,
      127302
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      127303,
      127303
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      127304,
      127304
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      127305,
      127305
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      127306,
      127306
    ],
    "mapped",
    [
      104,
      118
    ]
  ],
  [
    [
      127307,
      127307
    ],
    "mapped",
    [
      109,
      118
    ]
  ],
  [
    [
      127308,
      127308
    ],
    "mapped",
    [
      115,
      100
    ]
  ],
  [
    [
      127309,
      127309
    ],
    "mapped",
    [
      115,
      115
    ]
  ],
  [
    [
      127310,
      127310
    ],
    "mapped",
    [
      112,
      112,
      118
    ]
  ],
  [
    [
      127311,
      127311
    ],
    "mapped",
    [
      119,
      99
    ]
  ],
  [
    [
      127312,
      127318
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127319,
      127319
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127320,
      127326
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127327,
      127327
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127328,
      127337
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127338,
      127338
    ],
    "mapped",
    [
      109,
      99
    ]
  ],
  [
    [
      127339,
      127339
    ],
    "mapped",
    [
      109,
      100
    ]
  ],
  [
    [
      127340,
      127343
    ],
    "disallowed"
  ],
  [
    [
      127344,
      127352
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127353,
      127353
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127354,
      127354
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127355,
      127356
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127357,
      127358
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127359,
      127359
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127360,
      127369
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127370,
      127373
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127374,
      127375
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127376,
      127376
    ],
    "mapped",
    [
      100,
      106
    ]
  ],
  [
    [
      127377,
      127386
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127387,
      127461
    ],
    "disallowed"
  ],
  [
    [
      127462,
      127487
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127488,
      127488
    ],
    "mapped",
    [
      12411,
      12363
    ]
  ],
  [
    [
      127489,
      127489
    ],
    "mapped",
    [
      12467,
      12467
    ]
  ],
  [
    [
      127490,
      127490
    ],
    "mapped",
    [
      12469
    ]
  ],
  [
    [
      127491,
      127503
    ],
    "disallowed"
  ],
  [
    [
      127504,
      127504
    ],
    "mapped",
    [
      25163
    ]
  ],
  [
    [
      127505,
      127505
    ],
    "mapped",
    [
      23383
    ]
  ],
  [
    [
      127506,
      127506
    ],
    "mapped",
    [
      21452
    ]
  ],
  [
    [
      127507,
      127507
    ],
    "mapped",
    [
      12487
    ]
  ],
  [
    [
      127508,
      127508
    ],
    "mapped",
    [
      20108
    ]
  ],
  [
    [
      127509,
      127509
    ],
    "mapped",
    [
      22810
    ]
  ],
  [
    [
      127510,
      127510
    ],
    "mapped",
    [
      35299
    ]
  ],
  [
    [
      127511,
      127511
    ],
    "mapped",
    [
      22825
    ]
  ],
  [
    [
      127512,
      127512
    ],
    "mapped",
    [
      20132
    ]
  ],
  [
    [
      127513,
      127513
    ],
    "mapped",
    [
      26144
    ]
  ],
  [
    [
      127514,
      127514
    ],
    "mapped",
    [
      28961
    ]
  ],
  [
    [
      127515,
      127515
    ],
    "mapped",
    [
      26009
    ]
  ],
  [
    [
      127516,
      127516
    ],
    "mapped",
    [
      21069
    ]
  ],
  [
    [
      127517,
      127517
    ],
    "mapped",
    [
      24460
    ]
  ],
  [
    [
      127518,
      127518
    ],
    "mapped",
    [
      20877
    ]
  ],
  [
    [
      127519,
      127519
    ],
    "mapped",
    [
      26032
    ]
  ],
  [
    [
      127520,
      127520
    ],
    "mapped",
    [
      21021
    ]
  ],
  [
    [
      127521,
      127521
    ],
    "mapped",
    [
      32066
    ]
  ],
  [
    [
      127522,
      127522
    ],
    "mapped",
    [
      29983
    ]
  ],
  [
    [
      127523,
      127523
    ],
    "mapped",
    [
      36009
    ]
  ],
  [
    [
      127524,
      127524
    ],
    "mapped",
    [
      22768
    ]
  ],
  [
    [
      127525,
      127525
    ],
    "mapped",
    [
      21561
    ]
  ],
  [
    [
      127526,
      127526
    ],
    "mapped",
    [
      28436
    ]
  ],
  [
    [
      127527,
      127527
    ],
    "mapped",
    [
      25237
    ]
  ],
  [
    [
      127528,
      127528
    ],
    "mapped",
    [
      25429
    ]
  ],
  [
    [
      127529,
      127529
    ],
    "mapped",
    [
      19968
    ]
  ],
  [
    [
      127530,
      127530
    ],
    "mapped",
    [
      19977
    ]
  ],
  [
    [
      127531,
      127531
    ],
    "mapped",
    [
      36938
    ]
  ],
  [
    [
      127532,
      127532
    ],
    "mapped",
    [
      24038
    ]
  ],
  [
    [
      127533,
      127533
    ],
    "mapped",
    [
      20013
    ]
  ],
  [
    [
      127534,
      127534
    ],
    "mapped",
    [
      21491
    ]
  ],
  [
    [
      127535,
      127535
    ],
    "mapped",
    [
      25351
    ]
  ],
  [
    [
      127536,
      127536
    ],
    "mapped",
    [
      36208
    ]
  ],
  [
    [
      127537,
      127537
    ],
    "mapped",
    [
      25171
    ]
  ],
  [
    [
      127538,
      127538
    ],
    "mapped",
    [
      31105
    ]
  ],
  [
    [
      127539,
      127539
    ],
    "mapped",
    [
      31354
    ]
  ],
  [
    [
      127540,
      127540
    ],
    "mapped",
    [
      21512
    ]
  ],
  [
    [
      127541,
      127541
    ],
    "mapped",
    [
      28288
    ]
  ],
  [
    [
      127542,
      127542
    ],
    "mapped",
    [
      26377
    ]
  ],
  [
    [
      127543,
      127543
    ],
    "mapped",
    [
      26376
    ]
  ],
  [
    [
      127544,
      127544
    ],
    "mapped",
    [
      30003
    ]
  ],
  [
    [
      127545,
      127545
    ],
    "mapped",
    [
      21106
    ]
  ],
  [
    [
      127546,
      127546
    ],
    "mapped",
    [
      21942
    ]
  ],
  [
    [
      127547,
      127551
    ],
    "disallowed"
  ],
  [
    [
      127552,
      127552
    ],
    "mapped",
    [
      12308,
      26412,
      12309
    ]
  ],
  [
    [
      127553,
      127553
    ],
    "mapped",
    [
      12308,
      19977,
      12309
    ]
  ],
  [
    [
      127554,
      127554
    ],
    "mapped",
    [
      12308,
      20108,
      12309
    ]
  ],
  [
    [
      127555,
      127555
    ],
    "mapped",
    [
      12308,
      23433,
      12309
    ]
  ],
  [
    [
      127556,
      127556
    ],
    "mapped",
    [
      12308,
      28857,
      12309
    ]
  ],
  [
    [
      127557,
      127557
    ],
    "mapped",
    [
      12308,
      25171,
      12309
    ]
  ],
  [
    [
      127558,
      127558
    ],
    "mapped",
    [
      12308,
      30423,
      12309
    ]
  ],
  [
    [
      127559,
      127559
    ],
    "mapped",
    [
      12308,
      21213,
      12309
    ]
  ],
  [
    [
      127560,
      127560
    ],
    "mapped",
    [
      12308,
      25943,
      12309
    ]
  ],
  [
    [
      127561,
      127567
    ],
    "disallowed"
  ],
  [
    [
      127568,
      127568
    ],
    "mapped",
    [
      24471
    ]
  ],
  [
    [
      127569,
      127569
    ],
    "mapped",
    [
      21487
    ]
  ],
  [
    [
      127570,
      127743
    ],
    "disallowed"
  ],
  [
    [
      127744,
      127776
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127777,
      127788
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127789,
      127791
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127792,
      127797
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127798,
      127798
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127799,
      127868
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127869,
      127869
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127870,
      127871
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127872,
      127891
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127892,
      127903
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127904,
      127940
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127941,
      127941
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127942,
      127946
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127947,
      127950
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127951,
      127955
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127956,
      127967
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127968,
      127984
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127985,
      127991
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127992,
      127999
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128e3,
      128062
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128063,
      128063
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128064,
      128064
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128065,
      128065
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128066,
      128247
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128248,
      128248
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128249,
      128252
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128253,
      128254
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128255,
      128255
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128256,
      128317
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128318,
      128319
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128320,
      128323
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128324,
      128330
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128331,
      128335
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128336,
      128359
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128360,
      128377
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128378,
      128378
    ],
    "disallowed"
  ],
  [
    [
      128379,
      128419
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128420,
      128420
    ],
    "disallowed"
  ],
  [
    [
      128421,
      128506
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128507,
      128511
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128512,
      128512
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128513,
      128528
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128529,
      128529
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128530,
      128532
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128533,
      128533
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128534,
      128534
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128535,
      128535
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128536,
      128536
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128537,
      128537
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128538,
      128538
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128539,
      128539
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128540,
      128542
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128543,
      128543
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128544,
      128549
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128550,
      128551
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128552,
      128555
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128556,
      128556
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128557,
      128557
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128558,
      128559
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128560,
      128563
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128564,
      128564
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128565,
      128576
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128577,
      128578
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128579,
      128580
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128581,
      128591
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128592,
      128639
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128640,
      128709
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128710,
      128719
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128720,
      128720
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128721,
      128735
    ],
    "disallowed"
  ],
  [
    [
      128736,
      128748
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128749,
      128751
    ],
    "disallowed"
  ],
  [
    [
      128752,
      128755
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128756,
      128767
    ],
    "disallowed"
  ],
  [
    [
      128768,
      128883
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128884,
      128895
    ],
    "disallowed"
  ],
  [
    [
      128896,
      128980
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128981,
      129023
    ],
    "disallowed"
  ],
  [
    [
      129024,
      129035
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129036,
      129039
    ],
    "disallowed"
  ],
  [
    [
      129040,
      129095
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129096,
      129103
    ],
    "disallowed"
  ],
  [
    [
      129104,
      129113
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129114,
      129119
    ],
    "disallowed"
  ],
  [
    [
      129120,
      129159
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129160,
      129167
    ],
    "disallowed"
  ],
  [
    [
      129168,
      129197
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129198,
      129295
    ],
    "disallowed"
  ],
  [
    [
      129296,
      129304
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129305,
      129407
    ],
    "disallowed"
  ],
  [
    [
      129408,
      129412
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129413,
      129471
    ],
    "disallowed"
  ],
  [
    [
      129472,
      129472
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129473,
      131069
    ],
    "disallowed"
  ],
  [
    [
      131070,
      131071
    ],
    "disallowed"
  ],
  [
    [
      131072,
      173782
    ],
    "valid"
  ],
  [
    [
      173783,
      173823
    ],
    "disallowed"
  ],
  [
    [
      173824,
      177972
    ],
    "valid"
  ],
  [
    [
      177973,
      177983
    ],
    "disallowed"
  ],
  [
    [
      177984,
      178205
    ],
    "valid"
  ],
  [
    [
      178206,
      178207
    ],
    "disallowed"
  ],
  [
    [
      178208,
      183969
    ],
    "valid"
  ],
  [
    [
      183970,
      194559
    ],
    "disallowed"
  ],
  [
    [
      194560,
      194560
    ],
    "mapped",
    [
      20029
    ]
  ],
  [
    [
      194561,
      194561
    ],
    "mapped",
    [
      20024
    ]
  ],
  [
    [
      194562,
      194562
    ],
    "mapped",
    [
      20033
    ]
  ],
  [
    [
      194563,
      194563
    ],
    "mapped",
    [
      131362
    ]
  ],
  [
    [
      194564,
      194564
    ],
    "mapped",
    [
      20320
    ]
  ],
  [
    [
      194565,
      194565
    ],
    "mapped",
    [
      20398
    ]
  ],
  [
    [
      194566,
      194566
    ],
    "mapped",
    [
      20411
    ]
  ],
  [
    [
      194567,
      194567
    ],
    "mapped",
    [
      20482
    ]
  ],
  [
    [
      194568,
      194568
    ],
    "mapped",
    [
      20602
    ]
  ],
  [
    [
      194569,
      194569
    ],
    "mapped",
    [
      20633
    ]
  ],
  [
    [
      194570,
      194570
    ],
    "mapped",
    [
      20711
    ]
  ],
  [
    [
      194571,
      194571
    ],
    "mapped",
    [
      20687
    ]
  ],
  [
    [
      194572,
      194572
    ],
    "mapped",
    [
      13470
    ]
  ],
  [
    [
      194573,
      194573
    ],
    "mapped",
    [
      132666
    ]
  ],
  [
    [
      194574,
      194574
    ],
    "mapped",
    [
      20813
    ]
  ],
  [
    [
      194575,
      194575
    ],
    "mapped",
    [
      20820
    ]
  ],
  [
    [
      194576,
      194576
    ],
    "mapped",
    [
      20836
    ]
  ],
  [
    [
      194577,
      194577
    ],
    "mapped",
    [
      20855
    ]
  ],
  [
    [
      194578,
      194578
    ],
    "mapped",
    [
      132380
    ]
  ],
  [
    [
      194579,
      194579
    ],
    "mapped",
    [
      13497
    ]
  ],
  [
    [
      194580,
      194580
    ],
    "mapped",
    [
      20839
    ]
  ],
  [
    [
      194581,
      194581
    ],
    "mapped",
    [
      20877
    ]
  ],
  [
    [
      194582,
      194582
    ],
    "mapped",
    [
      132427
    ]
  ],
  [
    [
      194583,
      194583
    ],
    "mapped",
    [
      20887
    ]
  ],
  [
    [
      194584,
      194584
    ],
    "mapped",
    [
      20900
    ]
  ],
  [
    [
      194585,
      194585
    ],
    "mapped",
    [
      20172
    ]
  ],
  [
    [
      194586,
      194586
    ],
    "mapped",
    [
      20908
    ]
  ],
  [
    [
      194587,
      194587
    ],
    "mapped",
    [
      20917
    ]
  ],
  [
    [
      194588,
      194588
    ],
    "mapped",
    [
      168415
    ]
  ],
  [
    [
      194589,
      194589
    ],
    "mapped",
    [
      20981
    ]
  ],
  [
    [
      194590,
      194590
    ],
    "mapped",
    [
      20995
    ]
  ],
  [
    [
      194591,
      194591
    ],
    "mapped",
    [
      13535
    ]
  ],
  [
    [
      194592,
      194592
    ],
    "mapped",
    [
      21051
    ]
  ],
  [
    [
      194593,
      194593
    ],
    "mapped",
    [
      21062
    ]
  ],
  [
    [
      194594,
      194594
    ],
    "mapped",
    [
      21106
    ]
  ],
  [
    [
      194595,
      194595
    ],
    "mapped",
    [
      21111
    ]
  ],
  [
    [
      194596,
      194596
    ],
    "mapped",
    [
      13589
    ]
  ],
  [
    [
      194597,
      194597
    ],
    "mapped",
    [
      21191
    ]
  ],
  [
    [
      194598,
      194598
    ],
    "mapped",
    [
      21193
    ]
  ],
  [
    [
      194599,
      194599
    ],
    "mapped",
    [
      21220
    ]
  ],
  [
    [
      194600,
      194600
    ],
    "mapped",
    [
      21242
    ]
  ],
  [
    [
      194601,
      194601
    ],
    "mapped",
    [
      21253
    ]
  ],
  [
    [
      194602,
      194602
    ],
    "mapped",
    [
      21254
    ]
  ],
  [
    [
      194603,
      194603
    ],
    "mapped",
    [
      21271
    ]
  ],
  [
    [
      194604,
      194604
    ],
    "mapped",
    [
      21321
    ]
  ],
  [
    [
      194605,
      194605
    ],
    "mapped",
    [
      21329
    ]
  ],
  [
    [
      194606,
      194606
    ],
    "mapped",
    [
      21338
    ]
  ],
  [
    [
      194607,
      194607
    ],
    "mapped",
    [
      21363
    ]
  ],
  [
    [
      194608,
      194608
    ],
    "mapped",
    [
      21373
    ]
  ],
  [
    [
      194609,
      194611
    ],
    "mapped",
    [
      21375
    ]
  ],
  [
    [
      194612,
      194612
    ],
    "mapped",
    [
      133676
    ]
  ],
  [
    [
      194613,
      194613
    ],
    "mapped",
    [
      28784
    ]
  ],
  [
    [
      194614,
      194614
    ],
    "mapped",
    [
      21450
    ]
  ],
  [
    [
      194615,
      194615
    ],
    "mapped",
    [
      21471
    ]
  ],
  [
    [
      194616,
      194616
    ],
    "mapped",
    [
      133987
    ]
  ],
  [
    [
      194617,
      194617
    ],
    "mapped",
    [
      21483
    ]
  ],
  [
    [
      194618,
      194618
    ],
    "mapped",
    [
      21489
    ]
  ],
  [
    [
      194619,
      194619
    ],
    "mapped",
    [
      21510
    ]
  ],
  [
    [
      194620,
      194620
    ],
    "mapped",
    [
      21662
    ]
  ],
  [
    [
      194621,
      194621
    ],
    "mapped",
    [
      21560
    ]
  ],
  [
    [
      194622,
      194622
    ],
    "mapped",
    [
      21576
    ]
  ],
  [
    [
      194623,
      194623
    ],
    "mapped",
    [
      21608
    ]
  ],
  [
    [
      194624,
      194624
    ],
    "mapped",
    [
      21666
    ]
  ],
  [
    [
      194625,
      194625
    ],
    "mapped",
    [
      21750
    ]
  ],
  [
    [
      194626,
      194626
    ],
    "mapped",
    [
      21776
    ]
  ],
  [
    [
      194627,
      194627
    ],
    "mapped",
    [
      21843
    ]
  ],
  [
    [
      194628,
      194628
    ],
    "mapped",
    [
      21859
    ]
  ],
  [
    [
      194629,
      194630
    ],
    "mapped",
    [
      21892
    ]
  ],
  [
    [
      194631,
      194631
    ],
    "mapped",
    [
      21913
    ]
  ],
  [
    [
      194632,
      194632
    ],
    "mapped",
    [
      21931
    ]
  ],
  [
    [
      194633,
      194633
    ],
    "mapped",
    [
      21939
    ]
  ],
  [
    [
      194634,
      194634
    ],
    "mapped",
    [
      21954
    ]
  ],
  [
    [
      194635,
      194635
    ],
    "mapped",
    [
      22294
    ]
  ],
  [
    [
      194636,
      194636
    ],
    "mapped",
    [
      22022
    ]
  ],
  [
    [
      194637,
      194637
    ],
    "mapped",
    [
      22295
    ]
  ],
  [
    [
      194638,
      194638
    ],
    "mapped",
    [
      22097
    ]
  ],
  [
    [
      194639,
      194639
    ],
    "mapped",
    [
      22132
    ]
  ],
  [
    [
      194640,
      194640
    ],
    "mapped",
    [
      20999
    ]
  ],
  [
    [
      194641,
      194641
    ],
    "mapped",
    [
      22766
    ]
  ],
  [
    [
      194642,
      194642
    ],
    "mapped",
    [
      22478
    ]
  ],
  [
    [
      194643,
      194643
    ],
    "mapped",
    [
      22516
    ]
  ],
  [
    [
      194644,
      194644
    ],
    "mapped",
    [
      22541
    ]
  ],
  [
    [
      194645,
      194645
    ],
    "mapped",
    [
      22411
    ]
  ],
  [
    [
      194646,
      194646
    ],
    "mapped",
    [
      22578
    ]
  ],
  [
    [
      194647,
      194647
    ],
    "mapped",
    [
      22577
    ]
  ],
  [
    [
      194648,
      194648
    ],
    "mapped",
    [
      22700
    ]
  ],
  [
    [
      194649,
      194649
    ],
    "mapped",
    [
      136420
    ]
  ],
  [
    [
      194650,
      194650
    ],
    "mapped",
    [
      22770
    ]
  ],
  [
    [
      194651,
      194651
    ],
    "mapped",
    [
      22775
    ]
  ],
  [
    [
      194652,
      194652
    ],
    "mapped",
    [
      22790
    ]
  ],
  [
    [
      194653,
      194653
    ],
    "mapped",
    [
      22810
    ]
  ],
  [
    [
      194654,
      194654
    ],
    "mapped",
    [
      22818
    ]
  ],
  [
    [
      194655,
      194655
    ],
    "mapped",
    [
      22882
    ]
  ],
  [
    [
      194656,
      194656
    ],
    "mapped",
    [
      136872
    ]
  ],
  [
    [
      194657,
      194657
    ],
    "mapped",
    [
      136938
    ]
  ],
  [
    [
      194658,
      194658
    ],
    "mapped",
    [
      23020
    ]
  ],
  [
    [
      194659,
      194659
    ],
    "mapped",
    [
      23067
    ]
  ],
  [
    [
      194660,
      194660
    ],
    "mapped",
    [
      23079
    ]
  ],
  [
    [
      194661,
      194661
    ],
    "mapped",
    [
      23e3
    ]
  ],
  [
    [
      194662,
      194662
    ],
    "mapped",
    [
      23142
    ]
  ],
  [
    [
      194663,
      194663
    ],
    "mapped",
    [
      14062
    ]
  ],
  [
    [
      194664,
      194664
    ],
    "disallowed"
  ],
  [
    [
      194665,
      194665
    ],
    "mapped",
    [
      23304
    ]
  ],
  [
    [
      194666,
      194667
    ],
    "mapped",
    [
      23358
    ]
  ],
  [
    [
      194668,
      194668
    ],
    "mapped",
    [
      137672
    ]
  ],
  [
    [
      194669,
      194669
    ],
    "mapped",
    [
      23491
    ]
  ],
  [
    [
      194670,
      194670
    ],
    "mapped",
    [
      23512
    ]
  ],
  [
    [
      194671,
      194671
    ],
    "mapped",
    [
      23527
    ]
  ],
  [
    [
      194672,
      194672
    ],
    "mapped",
    [
      23539
    ]
  ],
  [
    [
      194673,
      194673
    ],
    "mapped",
    [
      138008
    ]
  ],
  [
    [
      194674,
      194674
    ],
    "mapped",
    [
      23551
    ]
  ],
  [
    [
      194675,
      194675
    ],
    "mapped",
    [
      23558
    ]
  ],
  [
    [
      194676,
      194676
    ],
    "disallowed"
  ],
  [
    [
      194677,
      194677
    ],
    "mapped",
    [
      23586
    ]
  ],
  [
    [
      194678,
      194678
    ],
    "mapped",
    [
      14209
    ]
  ],
  [
    [
      194679,
      194679
    ],
    "mapped",
    [
      23648
    ]
  ],
  [
    [
      194680,
      194680
    ],
    "mapped",
    [
      23662
    ]
  ],
  [
    [
      194681,
      194681
    ],
    "mapped",
    [
      23744
    ]
  ],
  [
    [
      194682,
      194682
    ],
    "mapped",
    [
      23693
    ]
  ],
  [
    [
      194683,
      194683
    ],
    "mapped",
    [
      138724
    ]
  ],
  [
    [
      194684,
      194684
    ],
    "mapped",
    [
      23875
    ]
  ],
  [
    [
      194685,
      194685
    ],
    "mapped",
    [
      138726
    ]
  ],
  [
    [
      194686,
      194686
    ],
    "mapped",
    [
      23918
    ]
  ],
  [
    [
      194687,
      194687
    ],
    "mapped",
    [
      23915
    ]
  ],
  [
    [
      194688,
      194688
    ],
    "mapped",
    [
      23932
    ]
  ],
  [
    [
      194689,
      194689
    ],
    "mapped",
    [
      24033
    ]
  ],
  [
    [
      194690,
      194690
    ],
    "mapped",
    [
      24034
    ]
  ],
  [
    [
      194691,
      194691
    ],
    "mapped",
    [
      14383
    ]
  ],
  [
    [
      194692,
      194692
    ],
    "mapped",
    [
      24061
    ]
  ],
  [
    [
      194693,
      194693
    ],
    "mapped",
    [
      24104
    ]
  ],
  [
    [
      194694,
      194694
    ],
    "mapped",
    [
      24125
    ]
  ],
  [
    [
      194695,
      194695
    ],
    "mapped",
    [
      24169
    ]
  ],
  [
    [
      194696,
      194696
    ],
    "mapped",
    [
      14434
    ]
  ],
  [
    [
      194697,
      194697
    ],
    "mapped",
    [
      139651
    ]
  ],
  [
    [
      194698,
      194698
    ],
    "mapped",
    [
      14460
    ]
  ],
  [
    [
      194699,
      194699
    ],
    "mapped",
    [
      24240
    ]
  ],
  [
    [
      194700,
      194700
    ],
    "mapped",
    [
      24243
    ]
  ],
  [
    [
      194701,
      194701
    ],
    "mapped",
    [
      24246
    ]
  ],
  [
    [
      194702,
      194702
    ],
    "mapped",
    [
      24266
    ]
  ],
  [
    [
      194703,
      194703
    ],
    "mapped",
    [
      172946
    ]
  ],
  [
    [
      194704,
      194704
    ],
    "mapped",
    [
      24318
    ]
  ],
  [
    [
      194705,
      194706
    ],
    "mapped",
    [
      140081
    ]
  ],
  [
    [
      194707,
      194707
    ],
    "mapped",
    [
      33281
    ]
  ],
  [
    [
      194708,
      194709
    ],
    "mapped",
    [
      24354
    ]
  ],
  [
    [
      194710,
      194710
    ],
    "mapped",
    [
      14535
    ]
  ],
  [
    [
      194711,
      194711
    ],
    "mapped",
    [
      144056
    ]
  ],
  [
    [
      194712,
      194712
    ],
    "mapped",
    [
      156122
    ]
  ],
  [
    [
      194713,
      194713
    ],
    "mapped",
    [
      24418
    ]
  ],
  [
    [
      194714,
      194714
    ],
    "mapped",
    [
      24427
    ]
  ],
  [
    [
      194715,
      194715
    ],
    "mapped",
    [
      14563
    ]
  ],
  [
    [
      194716,
      194716
    ],
    "mapped",
    [
      24474
    ]
  ],
  [
    [
      194717,
      194717
    ],
    "mapped",
    [
      24525
    ]
  ],
  [
    [
      194718,
      194718
    ],
    "mapped",
    [
      24535
    ]
  ],
  [
    [
      194719,
      194719
    ],
    "mapped",
    [
      24569
    ]
  ],
  [
    [
      194720,
      194720
    ],
    "mapped",
    [
      24705
    ]
  ],
  [
    [
      194721,
      194721
    ],
    "mapped",
    [
      14650
    ]
  ],
  [
    [
      194722,
      194722
    ],
    "mapped",
    [
      14620
    ]
  ],
  [
    [
      194723,
      194723
    ],
    "mapped",
    [
      24724
    ]
  ],
  [
    [
      194724,
      194724
    ],
    "mapped",
    [
      141012
    ]
  ],
  [
    [
      194725,
      194725
    ],
    "mapped",
    [
      24775
    ]
  ],
  [
    [
      194726,
      194726
    ],
    "mapped",
    [
      24904
    ]
  ],
  [
    [
      194727,
      194727
    ],
    "mapped",
    [
      24908
    ]
  ],
  [
    [
      194728,
      194728
    ],
    "mapped",
    [
      24910
    ]
  ],
  [
    [
      194729,
      194729
    ],
    "mapped",
    [
      24908
    ]
  ],
  [
    [
      194730,
      194730
    ],
    "mapped",
    [
      24954
    ]
  ],
  [
    [
      194731,
      194731
    ],
    "mapped",
    [
      24974
    ]
  ],
  [
    [
      194732,
      194732
    ],
    "mapped",
    [
      25010
    ]
  ],
  [
    [
      194733,
      194733
    ],
    "mapped",
    [
      24996
    ]
  ],
  [
    [
      194734,
      194734
    ],
    "mapped",
    [
      25007
    ]
  ],
  [
    [
      194735,
      194735
    ],
    "mapped",
    [
      25054
    ]
  ],
  [
    [
      194736,
      194736
    ],
    "mapped",
    [
      25074
    ]
  ],
  [
    [
      194737,
      194737
    ],
    "mapped",
    [
      25078
    ]
  ],
  [
    [
      194738,
      194738
    ],
    "mapped",
    [
      25104
    ]
  ],
  [
    [
      194739,
      194739
    ],
    "mapped",
    [
      25115
    ]
  ],
  [
    [
      194740,
      194740
    ],
    "mapped",
    [
      25181
    ]
  ],
  [
    [
      194741,
      194741
    ],
    "mapped",
    [
      25265
    ]
  ],
  [
    [
      194742,
      194742
    ],
    "mapped",
    [
      25300
    ]
  ],
  [
    [
      194743,
      194743
    ],
    "mapped",
    [
      25424
    ]
  ],
  [
    [
      194744,
      194744
    ],
    "mapped",
    [
      142092
    ]
  ],
  [
    [
      194745,
      194745
    ],
    "mapped",
    [
      25405
    ]
  ],
  [
    [
      194746,
      194746
    ],
    "mapped",
    [
      25340
    ]
  ],
  [
    [
      194747,
      194747
    ],
    "mapped",
    [
      25448
    ]
  ],
  [
    [
      194748,
      194748
    ],
    "mapped",
    [
      25475
    ]
  ],
  [
    [
      194749,
      194749
    ],
    "mapped",
    [
      25572
    ]
  ],
  [
    [
      194750,
      194750
    ],
    "mapped",
    [
      142321
    ]
  ],
  [
    [
      194751,
      194751
    ],
    "mapped",
    [
      25634
    ]
  ],
  [
    [
      194752,
      194752
    ],
    "mapped",
    [
      25541
    ]
  ],
  [
    [
      194753,
      194753
    ],
    "mapped",
    [
      25513
    ]
  ],
  [
    [
      194754,
      194754
    ],
    "mapped",
    [
      14894
    ]
  ],
  [
    [
      194755,
      194755
    ],
    "mapped",
    [
      25705
    ]
  ],
  [
    [
      194756,
      194756
    ],
    "mapped",
    [
      25726
    ]
  ],
  [
    [
      194757,
      194757
    ],
    "mapped",
    [
      25757
    ]
  ],
  [
    [
      194758,
      194758
    ],
    "mapped",
    [
      25719
    ]
  ],
  [
    [
      194759,
      194759
    ],
    "mapped",
    [
      14956
    ]
  ],
  [
    [
      194760,
      194760
    ],
    "mapped",
    [
      25935
    ]
  ],
  [
    [
      194761,
      194761
    ],
    "mapped",
    [
      25964
    ]
  ],
  [
    [
      194762,
      194762
    ],
    "mapped",
    [
      143370
    ]
  ],
  [
    [
      194763,
      194763
    ],
    "mapped",
    [
      26083
    ]
  ],
  [
    [
      194764,
      194764
    ],
    "mapped",
    [
      26360
    ]
  ],
  [
    [
      194765,
      194765
    ],
    "mapped",
    [
      26185
    ]
  ],
  [
    [
      194766,
      194766
    ],
    "mapped",
    [
      15129
    ]
  ],
  [
    [
      194767,
      194767
    ],
    "mapped",
    [
      26257
    ]
  ],
  [
    [
      194768,
      194768
    ],
    "mapped",
    [
      15112
    ]
  ],
  [
    [
      194769,
      194769
    ],
    "mapped",
    [
      15076
    ]
  ],
  [
    [
      194770,
      194770
    ],
    "mapped",
    [
      20882
    ]
  ],
  [
    [
      194771,
      194771
    ],
    "mapped",
    [
      20885
    ]
  ],
  [
    [
      194772,
      194772
    ],
    "mapped",
    [
      26368
    ]
  ],
  [
    [
      194773,
      194773
    ],
    "mapped",
    [
      26268
    ]
  ],
  [
    [
      194774,
      194774
    ],
    "mapped",
    [
      32941
    ]
  ],
  [
    [
      194775,
      194775
    ],
    "mapped",
    [
      17369
    ]
  ],
  [
    [
      194776,
      194776
    ],
    "mapped",
    [
      26391
    ]
  ],
  [
    [
      194777,
      194777
    ],
    "mapped",
    [
      26395
    ]
  ],
  [
    [
      194778,
      194778
    ],
    "mapped",
    [
      26401
    ]
  ],
  [
    [
      194779,
      194779
    ],
    "mapped",
    [
      26462
    ]
  ],
  [
    [
      194780,
      194780
    ],
    "mapped",
    [
      26451
    ]
  ],
  [
    [
      194781,
      194781
    ],
    "mapped",
    [
      144323
    ]
  ],
  [
    [
      194782,
      194782
    ],
    "mapped",
    [
      15177
    ]
  ],
  [
    [
      194783,
      194783
    ],
    "mapped",
    [
      26618
    ]
  ],
  [
    [
      194784,
      194784
    ],
    "mapped",
    [
      26501
    ]
  ],
  [
    [
      194785,
      194785
    ],
    "mapped",
    [
      26706
    ]
  ],
  [
    [
      194786,
      194786
    ],
    "mapped",
    [
      26757
    ]
  ],
  [
    [
      194787,
      194787
    ],
    "mapped",
    [
      144493
    ]
  ],
  [
    [
      194788,
      194788
    ],
    "mapped",
    [
      26766
    ]
  ],
  [
    [
      194789,
      194789
    ],
    "mapped",
    [
      26655
    ]
  ],
  [
    [
      194790,
      194790
    ],
    "mapped",
    [
      26900
    ]
  ],
  [
    [
      194791,
      194791
    ],
    "mapped",
    [
      15261
    ]
  ],
  [
    [
      194792,
      194792
    ],
    "mapped",
    [
      26946
    ]
  ],
  [
    [
      194793,
      194793
    ],
    "mapped",
    [
      27043
    ]
  ],
  [
    [
      194794,
      194794
    ],
    "mapped",
    [
      27114
    ]
  ],
  [
    [
      194795,
      194795
    ],
    "mapped",
    [
      27304
    ]
  ],
  [
    [
      194796,
      194796
    ],
    "mapped",
    [
      145059
    ]
  ],
  [
    [
      194797,
      194797
    ],
    "mapped",
    [
      27355
    ]
  ],
  [
    [
      194798,
      194798
    ],
    "mapped",
    [
      15384
    ]
  ],
  [
    [
      194799,
      194799
    ],
    "mapped",
    [
      27425
    ]
  ],
  [
    [
      194800,
      194800
    ],
    "mapped",
    [
      145575
    ]
  ],
  [
    [
      194801,
      194801
    ],
    "mapped",
    [
      27476
    ]
  ],
  [
    [
      194802,
      194802
    ],
    "mapped",
    [
      15438
    ]
  ],
  [
    [
      194803,
      194803
    ],
    "mapped",
    [
      27506
    ]
  ],
  [
    [
      194804,
      194804
    ],
    "mapped",
    [
      27551
    ]
  ],
  [
    [
      194805,
      194805
    ],
    "mapped",
    [
      27578
    ]
  ],
  [
    [
      194806,
      194806
    ],
    "mapped",
    [
      27579
    ]
  ],
  [
    [
      194807,
      194807
    ],
    "mapped",
    [
      146061
    ]
  ],
  [
    [
      194808,
      194808
    ],
    "mapped",
    [
      138507
    ]
  ],
  [
    [
      194809,
      194809
    ],
    "mapped",
    [
      146170
    ]
  ],
  [
    [
      194810,
      194810
    ],
    "mapped",
    [
      27726
    ]
  ],
  [
    [
      194811,
      194811
    ],
    "mapped",
    [
      146620
    ]
  ],
  [
    [
      194812,
      194812
    ],
    "mapped",
    [
      27839
    ]
  ],
  [
    [
      194813,
      194813
    ],
    "mapped",
    [
      27853
    ]
  ],
  [
    [
      194814,
      194814
    ],
    "mapped",
    [
      27751
    ]
  ],
  [
    [
      194815,
      194815
    ],
    "mapped",
    [
      27926
    ]
  ],
  [
    [
      194816,
      194816
    ],
    "mapped",
    [
      27966
    ]
  ],
  [
    [
      194817,
      194817
    ],
    "mapped",
    [
      28023
    ]
  ],
  [
    [
      194818,
      194818
    ],
    "mapped",
    [
      27969
    ]
  ],
  [
    [
      194819,
      194819
    ],
    "mapped",
    [
      28009
    ]
  ],
  [
    [
      194820,
      194820
    ],
    "mapped",
    [
      28024
    ]
  ],
  [
    [
      194821,
      194821
    ],
    "mapped",
    [
      28037
    ]
  ],
  [
    [
      194822,
      194822
    ],
    "mapped",
    [
      146718
    ]
  ],
  [
    [
      194823,
      194823
    ],
    "mapped",
    [
      27956
    ]
  ],
  [
    [
      194824,
      194824
    ],
    "mapped",
    [
      28207
    ]
  ],
  [
    [
      194825,
      194825
    ],
    "mapped",
    [
      28270
    ]
  ],
  [
    [
      194826,
      194826
    ],
    "mapped",
    [
      15667
    ]
  ],
  [
    [
      194827,
      194827
    ],
    "mapped",
    [
      28363
    ]
  ],
  [
    [
      194828,
      194828
    ],
    "mapped",
    [
      28359
    ]
  ],
  [
    [
      194829,
      194829
    ],
    "mapped",
    [
      147153
    ]
  ],
  [
    [
      194830,
      194830
    ],
    "mapped",
    [
      28153
    ]
  ],
  [
    [
      194831,
      194831
    ],
    "mapped",
    [
      28526
    ]
  ],
  [
    [
      194832,
      194832
    ],
    "mapped",
    [
      147294
    ]
  ],
  [
    [
      194833,
      194833
    ],
    "mapped",
    [
      147342
    ]
  ],
  [
    [
      194834,
      194834
    ],
    "mapped",
    [
      28614
    ]
  ],
  [
    [
      194835,
      194835
    ],
    "mapped",
    [
      28729
    ]
  ],
  [
    [
      194836,
      194836
    ],
    "mapped",
    [
      28702
    ]
  ],
  [
    [
      194837,
      194837
    ],
    "mapped",
    [
      28699
    ]
  ],
  [
    [
      194838,
      194838
    ],
    "mapped",
    [
      15766
    ]
  ],
  [
    [
      194839,
      194839
    ],
    "mapped",
    [
      28746
    ]
  ],
  [
    [
      194840,
      194840
    ],
    "mapped",
    [
      28797
    ]
  ],
  [
    [
      194841,
      194841
    ],
    "mapped",
    [
      28791
    ]
  ],
  [
    [
      194842,
      194842
    ],
    "mapped",
    [
      28845
    ]
  ],
  [
    [
      194843,
      194843
    ],
    "mapped",
    [
      132389
    ]
  ],
  [
    [
      194844,
      194844
    ],
    "mapped",
    [
      28997
    ]
  ],
  [
    [
      194845,
      194845
    ],
    "mapped",
    [
      148067
    ]
  ],
  [
    [
      194846,
      194846
    ],
    "mapped",
    [
      29084
    ]
  ],
  [
    [
      194847,
      194847
    ],
    "disallowed"
  ],
  [
    [
      194848,
      194848
    ],
    "mapped",
    [
      29224
    ]
  ],
  [
    [
      194849,
      194849
    ],
    "mapped",
    [
      29237
    ]
  ],
  [
    [
      194850,
      194850
    ],
    "mapped",
    [
      29264
    ]
  ],
  [
    [
      194851,
      194851
    ],
    "mapped",
    [
      149e3
    ]
  ],
  [
    [
      194852,
      194852
    ],
    "mapped",
    [
      29312
    ]
  ],
  [
    [
      194853,
      194853
    ],
    "mapped",
    [
      29333
    ]
  ],
  [
    [
      194854,
      194854
    ],
    "mapped",
    [
      149301
    ]
  ],
  [
    [
      194855,
      194855
    ],
    "mapped",
    [
      149524
    ]
  ],
  [
    [
      194856,
      194856
    ],
    "mapped",
    [
      29562
    ]
  ],
  [
    [
      194857,
      194857
    ],
    "mapped",
    [
      29579
    ]
  ],
  [
    [
      194858,
      194858
    ],
    "mapped",
    [
      16044
    ]
  ],
  [
    [
      194859,
      194859
    ],
    "mapped",
    [
      29605
    ]
  ],
  [
    [
      194860,
      194861
    ],
    "mapped",
    [
      16056
    ]
  ],
  [
    [
      194862,
      194862
    ],
    "mapped",
    [
      29767
    ]
  ],
  [
    [
      194863,
      194863
    ],
    "mapped",
    [
      29788
    ]
  ],
  [
    [
      194864,
      194864
    ],
    "mapped",
    [
      29809
    ]
  ],
  [
    [
      194865,
      194865
    ],
    "mapped",
    [
      29829
    ]
  ],
  [
    [
      194866,
      194866
    ],
    "mapped",
    [
      29898
    ]
  ],
  [
    [
      194867,
      194867
    ],
    "mapped",
    [
      16155
    ]
  ],
  [
    [
      194868,
      194868
    ],
    "mapped",
    [
      29988
    ]
  ],
  [
    [
      194869,
      194869
    ],
    "mapped",
    [
      150582
    ]
  ],
  [
    [
      194870,
      194870
    ],
    "mapped",
    [
      30014
    ]
  ],
  [
    [
      194871,
      194871
    ],
    "mapped",
    [
      150674
    ]
  ],
  [
    [
      194872,
      194872
    ],
    "mapped",
    [
      30064
    ]
  ],
  [
    [
      194873,
      194873
    ],
    "mapped",
    [
      139679
    ]
  ],
  [
    [
      194874,
      194874
    ],
    "mapped",
    [
      30224
    ]
  ],
  [
    [
      194875,
      194875
    ],
    "mapped",
    [
      151457
    ]
  ],
  [
    [
      194876,
      194876
    ],
    "mapped",
    [
      151480
    ]
  ],
  [
    [
      194877,
      194877
    ],
    "mapped",
    [
      151620
    ]
  ],
  [
    [
      194878,
      194878
    ],
    "mapped",
    [
      16380
    ]
  ],
  [
    [
      194879,
      194879
    ],
    "mapped",
    [
      16392
    ]
  ],
  [
    [
      194880,
      194880
    ],
    "mapped",
    [
      30452
    ]
  ],
  [
    [
      194881,
      194881
    ],
    "mapped",
    [
      151795
    ]
  ],
  [
    [
      194882,
      194882
    ],
    "mapped",
    [
      151794
    ]
  ],
  [
    [
      194883,
      194883
    ],
    "mapped",
    [
      151833
    ]
  ],
  [
    [
      194884,
      194884
    ],
    "mapped",
    [
      151859
    ]
  ],
  [
    [
      194885,
      194885
    ],
    "mapped",
    [
      30494
    ]
  ],
  [
    [
      194886,
      194887
    ],
    "mapped",
    [
      30495
    ]
  ],
  [
    [
      194888,
      194888
    ],
    "mapped",
    [
      30538
    ]
  ],
  [
    [
      194889,
      194889
    ],
    "mapped",
    [
      16441
    ]
  ],
  [
    [
      194890,
      194890
    ],
    "mapped",
    [
      30603
    ]
  ],
  [
    [
      194891,
      194891
    ],
    "mapped",
    [
      16454
    ]
  ],
  [
    [
      194892,
      194892
    ],
    "mapped",
    [
      16534
    ]
  ],
  [
    [
      194893,
      194893
    ],
    "mapped",
    [
      152605
    ]
  ],
  [
    [
      194894,
      194894
    ],
    "mapped",
    [
      30798
    ]
  ],
  [
    [
      194895,
      194895
    ],
    "mapped",
    [
      30860
    ]
  ],
  [
    [
      194896,
      194896
    ],
    "mapped",
    [
      30924
    ]
  ],
  [
    [
      194897,
      194897
    ],
    "mapped",
    [
      16611
    ]
  ],
  [
    [
      194898,
      194898
    ],
    "mapped",
    [
      153126
    ]
  ],
  [
    [
      194899,
      194899
    ],
    "mapped",
    [
      31062
    ]
  ],
  [
    [
      194900,
      194900
    ],
    "mapped",
    [
      153242
    ]
  ],
  [
    [
      194901,
      194901
    ],
    "mapped",
    [
      153285
    ]
  ],
  [
    [
      194902,
      194902
    ],
    "mapped",
    [
      31119
    ]
  ],
  [
    [
      194903,
      194903
    ],
    "mapped",
    [
      31211
    ]
  ],
  [
    [
      194904,
      194904
    ],
    "mapped",
    [
      16687
    ]
  ],
  [
    [
      194905,
      194905
    ],
    "mapped",
    [
      31296
    ]
  ],
  [
    [
      194906,
      194906
    ],
    "mapped",
    [
      31306
    ]
  ],
  [
    [
      194907,
      194907
    ],
    "mapped",
    [
      31311
    ]
  ],
  [
    [
      194908,
      194908
    ],
    "mapped",
    [
      153980
    ]
  ],
  [
    [
      194909,
      194910
    ],
    "mapped",
    [
      154279
    ]
  ],
  [
    [
      194911,
      194911
    ],
    "disallowed"
  ],
  [
    [
      194912,
      194912
    ],
    "mapped",
    [
      16898
    ]
  ],
  [
    [
      194913,
      194913
    ],
    "mapped",
    [
      154539
    ]
  ],
  [
    [
      194914,
      194914
    ],
    "mapped",
    [
      31686
    ]
  ],
  [
    [
      194915,
      194915
    ],
    "mapped",
    [
      31689
    ]
  ],
  [
    [
      194916,
      194916
    ],
    "mapped",
    [
      16935
    ]
  ],
  [
    [
      194917,
      194917
    ],
    "mapped",
    [
      154752
    ]
  ],
  [
    [
      194918,
      194918
    ],
    "mapped",
    [
      31954
    ]
  ],
  [
    [
      194919,
      194919
    ],
    "mapped",
    [
      17056
    ]
  ],
  [
    [
      194920,
      194920
    ],
    "mapped",
    [
      31976
    ]
  ],
  [
    [
      194921,
      194921
    ],
    "mapped",
    [
      31971
    ]
  ],
  [
    [
      194922,
      194922
    ],
    "mapped",
    [
      32e3
    ]
  ],
  [
    [
      194923,
      194923
    ],
    "mapped",
    [
      155526
    ]
  ],
  [
    [
      194924,
      194924
    ],
    "mapped",
    [
      32099
    ]
  ],
  [
    [
      194925,
      194925
    ],
    "mapped",
    [
      17153
    ]
  ],
  [
    [
      194926,
      194926
    ],
    "mapped",
    [
      32199
    ]
  ],
  [
    [
      194927,
      194927
    ],
    "mapped",
    [
      32258
    ]
  ],
  [
    [
      194928,
      194928
    ],
    "mapped",
    [
      32325
    ]
  ],
  [
    [
      194929,
      194929
    ],
    "mapped",
    [
      17204
    ]
  ],
  [
    [
      194930,
      194930
    ],
    "mapped",
    [
      156200
    ]
  ],
  [
    [
      194931,
      194931
    ],
    "mapped",
    [
      156231
    ]
  ],
  [
    [
      194932,
      194932
    ],
    "mapped",
    [
      17241
    ]
  ],
  [
    [
      194933,
      194933
    ],
    "mapped",
    [
      156377
    ]
  ],
  [
    [
      194934,
      194934
    ],
    "mapped",
    [
      32634
    ]
  ],
  [
    [
      194935,
      194935
    ],
    "mapped",
    [
      156478
    ]
  ],
  [
    [
      194936,
      194936
    ],
    "mapped",
    [
      32661
    ]
  ],
  [
    [
      194937,
      194937
    ],
    "mapped",
    [
      32762
    ]
  ],
  [
    [
      194938,
      194938
    ],
    "mapped",
    [
      32773
    ]
  ],
  [
    [
      194939,
      194939
    ],
    "mapped",
    [
      156890
    ]
  ],
  [
    [
      194940,
      194940
    ],
    "mapped",
    [
      156963
    ]
  ],
  [
    [
      194941,
      194941
    ],
    "mapped",
    [
      32864
    ]
  ],
  [
    [
      194942,
      194942
    ],
    "mapped",
    [
      157096
    ]
  ],
  [
    [
      194943,
      194943
    ],
    "mapped",
    [
      32880
    ]
  ],
  [
    [
      194944,
      194944
    ],
    "mapped",
    [
      144223
    ]
  ],
  [
    [
      194945,
      194945
    ],
    "mapped",
    [
      17365
    ]
  ],
  [
    [
      194946,
      194946
    ],
    "mapped",
    [
      32946
    ]
  ],
  [
    [
      194947,
      194947
    ],
    "mapped",
    [
      33027
    ]
  ],
  [
    [
      194948,
      194948
    ],
    "mapped",
    [
      17419
    ]
  ],
  [
    [
      194949,
      194949
    ],
    "mapped",
    [
      33086
    ]
  ],
  [
    [
      194950,
      194950
    ],
    "mapped",
    [
      23221
    ]
  ],
  [
    [
      194951,
      194951
    ],
    "mapped",
    [
      157607
    ]
  ],
  [
    [
      194952,
      194952
    ],
    "mapped",
    [
      157621
    ]
  ],
  [
    [
      194953,
      194953
    ],
    "mapped",
    [
      144275
    ]
  ],
  [
    [
      194954,
      194954
    ],
    "mapped",
    [
      144284
    ]
  ],
  [
    [
      194955,
      194955
    ],
    "mapped",
    [
      33281
    ]
  ],
  [
    [
      194956,
      194956
    ],
    "mapped",
    [
      33284
    ]
  ],
  [
    [
      194957,
      194957
    ],
    "mapped",
    [
      36766
    ]
  ],
  [
    [
      194958,
      194958
    ],
    "mapped",
    [
      17515
    ]
  ],
  [
    [
      194959,
      194959
    ],
    "mapped",
    [
      33425
    ]
  ],
  [
    [
      194960,
      194960
    ],
    "mapped",
    [
      33419
    ]
  ],
  [
    [
      194961,
      194961
    ],
    "mapped",
    [
      33437
    ]
  ],
  [
    [
      194962,
      194962
    ],
    "mapped",
    [
      21171
    ]
  ],
  [
    [
      194963,
      194963
    ],
    "mapped",
    [
      33457
    ]
  ],
  [
    [
      194964,
      194964
    ],
    "mapped",
    [
      33459
    ]
  ],
  [
    [
      194965,
      194965
    ],
    "mapped",
    [
      33469
    ]
  ],
  [
    [
      194966,
      194966
    ],
    "mapped",
    [
      33510
    ]
  ],
  [
    [
      194967,
      194967
    ],
    "mapped",
    [
      158524
    ]
  ],
  [
    [
      194968,
      194968
    ],
    "mapped",
    [
      33509
    ]
  ],
  [
    [
      194969,
      194969
    ],
    "mapped",
    [
      33565
    ]
  ],
  [
    [
      194970,
      194970
    ],
    "mapped",
    [
      33635
    ]
  ],
  [
    [
      194971,
      194971
    ],
    "mapped",
    [
      33709
    ]
  ],
  [
    [
      194972,
      194972
    ],
    "mapped",
    [
      33571
    ]
  ],
  [
    [
      194973,
      194973
    ],
    "mapped",
    [
      33725
    ]
  ],
  [
    [
      194974,
      194974
    ],
    "mapped",
    [
      33767
    ]
  ],
  [
    [
      194975,
      194975
    ],
    "mapped",
    [
      33879
    ]
  ],
  [
    [
      194976,
      194976
    ],
    "mapped",
    [
      33619
    ]
  ],
  [
    [
      194977,
      194977
    ],
    "mapped",
    [
      33738
    ]
  ],
  [
    [
      194978,
      194978
    ],
    "mapped",
    [
      33740
    ]
  ],
  [
    [
      194979,
      194979
    ],
    "mapped",
    [
      33756
    ]
  ],
  [
    [
      194980,
      194980
    ],
    "mapped",
    [
      158774
    ]
  ],
  [
    [
      194981,
      194981
    ],
    "mapped",
    [
      159083
    ]
  ],
  [
    [
      194982,
      194982
    ],
    "mapped",
    [
      158933
    ]
  ],
  [
    [
      194983,
      194983
    ],
    "mapped",
    [
      17707
    ]
  ],
  [
    [
      194984,
      194984
    ],
    "mapped",
    [
      34033
    ]
  ],
  [
    [
      194985,
      194985
    ],
    "mapped",
    [
      34035
    ]
  ],
  [
    [
      194986,
      194986
    ],
    "mapped",
    [
      34070
    ]
  ],
  [
    [
      194987,
      194987
    ],
    "mapped",
    [
      160714
    ]
  ],
  [
    [
      194988,
      194988
    ],
    "mapped",
    [
      34148
    ]
  ],
  [
    [
      194989,
      194989
    ],
    "mapped",
    [
      159532
    ]
  ],
  [
    [
      194990,
      194990
    ],
    "mapped",
    [
      17757
    ]
  ],
  [
    [
      194991,
      194991
    ],
    "mapped",
    [
      17761
    ]
  ],
  [
    [
      194992,
      194992
    ],
    "mapped",
    [
      159665
    ]
  ],
  [
    [
      194993,
      194993
    ],
    "mapped",
    [
      159954
    ]
  ],
  [
    [
      194994,
      194994
    ],
    "mapped",
    [
      17771
    ]
  ],
  [
    [
      194995,
      194995
    ],
    "mapped",
    [
      34384
    ]
  ],
  [
    [
      194996,
      194996
    ],
    "mapped",
    [
      34396
    ]
  ],
  [
    [
      194997,
      194997
    ],
    "mapped",
    [
      34407
    ]
  ],
  [
    [
      194998,
      194998
    ],
    "mapped",
    [
      34409
    ]
  ],
  [
    [
      194999,
      194999
    ],
    "mapped",
    [
      34473
    ]
  ],
  [
    [
      195e3,
      195e3
    ],
    "mapped",
    [
      34440
    ]
  ],
  [
    [
      195001,
      195001
    ],
    "mapped",
    [
      34574
    ]
  ],
  [
    [
      195002,
      195002
    ],
    "mapped",
    [
      34530
    ]
  ],
  [
    [
      195003,
      195003
    ],
    "mapped",
    [
      34681
    ]
  ],
  [
    [
      195004,
      195004
    ],
    "mapped",
    [
      34600
    ]
  ],
  [
    [
      195005,
      195005
    ],
    "mapped",
    [
      34667
    ]
  ],
  [
    [
      195006,
      195006
    ],
    "mapped",
    [
      34694
    ]
  ],
  [
    [
      195007,
      195007
    ],
    "disallowed"
  ],
  [
    [
      195008,
      195008
    ],
    "mapped",
    [
      34785
    ]
  ],
  [
    [
      195009,
      195009
    ],
    "mapped",
    [
      34817
    ]
  ],
  [
    [
      195010,
      195010
    ],
    "mapped",
    [
      17913
    ]
  ],
  [
    [
      195011,
      195011
    ],
    "mapped",
    [
      34912
    ]
  ],
  [
    [
      195012,
      195012
    ],
    "mapped",
    [
      34915
    ]
  ],
  [
    [
      195013,
      195013
    ],
    "mapped",
    [
      161383
    ]
  ],
  [
    [
      195014,
      195014
    ],
    "mapped",
    [
      35031
    ]
  ],
  [
    [
      195015,
      195015
    ],
    "mapped",
    [
      35038
    ]
  ],
  [
    [
      195016,
      195016
    ],
    "mapped",
    [
      17973
    ]
  ],
  [
    [
      195017,
      195017
    ],
    "mapped",
    [
      35066
    ]
  ],
  [
    [
      195018,
      195018
    ],
    "mapped",
    [
      13499
    ]
  ],
  [
    [
      195019,
      195019
    ],
    "mapped",
    [
      161966
    ]
  ],
  [
    [
      195020,
      195020
    ],
    "mapped",
    [
      162150
    ]
  ],
  [
    [
      195021,
      195021
    ],
    "mapped",
    [
      18110
    ]
  ],
  [
    [
      195022,
      195022
    ],
    "mapped",
    [
      18119
    ]
  ],
  [
    [
      195023,
      195023
    ],
    "mapped",
    [
      35488
    ]
  ],
  [
    [
      195024,
      195024
    ],
    "mapped",
    [
      35565
    ]
  ],
  [
    [
      195025,
      195025
    ],
    "mapped",
    [
      35722
    ]
  ],
  [
    [
      195026,
      195026
    ],
    "mapped",
    [
      35925
    ]
  ],
  [
    [
      195027,
      195027
    ],
    "mapped",
    [
      162984
    ]
  ],
  [
    [
      195028,
      195028
    ],
    "mapped",
    [
      36011
    ]
  ],
  [
    [
      195029,
      195029
    ],
    "mapped",
    [
      36033
    ]
  ],
  [
    [
      195030,
      195030
    ],
    "mapped",
    [
      36123
    ]
  ],
  [
    [
      195031,
      195031
    ],
    "mapped",
    [
      36215
    ]
  ],
  [
    [
      195032,
      195032
    ],
    "mapped",
    [
      163631
    ]
  ],
  [
    [
      195033,
      195033
    ],
    "mapped",
    [
      133124
    ]
  ],
  [
    [
      195034,
      195034
    ],
    "mapped",
    [
      36299
    ]
  ],
  [
    [
      195035,
      195035
    ],
    "mapped",
    [
      36284
    ]
  ],
  [
    [
      195036,
      195036
    ],
    "mapped",
    [
      36336
    ]
  ],
  [
    [
      195037,
      195037
    ],
    "mapped",
    [
      133342
    ]
  ],
  [
    [
      195038,
      195038
    ],
    "mapped",
    [
      36564
    ]
  ],
  [
    [
      195039,
      195039
    ],
    "mapped",
    [
      36664
    ]
  ],
  [
    [
      195040,
      195040
    ],
    "mapped",
    [
      165330
    ]
  ],
  [
    [
      195041,
      195041
    ],
    "mapped",
    [
      165357
    ]
  ],
  [
    [
      195042,
      195042
    ],
    "mapped",
    [
      37012
    ]
  ],
  [
    [
      195043,
      195043
    ],
    "mapped",
    [
      37105
    ]
  ],
  [
    [
      195044,
      195044
    ],
    "mapped",
    [
      37137
    ]
  ],
  [
    [
      195045,
      195045
    ],
    "mapped",
    [
      165678
    ]
  ],
  [
    [
      195046,
      195046
    ],
    "mapped",
    [
      37147
    ]
  ],
  [
    [
      195047,
      195047
    ],
    "mapped",
    [
      37432
    ]
  ],
  [
    [
      195048,
      195048
    ],
    "mapped",
    [
      37591
    ]
  ],
  [
    [
      195049,
      195049
    ],
    "mapped",
    [
      37592
    ]
  ],
  [
    [
      195050,
      195050
    ],
    "mapped",
    [
      37500
    ]
  ],
  [
    [
      195051,
      195051
    ],
    "mapped",
    [
      37881
    ]
  ],
  [
    [
      195052,
      195052
    ],
    "mapped",
    [
      37909
    ]
  ],
  [
    [
      195053,
      195053
    ],
    "mapped",
    [
      166906
    ]
  ],
  [
    [
      195054,
      195054
    ],
    "mapped",
    [
      38283
    ]
  ],
  [
    [
      195055,
      195055
    ],
    "mapped",
    [
      18837
    ]
  ],
  [
    [
      195056,
      195056
    ],
    "mapped",
    [
      38327
    ]
  ],
  [
    [
      195057,
      195057
    ],
    "mapped",
    [
      167287
    ]
  ],
  [
    [
      195058,
      195058
    ],
    "mapped",
    [
      18918
    ]
  ],
  [
    [
      195059,
      195059
    ],
    "mapped",
    [
      38595
    ]
  ],
  [
    [
      195060,
      195060
    ],
    "mapped",
    [
      23986
    ]
  ],
  [
    [
      195061,
      195061
    ],
    "mapped",
    [
      38691
    ]
  ],
  [
    [
      195062,
      195062
    ],
    "mapped",
    [
      168261
    ]
  ],
  [
    [
      195063,
      195063
    ],
    "mapped",
    [
      168474
    ]
  ],
  [
    [
      195064,
      195064
    ],
    "mapped",
    [
      19054
    ]
  ],
  [
    [
      195065,
      195065
    ],
    "mapped",
    [
      19062
    ]
  ],
  [
    [
      195066,
      195066
    ],
    "mapped",
    [
      38880
    ]
  ],
  [
    [
      195067,
      195067
    ],
    "mapped",
    [
      168970
    ]
  ],
  [
    [
      195068,
      195068
    ],
    "mapped",
    [
      19122
    ]
  ],
  [
    [
      195069,
      195069
    ],
    "mapped",
    [
      169110
    ]
  ],
  [
    [
      195070,
      195071
    ],
    "mapped",
    [
      38923
    ]
  ],
  [
    [
      195072,
      195072
    ],
    "mapped",
    [
      38953
    ]
  ],
  [
    [
      195073,
      195073
    ],
    "mapped",
    [
      169398
    ]
  ],
  [
    [
      195074,
      195074
    ],
    "mapped",
    [
      39138
    ]
  ],
  [
    [
      195075,
      195075
    ],
    "mapped",
    [
      19251
    ]
  ],
  [
    [
      195076,
      195076
    ],
    "mapped",
    [
      39209
    ]
  ],
  [
    [
      195077,
      195077
    ],
    "mapped",
    [
      39335
    ]
  ],
  [
    [
      195078,
      195078
    ],
    "mapped",
    [
      39362
    ]
  ],
  [
    [
      195079,
      195079
    ],
    "mapped",
    [
      39422
    ]
  ],
  [
    [
      195080,
      195080
    ],
    "mapped",
    [
      19406
    ]
  ],
  [
    [
      195081,
      195081
    ],
    "mapped",
    [
      170800
    ]
  ],
  [
    [
      195082,
      195082
    ],
    "mapped",
    [
      39698
    ]
  ],
  [
    [
      195083,
      195083
    ],
    "mapped",
    [
      4e4
    ]
  ],
  [
    [
      195084,
      195084
    ],
    "mapped",
    [
      40189
    ]
  ],
  [
    [
      195085,
      195085
    ],
    "mapped",
    [
      19662
    ]
  ],
  [
    [
      195086,
      195086
    ],
    "mapped",
    [
      19693
    ]
  ],
  [
    [
      195087,
      195087
    ],
    "mapped",
    [
      40295
    ]
  ],
  [
    [
      195088,
      195088
    ],
    "mapped",
    [
      172238
    ]
  ],
  [
    [
      195089,
      195089
    ],
    "mapped",
    [
      19704
    ]
  ],
  [
    [
      195090,
      195090
    ],
    "mapped",
    [
      172293
    ]
  ],
  [
    [
      195091,
      195091
    ],
    "mapped",
    [
      172558
    ]
  ],
  [
    [
      195092,
      195092
    ],
    "mapped",
    [
      172689
    ]
  ],
  [
    [
      195093,
      195093
    ],
    "mapped",
    [
      40635
    ]
  ],
  [
    [
      195094,
      195094
    ],
    "mapped",
    [
      19798
    ]
  ],
  [
    [
      195095,
      195095
    ],
    "mapped",
    [
      40697
    ]
  ],
  [
    [
      195096,
      195096
    ],
    "mapped",
    [
      40702
    ]
  ],
  [
    [
      195097,
      195097
    ],
    "mapped",
    [
      40709
    ]
  ],
  [
    [
      195098,
      195098
    ],
    "mapped",
    [
      40719
    ]
  ],
  [
    [
      195099,
      195099
    ],
    "mapped",
    [
      40726
    ]
  ],
  [
    [
      195100,
      195100
    ],
    "mapped",
    [
      40763
    ]
  ],
  [
    [
      195101,
      195101
    ],
    "mapped",
    [
      173568
    ]
  ],
  [
    [
      195102,
      196605
    ],
    "disallowed"
  ],
  [
    [
      196606,
      196607
    ],
    "disallowed"
  ],
  [
    [
      196608,
      262141
    ],
    "disallowed"
  ],
  [
    [
      262142,
      262143
    ],
    "disallowed"
  ],
  [
    [
      262144,
      327677
    ],
    "disallowed"
  ],
  [
    [
      327678,
      327679
    ],
    "disallowed"
  ],
  [
    [
      327680,
      393213
    ],
    "disallowed"
  ],
  [
    [
      393214,
      393215
    ],
    "disallowed"
  ],
  [
    [
      393216,
      458749
    ],
    "disallowed"
  ],
  [
    [
      458750,
      458751
    ],
    "disallowed"
  ],
  [
    [
      458752,
      524285
    ],
    "disallowed"
  ],
  [
    [
      524286,
      524287
    ],
    "disallowed"
  ],
  [
    [
      524288,
      589821
    ],
    "disallowed"
  ],
  [
    [
      589822,
      589823
    ],
    "disallowed"
  ],
  [
    [
      589824,
      655357
    ],
    "disallowed"
  ],
  [
    [
      655358,
      655359
    ],
    "disallowed"
  ],
  [
    [
      655360,
      720893
    ],
    "disallowed"
  ],
  [
    [
      720894,
      720895
    ],
    "disallowed"
  ],
  [
    [
      720896,
      786429
    ],
    "disallowed"
  ],
  [
    [
      786430,
      786431
    ],
    "disallowed"
  ],
  [
    [
      786432,
      851965
    ],
    "disallowed"
  ],
  [
    [
      851966,
      851967
    ],
    "disallowed"
  ],
  [
    [
      851968,
      917501
    ],
    "disallowed"
  ],
  [
    [
      917502,
      917503
    ],
    "disallowed"
  ],
  [
    [
      917504,
      917504
    ],
    "disallowed"
  ],
  [
    [
      917505,
      917505
    ],
    "disallowed"
  ],
  [
    [
      917506,
      917535
    ],
    "disallowed"
  ],
  [
    [
      917536,
      917631
    ],
    "disallowed"
  ],
  [
    [
      917632,
      917759
    ],
    "disallowed"
  ],
  [
    [
      917760,
      917999
    ],
    "ignored"
  ],
  [
    [
      918e3,
      983037
    ],
    "disallowed"
  ],
  [
    [
      983038,
      983039
    ],
    "disallowed"
  ],
  [
    [
      983040,
      1048573
    ],
    "disallowed"
  ],
  [
    [
      1048574,
      1048575
    ],
    "disallowed"
  ],
  [
    [
      1048576,
      1114109
    ],
    "disallowed"
  ],
  [
    [
      1114110,
      1114111
    ],
    "disallowed"
  ]
], ln = {
  TRANSITIONAL: 0,
  NONTRANSITIONAL: 1
};
function Cl(i) {
  return i.split("\0").map(function(e) {
    return e.normalize("NFC");
  }).join("\0");
}
function Pl(i) {
  for (var e = 0, t = Rl.length - 1; e <= t; ) {
    var r = Math.floor((e + t) / 2), s = Rl[r];
    if (s[0][0] <= i && s[0][1] >= i)
      return s;
    s[0][0] > i ? t = r - 1 : e = r + 1;
  }
  return null;
}
var T8 = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
function Dl(i) {
  return i.replace(T8, "_").length;
}
function S8(i, e, t) {
  for (var r = !1, s = "", o = Dl(i), l = 0; l < o; ++l) {
    var u = i.codePointAt(l), v = Pl(u);
    switch (v[1]) {
      case "disallowed":
        r = !0, s += String.fromCodePoint(u);
        break;
      case "ignored":
        break;
      case "mapped":
        s += String.fromCodePoint.apply(String, v[2]);
        break;
      case "deviation":
        t === ln.TRANSITIONAL ? s += String.fromCodePoint.apply(String, v[2]) : s += String.fromCodePoint(u);
        break;
      case "valid":
        s += String.fromCodePoint(u);
        break;
      case "disallowed_STD3_mapped":
        e ? (r = !0, s += String.fromCodePoint(u)) : s += String.fromCodePoint.apply(String, v[2]);
        break;
      case "disallowed_STD3_valid":
        e && (r = !0), s += String.fromCodePoint(u);
        break;
    }
  }
  return {
    string: s,
    error: r
  };
}
var A8 = /[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;
function R8(i, e) {
  i.substr(0, 4) === "xn--" && (i = Lt.default.toUnicode(i));
  var t = !1;
  (Cl(i) !== i || i[3] === "-" && i[4] === "-" || i[0] === "-" || i[i.length - 1] === "-" || i.indexOf(".") !== -1 || i.search(A8) === 0) && (t = !0);
  for (var r = Dl(i), s = 0; s < r; ++s) {
    var o = Pl(i.codePointAt(s));
    if (br === ln.TRANSITIONAL && o[1] !== "valid" || br === ln.NONTRANSITIONAL && o[1] !== "valid" && o[1] !== "deviation") {
      t = !0;
      break;
    }
  }
  return {
    label: i,
    error: t
  };
}
function br(i, e, t) {
  var r = S8(i, e, t);
  r.string = Cl(r.string);
  for (var s = r.string.split("."), o = 0; o < s.length; ++o)
    try {
      var l = R8(s[o]);
      s[o] = l.label, r.error = r.error || l.error;
    } catch (u) {
      r.error = !0;
    }
  return {
    string: s.join("."),
    error: r.error
  };
}
var C8 = function(i, e, t, r) {
  var s = br(i, e, t), o = s.string.split(".");
  if (o = o.map(function(v) {
    try {
      return Lt.default.toASCII(v);
    } catch (f) {
      return s.error = !0, v;
    }
  }), r) {
    var l = o.slice(0, o.length - 1).join(".").length;
    (l.length > 253 || l.length === 0) && (s.error = !0);
    for (var u = 0; u < o.length; ++u)
      if (o.length > 63 || o.length === 0) {
        s.error = !0;
        break;
      }
  }
  return s.error ? null : o.join(".");
}, P8 = function(i, e) {
  var t = br(i, e, ln.NONTRANSITIONAL);
  return {
    domain: t.string,
    error: t.error
  };
}, D8 = ln, Ol = {
  toASCII: C8,
  toUnicode: P8,
  PROCESSING_OPTIONS: D8
}, Ce = Ee(function(i) {
  const e = {
    ftp: 21,
    file: null,
    gopher: 70,
    http: 80,
    https: 443,
    ws: 80,
    wss: 443
  }, t = Symbol("failure");
  function r(y) {
    return Lt.default.ucs2.decode(y).length;
  }
  function s(y, E) {
    const q = y[E];
    return isNaN(q) ? void 0 : String.fromCodePoint(q);
  }
  function o(y) {
    return y >= 48 && y <= 57;
  }
  function l(y) {
    return y >= 65 && y <= 90 || y >= 97 && y <= 122;
  }
  function u(y) {
    return l(y) || o(y);
  }
  function v(y) {
    return o(y) || y >= 65 && y <= 70 || y >= 97 && y <= 102;
  }
  function f(y) {
    return y === "." || y.toLowerCase() === "%2e";
  }
  function c(y) {
    return y = y.toLowerCase(), y === ".." || y === "%2e." || y === ".%2e" || y === "%2e%2e";
  }
  function h(y, E) {
    return l(y) && (E === 58 || E === 124);
  }
  function b(y) {
    return y.length === 2 && l(y.codePointAt(0)) && (y[1] === ":" || y[1] === "|");
  }
  function x(y) {
    return y.length === 2 && l(y.codePointAt(0)) && y[1] === ":";
  }
  function S(y) {
    return y.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;
  }
  function D(y) {
    return y.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;
  }
  function L(y) {
    return e[y] !== void 0;
  }
  function R(y) {
    return L(y.scheme);
  }
  function B(y) {
    return e[y];
  }
  function Q(y) {
    let E = y.toString(16).toUpperCase();
    return E.length === 1 && (E = "0" + E), "%" + E;
  }
  function ee(y) {
    const E = new Buffer(y);
    let q = "";
    for (let z = 0; z < E.length; ++z)
      q += Q(E[z]);
    return q;
  }
  function re(y) {
    const E = new Buffer(y), q = [];
    for (let z = 0; z < E.length; ++z)
      E[z] !== 37 ? q.push(E[z]) : E[z] === 37 && v(E[z + 1]) && v(E[z + 2]) ? (q.push(parseInt(E.slice(z + 1, z + 3).toString(), 16)), z += 2) : q.push(E[z]);
    return new Buffer(q).toString();
  }
  function de(y) {
    return y <= 31 || y > 126;
  }
  const ne = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);
  function F(y) {
    return de(y) || ne.has(y);
  }
  const N = new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);
  function G(y) {
    return F(y) || N.has(y);
  }
  function V(y, E) {
    const q = String.fromCodePoint(y);
    return E(y) ? ee(q) : q;
  }
  function ae(y) {
    let E = 10;
    return y.length >= 2 && y.charAt(0) === "0" && y.charAt(1).toLowerCase() === "x" ? (y = y.substring(2), E = 16) : y.length >= 2 && y.charAt(0) === "0" && (y = y.substring(1), E = 8), y === "" ? 0 : (E === 10 ? /[^0-9]/ : E === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/).test(y) ? t : parseInt(y, E);
  }
  function ie(y) {
    const E = y.split(".");
    if (E[E.length - 1] === "" && E.length > 1 && E.pop(), E.length > 4)
      return y;
    const q = [];
    for (const be of E) {
      if (be === "")
        return y;
      const Ae = ae(be);
      if (Ae === t)
        return y;
      q.push(Ae);
    }
    for (let be = 0; be < q.length - 1; ++be)
      if (q[be] > 255)
        return t;
    if (q[q.length - 1] >= Math.pow(256, 5 - q.length))
      return t;
    let z = q.pop(), X = 0;
    for (const be of q)
      z += be * Math.pow(256, 3 - X), ++X;
    return z;
  }
  function H(y) {
    let E = "", q = y;
    for (let z = 1; z <= 4; ++z)
      E = String(q % 256) + E, z !== 4 && (E = "." + E), q = Math.floor(q / 256);
    return E;
  }
  function O(y) {
    const E = [0, 0, 0, 0, 0, 0, 0, 0];
    let q = 0, z = null, X = 0;
    if (y = Lt.default.ucs2.decode(y), y[X] === 58) {
      if (y[X + 1] !== 58)
        return t;
      X += 2, ++q, z = q;
    }
    for (; X < y.length; ) {
      if (q === 8)
        return t;
      if (y[X] === 58) {
        if (z !== null)
          return t;
        ++X, ++q, z = q;
        continue;
      }
      let be = 0, Ae = 0;
      for (; Ae < 4 && v(y[X]); )
        be = be * 16 + parseInt(s(y, X), 16), ++X, ++Ae;
      if (y[X] === 46) {
        if (Ae === 0 || (X -= Ae, q > 6))
          return t;
        let Ka = 0;
        for (; y[X] !== void 0; ) {
          let Fa = null;
          if (Ka > 0)
            if (y[X] === 46 && Ka < 4)
              ++X;
            else
              return t;
          if (!o(y[X]))
            return t;
          for (; o(y[X]); ) {
            const St = parseInt(s(y, X));
            if (Fa === null)
              Fa = St;
            else {
              if (Fa === 0)
                return t;
              Fa = Fa * 10 + St;
            }
            if (Fa > 255)
              return t;
            ++X;
          }
          E[q] = E[q] * 256 + Fa, ++Ka, (Ka === 2 || Ka === 4) && ++q;
        }
        if (Ka !== 4)
          return t;
        break;
      } else if (y[X] === 58) {
        if (++X, y[X] === void 0)
          return t;
      } else if (y[X] !== void 0)
        return t;
      E[q] = be, ++q;
    }
    if (z !== null) {
      let be = q - z;
      for (q = 7; q !== 0 && be > 0; ) {
        const Ae = E[z + be - 1];
        E[z + be - 1] = E[q], E[q] = Ae, --q, --be;
      }
    } else if (z === null && q !== 8)
      return t;
    return E;
  }
  function $(y) {
    let E = "";
    const z = ce(y).idx;
    let X = !1;
    for (let be = 0; be <= 7; ++be)
      if (!(X && y[be] === 0)) {
        if (X && (X = !1), z === be) {
          E += be === 0 ? "::" : ":", X = !0;
          continue;
        }
        E += y[be].toString(16), be !== 7 && (E += ":");
      }
    return E;
  }
  function j(y, E) {
    if (y[0] === "[")
      return y[y.length - 1] !== "]" ? t : O(y.substring(1, y.length - 1));
    if (!E)
      return J(y);
    const q = re(y), z = Ol.toASCII(q, !1, Ol.PROCESSING_OPTIONS.NONTRANSITIONAL, !1);
    if (z === null || S(z))
      return t;
    const X = ie(z);
    return typeof X == "number" || X === t ? X : z;
  }
  function J(y) {
    if (D(y))
      return t;
    let E = "";
    const q = Lt.default.ucs2.decode(y);
    for (let z = 0; z < q.length; ++z)
      E += V(q[z], de);
    return E;
  }
  function ce(y) {
    let E = null, q = 1, z = null, X = 0;
    for (let be = 0; be < y.length; ++be)
      y[be] !== 0 ? (X > q && (E = z, q = X), z = null, X = 0) : (z === null && (z = be), ++X);
    return X > q && (E = z, q = X), {
      idx: E,
      len: q
    };
  }
  function he(y) {
    return typeof y == "number" ? H(y) : y instanceof Array ? "[" + $(y) + "]" : y;
  }
  function Fe(y) {
    return y.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, "");
  }
  function Be(y) {
    return y.replace(/\u0009|\u000A|\u000D/g, "");
  }
  function ge(y) {
    const E = y.path;
    E.length !== 0 && (y.scheme === "file" && E.length === 1 && aa(E[0]) || E.pop());
  }
  function Ye(y) {
    return y.username !== "" || y.password !== "";
  }
  function Ve(y) {
    return y.host === null || y.host === "" || y.cannotBeABaseURL || y.scheme === "file";
  }
  function aa(y) {
    return /^[A-Za-z]:$/.test(y);
  }
  function Pe(y, E, q, z, X) {
    if (this.pointer = 0, this.input = y, this.base = E || null, this.encodingOverride = q || "utf-8", this.stateOverride = X, this.url = z, this.failure = !1, this.parseError = !1, !this.url) {
      this.url = {
        scheme: "",
        username: "",
        password: "",
        host: null,
        port: null,
        path: [],
        query: null,
        fragment: null,
        cannotBeABaseURL: !1
      };
      const Ae = Fe(this.input);
      Ae !== this.input && (this.parseError = !0), this.input = Ae;
    }
    const be = Be(this.input);
    for (be !== this.input && (this.parseError = !0), this.input = be, this.state = X || "scheme start", this.buffer = "", this.atFlag = !1, this.arrFlag = !1, this.passwordTokenSeenFlag = !1, this.input = Lt.default.ucs2.decode(this.input); this.pointer <= this.input.length; ++this.pointer) {
      const Ae = this.input[this.pointer], Ka = isNaN(Ae) ? void 0 : String.fromCodePoint(Ae), Fa = this["parse " + this.state](Ae, Ka);
      if (Fa) {
        if (Fa === t) {
          this.failure = !0;
          break;
        }
      } else
        break;
    }
  }
  Pe.prototype["parse scheme start"] = function(E, q) {
    if (l(E))
      this.buffer += q.toLowerCase(), this.state = "scheme";
    else if (!this.stateOverride)
      this.state = "no scheme", --this.pointer;
    else
      return this.parseError = !0, t;
    return !0;
  }, Pe.prototype["parse scheme"] = function(E, q) {
    if (u(E) || E === 43 || E === 45 || E === 46)
      this.buffer += q.toLowerCase();
    else if (E === 58) {
      if (this.stateOverride && (R(this.url) && !L(this.buffer) || !R(this.url) && L(this.buffer) || (Ye(this.url) || this.url.port !== null) && this.buffer === "file" || this.url.scheme === "file" && (this.url.host === "" || this.url.host === null)) || (this.url.scheme = this.buffer, this.buffer = "", this.stateOverride))
        return !1;
      this.url.scheme === "file" ? ((this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) && (this.parseError = !0), this.state = "file") : R(this.url) && this.base !== null && this.base.scheme === this.url.scheme ? this.state = "special relative or authority" : R(this.url) ? this.state = "special authority slashes" : this.input[this.pointer + 1] === 47 ? (this.state = "path or authority", ++this.pointer) : (this.url.cannotBeABaseURL = !0, this.url.path.push(""), this.state = "cannot-be-a-base-URL path");
    } else if (!this.stateOverride)
      this.buffer = "", this.state = "no scheme", this.pointer = -1;
    else
      return this.parseError = !0, t;
    return !0;
  }, Pe.prototype["parse no scheme"] = function(E) {
    return this.base === null || this.base.cannotBeABaseURL && E !== 35 ? t : (this.base.cannotBeABaseURL && E === 35 ? (this.url.scheme = this.base.scheme, this.url.path = this.base.path.slice(), this.url.query = this.base.query, this.url.fragment = "", this.url.cannotBeABaseURL = !0, this.state = "fragment") : this.base.scheme === "file" ? (this.state = "file", --this.pointer) : (this.state = "relative", --this.pointer), !0);
  }, Pe.prototype["parse special relative or authority"] = function(E) {
    return E === 47 && this.input[this.pointer + 1] === 47 ? (this.state = "special authority ignore slashes", ++this.pointer) : (this.parseError = !0, this.state = "relative", --this.pointer), !0;
  }, Pe.prototype["parse path or authority"] = function(E) {
    return E === 47 ? this.state = "authority" : (this.state = "path", --this.pointer), !0;
  }, Pe.prototype["parse relative"] = function(E) {
    return this.url.scheme = this.base.scheme, isNaN(E) ? (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(), this.url.query = this.base.query) : E === 47 ? this.state = "relative slash" : E === 63 ? (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(), this.url.query = "", this.state = "query") : E === 35 ? (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(), this.url.query = this.base.query, this.url.fragment = "", this.state = "fragment") : R(this.url) && E === 92 ? (this.parseError = !0, this.state = "relative slash") : (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(0, this.base.path.length - 1), this.state = "path", --this.pointer), !0;
  }, Pe.prototype["parse relative slash"] = function(E) {
    return R(this.url) && (E === 47 || E === 92) ? (E === 92 && (this.parseError = !0), this.state = "special authority ignore slashes") : E === 47 ? this.state = "authority" : (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.state = "path", --this.pointer), !0;
  }, Pe.prototype["parse special authority slashes"] = function(E) {
    return E === 47 && this.input[this.pointer + 1] === 47 ? (this.state = "special authority ignore slashes", ++this.pointer) : (this.parseError = !0, this.state = "special authority ignore slashes", --this.pointer), !0;
  }, Pe.prototype["parse special authority ignore slashes"] = function(E) {
    return E !== 47 && E !== 92 ? (this.state = "authority", --this.pointer) : this.parseError = !0, !0;
  }, Pe.prototype["parse authority"] = function(E, q) {
    if (E === 64) {
      this.parseError = !0, this.atFlag && (this.buffer = "%40" + this.buffer), this.atFlag = !0;
      const z = r(this.buffer);
      for (let X = 0; X < z; ++X) {
        const be = this.buffer.codePointAt(X);
        if (be === 58 && !this.passwordTokenSeenFlag) {
          this.passwordTokenSeenFlag = !0;
          continue;
        }
        const Ae = V(be, G);
        this.passwordTokenSeenFlag ? this.url.password += Ae : this.url.username += Ae;
      }
      this.buffer = "";
    } else if (isNaN(E) || E === 47 || E === 63 || E === 35 || R(this.url) && E === 92) {
      if (this.atFlag && this.buffer === "")
        return this.parseError = !0, t;
      this.pointer -= r(this.buffer) + 1, this.buffer = "", this.state = "host";
    } else
      this.buffer += q;
    return !0;
  }, Pe.prototype["parse hostname"] = Pe.prototype["parse host"] = function(E, q) {
    if (this.stateOverride && this.url.scheme === "file")
      --this.pointer, this.state = "file host";
    else if (E === 58 && !this.arrFlag) {
      if (this.buffer === "")
        return this.parseError = !0, t;
      const z = j(this.buffer, R(this.url));
      if (z === t)
        return t;
      if (this.url.host = z, this.buffer = "", this.state = "port", this.stateOverride === "hostname")
        return !1;
    } else if (isNaN(E) || E === 47 || E === 63 || E === 35 || R(this.url) && E === 92) {
      if (--this.pointer, R(this.url) && this.buffer === "")
        return this.parseError = !0, t;
      if (this.stateOverride && this.buffer === "" && (Ye(this.url) || this.url.port !== null))
        return this.parseError = !0, !1;
      const z = j(this.buffer, R(this.url));
      if (z === t)
        return t;
      if (this.url.host = z, this.buffer = "", this.state = "path start", this.stateOverride)
        return !1;
    } else
      E === 91 ? this.arrFlag = !0 : E === 93 && (this.arrFlag = !1), this.buffer += q;
    return !0;
  }, Pe.prototype["parse port"] = function(E, q) {
    if (o(E))
      this.buffer += q;
    else if (isNaN(E) || E === 47 || E === 63 || E === 35 || R(this.url) && E === 92 || this.stateOverride) {
      if (this.buffer !== "") {
        const z = parseInt(this.buffer);
        if (z > Math.pow(2, 16) - 1)
          return this.parseError = !0, t;
        this.url.port = z === B(this.url.scheme) ? null : z, this.buffer = "";
      }
      if (this.stateOverride)
        return !1;
      this.state = "path start", --this.pointer;
    } else
      return this.parseError = !0, t;
    return !0;
  };
  const nt = new Set([47, 92, 63, 35]);
  Pe.prototype["parse file"] = function(E) {
    return this.url.scheme = "file", E === 47 || E === 92 ? (E === 92 && (this.parseError = !0), this.state = "file slash") : this.base !== null && this.base.scheme === "file" ? isNaN(E) ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), this.url.query = this.base.query) : E === 63 ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), this.url.query = "", this.state = "query") : E === 35 ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), this.url.query = this.base.query, this.url.fragment = "", this.state = "fragment") : (this.input.length - this.pointer - 1 == 0 || !h(E, this.input[this.pointer + 1]) || this.input.length - this.pointer - 1 >= 2 && !nt.has(this.input[this.pointer + 2]) ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), ge(this.url)) : this.parseError = !0, this.state = "path", --this.pointer) : (this.state = "path", --this.pointer), !0;
  }, Pe.prototype["parse file slash"] = function(E) {
    return E === 47 || E === 92 ? (E === 92 && (this.parseError = !0), this.state = "file host") : (this.base !== null && this.base.scheme === "file" && (x(this.base.path[0]) ? this.url.path.push(this.base.path[0]) : this.url.host = this.base.host), this.state = "path", --this.pointer), !0;
  }, Pe.prototype["parse file host"] = function(E, q) {
    if (isNaN(E) || E === 47 || E === 92 || E === 63 || E === 35)
      if (--this.pointer, !this.stateOverride && b(this.buffer))
        this.parseError = !0, this.state = "path";
      else if (this.buffer === "") {
        if (this.url.host = "", this.stateOverride)
          return !1;
        this.state = "path start";
      } else {
        let z = j(this.buffer, R(this.url));
        if (z === t)
          return t;
        if (z === "localhost" && (z = ""), this.url.host = z, this.stateOverride)
          return !1;
        this.buffer = "", this.state = "path start";
      }
    else
      this.buffer += q;
    return !0;
  }, Pe.prototype["parse path start"] = function(E) {
    return R(this.url) ? (E === 92 && (this.parseError = !0), this.state = "path", E !== 47 && E !== 92 && --this.pointer) : !this.stateOverride && E === 63 ? (this.url.query = "", this.state = "query") : !this.stateOverride && E === 35 ? (this.url.fragment = "", this.state = "fragment") : E !== void 0 && (this.state = "path", E !== 47 && --this.pointer), !0;
  }, Pe.prototype["parse path"] = function(E) {
    if (isNaN(E) || E === 47 || R(this.url) && E === 92 || !this.stateOverride && (E === 63 || E === 35)) {
      if (R(this.url) && E === 92 && (this.parseError = !0), c(this.buffer) ? (ge(this.url), E !== 47 && !(R(this.url) && E === 92) && this.url.path.push("")) : f(this.buffer) && E !== 47 && !(R(this.url) && E === 92) ? this.url.path.push("") : f(this.buffer) || (this.url.scheme === "file" && this.url.path.length === 0 && b(this.buffer) && (this.url.host !== "" && this.url.host !== null && (this.parseError = !0, this.url.host = ""), this.buffer = this.buffer[0] + ":"), this.url.path.push(this.buffer)), this.buffer = "", this.url.scheme === "file" && (E === void 0 || E === 63 || E === 35))
        for (; this.url.path.length > 1 && this.url.path[0] === ""; )
          this.parseError = !0, this.url.path.shift();
      E === 63 && (this.url.query = "", this.state = "query"), E === 35 && (this.url.fragment = "", this.state = "fragment");
    } else
      E === 37 && (!v(this.input[this.pointer + 1]) || !v(this.input[this.pointer + 2])) && (this.parseError = !0), this.buffer += V(E, F);
    return !0;
  }, Pe.prototype["parse cannot-be-a-base-URL path"] = function(E) {
    return E === 63 ? (this.url.query = "", this.state = "query") : E === 35 ? (this.url.fragment = "", this.state = "fragment") : (!isNaN(E) && E !== 37 && (this.parseError = !0), E === 37 && (!v(this.input[this.pointer + 1]) || !v(this.input[this.pointer + 2])) && (this.parseError = !0), isNaN(E) || (this.url.path[0] = this.url.path[0] + V(E, de))), !0;
  }, Pe.prototype["parse query"] = function(E, q) {
    if (isNaN(E) || !this.stateOverride && E === 35) {
      (!R(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") && (this.encodingOverride = "utf-8");
      const z = new Buffer(this.buffer);
      for (let X = 0; X < z.length; ++X)
        z[X] < 33 || z[X] > 126 || z[X] === 34 || z[X] === 35 || z[X] === 60 || z[X] === 62 ? this.url.query += Q(z[X]) : this.url.query += String.fromCodePoint(z[X]);
      this.buffer = "", E === 35 && (this.url.fragment = "", this.state = "fragment");
    } else
      E === 37 && (!v(this.input[this.pointer + 1]) || !v(this.input[this.pointer + 2])) && (this.parseError = !0), this.buffer += q;
    return !0;
  }, Pe.prototype["parse fragment"] = function(E) {
    return isNaN(E) || (E === 0 ? this.parseError = !0 : (E === 37 && (!v(this.input[this.pointer + 1]) || !v(this.input[this.pointer + 2])) && (this.parseError = !0), this.url.fragment += V(E, de))), !0;
  };
  function Qa(y, E) {
    let q = y.scheme + ":";
    if (y.host !== null ? (q += "//", (y.username !== "" || y.password !== "") && (q += y.username, y.password !== "" && (q += ":" + y.password), q += "@"), q += he(y.host), y.port !== null && (q += ":" + y.port)) : y.host === null && y.scheme === "file" && (q += "//"), y.cannotBeABaseURL)
      q += y.path[0];
    else
      for (const z of y.path)
        q += "/" + z;
    return y.query !== null && (q += "?" + y.query), !E && y.fragment !== null && (q += "#" + y.fragment), q;
  }
  function wa(y) {
    let E = y.scheme + "://";
    return E += he(y.host), y.port !== null && (E += ":" + y.port), E;
  }
  i.exports.serializeURL = Qa, i.exports.serializeURLOrigin = function(y) {
    switch (y.scheme) {
      case "blob":
        try {
          return i.exports.serializeURLOrigin(i.exports.parseURL(y.path[0]));
        } catch (E) {
          return "null";
        }
      case "ftp":
      case "gopher":
      case "http":
      case "https":
      case "ws":
      case "wss":
        return wa({
          scheme: y.scheme,
          host: y.host,
          port: y.port
        });
      case "file":
        return "file://";
      default:
        return "null";
    }
  }, i.exports.basicURLParse = function(y, E) {
    E === void 0 && (E = {});
    const q = new Pe(y, E.baseURL, E.encodingOverride, E.url, E.stateOverride);
    return q.failure ? "failure" : q.url;
  }, i.exports.setTheUsername = function(y, E) {
    y.username = "";
    const q = Lt.default.ucs2.decode(E);
    for (let z = 0; z < q.length; ++z)
      y.username += V(q[z], G);
  }, i.exports.setThePassword = function(y, E) {
    y.password = "";
    const q = Lt.default.ucs2.decode(E);
    for (let z = 0; z < q.length; ++z)
      y.password += V(q[z], G);
  }, i.exports.serializeHost = he, i.exports.cannotHaveAUsernamePasswordPort = Ve, i.exports.serializeInteger = function(y) {
    return String(y);
  }, i.exports.parseURL = function(y, E) {
    return E === void 0 && (E = {}), i.exports.basicURLParse(y, { baseURL: E.baseURL, encodingOverride: E.encodingOverride });
  };
}), O8 = class {
  constructor(e) {
    const t = e[0], r = e[1];
    let s = null;
    if (r !== void 0 && (s = Ce.basicURLParse(r), s === "failure"))
      throw new TypeError("Invalid base URL");
    const o = Ce.basicURLParse(t, { baseURL: s });
    if (o === "failure")
      throw new TypeError("Invalid URL");
    this._url = o;
  }
  get href() {
    return Ce.serializeURL(this._url);
  }
  set href(e) {
    const t = Ce.basicURLParse(e);
    if (t === "failure")
      throw new TypeError("Invalid URL");
    this._url = t;
  }
  get origin() {
    return Ce.serializeURLOrigin(this._url);
  }
  get protocol() {
    return this._url.scheme + ":";
  }
  set protocol(e) {
    Ce.basicURLParse(e + ":", { url: this._url, stateOverride: "scheme start" });
  }
  get username() {
    return this._url.username;
  }
  set username(e) {
    Ce.cannotHaveAUsernamePasswordPort(this._url) || Ce.setTheUsername(this._url, e);
  }
  get password() {
    return this._url.password;
  }
  set password(e) {
    Ce.cannotHaveAUsernamePasswordPort(this._url) || Ce.setThePassword(this._url, e);
  }
  get host() {
    const e = this._url;
    return e.host === null ? "" : e.port === null ? Ce.serializeHost(e.host) : Ce.serializeHost(e.host) + ":" + Ce.serializeInteger(e.port);
  }
  set host(e) {
    this._url.cannotBeABaseURL || Ce.basicURLParse(e, { url: this._url, stateOverride: "host" });
  }
  get hostname() {
    return this._url.host === null ? "" : Ce.serializeHost(this._url.host);
  }
  set hostname(e) {
    this._url.cannotBeABaseURL || Ce.basicURLParse(e, { url: this._url, stateOverride: "hostname" });
  }
  get port() {
    return this._url.port === null ? "" : Ce.serializeInteger(this._url.port);
  }
  set port(e) {
    Ce.cannotHaveAUsernamePasswordPort(this._url) || (e === "" ? this._url.port = null : Ce.basicURLParse(e, { url: this._url, stateOverride: "port" }));
  }
  get pathname() {
    return this._url.cannotBeABaseURL ? this._url.path[0] : this._url.path.length === 0 ? "" : "/" + this._url.path.join("/");
  }
  set pathname(e) {
    this._url.cannotBeABaseURL || (this._url.path = [], Ce.basicURLParse(e, { url: this._url, stateOverride: "path start" }));
  }
  get search() {
    return this._url.query === null || this._url.query === "" ? "" : "?" + this._url.query;
  }
  set search(e) {
    const t = this._url;
    if (e === "") {
      t.query = null;
      return;
    }
    const r = e[0] === "?" ? e.substring(1) : e;
    t.query = "", Ce.basicURLParse(r, { url: t, stateOverride: "query" });
  }
  get hash() {
    return this._url.fragment === null || this._url.fragment === "" ? "" : "#" + this._url.fragment;
  }
  set hash(e) {
    if (e === "") {
      this._url.fragment = null;
      return;
    }
    const t = e[0] === "#" ? e.substring(1) : e;
    this._url.fragment = "", Ce.basicURLParse(t, { url: this._url, stateOverride: "fragment" });
  }
  toJSON() {
    return this.href;
  }
}, kl = {
  implementation: O8
}, k8 = Ee(function(i) {
  const e = Al.implSymbol;
  function t(r) {
    if (!this || this[e] || !(this instanceof t))
      throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");
    if (arguments.length < 1)
      throw new TypeError("Failed to construct 'URL': 1 argument required, but only " + arguments.length + " present.");
    const s = [];
    for (let o = 0; o < arguments.length && o < 2; ++o)
      s[o] = arguments[o];
    s[0] = za.USVString(s[0]), s[1] !== void 0 && (s[1] = za.USVString(s[1])), i.exports.setup(this, s);
  }
  t.prototype.toJSON = function() {
    if (!this || !i.exports.is(this))
      throw new TypeError("Illegal invocation");
    const s = [];
    for (let o = 0; o < arguments.length && o < 0; ++o)
      s[o] = arguments[o];
    return this[e].toJSON.apply(this[e], s);
  }, Object.defineProperty(t.prototype, "href", {
    get() {
      return this[e].href;
    },
    set(r) {
      r = za.USVString(r), this[e].href = r;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.toString = function() {
    if (!this || !i.exports.is(this))
      throw new TypeError("Illegal invocation");
    return this.href;
  }, Object.defineProperty(t.prototype, "origin", {
    get() {
      return this[e].origin;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "protocol", {
    get() {
      return this[e].protocol;
    },
    set(r) {
      r = za.USVString(r), this[e].protocol = r;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "username", {
    get() {
      return this[e].username;
    },
    set(r) {
      r = za.USVString(r), this[e].username = r;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "password", {
    get() {
      return this[e].password;
    },
    set(r) {
      r = za.USVString(r), this[e].password = r;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "host", {
    get() {
      return this[e].host;
    },
    set(r) {
      r = za.USVString(r), this[e].host = r;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "hostname", {
    get() {
      return this[e].hostname;
    },
    set(r) {
      r = za.USVString(r), this[e].hostname = r;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "port", {
    get() {
      return this[e].port;
    },
    set(r) {
      r = za.USVString(r), this[e].port = r;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "pathname", {
    get() {
      return this[e].pathname;
    },
    set(r) {
      r = za.USVString(r), this[e].pathname = r;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "search", {
    get() {
      return this[e].search;
    },
    set(r) {
      r = za.USVString(r), this[e].search = r;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "hash", {
    get() {
      return this[e].hash;
    },
    set(r) {
      r = za.USVString(r), this[e].hash = r;
    },
    enumerable: !0,
    configurable: !0
  }), i.exports = {
    is(r) {
      return !!r && r[e] instanceof kl.implementation;
    },
    create(r, s) {
      let o = Object.create(t.prototype);
      return this.setup(o, r, s), o;
    },
    setup(r, s, o) {
      o || (o = {}), o.wrapper = r, r[e] = new kl.implementation(s, o), r[e][Al.wrapperSymbol] = r;
    },
    interface: t,
    expose: {
      Window: { URL: t },
      Worker: { URL: t }
    }
  };
}), N8 = k8.interface, F8 = Ce.serializeURL, G8 = Ce.serializeURLOrigin, L8 = Ce.basicURLParse, U8 = Ce.setTheUsername, I8 = Ce.setThePassword, B8 = Ce.serializeHost, V8 = Ce.serializeInteger, j8 = Ce.parseURL, Nl = {
  URL: N8,
  serializeURL: F8,
  serializeURLOrigin: G8,
  basicURLParse: L8,
  setTheUsername: U8,
  setThePassword: I8,
  serializeHost: B8,
  serializeInteger: V8,
  parseURL: j8
};
const M8 = na.default.Readable, xt = Symbol("buffer"), bp = Symbol("type");
class Pi {
  constructor() {
    this[bp] = "";
    const e = arguments[0], t = arguments[1], r = [];
    let s = 0;
    if (e) {
      const l = e, u = Number(l.length);
      for (let v = 0; v < u; v++) {
        const f = l[v];
        let c;
        f instanceof Buffer ? c = f : ArrayBuffer.isView(f) ? c = Buffer.from(f.buffer, f.byteOffset, f.byteLength) : f instanceof ArrayBuffer ? c = Buffer.from(f) : f instanceof Pi ? c = f[xt] : c = Buffer.from(typeof f == "string" ? f : String(f)), s += c.length, r.push(c);
      }
    }
    this[xt] = Buffer.concat(r);
    let o = t && t.type !== void 0 && String(t.type).toLowerCase();
    o && !/[^\u0020-\u007E]/.test(o) && (this[bp] = o);
  }
  get size() {
    return this[xt].length;
  }
  get type() {
    return this[bp];
  }
  text() {
    return Promise.resolve(this[xt].toString());
  }
  arrayBuffer() {
    const e = this[xt], t = e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength);
    return Promise.resolve(t);
  }
  stream() {
    const e = new M8();
    return e._read = function() {
    }, e.push(this[xt]), e.push(null), e;
  }
  toString() {
    return "[object Blob]";
  }
  slice() {
    const e = this.size, t = arguments[0], r = arguments[1];
    let s, o;
    t === void 0 ? s = 0 : t < 0 ? s = Math.max(e + t, 0) : s = Math.min(t, e), r === void 0 ? o = e : r < 0 ? o = Math.max(e + r, 0) : o = Math.min(r, e);
    const l = Math.max(o - s, 0), v = this[xt].slice(s, s + l), f = new Pi([], { type: arguments[2] });
    return f[xt] = v, f;
  }
}
Object.defineProperties(Pi.prototype, {
  size: { enumerable: !0 },
  type: { enumerable: !0 },
  slice: { enumerable: !0 }
}), Object.defineProperty(Pi.prototype, Symbol.toStringTag, {
  value: "Blob",
  writable: !1,
  enumerable: !1,
  configurable: !0
});
function ua(i, e, t) {
  Error.call(this, i), this.message = i, this.type = e, t && (this.code = this.errno = t.code), Error.captureStackTrace(this, this.constructor);
}
ua.prototype = Object.create(Error.prototype), ua.prototype.constructor = ua, ua.prototype.name = "FetchError";
let _p;
try {
  _p = require("encoding").convert;
} catch (i) {
}
const yt = Symbol("Body internals"), Fl = na.default.PassThrough;
function Ze(i) {
  var e = this, t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = t.size;
  let s = r === void 0 ? 0 : r;
  var o = t.timeout;
  let l = o === void 0 ? 0 : o;
  i == null ? i = null : Gl(i) ? i = Buffer.from(i.toString()) : cn(i) || Buffer.isBuffer(i) || (Object.prototype.toString.call(i) === "[object ArrayBuffer]" ? i = Buffer.from(i) : ArrayBuffer.isView(i) ? i = Buffer.from(i.buffer, i.byteOffset, i.byteLength) : i instanceof na.default || (i = Buffer.from(String(i)))), this[yt] = {
    body: i,
    disturbed: !1,
    error: null
  }, this.size = s, this.timeout = l, i instanceof na.default && i.on("error", function(u) {
    const v = u.name === "AbortError" ? u : new ua(`Invalid response body while trying to fetch ${e.url}: ${u.message}`, "system", u);
    e[yt].error = v;
  });
}
Ze.prototype = {
  get body() {
    return this[yt].body;
  },
  get bodyUsed() {
    return this[yt].disturbed;
  },
  arrayBuffer() {
    return Di.call(this).then(function(i) {
      return i.buffer.slice(i.byteOffset, i.byteOffset + i.byteLength);
    });
  },
  blob() {
    let i = this.headers && this.headers.get("content-type") || "";
    return Di.call(this).then(function(e) {
      return Object.assign(new Pi([], {
        type: i.toLowerCase()
      }), {
        [xt]: e
      });
    });
  },
  json() {
    var i = this;
    return Di.call(this).then(function(e) {
      try {
        return JSON.parse(e.toString());
      } catch (t) {
        return Ze.Promise.reject(new ua(`invalid json response body at ${i.url} reason: ${t.message}`, "invalid-json"));
      }
    });
  },
  text() {
    return Di.call(this).then(function(i) {
      return i.toString();
    });
  },
  buffer() {
    return Di.call(this);
  },
  textConverted() {
    var i = this;
    return Di.call(this).then(function(e) {
      return q8(e, i.headers);
    });
  }
}, Object.defineProperties(Ze.prototype, {
  body: { enumerable: !0 },
  bodyUsed: { enumerable: !0 },
  arrayBuffer: { enumerable: !0 },
  blob: { enumerable: !0 },
  json: { enumerable: !0 },
  text: { enumerable: !0 }
}), Ze.mixIn = function(i) {
  for (const e of Object.getOwnPropertyNames(Ze.prototype))
    if (!(e in i)) {
      const t = Object.getOwnPropertyDescriptor(Ze.prototype, e);
      Object.defineProperty(i, e, t);
    }
};
function Di() {
  var i = this;
  if (this[yt].disturbed)
    return Ze.Promise.reject(new TypeError(`body used already for: ${this.url}`));
  if (this[yt].disturbed = !0, this[yt].error)
    return Ze.Promise.reject(this[yt].error);
  let e = this.body;
  if (e === null)
    return Ze.Promise.resolve(Buffer.alloc(0));
  if (cn(e) && (e = e.stream()), Buffer.isBuffer(e))
    return Ze.Promise.resolve(e);
  if (!(e instanceof na.default))
    return Ze.Promise.resolve(Buffer.alloc(0));
  let t = [], r = 0, s = !1;
  return new Ze.Promise(function(o, l) {
    let u;
    i.timeout && (u = setTimeout(function() {
      s = !0, l(new ua(`Response timeout while trying to fetch ${i.url} (over ${i.timeout}ms)`, "body-timeout"));
    }, i.timeout)), e.on("error", function(v) {
      v.name === "AbortError" ? (s = !0, l(v)) : l(new ua(`Invalid response body while trying to fetch ${i.url}: ${v.message}`, "system", v));
    }), e.on("data", function(v) {
      if (!(s || v === null)) {
        if (i.size && r + v.length > i.size) {
          s = !0, l(new ua(`content size at ${i.url} over limit: ${i.size}`, "max-size"));
          return;
        }
        r += v.length, t.push(v);
      }
    }), e.on("end", function() {
      if (!s) {
        clearTimeout(u);
        try {
          o(Buffer.concat(t, r));
        } catch (v) {
          l(new ua(`Could not create Buffer from response body for ${i.url}: ${v.message}`, "system", v));
        }
      }
    });
  });
}
function q8(i, e) {
  if (typeof _p != "function")
    throw new Error("The package `encoding` must be installed to use the textConverted() function");
  const t = e.get("content-type");
  let r = "utf-8", s, o;
  return t && (s = /charset=([^;]*)/i.exec(t)), o = i.slice(0, 1024).toString(), !s && o && (s = /<meta.+?charset=(['"])(.+?)\1/i.exec(o)), !s && o && (s = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(o), s || (s = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(o), s && s.pop()), s && (s = /charset=(.*)/i.exec(s.pop()))), !s && o && (s = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(o)), s && (r = s.pop(), (r === "gb2312" || r === "gbk") && (r = "gb18030")), _p(i, "UTF-8", r).toString();
}
function Gl(i) {
  return typeof i != "object" || typeof i.append != "function" || typeof i.delete != "function" || typeof i.get != "function" || typeof i.getAll != "function" || typeof i.has != "function" || typeof i.set != "function" ? !1 : i.constructor.name === "URLSearchParams" || Object.prototype.toString.call(i) === "[object URLSearchParams]" || typeof i.sort == "function";
}
function cn(i) {
  return typeof i == "object" && typeof i.arrayBuffer == "function" && typeof i.type == "string" && typeof i.stream == "function" && typeof i.constructor == "function" && typeof i.constructor.name == "string" && /^(Blob|File)$/.test(i.constructor.name) && /^(Blob|File)$/.test(i[Symbol.toStringTag]);
}
function Ll(i) {
  let e, t, r = i.body;
  if (i.bodyUsed)
    throw new Error("cannot clone body after it is used");
  return r instanceof na.default && typeof r.getBoundary != "function" && (e = new Fl(), t = new Fl(), r.pipe(e), r.pipe(t), i[yt].body = e, r = t), r;
}
function Ul(i) {
  return i === null ? null : typeof i == "string" ? "text/plain;charset=UTF-8" : Gl(i) ? "application/x-www-form-urlencoded;charset=UTF-8" : cn(i) ? i.type || null : Buffer.isBuffer(i) || Object.prototype.toString.call(i) === "[object ArrayBuffer]" || ArrayBuffer.isView(i) ? null : typeof i.getBoundary == "function" ? `multipart/form-data;boundary=${i.getBoundary()}` : i instanceof na.default ? null : "text/plain;charset=UTF-8";
}
function Il(i) {
  const e = i.body;
  return e === null ? 0 : cn(e) ? e.size : Buffer.isBuffer(e) ? e.length : e && typeof e.getLengthSync == "function" && (e._lengthRetrievers && e._lengthRetrievers.length == 0 || e.hasKnownLength && e.hasKnownLength()) ? e.getLengthSync() : null;
}
function z8(i, e) {
  const t = e.body;
  t === null ? i.end() : cn(t) ? t.stream().pipe(i) : Buffer.isBuffer(t) ? (i.write(t), i.end()) : t.pipe(i);
}
Ze.Promise = global.Promise;
const Bl = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/, xp = /[^\t\x20-\x7e\x80-\xff]/;
function un(i) {
  if (i = `${i}`, Bl.test(i) || i === "")
    throw new TypeError(`${i} is not a legal HTTP header name`);
}
function Vl(i) {
  if (i = `${i}`, xp.test(i))
    throw new TypeError(`${i} is not a legal HTTP header value`);
}
function Oi(i, e) {
  e = e.toLowerCase();
  for (const t in i)
    if (t.toLowerCase() === e)
      return t;
}
const He = Symbol("map");
class at {
  constructor() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : void 0;
    if (this[He] = Object.create(null), e instanceof at) {
      const t = e.raw(), r = Object.keys(t);
      for (const s of r)
        for (const o of t[s])
          this.append(s, o);
      return;
    }
    if (e != null)
      if (typeof e == "object") {
        const t = e[Symbol.iterator];
        if (t != null) {
          if (typeof t != "function")
            throw new TypeError("Header pairs must be iterable");
          const r = [];
          for (const s of e) {
            if (typeof s != "object" || typeof s[Symbol.iterator] != "function")
              throw new TypeError("Each header pair must be iterable");
            r.push(Array.from(s));
          }
          for (const s of r) {
            if (s.length !== 2)
              throw new TypeError("Each header pair must be a name/value tuple");
            this.append(s[0], s[1]);
          }
        } else
          for (const r of Object.keys(e)) {
            const s = e[r];
            this.append(r, s);
          }
      } else
        throw new TypeError("Provided initializer must be an object");
  }
  get(e) {
    e = `${e}`, un(e);
    const t = Oi(this[He], e);
    return t === void 0 ? null : this[He][t].join(", ");
  }
  forEach(e) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0, r = yp(this), s = 0;
    for (; s < r.length; ) {
      var o = r[s];
      const l = o[0], u = o[1];
      e.call(t, u, l, this), r = yp(this), s++;
    }
  }
  set(e, t) {
    e = `${e}`, t = `${t}`, un(e), Vl(t);
    const r = Oi(this[He], e);
    this[He][r !== void 0 ? r : e] = [t];
  }
  append(e, t) {
    e = `${e}`, t = `${t}`, un(e), Vl(t);
    const r = Oi(this[He], e);
    r !== void 0 ? this[He][r].push(t) : this[He][e] = [t];
  }
  has(e) {
    return e = `${e}`, un(e), Oi(this[He], e) !== void 0;
  }
  delete(e) {
    e = `${e}`, un(e);
    const t = Oi(this[He], e);
    t !== void 0 && delete this[He][t];
  }
  raw() {
    return this[He];
  }
  keys() {
    return Tp(this, "key");
  }
  values() {
    return Tp(this, "value");
  }
  [Symbol.iterator]() {
    return Tp(this, "key+value");
  }
}
at.prototype.entries = at.prototype[Symbol.iterator], Object.defineProperty(at.prototype, Symbol.toStringTag, {
  value: "Headers",
  writable: !1,
  enumerable: !1,
  configurable: !0
}), Object.defineProperties(at.prototype, {
  get: { enumerable: !0 },
  forEach: { enumerable: !0 },
  set: { enumerable: !0 },
  append: { enumerable: !0 },
  has: { enumerable: !0 },
  delete: { enumerable: !0 },
  keys: { enumerable: !0 },
  values: { enumerable: !0 },
  entries: { enumerable: !0 }
});
function yp(i) {
  let e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "key+value";
  return Object.keys(i[He]).sort().map(e === "key" ? function(r) {
    return r.toLowerCase();
  } : e === "value" ? function(r) {
    return i[He][r].join(", ");
  } : function(r) {
    return [r.toLowerCase(), i[He][r].join(", ")];
  });
}
const Ep = Symbol("internal");
function Tp(i, e) {
  const t = Object.create(Sp);
  return t[Ep] = {
    target: i,
    kind: e,
    index: 0
  }, t;
}
const Sp = Object.setPrototypeOf({
  next() {
    if (!this || Object.getPrototypeOf(this) !== Sp)
      throw new TypeError("Value of `this` is not a HeadersIterator");
    var i = this[Ep];
    const e = i.target, t = i.kind, r = i.index, s = yp(e, t), o = s.length;
    return r >= o ? {
      value: void 0,
      done: !0
    } : (this[Ep].index = r + 1, {
      value: s[r],
      done: !1
    });
  }
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));
Object.defineProperty(Sp, Symbol.toStringTag, {
  value: "HeadersIterator",
  writable: !1,
  enumerable: !1,
  configurable: !0
});
function $8(i) {
  const e = Object.assign({ __proto__: null }, i[He]), t = Oi(i[He], "Host");
  return t !== void 0 && (e[t] = e[t][0]), e;
}
function H8(i) {
  const e = new at();
  for (const t of Object.keys(i))
    if (!Bl.test(t))
      if (Array.isArray(i[t]))
        for (const r of i[t])
          xp.test(r) || (e[He][t] === void 0 ? e[He][t] = [r] : e[He][t].push(r));
      else
        xp.test(i[t]) || (e[He][t] = [i[t]]);
  return e;
}
const jt = Symbol("Response internals"), W8 = bt.default.STATUS_CODES;
class tt {
  constructor() {
    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    Ze.call(this, e, t);
    const r = t.status || 200, s = new at(t.headers);
    if (e != null && !s.has("Content-Type")) {
      const o = Ul(e);
      o && s.append("Content-Type", o);
    }
    this[jt] = {
      url: t.url,
      status: r,
      statusText: t.statusText || W8[r],
      headers: s,
      counter: t.counter
    };
  }
  get url() {
    return this[jt].url || "";
  }
  get status() {
    return this[jt].status;
  }
  get ok() {
    return this[jt].status >= 200 && this[jt].status < 300;
  }
  get redirected() {
    return this[jt].counter > 0;
  }
  get statusText() {
    return this[jt].statusText;
  }
  get headers() {
    return this[jt].headers;
  }
  clone() {
    return new tt(Ll(this), {
      url: this.url,
      status: this.status,
      statusText: this.statusText,
      headers: this.headers,
      ok: this.ok,
      redirected: this.redirected
    });
  }
}
Ze.mixIn(tt.prototype), Object.defineProperties(tt.prototype, {
  url: { enumerable: !0 },
  status: { enumerable: !0 },
  ok: { enumerable: !0 },
  redirected: { enumerable: !0 },
  statusText: { enumerable: !0 },
  headers: { enumerable: !0 },
  clone: { enumerable: !0 }
}), Object.defineProperty(tt.prototype, Symbol.toStringTag, {
  value: "Response",
  writable: !1,
  enumerable: !1,
  configurable: !0
});
const Et = Symbol("Request internals"), Q8 = Ea.default.URL || Nl.URL, K8 = Ea.default.parse, Y8 = Ea.default.format;
function Ap(i) {
  return /^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(i) && (i = new Q8(i).toString()), K8(i);
}
const J8 = "destroy" in na.default.Readable.prototype;
function _r(i) {
  return typeof i == "object" && typeof i[Et] == "object";
}
function Z8(i) {
  const e = i && typeof i == "object" && Object.getPrototypeOf(i);
  return !!(e && e.constructor.name === "AbortSignal");
}
class si {
  constructor(e) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r;
    _r(e) ? r = Ap(e.url) : (e && e.href ? r = Ap(e.href) : r = Ap(`${e}`), e = {});
    let s = t.method || e.method || "GET";
    if (s = s.toUpperCase(), (t.body != null || _r(e) && e.body !== null) && (s === "GET" || s === "HEAD"))
      throw new TypeError("Request with GET/HEAD method cannot have body");
    let o = t.body != null ? t.body : _r(e) && e.body !== null ? Ll(e) : null;
    Ze.call(this, o, {
      timeout: t.timeout || e.timeout || 0,
      size: t.size || e.size || 0
    });
    const l = new at(t.headers || e.headers || {});
    if (o != null && !l.has("Content-Type")) {
      const v = Ul(o);
      v && l.append("Content-Type", v);
    }
    let u = _r(e) ? e.signal : null;
    if ("signal" in t && (u = t.signal), u != null && !Z8(u))
      throw new TypeError("Expected signal to be an instanceof AbortSignal");
    this[Et] = {
      method: s,
      redirect: t.redirect || e.redirect || "follow",
      headers: l,
      parsedURL: r,
      signal: u
    }, this.follow = t.follow !== void 0 ? t.follow : e.follow !== void 0 ? e.follow : 20, this.compress = t.compress !== void 0 ? t.compress : e.compress !== void 0 ? e.compress : !0, this.counter = t.counter || e.counter || 0, this.agent = t.agent || e.agent;
  }
  get method() {
    return this[Et].method;
  }
  get url() {
    return Y8(this[Et].parsedURL);
  }
  get headers() {
    return this[Et].headers;
  }
  get redirect() {
    return this[Et].redirect;
  }
  get signal() {
    return this[Et].signal;
  }
  clone() {
    return new si(this);
  }
}
Ze.mixIn(si.prototype), Object.defineProperty(si.prototype, Symbol.toStringTag, {
  value: "Request",
  writable: !1,
  enumerable: !1,
  configurable: !0
}), Object.defineProperties(si.prototype, {
  method: { enumerable: !0 },
  url: { enumerable: !0 },
  headers: { enumerable: !0 },
  redirect: { enumerable: !0 },
  clone: { enumerable: !0 },
  signal: { enumerable: !0 }
});
function X8(i) {
  const e = i[Et].parsedURL, t = new at(i[Et].headers);
  if (t.has("Accept") || t.set("Accept", "*/*"), !e.protocol || !e.hostname)
    throw new TypeError("Only absolute URLs are supported");
  if (!/^https?:$/.test(e.protocol))
    throw new TypeError("Only HTTP(S) protocols are supported");
  if (i.signal && i.body instanceof na.default.Readable && !J8)
    throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");
  let r = null;
  if (i.body == null && /^(POST|PUT)$/i.test(i.method) && (r = "0"), i.body != null) {
    const o = Il(i);
    typeof o == "number" && (r = String(o));
  }
  r && t.set("Content-Length", r), t.has("User-Agent") || t.set("User-Agent", "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"), i.compress && !t.has("Accept-Encoding") && t.set("Accept-Encoding", "gzip,deflate");
  let s = i.agent;
  return typeof s == "function" && (s = s(e)), !t.has("Connection") && !s && t.set("Connection", "close"), Object.assign({}, e, {
    method: i.method,
    headers: $8(t),
    agent: s
  });
}
function mn(i) {
  Error.call(this, i), this.type = "aborted", this.message = i, Error.captureStackTrace(this, this.constructor);
}
mn.prototype = Object.create(Error.prototype), mn.prototype.constructor = mn, mn.prototype.name = "AbortError";
const fn = Ea.default.URL || Nl.URL, jl = na.default.PassThrough, e7 = function(e, t) {
  const r = new fn(t).hostname, s = new fn(e).hostname;
  return r === s || r[r.length - s.length - 1] === "." && r.endsWith(s);
}, a7 = function(e, t) {
  const r = new fn(t).protocol, s = new fn(e).protocol;
  return r === s;
};
function Mt(i, e) {
  if (!Mt.Promise)
    throw new Error("native promise missing, set fetch.Promise to your favorite alternative");
  return Ze.Promise = Mt.Promise, new Mt.Promise(function(t, r) {
    const s = new si(i, e), o = X8(s), l = (o.protocol === "https:" ? ti.default : bt.default).request, u = s.signal;
    let v = null;
    const f = function() {
      let D = new mn("The user aborted a request.");
      r(D), s.body && s.body instanceof na.default.Readable && Rp(s.body, D), !(!v || !v.body) && v.body.emit("error", D);
    };
    if (u && u.aborted) {
      f();
      return;
    }
    const c = function() {
      f(), x();
    }, h = l(o);
    let b;
    u && u.addEventListener("abort", c);
    function x() {
      h.abort(), u && u.removeEventListener("abort", c), clearTimeout(b);
    }
    s.timeout && h.once("socket", function(S) {
      b = setTimeout(function() {
        r(new ua(`network timeout at: ${s.url}`, "request-timeout")), x();
      }, s.timeout);
    }), h.on("error", function(S) {
      r(new ua(`request to ${s.url} failed, reason: ${S.message}`, "system", S)), v && v.body && Rp(v.body, S), x();
    }), t7(h, function(S) {
      u && u.aborted || v && v.body && Rp(v.body, S);
    }), parseInt(process.version.substring(1)) < 14 && h.on("socket", function(S) {
      S.addListener("close", function(D) {
        const L = S.listenerCount("data") > 0;
        if (v && L && !D && !(u && u.aborted)) {
          const R = new Error("Premature close");
          R.code = "ERR_STREAM_PREMATURE_CLOSE", v.body.emit("error", R);
        }
      });
    }), h.on("response", function(S) {
      clearTimeout(b);
      const D = H8(S.headers);
      if (Mt.isRedirect(S.statusCode)) {
        const ee = D.get("Location");
        let re = null;
        try {
          re = ee === null ? null : new fn(ee, s.url).toString();
        } catch (de) {
          if (s.redirect !== "manual") {
            r(new ua(`uri requested responds with an invalid redirect URL: ${ee}`, "invalid-redirect")), x();
            return;
          }
        }
        switch (s.redirect) {
          case "error":
            r(new ua(`uri requested responds with a redirect, redirect mode is set to error: ${s.url}`, "no-redirect")), x();
            return;
          case "manual":
            if (re !== null)
              try {
                D.set("Location", re);
              } catch (ne) {
                r(ne);
              }
            break;
          case "follow":
            if (re === null)
              break;
            if (s.counter >= s.follow) {
              r(new ua(`maximum redirect reached at: ${s.url}`, "max-redirect")), x();
              return;
            }
            const de = {
              headers: new at(s.headers),
              follow: s.follow,
              counter: s.counter + 1,
              agent: s.agent,
              compress: s.compress,
              method: s.method,
              body: s.body,
              signal: s.signal,
              timeout: s.timeout,
              size: s.size
            };
            if (!e7(s.url, re) || !a7(s.url, re))
              for (const ne of ["authorization", "www-authenticate", "cookie", "cookie2"])
                de.headers.delete(ne);
            if (S.statusCode !== 303 && s.body && Il(s) === null) {
              r(new ua("Cannot follow redirect with body being a readable stream", "unsupported-redirect")), x();
              return;
            }
            (S.statusCode === 303 || (S.statusCode === 301 || S.statusCode === 302) && s.method === "POST") && (de.method = "GET", de.body = void 0, de.headers.delete("content-length")), t(Mt(new si(re, de))), x();
            return;
        }
      }
      S.once("end", function() {
        u && u.removeEventListener("abort", c);
      });
      let L = S.pipe(new jl());
      const R = {
        url: s.url,
        status: S.statusCode,
        statusText: S.statusMessage,
        headers: D,
        size: s.size,
        timeout: s.timeout,
        counter: s.counter
      }, B = D.get("Content-Encoding");
      if (!s.compress || s.method === "HEAD" || B === null || S.statusCode === 204 || S.statusCode === 304) {
        v = new tt(L, R), t(v);
        return;
      }
      const Q = {
        flush: Ut.default.Z_SYNC_FLUSH,
        finishFlush: Ut.default.Z_SYNC_FLUSH
      };
      if (B == "gzip" || B == "x-gzip") {
        L = L.pipe(Ut.default.createGunzip(Q)), v = new tt(L, R), t(v);
        return;
      }
      if (B == "deflate" || B == "x-deflate") {
        const ee = S.pipe(new jl());
        ee.once("data", function(re) {
          (re[0] & 15) == 8 ? L = L.pipe(Ut.default.createInflate()) : L = L.pipe(Ut.default.createInflateRaw()), v = new tt(L, R), t(v);
        }), ee.on("end", function() {
          v || (v = new tt(L, R), t(v));
        });
        return;
      }
      if (B == "br" && typeof Ut.default.createBrotliDecompress == "function") {
        L = L.pipe(Ut.default.createBrotliDecompress()), v = new tt(L, R), t(v);
        return;
      }
      v = new tt(L, R), t(v);
    }), z8(h, s);
  });
}
function t7(i, e) {
  let t;
  i.on("socket", function(r) {
    t = r;
  }), i.on("response", function(r) {
    const s = r.headers;
    s["transfer-encoding"] === "chunked" && !s["content-length"] && r.once("close", function(o) {
      if (t.listenerCount("data") > 0 && !o) {
        const u = new Error("Premature close");
        u.code = "ERR_STREAM_PREMATURE_CLOSE", e(u);
      }
    });
  });
}
function Rp(i, e) {
  i.destroy ? i.destroy(e) : (i.emit("error", e), i.end());
}
Mt.isRedirect = function(i) {
  return i === 301 || i === 302 || i === 303 || i === 307 || i === 308;
}, Mt.Promise = global.Promise;
class Ml extends Error {
  constructor(e) {
    super(e);
    Error.captureStackTrace && Error.captureStackTrace(this, this.constructor), this.name = "Deprecation";
  }
}
var ql = zl;
function zl(i, e) {
  if (i && e)
    return zl(i)(e);
  if (typeof i != "function")
    throw new TypeError("need wrapper function");
  return Object.keys(i).forEach(function(r) {
    t[r] = i[r];
  }), t;
  function t() {
    for (var r = new Array(arguments.length), s = 0; s < r.length; s++)
      r[s] = arguments[s];
    var o = i.apply(this, r), l = r[r.length - 1];
    return typeof o == "function" && o !== l && Object.keys(l).forEach(function(u) {
      o[u] = l[u];
    }), o;
  }
}
var Cp = ql(xr), i7 = ql($l);
xr.proto = xr(function() {
  Object.defineProperty(Function.prototype, "once", {
    value: function() {
      return xr(this);
    },
    configurable: !0
  }), Object.defineProperty(Function.prototype, "onceStrict", {
    value: function() {
      return $l(this);
    },
    configurable: !0
  });
});
function xr(i) {
  var e = function() {
    return e.called ? e.value : (e.called = !0, e.value = i.apply(this, arguments));
  };
  return e.called = !1, e;
}
function $l(i) {
  var e = function() {
    if (e.called)
      throw new Error(e.onceError);
    return e.called = !0, e.value = i.apply(this, arguments);
  }, t = i.name || "Function wrapped with `once`";
  return e.onceError = t + " shouldn't be called more than once", e.called = !1, e;
}
Cp.strict = i7;
const n7 = Cp((i) => console.warn(i)), r7 = Cp((i) => console.warn(i));
class hn extends Error {
  constructor(e, t, r) {
    super(e);
    Error.captureStackTrace && Error.captureStackTrace(this, this.constructor), this.name = "HttpError", this.status = t;
    let s;
    "headers" in r && typeof r.headers != "undefined" && (s = r.headers), "response" in r && (this.response = r.response, s = r.response.headers);
    const o = Object.assign({}, r.request);
    r.request.headers.authorization && (o.headers = Object.assign({}, r.request.headers, {
      authorization: r.request.headers.authorization.replace(/ .*$/, " [REDACTED]")
    })), o.url = o.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]"), this.request = o, Object.defineProperty(this, "code", {
      get() {
        return n7(new Ml("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")), t;
      }
    }), Object.defineProperty(this, "headers", {
      get() {
        return r7(new Ml("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")), s || {};
      }
    });
  }
}
const s7 = "5.6.3";
function p7(i) {
  return i.arrayBuffer();
}
function Hl(i) {
  const e = i.request && i.request.log ? i.request.log : console;
  (wl(i.body) || Array.isArray(i.body)) && (i.body = JSON.stringify(i.body));
  let t = {}, r, s;
  return (i.request && i.request.fetch || Mt)(i.url, Object.assign({
    method: i.method,
    body: i.body,
    headers: i.headers,
    redirect: i.redirect
  }, i.request)).then(async (l) => {
    s = l.url, r = l.status;
    for (const u of l.headers)
      t[u[0]] = u[1];
    if ("deprecation" in t) {
      const u = t.link && t.link.match(/<([^>]+)>; rel="deprecation"/), v = u && u.pop();
      e.warn(`[@octokit/request] "${i.method} ${i.url}" is deprecated. It is scheduled to be removed on ${t.sunset}${v ? `. See ${v}` : ""}`);
    }
    if (!(r === 204 || r === 205)) {
      if (i.method === "HEAD") {
        if (r < 400)
          return;
        throw new hn(l.statusText, r, {
          response: {
            url: s,
            status: r,
            headers: t,
            data: void 0
          },
          request: i
        });
      }
      if (r === 304)
        throw new hn("Not modified", r, {
          response: {
            url: s,
            status: r,
            headers: t,
            data: await Pp(l)
          },
          request: i
        });
      if (r >= 400) {
        const u = await Pp(l);
        throw new hn(o7(u), r, {
          response: {
            url: s,
            status: r,
            headers: t,
            data: u
          },
          request: i
        });
      }
      return Pp(l);
    }
  }).then((l) => ({
    status: r,
    url: s,
    headers: t,
    data: l
  })).catch((l) => {
    throw l instanceof hn ? l : new hn(l.message, 500, {
      request: i
    });
  });
}
async function Pp(i) {
  const e = i.headers.get("content-type");
  return /application\/json/.test(e) ? i.json() : !e || /^text\/|charset=utf-8$/.test(e) ? i.text() : p7(i);
}
function o7(i) {
  return typeof i == "string" ? i : "message" in i ? Array.isArray(i.errors) ? `${i.message}: ${i.errors.map(JSON.stringify).join(", ")}` : i.message : `Unknown error: ${JSON.stringify(i)}`;
}
function Dp(i, e) {
  const t = i.defaults(e);
  return Object.assign(function(s, o) {
    const l = t.merge(s, o);
    if (!l.request || !l.request.hook)
      return Hl(t.parse(l));
    const u = (v, f) => Hl(t.parse(t.merge(v, f)));
    return Object.assign(u, {
      endpoint: t,
      defaults: Dp.bind(null, t)
    }), l.request.hook(u, l);
  }, {
    endpoint: t,
    defaults: Dp.bind(null, t)
  });
}
const yr = Dp(y8, {
  headers: {
    "user-agent": `octokit-request.js/${s7} ${wr()}`
  }
}), d7 = "4.8.0";
function l7(i) {
  return `Request failed due to following response errors:
` + i.errors.map((e) => ` - ${e.message}`).join(`
`);
}
class c7 extends Error {
  constructor(e, t, r) {
    super(l7(r));
    this.request = e, this.headers = t, this.response = r, this.name = "GraphqlResponseError", this.errors = r.errors, this.data = r.data, Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);
  }
}
const u7 = [
  "method",
  "baseUrl",
  "url",
  "headers",
  "request",
  "query",
  "mediaType"
], m7 = ["query", "method", "url"], Wl = /\/api\/v3\/?$/;
function f7(i, e, t) {
  if (t) {
    if (typeof e == "string" && "query" in t)
      return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));
    for (const l in t)
      if (!!m7.includes(l))
        return Promise.reject(new Error(`[@octokit/graphql] "${l}" cannot be used as variable name`));
  }
  const r = typeof e == "string" ? Object.assign({ query: e }, t) : e, s = Object.keys(r).reduce((l, u) => u7.includes(u) ? (l[u] = r[u], l) : (l.variables || (l.variables = {}), l.variables[u] = r[u], l), {}), o = r.baseUrl || i.endpoint.DEFAULTS.baseUrl;
  return Wl.test(o) && (s.url = o.replace(Wl, "/api/graphql")), i(s).then((l) => {
    if (l.data.errors) {
      const u = {};
      for (const v of Object.keys(l.headers))
        u[v] = l.headers[v];
      throw new c7(s, u, l.data);
    }
    return l.data.data;
  });
}
function Op(i, e) {
  const t = i.defaults(e);
  return Object.assign((s, o) => f7(t, s, o), {
    defaults: Op.bind(null, t),
    endpoint: yr.endpoint
  });
}
Op(yr, {
  headers: {
    "user-agent": `octokit-graphql.js/${d7} ${wr()}`
  },
  method: "POST",
  url: "/graphql"
});
function h7(i) {
  return Op(i, {
    method: "POST",
    url: "/graphql"
  });
}
const v7 = /^v1\./, g7 = /^ghs_/, w7 = /^ghu_/;
async function b7(i) {
  const e = i.split(/\./).length === 3, t = v7.test(i) || g7.test(i), r = w7.test(i);
  return {
    type: "token",
    token: i,
    tokenType: e ? "app" : t ? "installation" : r ? "user-to-server" : "oauth"
  };
}
function _7(i) {
  return i.split(/\./).length === 3 ? `bearer ${i}` : `token ${i}`;
}
async function x7(i, e, t, r) {
  const s = e.endpoint.merge(t, r);
  return s.headers.authorization = _7(i), e(s);
}
const y7 = function(e) {
  if (!e)
    throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");
  if (typeof e != "string")
    throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");
  return e = e.replace(/^(token|bearer) +/i, ""), Object.assign(b7.bind(null, e), {
    hook: x7.bind(null, e)
  });
}, Ql = "3.6.0";
class kp {
  constructor(e = {}) {
    const t = new vl(), r = {
      baseUrl: yr.endpoint.DEFAULTS.baseUrl,
      headers: {},
      request: Object.assign({}, e.request, {
        hook: t.bind(null, "request")
      }),
      mediaType: {
        previews: [],
        format: ""
      }
    };
    if (r.headers["user-agent"] = [
      e.userAgent,
      `octokit-core.js/${Ql} ${wr()}`
    ].filter(Boolean).join(" "), e.baseUrl && (r.baseUrl = e.baseUrl), e.previews && (r.mediaType.previews = e.previews), e.timeZone && (r.headers["time-zone"] = e.timeZone), this.request = yr.defaults(r), this.graphql = h7(this.request).defaults(r), this.log = Object.assign({
      debug: () => {
      },
      info: () => {
      },
      warn: console.warn.bind(console),
      error: console.error.bind(console)
    }, e.log), this.hook = t, e.authStrategy) {
      const { authStrategy: o, ...l } = e, u = o(Object.assign({
        request: this.request,
        log: this.log,
        octokit: this,
        octokitOptions: l
      }, e.auth));
      t.wrap("request", u.hook), this.auth = u;
    } else if (!e.auth)
      this.auth = async () => ({
        type: "unauthenticated"
      });
    else {
      const o = y7(e.auth);
      t.wrap("request", o.hook), this.auth = o;
    }
    this.constructor.plugins.forEach((o) => {
      Object.assign(this, o(this, e));
    });
  }
  static defaults(e) {
    return class extends this {
      constructor(...r) {
        const s = r[0] || {};
        if (typeof e == "function") {
          super(e(s));
          return;
        }
        super(Object.assign({}, e, s, s.userAgent && e.userAgent ? {
          userAgent: `${s.userAgent} ${e.userAgent}`
        } : null));
      }
    };
  }
  static plugin(...e) {
    var t;
    const r = this.plugins;
    return t = class extends this {
    }, t.plugins = r.concat(e.filter((o) => !r.includes(o))), t;
  }
}
kp.VERSION = Ql, kp.plugins = [];
var E7 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  Octokit: kp
});
const Kl = {
  actions: {
    addCustomLabelsToSelfHostedRunnerForOrg: [
      "POST /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    addCustomLabelsToSelfHostedRunnerForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"
    ],
    approveWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"
    ],
    cancelWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"
    ],
    createOrUpdateEnvironmentSecret: [
      "PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"
    ],
    createOrUpdateOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}"],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"
    ],
    createRegistrationTokenForOrg: [
      "POST /orgs/{org}/actions/runners/registration-token"
    ],
    createRegistrationTokenForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/registration-token"
    ],
    createRemoveTokenForOrg: ["POST /orgs/{org}/actions/runners/remove-token"],
    createRemoveTokenForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/remove-token"
    ],
    createWorkflowDispatch: [
      "POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"
    ],
    deleteActionsCacheById: [
      "DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"
    ],
    deleteActionsCacheByKey: [
      "DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"
    ],
    deleteArtifact: [
      "DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"
    ],
    deleteEnvironmentSecret: [
      "DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"
    ],
    deleteSelfHostedRunnerFromOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}"
    ],
    deleteSelfHostedRunnerFromRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"
    ],
    deleteWorkflowRun: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],
    deleteWorkflowRunLogs: [
      "DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"
    ],
    disableSelectedRepositoryGithubActionsOrganization: [
      "DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"
    ],
    disableWorkflow: [
      "PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"
    ],
    downloadArtifact: [
      "GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"
    ],
    downloadJobLogsForWorkflowRun: [
      "GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"
    ],
    downloadWorkflowRunAttemptLogs: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"
    ],
    downloadWorkflowRunLogs: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"
    ],
    enableSelectedRepositoryGithubActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"
    ],
    enableWorkflow: [
      "PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"
    ],
    getActionsCacheList: ["GET /repos/{owner}/{repo}/actions/caches"],
    getActionsCacheUsage: ["GET /repos/{owner}/{repo}/actions/cache/usage"],
    getActionsCacheUsageByRepoForOrg: [
      "GET /orgs/{org}/actions/cache/usage-by-repository"
    ],
    getActionsCacheUsageForEnterprise: [
      "GET /enterprises/{enterprise}/actions/cache/usage"
    ],
    getActionsCacheUsageForOrg: ["GET /orgs/{org}/actions/cache/usage"],
    getAllowedActionsOrganization: [
      "GET /orgs/{org}/actions/permissions/selected-actions"
    ],
    getAllowedActionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/selected-actions"
    ],
    getArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
    getEnvironmentPublicKey: [
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"
    ],
    getEnvironmentSecret: [
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"
    ],
    getGithubActionsDefaultWorkflowPermissionsEnterprise: [
      "GET /enterprises/{enterprise}/actions/permissions/workflow"
    ],
    getGithubActionsDefaultWorkflowPermissionsOrganization: [
      "GET /orgs/{org}/actions/permissions/workflow"
    ],
    getGithubActionsDefaultWorkflowPermissionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/workflow"
    ],
    getGithubActionsPermissionsOrganization: [
      "GET /orgs/{org}/actions/permissions"
    ],
    getGithubActionsPermissionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions"
    ],
    getJobForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],
    getOrgPublicKey: ["GET /orgs/{org}/actions/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}"],
    getPendingDeploymentsForRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"
    ],
    getRepoPermissions: [
      "GET /repos/{owner}/{repo}/actions/permissions",
      {},
      { renamed: ["actions", "getGithubActionsPermissionsRepository"] }
    ],
    getRepoPublicKey: ["GET /repos/{owner}/{repo}/actions/secrets/public-key"],
    getRepoSecret: ["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
    getReviewsForRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"
    ],
    getSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}"],
    getSelfHostedRunnerForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/{runner_id}"
    ],
    getWorkflow: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],
    getWorkflowAccessToRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/access"
    ],
    getWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],
    getWorkflowRunAttempt: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"
    ],
    getWorkflowRunUsage: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"
    ],
    getWorkflowUsage: [
      "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"
    ],
    listArtifactsForRepo: ["GET /repos/{owner}/{repo}/actions/artifacts"],
    listEnvironmentSecrets: [
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets"
    ],
    listJobsForWorkflowRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"
    ],
    listJobsForWorkflowRunAttempt: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"
    ],
    listLabelsForSelfHostedRunnerForOrg: [
      "GET /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    listLabelsForSelfHostedRunnerForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    listOrgSecrets: ["GET /orgs/{org}/actions/secrets"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/actions/secrets"],
    listRepoWorkflows: ["GET /repos/{owner}/{repo}/actions/workflows"],
    listRunnerApplicationsForOrg: ["GET /orgs/{org}/actions/runners/downloads"],
    listRunnerApplicationsForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/downloads"
    ],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/actions/secrets/{secret_name}/repositories"
    ],
    listSelectedRepositoriesEnabledGithubActionsOrganization: [
      "GET /orgs/{org}/actions/permissions/repositories"
    ],
    listSelfHostedRunnersForOrg: ["GET /orgs/{org}/actions/runners"],
    listSelfHostedRunnersForRepo: ["GET /repos/{owner}/{repo}/actions/runners"],
    listWorkflowRunArtifacts: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"
    ],
    listWorkflowRuns: [
      "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"
    ],
    listWorkflowRunsForRepo: ["GET /repos/{owner}/{repo}/actions/runs"],
    reRunJobForWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"
    ],
    reRunWorkflow: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],
    reRunWorkflowFailedJobs: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"
    ],
    removeAllCustomLabelsFromSelfHostedRunnerForOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    removeAllCustomLabelsFromSelfHostedRunnerForRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    removeCustomLabelFromSelfHostedRunnerForOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"
    ],
    removeCustomLabelFromSelfHostedRunnerForRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"
    ],
    reviewPendingDeploymentsForRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"
    ],
    setAllowedActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/selected-actions"
    ],
    setAllowedActionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"
    ],
    setCustomLabelsForSelfHostedRunnerForOrg: [
      "PUT /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    setCustomLabelsForSelfHostedRunnerForRepo: [
      "PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    setGithubActionsDefaultWorkflowPermissionsEnterprise: [
      "PUT /enterprises/{enterprise}/actions/permissions/workflow"
    ],
    setGithubActionsDefaultWorkflowPermissionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/workflow"
    ],
    setGithubActionsDefaultWorkflowPermissionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/workflow"
    ],
    setGithubActionsPermissionsOrganization: [
      "PUT /orgs/{org}/actions/permissions"
    ],
    setGithubActionsPermissionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"
    ],
    setSelectedRepositoriesEnabledGithubActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/repositories"
    ],
    setWorkflowAccessToRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/access"
    ]
  },
  activity: {
    checkRepoIsStarredByAuthenticatedUser: ["GET /user/starred/{owner}/{repo}"],
    deleteRepoSubscription: ["DELETE /repos/{owner}/{repo}/subscription"],
    deleteThreadSubscription: [
      "DELETE /notifications/threads/{thread_id}/subscription"
    ],
    getFeeds: ["GET /feeds"],
    getRepoSubscription: ["GET /repos/{owner}/{repo}/subscription"],
    getThread: ["GET /notifications/threads/{thread_id}"],
    getThreadSubscriptionForAuthenticatedUser: [
      "GET /notifications/threads/{thread_id}/subscription"
    ],
    listEventsForAuthenticatedUser: ["GET /users/{username}/events"],
    listNotificationsForAuthenticatedUser: ["GET /notifications"],
    listOrgEventsForAuthenticatedUser: [
      "GET /users/{username}/events/orgs/{org}"
    ],
    listPublicEvents: ["GET /events"],
    listPublicEventsForRepoNetwork: ["GET /networks/{owner}/{repo}/events"],
    listPublicEventsForUser: ["GET /users/{username}/events/public"],
    listPublicOrgEvents: ["GET /orgs/{org}/events"],
    listReceivedEventsForUser: ["GET /users/{username}/received_events"],
    listReceivedPublicEventsForUser: [
      "GET /users/{username}/received_events/public"
    ],
    listRepoEvents: ["GET /repos/{owner}/{repo}/events"],
    listRepoNotificationsForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/notifications"
    ],
    listReposStarredByAuthenticatedUser: ["GET /user/starred"],
    listReposStarredByUser: ["GET /users/{username}/starred"],
    listReposWatchedByUser: ["GET /users/{username}/subscriptions"],
    listStargazersForRepo: ["GET /repos/{owner}/{repo}/stargazers"],
    listWatchedReposForAuthenticatedUser: ["GET /user/subscriptions"],
    listWatchersForRepo: ["GET /repos/{owner}/{repo}/subscribers"],
    markNotificationsAsRead: ["PUT /notifications"],
    markRepoNotificationsAsRead: ["PUT /repos/{owner}/{repo}/notifications"],
    markThreadAsRead: ["PATCH /notifications/threads/{thread_id}"],
    setRepoSubscription: ["PUT /repos/{owner}/{repo}/subscription"],
    setThreadSubscription: [
      "PUT /notifications/threads/{thread_id}/subscription"
    ],
    starRepoForAuthenticatedUser: ["PUT /user/starred/{owner}/{repo}"],
    unstarRepoForAuthenticatedUser: ["DELETE /user/starred/{owner}/{repo}"]
  },
  apps: {
    addRepoToInstallation: [
      "PUT /user/installations/{installation_id}/repositories/{repository_id}",
      {},
      { renamed: ["apps", "addRepoToInstallationForAuthenticatedUser"] }
    ],
    addRepoToInstallationForAuthenticatedUser: [
      "PUT /user/installations/{installation_id}/repositories/{repository_id}"
    ],
    checkToken: ["POST /applications/{client_id}/token"],
    createFromManifest: ["POST /app-manifests/{code}/conversions"],
    createInstallationAccessToken: [
      "POST /app/installations/{installation_id}/access_tokens"
    ],
    deleteAuthorization: ["DELETE /applications/{client_id}/grant"],
    deleteInstallation: ["DELETE /app/installations/{installation_id}"],
    deleteToken: ["DELETE /applications/{client_id}/token"],
    getAuthenticated: ["GET /app"],
    getBySlug: ["GET /apps/{app_slug}"],
    getInstallation: ["GET /app/installations/{installation_id}"],
    getOrgInstallation: ["GET /orgs/{org}/installation"],
    getRepoInstallation: ["GET /repos/{owner}/{repo}/installation"],
    getSubscriptionPlanForAccount: [
      "GET /marketplace_listing/accounts/{account_id}"
    ],
    getSubscriptionPlanForAccountStubbed: [
      "GET /marketplace_listing/stubbed/accounts/{account_id}"
    ],
    getUserInstallation: ["GET /users/{username}/installation"],
    getWebhookConfigForApp: ["GET /app/hook/config"],
    getWebhookDelivery: ["GET /app/hook/deliveries/{delivery_id}"],
    listAccountsForPlan: ["GET /marketplace_listing/plans/{plan_id}/accounts"],
    listAccountsForPlanStubbed: [
      "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"
    ],
    listInstallationReposForAuthenticatedUser: [
      "GET /user/installations/{installation_id}/repositories"
    ],
    listInstallations: ["GET /app/installations"],
    listInstallationsForAuthenticatedUser: ["GET /user/installations"],
    listPlans: ["GET /marketplace_listing/plans"],
    listPlansStubbed: ["GET /marketplace_listing/stubbed/plans"],
    listReposAccessibleToInstallation: ["GET /installation/repositories"],
    listSubscriptionsForAuthenticatedUser: ["GET /user/marketplace_purchases"],
    listSubscriptionsForAuthenticatedUserStubbed: [
      "GET /user/marketplace_purchases/stubbed"
    ],
    listWebhookDeliveries: ["GET /app/hook/deliveries"],
    redeliverWebhookDelivery: [
      "POST /app/hook/deliveries/{delivery_id}/attempts"
    ],
    removeRepoFromInstallation: [
      "DELETE /user/installations/{installation_id}/repositories/{repository_id}",
      {},
      { renamed: ["apps", "removeRepoFromInstallationForAuthenticatedUser"] }
    ],
    removeRepoFromInstallationForAuthenticatedUser: [
      "DELETE /user/installations/{installation_id}/repositories/{repository_id}"
    ],
    resetToken: ["PATCH /applications/{client_id}/token"],
    revokeInstallationAccessToken: ["DELETE /installation/token"],
    scopeToken: ["POST /applications/{client_id}/token/scoped"],
    suspendInstallation: ["PUT /app/installations/{installation_id}/suspended"],
    unsuspendInstallation: [
      "DELETE /app/installations/{installation_id}/suspended"
    ],
    updateWebhookConfigForApp: ["PATCH /app/hook/config"]
  },
  billing: {
    getGithubActionsBillingOrg: ["GET /orgs/{org}/settings/billing/actions"],
    getGithubActionsBillingUser: [
      "GET /users/{username}/settings/billing/actions"
    ],
    getGithubAdvancedSecurityBillingGhe: [
      "GET /enterprises/{enterprise}/settings/billing/advanced-security"
    ],
    getGithubAdvancedSecurityBillingOrg: [
      "GET /orgs/{org}/settings/billing/advanced-security"
    ],
    getGithubPackagesBillingOrg: ["GET /orgs/{org}/settings/billing/packages"],
    getGithubPackagesBillingUser: [
      "GET /users/{username}/settings/billing/packages"
    ],
    getSharedStorageBillingOrg: [
      "GET /orgs/{org}/settings/billing/shared-storage"
    ],
    getSharedStorageBillingUser: [
      "GET /users/{username}/settings/billing/shared-storage"
    ]
  },
  checks: {
    create: ["POST /repos/{owner}/{repo}/check-runs"],
    createSuite: ["POST /repos/{owner}/{repo}/check-suites"],
    get: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],
    getSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],
    listAnnotations: [
      "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"
    ],
    listForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],
    listForSuite: [
      "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"
    ],
    listSuitesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],
    rerequestRun: [
      "POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"
    ],
    rerequestSuite: [
      "POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"
    ],
    setSuitesPreferences: [
      "PATCH /repos/{owner}/{repo}/check-suites/preferences"
    ],
    update: ["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]
  },
  codeScanning: {
    deleteAnalysis: [
      "DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"
    ],
    getAlert: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",
      {},
      { renamedParameters: { alert_id: "alert_number" } }
    ],
    getAnalysis: [
      "GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"
    ],
    getSarif: ["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],
    listAlertInstances: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/code-scanning/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/code-scanning/alerts"],
    listAlertsInstances: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
      {},
      { renamed: ["codeScanning", "listAlertInstances"] }
    ],
    listRecentAnalyses: ["GET /repos/{owner}/{repo}/code-scanning/analyses"],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"
    ],
    uploadSarif: ["POST /repos/{owner}/{repo}/code-scanning/sarifs"]
  },
  codesOfConduct: {
    getAllCodesOfConduct: ["GET /codes_of_conduct"],
    getConductCode: ["GET /codes_of_conduct/{key}"]
  },
  codespaces: {
    addRepositoryForSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    codespaceMachinesForAuthenticatedUser: [
      "GET /user/codespaces/{codespace_name}/machines"
    ],
    createForAuthenticatedUser: ["POST /user/codespaces"],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    createOrUpdateSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}"
    ],
    createWithPrForAuthenticatedUser: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"
    ],
    createWithRepoForAuthenticatedUser: [
      "POST /repos/{owner}/{repo}/codespaces"
    ],
    deleteForAuthenticatedUser: ["DELETE /user/codespaces/{codespace_name}"],
    deleteFromOrganization: [
      "DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"
    ],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    deleteSecretForAuthenticatedUser: [
      "DELETE /user/codespaces/secrets/{secret_name}"
    ],
    exportForAuthenticatedUser: [
      "POST /user/codespaces/{codespace_name}/exports"
    ],
    getExportDetailsForAuthenticatedUser: [
      "GET /user/codespaces/{codespace_name}/exports/{export_id}"
    ],
    getForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}"],
    getPublicKeyForAuthenticatedUser: [
      "GET /user/codespaces/secrets/public-key"
    ],
    getRepoPublicKey: [
      "GET /repos/{owner}/{repo}/codespaces/secrets/public-key"
    ],
    getRepoSecret: [
      "GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    getSecretForAuthenticatedUser: [
      "GET /user/codespaces/secrets/{secret_name}"
    ],
    listDevcontainersInRepositoryForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/devcontainers"
    ],
    listForAuthenticatedUser: ["GET /user/codespaces"],
    listInOrganization: [
      "GET /orgs/{org}/codespaces",
      {},
      { renamedParameters: { org_id: "org" } }
    ],
    listInRepositoryForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces"
    ],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/codespaces/secrets"],
    listRepositoriesForSecretForAuthenticatedUser: [
      "GET /user/codespaces/secrets/{secret_name}/repositories"
    ],
    listSecretsForAuthenticatedUser: ["GET /user/codespaces/secrets"],
    removeRepositoryForSecretForAuthenticatedUser: [
      "DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    repoMachinesForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/machines"
    ],
    setRepositoriesForSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}/repositories"
    ],
    startForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/start"],
    stopForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/stop"],
    stopInOrganization: [
      "POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"
    ],
    updateForAuthenticatedUser: ["PATCH /user/codespaces/{codespace_name}"]
  },
  dependabot: {
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"
    ],
    createOrUpdateOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}"
    ],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    getOrgPublicKey: ["GET /orgs/{org}/dependabot/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}"],
    getRepoPublicKey: [
      "GET /repos/{owner}/{repo}/dependabot/secrets/public-key"
    ],
    getRepoSecret: [
      "GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    listOrgSecrets: ["GET /orgs/{org}/dependabot/secrets"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/dependabot/secrets"],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"
    ]
  },
  dependencyGraph: {
    createRepositorySnapshot: [
      "POST /repos/{owner}/{repo}/dependency-graph/snapshots"
    ],
    diffRange: [
      "GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"
    ]
  },
  emojis: { get: ["GET /emojis"] },
  enterpriseAdmin: {
    addCustomLabelsToSelfHostedRunnerForEnterprise: [
      "POST /enterprises/{enterprise}/actions/runners/{runner_id}/labels"
    ],
    disableSelectedOrganizationGithubActionsEnterprise: [
      "DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"
    ],
    enableSelectedOrganizationGithubActionsEnterprise: [
      "PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"
    ],
    getAllowedActionsEnterprise: [
      "GET /enterprises/{enterprise}/actions/permissions/selected-actions"
    ],
    getGithubActionsPermissionsEnterprise: [
      "GET /enterprises/{enterprise}/actions/permissions"
    ],
    getServerStatistics: [
      "GET /enterprise-installation/{enterprise_or_org}/server-statistics"
    ],
    listLabelsForSelfHostedRunnerForEnterprise: [
      "GET /enterprises/{enterprise}/actions/runners/{runner_id}/labels"
    ],
    listSelectedOrganizationsEnabledGithubActionsEnterprise: [
      "GET /enterprises/{enterprise}/actions/permissions/organizations"
    ],
    removeAllCustomLabelsFromSelfHostedRunnerForEnterprise: [
      "DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels"
    ],
    removeCustomLabelFromSelfHostedRunnerForEnterprise: [
      "DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}"
    ],
    setAllowedActionsEnterprise: [
      "PUT /enterprises/{enterprise}/actions/permissions/selected-actions"
    ],
    setCustomLabelsForSelfHostedRunnerForEnterprise: [
      "PUT /enterprises/{enterprise}/actions/runners/{runner_id}/labels"
    ],
    setGithubActionsPermissionsEnterprise: [
      "PUT /enterprises/{enterprise}/actions/permissions"
    ],
    setSelectedOrganizationsEnabledGithubActionsEnterprise: [
      "PUT /enterprises/{enterprise}/actions/permissions/organizations"
    ]
  },
  gists: {
    checkIsStarred: ["GET /gists/{gist_id}/star"],
    create: ["POST /gists"],
    createComment: ["POST /gists/{gist_id}/comments"],
    delete: ["DELETE /gists/{gist_id}"],
    deleteComment: ["DELETE /gists/{gist_id}/comments/{comment_id}"],
    fork: ["POST /gists/{gist_id}/forks"],
    get: ["GET /gists/{gist_id}"],
    getComment: ["GET /gists/{gist_id}/comments/{comment_id}"],
    getRevision: ["GET /gists/{gist_id}/{sha}"],
    list: ["GET /gists"],
    listComments: ["GET /gists/{gist_id}/comments"],
    listCommits: ["GET /gists/{gist_id}/commits"],
    listForUser: ["GET /users/{username}/gists"],
    listForks: ["GET /gists/{gist_id}/forks"],
    listPublic: ["GET /gists/public"],
    listStarred: ["GET /gists/starred"],
    star: ["PUT /gists/{gist_id}/star"],
    unstar: ["DELETE /gists/{gist_id}/star"],
    update: ["PATCH /gists/{gist_id}"],
    updateComment: ["PATCH /gists/{gist_id}/comments/{comment_id}"]
  },
  git: {
    createBlob: ["POST /repos/{owner}/{repo}/git/blobs"],
    createCommit: ["POST /repos/{owner}/{repo}/git/commits"],
    createRef: ["POST /repos/{owner}/{repo}/git/refs"],
    createTag: ["POST /repos/{owner}/{repo}/git/tags"],
    createTree: ["POST /repos/{owner}/{repo}/git/trees"],
    deleteRef: ["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],
    getBlob: ["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],
    getCommit: ["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],
    getRef: ["GET /repos/{owner}/{repo}/git/ref/{ref}"],
    getTag: ["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],
    getTree: ["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],
    listMatchingRefs: ["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],
    updateRef: ["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]
  },
  gitignore: {
    getAllTemplates: ["GET /gitignore/templates"],
    getTemplate: ["GET /gitignore/templates/{name}"]
  },
  interactions: {
    getRestrictionsForAuthenticatedUser: ["GET /user/interaction-limits"],
    getRestrictionsForOrg: ["GET /orgs/{org}/interaction-limits"],
    getRestrictionsForRepo: ["GET /repos/{owner}/{repo}/interaction-limits"],
    getRestrictionsForYourPublicRepos: [
      "GET /user/interaction-limits",
      {},
      { renamed: ["interactions", "getRestrictionsForAuthenticatedUser"] }
    ],
    removeRestrictionsForAuthenticatedUser: ["DELETE /user/interaction-limits"],
    removeRestrictionsForOrg: ["DELETE /orgs/{org}/interaction-limits"],
    removeRestrictionsForRepo: [
      "DELETE /repos/{owner}/{repo}/interaction-limits"
    ],
    removeRestrictionsForYourPublicRepos: [
      "DELETE /user/interaction-limits",
      {},
      { renamed: ["interactions", "removeRestrictionsForAuthenticatedUser"] }
    ],
    setRestrictionsForAuthenticatedUser: ["PUT /user/interaction-limits"],
    setRestrictionsForOrg: ["PUT /orgs/{org}/interaction-limits"],
    setRestrictionsForRepo: ["PUT /repos/{owner}/{repo}/interaction-limits"],
    setRestrictionsForYourPublicRepos: [
      "PUT /user/interaction-limits",
      {},
      { renamed: ["interactions", "setRestrictionsForAuthenticatedUser"] }
    ]
  },
  issues: {
    addAssignees: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"
    ],
    addLabels: ["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    checkUserCanBeAssigned: ["GET /repos/{owner}/{repo}/assignees/{assignee}"],
    create: ["POST /repos/{owner}/{repo}/issues"],
    createComment: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/comments"
    ],
    createLabel: ["POST /repos/{owner}/{repo}/labels"],
    createMilestone: ["POST /repos/{owner}/{repo}/milestones"],
    deleteComment: [
      "DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"
    ],
    deleteLabel: ["DELETE /repos/{owner}/{repo}/labels/{name}"],
    deleteMilestone: [
      "DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"
    ],
    get: ["GET /repos/{owner}/{repo}/issues/{issue_number}"],
    getComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    getEvent: ["GET /repos/{owner}/{repo}/issues/events/{event_id}"],
    getLabel: ["GET /repos/{owner}/{repo}/labels/{name}"],
    getMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],
    list: ["GET /issues"],
    listAssignees: ["GET /repos/{owner}/{repo}/assignees"],
    listComments: ["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],
    listCommentsForRepo: ["GET /repos/{owner}/{repo}/issues/comments"],
    listEvents: ["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],
    listEventsForRepo: ["GET /repos/{owner}/{repo}/issues/events"],
    listEventsForTimeline: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"
    ],
    listForAuthenticatedUser: ["GET /user/issues"],
    listForOrg: ["GET /orgs/{org}/issues"],
    listForRepo: ["GET /repos/{owner}/{repo}/issues"],
    listLabelsForMilestone: [
      "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"
    ],
    listLabelsForRepo: ["GET /repos/{owner}/{repo}/labels"],
    listLabelsOnIssue: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/labels"
    ],
    listMilestones: ["GET /repos/{owner}/{repo}/milestones"],
    lock: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],
    removeAllLabels: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"
    ],
    removeAssignees: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"
    ],
    removeLabel: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"
    ],
    setLabels: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    unlock: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],
    update: ["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],
    updateComment: ["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    updateLabel: ["PATCH /repos/{owner}/{repo}/labels/{name}"],
    updateMilestone: [
      "PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"
    ]
  },
  licenses: {
    get: ["GET /licenses/{license}"],
    getAllCommonlyUsed: ["GET /licenses"],
    getForRepo: ["GET /repos/{owner}/{repo}/license"]
  },
  markdown: {
    render: ["POST /markdown"],
    renderRaw: [
      "POST /markdown/raw",
      { headers: { "content-type": "text/plain; charset=utf-8" } }
    ]
  },
  meta: {
    get: ["GET /meta"],
    getOctocat: ["GET /octocat"],
    getZen: ["GET /zen"],
    root: ["GET /"]
  },
  migrations: {
    cancelImport: ["DELETE /repos/{owner}/{repo}/import"],
    deleteArchiveForAuthenticatedUser: [
      "DELETE /user/migrations/{migration_id}/archive"
    ],
    deleteArchiveForOrg: [
      "DELETE /orgs/{org}/migrations/{migration_id}/archive"
    ],
    downloadArchiveForOrg: [
      "GET /orgs/{org}/migrations/{migration_id}/archive"
    ],
    getArchiveForAuthenticatedUser: [
      "GET /user/migrations/{migration_id}/archive"
    ],
    getCommitAuthors: ["GET /repos/{owner}/{repo}/import/authors"],
    getImportStatus: ["GET /repos/{owner}/{repo}/import"],
    getLargeFiles: ["GET /repos/{owner}/{repo}/import/large_files"],
    getStatusForAuthenticatedUser: ["GET /user/migrations/{migration_id}"],
    getStatusForOrg: ["GET /orgs/{org}/migrations/{migration_id}"],
    listForAuthenticatedUser: ["GET /user/migrations"],
    listForOrg: ["GET /orgs/{org}/migrations"],
    listReposForAuthenticatedUser: [
      "GET /user/migrations/{migration_id}/repositories"
    ],
    listReposForOrg: ["GET /orgs/{org}/migrations/{migration_id}/repositories"],
    listReposForUser: [
      "GET /user/migrations/{migration_id}/repositories",
      {},
      { renamed: ["migrations", "listReposForAuthenticatedUser"] }
    ],
    mapCommitAuthor: ["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],
    setLfsPreference: ["PATCH /repos/{owner}/{repo}/import/lfs"],
    startForAuthenticatedUser: ["POST /user/migrations"],
    startForOrg: ["POST /orgs/{org}/migrations"],
    startImport: ["PUT /repos/{owner}/{repo}/import"],
    unlockRepoForAuthenticatedUser: [
      "DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"
    ],
    unlockRepoForOrg: [
      "DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"
    ],
    updateImport: ["PATCH /repos/{owner}/{repo}/import"]
  },
  orgs: {
    blockUser: ["PUT /orgs/{org}/blocks/{username}"],
    cancelInvitation: ["DELETE /orgs/{org}/invitations/{invitation_id}"],
    checkBlockedUser: ["GET /orgs/{org}/blocks/{username}"],
    checkMembershipForUser: ["GET /orgs/{org}/members/{username}"],
    checkPublicMembershipForUser: ["GET /orgs/{org}/public_members/{username}"],
    convertMemberToOutsideCollaborator: [
      "PUT /orgs/{org}/outside_collaborators/{username}"
    ],
    createInvitation: ["POST /orgs/{org}/invitations"],
    createWebhook: ["POST /orgs/{org}/hooks"],
    deleteWebhook: ["DELETE /orgs/{org}/hooks/{hook_id}"],
    get: ["GET /orgs/{org}"],
    getMembershipForAuthenticatedUser: ["GET /user/memberships/orgs/{org}"],
    getMembershipForUser: ["GET /orgs/{org}/memberships/{username}"],
    getWebhook: ["GET /orgs/{org}/hooks/{hook_id}"],
    getWebhookConfigForOrg: ["GET /orgs/{org}/hooks/{hook_id}/config"],
    getWebhookDelivery: [
      "GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"
    ],
    list: ["GET /organizations"],
    listAppInstallations: ["GET /orgs/{org}/installations"],
    listBlockedUsers: ["GET /orgs/{org}/blocks"],
    listCustomRoles: ["GET /organizations/{organization_id}/custom_roles"],
    listFailedInvitations: ["GET /orgs/{org}/failed_invitations"],
    listForAuthenticatedUser: ["GET /user/orgs"],
    listForUser: ["GET /users/{username}/orgs"],
    listInvitationTeams: ["GET /orgs/{org}/invitations/{invitation_id}/teams"],
    listMembers: ["GET /orgs/{org}/members"],
    listMembershipsForAuthenticatedUser: ["GET /user/memberships/orgs"],
    listOutsideCollaborators: ["GET /orgs/{org}/outside_collaborators"],
    listPendingInvitations: ["GET /orgs/{org}/invitations"],
    listPublicMembers: ["GET /orgs/{org}/public_members"],
    listWebhookDeliveries: ["GET /orgs/{org}/hooks/{hook_id}/deliveries"],
    listWebhooks: ["GET /orgs/{org}/hooks"],
    pingWebhook: ["POST /orgs/{org}/hooks/{hook_id}/pings"],
    redeliverWebhookDelivery: [
      "POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"
    ],
    removeMember: ["DELETE /orgs/{org}/members/{username}"],
    removeMembershipForUser: ["DELETE /orgs/{org}/memberships/{username}"],
    removeOutsideCollaborator: [
      "DELETE /orgs/{org}/outside_collaborators/{username}"
    ],
    removePublicMembershipForAuthenticatedUser: [
      "DELETE /orgs/{org}/public_members/{username}"
    ],
    setMembershipForUser: ["PUT /orgs/{org}/memberships/{username}"],
    setPublicMembershipForAuthenticatedUser: [
      "PUT /orgs/{org}/public_members/{username}"
    ],
    unblockUser: ["DELETE /orgs/{org}/blocks/{username}"],
    update: ["PATCH /orgs/{org}"],
    updateMembershipForAuthenticatedUser: [
      "PATCH /user/memberships/orgs/{org}"
    ],
    updateWebhook: ["PATCH /orgs/{org}/hooks/{hook_id}"],
    updateWebhookConfigForOrg: ["PATCH /orgs/{org}/hooks/{hook_id}/config"]
  },
  packages: {
    deletePackageForAuthenticatedUser: [
      "DELETE /user/packages/{package_type}/{package_name}"
    ],
    deletePackageForOrg: [
      "DELETE /orgs/{org}/packages/{package_type}/{package_name}"
    ],
    deletePackageForUser: [
      "DELETE /users/{username}/packages/{package_type}/{package_name}"
    ],
    deletePackageVersionForAuthenticatedUser: [
      "DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    deletePackageVersionForOrg: [
      "DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    deletePackageVersionForUser: [
      "DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getAllPackageVersionsForAPackageOwnedByAnOrg: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
      {},
      { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByOrg"] }
    ],
    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions",
      {},
      {
        renamed: [
          "packages",
          "getAllPackageVersionsForPackageOwnedByAuthenticatedUser"
        ]
      }
    ],
    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions"
    ],
    getAllPackageVersionsForPackageOwnedByOrg: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions"
    ],
    getAllPackageVersionsForPackageOwnedByUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}/versions"
    ],
    getPackageForAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}"
    ],
    getPackageForOrganization: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}"
    ],
    getPackageForUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}"
    ],
    getPackageVersionForAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getPackageVersionForOrganization: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getPackageVersionForUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    listPackagesForAuthenticatedUser: ["GET /user/packages"],
    listPackagesForOrganization: ["GET /orgs/{org}/packages"],
    listPackagesForUser: ["GET /users/{username}/packages"],
    restorePackageForAuthenticatedUser: [
      "POST /user/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageForOrg: [
      "POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageForUser: [
      "POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageVersionForAuthenticatedUser: [
      "POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ],
    restorePackageVersionForOrg: [
      "POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ],
    restorePackageVersionForUser: [
      "POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ]
  },
  projects: {
    addCollaborator: ["PUT /projects/{project_id}/collaborators/{username}"],
    createCard: ["POST /projects/columns/{column_id}/cards"],
    createColumn: ["POST /projects/{project_id}/columns"],
    createForAuthenticatedUser: ["POST /user/projects"],
    createForOrg: ["POST /orgs/{org}/projects"],
    createForRepo: ["POST /repos/{owner}/{repo}/projects"],
    delete: ["DELETE /projects/{project_id}"],
    deleteCard: ["DELETE /projects/columns/cards/{card_id}"],
    deleteColumn: ["DELETE /projects/columns/{column_id}"],
    get: ["GET /projects/{project_id}"],
    getCard: ["GET /projects/columns/cards/{card_id}"],
    getColumn: ["GET /projects/columns/{column_id}"],
    getPermissionForUser: [
      "GET /projects/{project_id}/collaborators/{username}/permission"
    ],
    listCards: ["GET /projects/columns/{column_id}/cards"],
    listCollaborators: ["GET /projects/{project_id}/collaborators"],
    listColumns: ["GET /projects/{project_id}/columns"],
    listForOrg: ["GET /orgs/{org}/projects"],
    listForRepo: ["GET /repos/{owner}/{repo}/projects"],
    listForUser: ["GET /users/{username}/projects"],
    moveCard: ["POST /projects/columns/cards/{card_id}/moves"],
    moveColumn: ["POST /projects/columns/{column_id}/moves"],
    removeCollaborator: [
      "DELETE /projects/{project_id}/collaborators/{username}"
    ],
    update: ["PATCH /projects/{project_id}"],
    updateCard: ["PATCH /projects/columns/cards/{card_id}"],
    updateColumn: ["PATCH /projects/columns/{column_id}"]
  },
  pulls: {
    checkIfMerged: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
    create: ["POST /repos/{owner}/{repo}/pulls"],
    createReplyForReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"
    ],
    createReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
    createReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"
    ],
    deletePendingReview: [
      "DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    deleteReviewComment: [
      "DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"
    ],
    dismissReview: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"
    ],
    get: ["GET /repos/{owner}/{repo}/pulls/{pull_number}"],
    getReview: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    getReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
    list: ["GET /repos/{owner}/{repo}/pulls"],
    listCommentsForReview: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"
    ],
    listCommits: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],
    listFiles: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],
    listRequestedReviewers: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    listReviewComments: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"
    ],
    listReviewCommentsForRepo: ["GET /repos/{owner}/{repo}/pulls/comments"],
    listReviews: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
    merge: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
    removeRequestedReviewers: [
      "DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    requestReviewers: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    submitReview: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"
    ],
    update: ["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],
    updateBranch: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"
    ],
    updateReview: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    updateReviewComment: [
      "PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"
    ]
  },
  rateLimit: { get: ["GET /rate_limit"] },
  reactions: {
    createForCommitComment: [
      "POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"
    ],
    createForIssue: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"
    ],
    createForIssueComment: [
      "POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"
    ],
    createForPullRequestReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"
    ],
    createForRelease: [
      "POST /repos/{owner}/{repo}/releases/{release_id}/reactions"
    ],
    createForTeamDiscussionCommentInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"
    ],
    createForTeamDiscussionInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"
    ],
    deleteForCommitComment: [
      "DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForIssue: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"
    ],
    deleteForIssueComment: [
      "DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForPullRequestComment: [
      "DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForRelease: [
      "DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"
    ],
    deleteForTeamDiscussion: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"
    ],
    deleteForTeamDiscussionComment: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"
    ],
    listForCommitComment: [
      "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"
    ],
    listForIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
    listForIssueComment: [
      "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"
    ],
    listForPullRequestReviewComment: [
      "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"
    ],
    listForRelease: [
      "GET /repos/{owner}/{repo}/releases/{release_id}/reactions"
    ],
    listForTeamDiscussionCommentInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"
    ],
    listForTeamDiscussionInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"
    ]
  },
  repos: {
    acceptInvitation: [
      "PATCH /user/repository_invitations/{invitation_id}",
      {},
      { renamed: ["repos", "acceptInvitationForAuthenticatedUser"] }
    ],
    acceptInvitationForAuthenticatedUser: [
      "PATCH /user/repository_invitations/{invitation_id}"
    ],
    addAppAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    addCollaborator: ["PUT /repos/{owner}/{repo}/collaborators/{username}"],
    addStatusCheckContexts: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    addTeamAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    addUserAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    checkCollaborator: ["GET /repos/{owner}/{repo}/collaborators/{username}"],
    checkVulnerabilityAlerts: [
      "GET /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    codeownersErrors: ["GET /repos/{owner}/{repo}/codeowners/errors"],
    compareCommits: ["GET /repos/{owner}/{repo}/compare/{base}...{head}"],
    compareCommitsWithBasehead: [
      "GET /repos/{owner}/{repo}/compare/{basehead}"
    ],
    createAutolink: ["POST /repos/{owner}/{repo}/autolinks"],
    createCommitComment: [
      "POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"
    ],
    createCommitSignatureProtection: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    createCommitStatus: ["POST /repos/{owner}/{repo}/statuses/{sha}"],
    createDeployKey: ["POST /repos/{owner}/{repo}/keys"],
    createDeployment: ["POST /repos/{owner}/{repo}/deployments"],
    createDeploymentStatus: [
      "POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"
    ],
    createDispatchEvent: ["POST /repos/{owner}/{repo}/dispatches"],
    createForAuthenticatedUser: ["POST /user/repos"],
    createFork: ["POST /repos/{owner}/{repo}/forks"],
    createInOrg: ["POST /orgs/{org}/repos"],
    createOrUpdateEnvironment: [
      "PUT /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    createOrUpdateFileContents: ["PUT /repos/{owner}/{repo}/contents/{path}"],
    createPagesSite: ["POST /repos/{owner}/{repo}/pages"],
    createRelease: ["POST /repos/{owner}/{repo}/releases"],
    createTagProtection: ["POST /repos/{owner}/{repo}/tags/protection"],
    createUsingTemplate: [
      "POST /repos/{template_owner}/{template_repo}/generate"
    ],
    createWebhook: ["POST /repos/{owner}/{repo}/hooks"],
    declineInvitation: [
      "DELETE /user/repository_invitations/{invitation_id}",
      {},
      { renamed: ["repos", "declineInvitationForAuthenticatedUser"] }
    ],
    declineInvitationForAuthenticatedUser: [
      "DELETE /user/repository_invitations/{invitation_id}"
    ],
    delete: ["DELETE /repos/{owner}/{repo}"],
    deleteAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"
    ],
    deleteAdminBranchProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    deleteAnEnvironment: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    deleteAutolink: ["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],
    deleteBranchProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    deleteCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],
    deleteCommitSignatureProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    deleteDeployKey: ["DELETE /repos/{owner}/{repo}/keys/{key_id}"],
    deleteDeployment: [
      "DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"
    ],
    deleteFile: ["DELETE /repos/{owner}/{repo}/contents/{path}"],
    deleteInvitation: [
      "DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"
    ],
    deletePagesSite: ["DELETE /repos/{owner}/{repo}/pages"],
    deletePullRequestReviewProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    deleteRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}"],
    deleteReleaseAsset: [
      "DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"
    ],
    deleteTagProtection: [
      "DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"
    ],
    deleteWebhook: ["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],
    disableAutomatedSecurityFixes: [
      "DELETE /repos/{owner}/{repo}/automated-security-fixes"
    ],
    disableLfsForRepo: ["DELETE /repos/{owner}/{repo}/lfs"],
    disableVulnerabilityAlerts: [
      "DELETE /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    downloadArchive: [
      "GET /repos/{owner}/{repo}/zipball/{ref}",
      {},
      { renamed: ["repos", "downloadZipballArchive"] }
    ],
    downloadTarballArchive: ["GET /repos/{owner}/{repo}/tarball/{ref}"],
    downloadZipballArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}"],
    enableAutomatedSecurityFixes: [
      "PUT /repos/{owner}/{repo}/automated-security-fixes"
    ],
    enableLfsForRepo: ["PUT /repos/{owner}/{repo}/lfs"],
    enableVulnerabilityAlerts: [
      "PUT /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    generateReleaseNotes: [
      "POST /repos/{owner}/{repo}/releases/generate-notes"
    ],
    get: ["GET /repos/{owner}/{repo}"],
    getAccessRestrictions: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"
    ],
    getAdminBranchProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    getAllEnvironments: ["GET /repos/{owner}/{repo}/environments"],
    getAllStatusCheckContexts: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"
    ],
    getAllTopics: ["GET /repos/{owner}/{repo}/topics"],
    getAppsWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"
    ],
    getAutolink: ["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],
    getBranch: ["GET /repos/{owner}/{repo}/branches/{branch}"],
    getBranchProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    getClones: ["GET /repos/{owner}/{repo}/traffic/clones"],
    getCodeFrequencyStats: ["GET /repos/{owner}/{repo}/stats/code_frequency"],
    getCollaboratorPermissionLevel: [
      "GET /repos/{owner}/{repo}/collaborators/{username}/permission"
    ],
    getCombinedStatusForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/status"],
    getCommit: ["GET /repos/{owner}/{repo}/commits/{ref}"],
    getCommitActivityStats: ["GET /repos/{owner}/{repo}/stats/commit_activity"],
    getCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}"],
    getCommitSignatureProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    getCommunityProfileMetrics: ["GET /repos/{owner}/{repo}/community/profile"],
    getContent: ["GET /repos/{owner}/{repo}/contents/{path}"],
    getContributorsStats: ["GET /repos/{owner}/{repo}/stats/contributors"],
    getDeployKey: ["GET /repos/{owner}/{repo}/keys/{key_id}"],
    getDeployment: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],
    getDeploymentStatus: [
      "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"
    ],
    getEnvironment: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    getLatestPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/latest"],
    getLatestRelease: ["GET /repos/{owner}/{repo}/releases/latest"],
    getPages: ["GET /repos/{owner}/{repo}/pages"],
    getPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],
    getPagesHealthCheck: ["GET /repos/{owner}/{repo}/pages/health"],
    getParticipationStats: ["GET /repos/{owner}/{repo}/stats/participation"],
    getPullRequestReviewProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    getPunchCardStats: ["GET /repos/{owner}/{repo}/stats/punch_card"],
    getReadme: ["GET /repos/{owner}/{repo}/readme"],
    getReadmeInDirectory: ["GET /repos/{owner}/{repo}/readme/{dir}"],
    getRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}"],
    getReleaseAsset: ["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],
    getReleaseByTag: ["GET /repos/{owner}/{repo}/releases/tags/{tag}"],
    getStatusChecksProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    getTeamsWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"
    ],
    getTopPaths: ["GET /repos/{owner}/{repo}/traffic/popular/paths"],
    getTopReferrers: ["GET /repos/{owner}/{repo}/traffic/popular/referrers"],
    getUsersWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"
    ],
    getViews: ["GET /repos/{owner}/{repo}/traffic/views"],
    getWebhook: ["GET /repos/{owner}/{repo}/hooks/{hook_id}"],
    getWebhookConfigForRepo: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/config"
    ],
    getWebhookDelivery: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"
    ],
    listAutolinks: ["GET /repos/{owner}/{repo}/autolinks"],
    listBranches: ["GET /repos/{owner}/{repo}/branches"],
    listBranchesForHeadCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"
    ],
    listCollaborators: ["GET /repos/{owner}/{repo}/collaborators"],
    listCommentsForCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"
    ],
    listCommitCommentsForRepo: ["GET /repos/{owner}/{repo}/comments"],
    listCommitStatusesForRef: [
      "GET /repos/{owner}/{repo}/commits/{ref}/statuses"
    ],
    listCommits: ["GET /repos/{owner}/{repo}/commits"],
    listContributors: ["GET /repos/{owner}/{repo}/contributors"],
    listDeployKeys: ["GET /repos/{owner}/{repo}/keys"],
    listDeploymentStatuses: [
      "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"
    ],
    listDeployments: ["GET /repos/{owner}/{repo}/deployments"],
    listForAuthenticatedUser: ["GET /user/repos"],
    listForOrg: ["GET /orgs/{org}/repos"],
    listForUser: ["GET /users/{username}/repos"],
    listForks: ["GET /repos/{owner}/{repo}/forks"],
    listInvitations: ["GET /repos/{owner}/{repo}/invitations"],
    listInvitationsForAuthenticatedUser: ["GET /user/repository_invitations"],
    listLanguages: ["GET /repos/{owner}/{repo}/languages"],
    listPagesBuilds: ["GET /repos/{owner}/{repo}/pages/builds"],
    listPublic: ["GET /repositories"],
    listPullRequestsAssociatedWithCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"
    ],
    listReleaseAssets: [
      "GET /repos/{owner}/{repo}/releases/{release_id}/assets"
    ],
    listReleases: ["GET /repos/{owner}/{repo}/releases"],
    listTagProtection: ["GET /repos/{owner}/{repo}/tags/protection"],
    listTags: ["GET /repos/{owner}/{repo}/tags"],
    listTeams: ["GET /repos/{owner}/{repo}/teams"],
    listWebhookDeliveries: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"
    ],
    listWebhooks: ["GET /repos/{owner}/{repo}/hooks"],
    merge: ["POST /repos/{owner}/{repo}/merges"],
    mergeUpstream: ["POST /repos/{owner}/{repo}/merge-upstream"],
    pingWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],
    redeliverWebhookDelivery: [
      "POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"
    ],
    removeAppAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    removeCollaborator: [
      "DELETE /repos/{owner}/{repo}/collaborators/{username}"
    ],
    removeStatusCheckContexts: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    removeStatusCheckProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    removeTeamAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    removeUserAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    renameBranch: ["POST /repos/{owner}/{repo}/branches/{branch}/rename"],
    replaceAllTopics: ["PUT /repos/{owner}/{repo}/topics"],
    requestPagesBuild: ["POST /repos/{owner}/{repo}/pages/builds"],
    setAdminBranchProtection: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    setAppAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    setStatusCheckContexts: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    setTeamAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    setUserAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    testPushWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],
    transfer: ["POST /repos/{owner}/{repo}/transfer"],
    update: ["PATCH /repos/{owner}/{repo}"],
    updateBranchProtection: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    updateCommitComment: ["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],
    updateInformationAboutPagesSite: ["PUT /repos/{owner}/{repo}/pages"],
    updateInvitation: [
      "PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"
    ],
    updatePullRequestReviewProtection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    updateRelease: ["PATCH /repos/{owner}/{repo}/releases/{release_id}"],
    updateReleaseAsset: [
      "PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"
    ],
    updateStatusCheckPotection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
      {},
      { renamed: ["repos", "updateStatusCheckProtection"] }
    ],
    updateStatusCheckProtection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    updateWebhook: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],
    updateWebhookConfigForRepo: [
      "PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"
    ],
    uploadReleaseAsset: [
      "POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",
      { baseUrl: "https://uploads.github.com" }
    ]
  },
  search: {
    code: ["GET /search/code"],
    commits: ["GET /search/commits"],
    issuesAndPullRequests: ["GET /search/issues"],
    labels: ["GET /search/labels"],
    repos: ["GET /search/repositories"],
    topics: ["GET /search/topics"],
    users: ["GET /search/users"]
  },
  secretScanning: {
    getAlert: [
      "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"
    ],
    listAlertsForEnterprise: [
      "GET /enterprises/{enterprise}/secret-scanning/alerts"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/secret-scanning/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/secret-scanning/alerts"],
    listLocationsForAlert: [
      "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"
    ],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"
    ]
  },
  teams: {
    addOrUpdateMembershipForUserInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    addOrUpdateProjectPermissionsInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"
    ],
    addOrUpdateRepoPermissionsInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    checkPermissionsForProjectInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"
    ],
    checkPermissionsForRepoInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    create: ["POST /orgs/{org}/teams"],
    createDiscussionCommentInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"
    ],
    createDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions"],
    deleteDiscussionCommentInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    deleteDiscussionInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    deleteInOrg: ["DELETE /orgs/{org}/teams/{team_slug}"],
    getByName: ["GET /orgs/{org}/teams/{team_slug}"],
    getDiscussionCommentInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    getDiscussionInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    getMembershipForUserInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    list: ["GET /orgs/{org}/teams"],
    listChildInOrg: ["GET /orgs/{org}/teams/{team_slug}/teams"],
    listDiscussionCommentsInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"
    ],
    listDiscussionsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions"],
    listForAuthenticatedUser: ["GET /user/teams"],
    listMembersInOrg: ["GET /orgs/{org}/teams/{team_slug}/members"],
    listPendingInvitationsInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/invitations"
    ],
    listProjectsInOrg: ["GET /orgs/{org}/teams/{team_slug}/projects"],
    listReposInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos"],
    removeMembershipForUserInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    removeProjectInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"
    ],
    removeRepoInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    updateDiscussionCommentInOrg: [
      "PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    updateDiscussionInOrg: [
      "PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    updateInOrg: ["PATCH /orgs/{org}/teams/{team_slug}"]
  },
  users: {
    addEmailForAuthenticated: [
      "POST /user/emails",
      {},
      { renamed: ["users", "addEmailForAuthenticatedUser"] }
    ],
    addEmailForAuthenticatedUser: ["POST /user/emails"],
    block: ["PUT /user/blocks/{username}"],
    checkBlocked: ["GET /user/blocks/{username}"],
    checkFollowingForUser: ["GET /users/{username}/following/{target_user}"],
    checkPersonIsFollowedByAuthenticated: ["GET /user/following/{username}"],
    createGpgKeyForAuthenticated: [
      "POST /user/gpg_keys",
      {},
      { renamed: ["users", "createGpgKeyForAuthenticatedUser"] }
    ],
    createGpgKeyForAuthenticatedUser: ["POST /user/gpg_keys"],
    createPublicSshKeyForAuthenticated: [
      "POST /user/keys",
      {},
      { renamed: ["users", "createPublicSshKeyForAuthenticatedUser"] }
    ],
    createPublicSshKeyForAuthenticatedUser: ["POST /user/keys"],
    deleteEmailForAuthenticated: [
      "DELETE /user/emails",
      {},
      { renamed: ["users", "deleteEmailForAuthenticatedUser"] }
    ],
    deleteEmailForAuthenticatedUser: ["DELETE /user/emails"],
    deleteGpgKeyForAuthenticated: [
      "DELETE /user/gpg_keys/{gpg_key_id}",
      {},
      { renamed: ["users", "deleteGpgKeyForAuthenticatedUser"] }
    ],
    deleteGpgKeyForAuthenticatedUser: ["DELETE /user/gpg_keys/{gpg_key_id}"],
    deletePublicSshKeyForAuthenticated: [
      "DELETE /user/keys/{key_id}",
      {},
      { renamed: ["users", "deletePublicSshKeyForAuthenticatedUser"] }
    ],
    deletePublicSshKeyForAuthenticatedUser: ["DELETE /user/keys/{key_id}"],
    follow: ["PUT /user/following/{username}"],
    getAuthenticated: ["GET /user"],
    getByUsername: ["GET /users/{username}"],
    getContextForUser: ["GET /users/{username}/hovercard"],
    getGpgKeyForAuthenticated: [
      "GET /user/gpg_keys/{gpg_key_id}",
      {},
      { renamed: ["users", "getGpgKeyForAuthenticatedUser"] }
    ],
    getGpgKeyForAuthenticatedUser: ["GET /user/gpg_keys/{gpg_key_id}"],
    getPublicSshKeyForAuthenticated: [
      "GET /user/keys/{key_id}",
      {},
      { renamed: ["users", "getPublicSshKeyForAuthenticatedUser"] }
    ],
    getPublicSshKeyForAuthenticatedUser: ["GET /user/keys/{key_id}"],
    list: ["GET /users"],
    listBlockedByAuthenticated: [
      "GET /user/blocks",
      {},
      { renamed: ["users", "listBlockedByAuthenticatedUser"] }
    ],
    listBlockedByAuthenticatedUser: ["GET /user/blocks"],
    listEmailsForAuthenticated: [
      "GET /user/emails",
      {},
      { renamed: ["users", "listEmailsForAuthenticatedUser"] }
    ],
    listEmailsForAuthenticatedUser: ["GET /user/emails"],
    listFollowedByAuthenticated: [
      "GET /user/following",
      {},
      { renamed: ["users", "listFollowedByAuthenticatedUser"] }
    ],
    listFollowedByAuthenticatedUser: ["GET /user/following"],
    listFollowersForAuthenticatedUser: ["GET /user/followers"],
    listFollowersForUser: ["GET /users/{username}/followers"],
    listFollowingForUser: ["GET /users/{username}/following"],
    listGpgKeysForAuthenticated: [
      "GET /user/gpg_keys",
      {},
      { renamed: ["users", "listGpgKeysForAuthenticatedUser"] }
    ],
    listGpgKeysForAuthenticatedUser: ["GET /user/gpg_keys"],
    listGpgKeysForUser: ["GET /users/{username}/gpg_keys"],
    listPublicEmailsForAuthenticated: [
      "GET /user/public_emails",
      {},
      { renamed: ["users", "listPublicEmailsForAuthenticatedUser"] }
    ],
    listPublicEmailsForAuthenticatedUser: ["GET /user/public_emails"],
    listPublicKeysForUser: ["GET /users/{username}/keys"],
    listPublicSshKeysForAuthenticated: [
      "GET /user/keys",
      {},
      { renamed: ["users", "listPublicSshKeysForAuthenticatedUser"] }
    ],
    listPublicSshKeysForAuthenticatedUser: ["GET /user/keys"],
    setPrimaryEmailVisibilityForAuthenticated: [
      "PATCH /user/email/visibility",
      {},
      { renamed: ["users", "setPrimaryEmailVisibilityForAuthenticatedUser"] }
    ],
    setPrimaryEmailVisibilityForAuthenticatedUser: [
      "PATCH /user/email/visibility"
    ],
    unblock: ["DELETE /user/blocks/{username}"],
    unfollow: ["DELETE /user/following/{username}"],
    updateAuthenticated: ["PATCH /user"]
  }
}, Yl = "5.16.2";
function Jl(i, e) {
  const t = {};
  for (const [r, s] of Object.entries(e))
    for (const [o, l] of Object.entries(s)) {
      const [u, v, f] = l, [c, h] = u.split(/ /), b = Object.assign({ method: c, url: h }, v);
      t[r] || (t[r] = {});
      const x = t[r];
      if (f) {
        x[o] = T7(i, r, o, b, f);
        continue;
      }
      x[o] = i.request.defaults(b);
    }
  return t;
}
function T7(i, e, t, r, s) {
  const o = i.request.defaults(r);
  function l(...u) {
    let v = o.endpoint.merge(...u);
    if (s.mapToData)
      return v = Object.assign({}, v, {
        data: v[s.mapToData],
        [s.mapToData]: void 0
      }), o(v);
    if (s.renamed) {
      const [f, c] = s.renamed;
      i.log.warn(`octokit.${e}.${t}() has been renamed to octokit.${f}.${c}()`);
    }
    if (s.deprecated && i.log.warn(s.deprecated), s.renamedParameters) {
      const f = o.endpoint.merge(...u);
      for (const [c, h] of Object.entries(s.renamedParameters))
        c in f && (i.log.warn(`"${c}" parameter is deprecated for "octokit.${e}.${t}()". Use "${h}" instead`), h in f || (f[h] = f[c]), delete f[c]);
      return o(f);
    }
    return o(...u);
  }
  return Object.assign(l, o);
}
function Zl(i) {
  return {
    rest: Jl(i, Kl)
  };
}
Zl.VERSION = Yl;
function Xl(i) {
  const e = Jl(i, Kl);
  return {
    ...e,
    rest: e
  };
}
Xl.VERSION = Yl;
var S7 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  legacyRestEndpointMethods: Xl,
  restEndpointMethods: Zl
});
const A7 = "2.21.3";
function R7(i) {
  if (!i.data)
    return {
      ...i,
      data: []
    };
  if (!("total_count" in i.data && !("url" in i.data)))
    return i;
  const t = i.data.incomplete_results, r = i.data.repository_selection, s = i.data.total_count;
  delete i.data.incomplete_results, delete i.data.repository_selection, delete i.data.total_count;
  const o = Object.keys(i.data)[0], l = i.data[o];
  return i.data = l, typeof t != "undefined" && (i.data.incomplete_results = t), typeof r != "undefined" && (i.data.repository_selection = r), i.data.total_count = s, i;
}
function Np(i, e, t) {
  const r = typeof e == "function" ? e.endpoint(t) : i.request.endpoint(e, t), s = typeof e == "function" ? e : i.request, o = r.method, l = r.headers;
  let u = r.url;
  return {
    [Symbol.asyncIterator]: () => ({
      async next() {
        if (!u)
          return { done: !0 };
        try {
          const v = await s({ method: o, url: u, headers: l }), f = R7(v);
          return u = ((f.headers.link || "").match(/<([^>]+)>;\s*rel="next"/) || [])[1], { value: f };
        } catch (v) {
          if (v.status !== 409)
            throw v;
          return u = "", {
            value: {
              status: 200,
              headers: {},
              data: []
            }
          };
        }
      }
    })
  };
}
function ec(i, e, t, r) {
  return typeof t == "function" && (r = t, t = void 0), ac(i, [], Np(i, e, t)[Symbol.asyncIterator](), r);
}
function ac(i, e, t, r) {
  return t.next().then((s) => {
    if (s.done)
      return e;
    let o = !1;
    function l() {
      o = !0;
    }
    return e = e.concat(r ? r(s.value, l) : s.value.data), o ? e : ac(i, e, t, r);
  });
}
const C7 = Object.assign(ec, {
  iterator: Np
}), tc = [
  "GET /app/hook/deliveries",
  "GET /app/installations",
  "GET /applications/grants",
  "GET /authorizations",
  "GET /enterprises/{enterprise}/actions/permissions/organizations",
  "GET /enterprises/{enterprise}/actions/runner-groups",
  "GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations",
  "GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners",
  "GET /enterprises/{enterprise}/actions/runners",
  "GET /enterprises/{enterprise}/audit-log",
  "GET /enterprises/{enterprise}/secret-scanning/alerts",
  "GET /enterprises/{enterprise}/settings/billing/advanced-security",
  "GET /events",
  "GET /gists",
  "GET /gists/public",
  "GET /gists/starred",
  "GET /gists/{gist_id}/comments",
  "GET /gists/{gist_id}/commits",
  "GET /gists/{gist_id}/forks",
  "GET /installation/repositories",
  "GET /issues",
  "GET /licenses",
  "GET /marketplace_listing/plans",
  "GET /marketplace_listing/plans/{plan_id}/accounts",
  "GET /marketplace_listing/stubbed/plans",
  "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts",
  "GET /networks/{owner}/{repo}/events",
  "GET /notifications",
  "GET /organizations",
  "GET /orgs/{org}/actions/cache/usage-by-repository",
  "GET /orgs/{org}/actions/permissions/repositories",
  "GET /orgs/{org}/actions/runner-groups",
  "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories",
  "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners",
  "GET /orgs/{org}/actions/runners",
  "GET /orgs/{org}/actions/secrets",
  "GET /orgs/{org}/actions/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/audit-log",
  "GET /orgs/{org}/blocks",
  "GET /orgs/{org}/code-scanning/alerts",
  "GET /orgs/{org}/codespaces",
  "GET /orgs/{org}/credential-authorizations",
  "GET /orgs/{org}/dependabot/secrets",
  "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/events",
  "GET /orgs/{org}/external-groups",
  "GET /orgs/{org}/failed_invitations",
  "GET /orgs/{org}/hooks",
  "GET /orgs/{org}/hooks/{hook_id}/deliveries",
  "GET /orgs/{org}/installations",
  "GET /orgs/{org}/invitations",
  "GET /orgs/{org}/invitations/{invitation_id}/teams",
  "GET /orgs/{org}/issues",
  "GET /orgs/{org}/members",
  "GET /orgs/{org}/migrations",
  "GET /orgs/{org}/migrations/{migration_id}/repositories",
  "GET /orgs/{org}/outside_collaborators",
  "GET /orgs/{org}/packages",
  "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
  "GET /orgs/{org}/projects",
  "GET /orgs/{org}/public_members",
  "GET /orgs/{org}/repos",
  "GET /orgs/{org}/secret-scanning/alerts",
  "GET /orgs/{org}/settings/billing/advanced-security",
  "GET /orgs/{org}/team-sync/groups",
  "GET /orgs/{org}/teams",
  "GET /orgs/{org}/teams/{team_slug}/discussions",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
  "GET /orgs/{org}/teams/{team_slug}/invitations",
  "GET /orgs/{org}/teams/{team_slug}/members",
  "GET /orgs/{org}/teams/{team_slug}/projects",
  "GET /orgs/{org}/teams/{team_slug}/repos",
  "GET /orgs/{org}/teams/{team_slug}/teams",
  "GET /projects/columns/{column_id}/cards",
  "GET /projects/{project_id}/collaborators",
  "GET /projects/{project_id}/columns",
  "GET /repos/{owner}/{repo}/actions/artifacts",
  "GET /repos/{owner}/{repo}/actions/caches",
  "GET /repos/{owner}/{repo}/actions/runners",
  "GET /repos/{owner}/{repo}/actions/runs",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
  "GET /repos/{owner}/{repo}/actions/secrets",
  "GET /repos/{owner}/{repo}/actions/workflows",
  "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
  "GET /repos/{owner}/{repo}/assignees",
  "GET /repos/{owner}/{repo}/branches",
  "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
  "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
  "GET /repos/{owner}/{repo}/code-scanning/alerts",
  "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
  "GET /repos/{owner}/{repo}/code-scanning/analyses",
  "GET /repos/{owner}/{repo}/codespaces",
  "GET /repos/{owner}/{repo}/codespaces/devcontainers",
  "GET /repos/{owner}/{repo}/codespaces/secrets",
  "GET /repos/{owner}/{repo}/collaborators",
  "GET /repos/{owner}/{repo}/comments",
  "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/commits",
  "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments",
  "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",
  "GET /repos/{owner}/{repo}/commits/{ref}/check-runs",
  "GET /repos/{owner}/{repo}/commits/{ref}/check-suites",
  "GET /repos/{owner}/{repo}/commits/{ref}/status",
  "GET /repos/{owner}/{repo}/commits/{ref}/statuses",
  "GET /repos/{owner}/{repo}/contributors",
  "GET /repos/{owner}/{repo}/dependabot/secrets",
  "GET /repos/{owner}/{repo}/deployments",
  "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
  "GET /repos/{owner}/{repo}/environments",
  "GET /repos/{owner}/{repo}/events",
  "GET /repos/{owner}/{repo}/forks",
  "GET /repos/{owner}/{repo}/git/matching-refs/{ref}",
  "GET /repos/{owner}/{repo}/hooks",
  "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
  "GET /repos/{owner}/{repo}/invitations",
  "GET /repos/{owner}/{repo}/issues",
  "GET /repos/{owner}/{repo}/issues/comments",
  "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/issues/events",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/comments",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/events",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/labels",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",
  "GET /repos/{owner}/{repo}/keys",
  "GET /repos/{owner}/{repo}/labels",
  "GET /repos/{owner}/{repo}/milestones",
  "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels",
  "GET /repos/{owner}/{repo}/notifications",
  "GET /repos/{owner}/{repo}/pages/builds",
  "GET /repos/{owner}/{repo}/projects",
  "GET /repos/{owner}/{repo}/pulls",
  "GET /repos/{owner}/{repo}/pulls/comments",
  "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/commits",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/files",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",
  "GET /repos/{owner}/{repo}/releases",
  "GET /repos/{owner}/{repo}/releases/{release_id}/assets",
  "GET /repos/{owner}/{repo}/releases/{release_id}/reactions",
  "GET /repos/{owner}/{repo}/secret-scanning/alerts",
  "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations",
  "GET /repos/{owner}/{repo}/stargazers",
  "GET /repos/{owner}/{repo}/subscribers",
  "GET /repos/{owner}/{repo}/tags",
  "GET /repos/{owner}/{repo}/teams",
  "GET /repos/{owner}/{repo}/topics",
  "GET /repositories",
  "GET /repositories/{repository_id}/environments/{environment_name}/secrets",
  "GET /search/code",
  "GET /search/commits",
  "GET /search/issues",
  "GET /search/labels",
  "GET /search/repositories",
  "GET /search/topics",
  "GET /search/users",
  "GET /teams/{team_id}/discussions",
  "GET /teams/{team_id}/discussions/{discussion_number}/comments",
  "GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  "GET /teams/{team_id}/discussions/{discussion_number}/reactions",
  "GET /teams/{team_id}/invitations",
  "GET /teams/{team_id}/members",
  "GET /teams/{team_id}/projects",
  "GET /teams/{team_id}/repos",
  "GET /teams/{team_id}/teams",
  "GET /user/blocks",
  "GET /user/codespaces",
  "GET /user/codespaces/secrets",
  "GET /user/emails",
  "GET /user/followers",
  "GET /user/following",
  "GET /user/gpg_keys",
  "GET /user/installations",
  "GET /user/installations/{installation_id}/repositories",
  "GET /user/issues",
  "GET /user/keys",
  "GET /user/marketplace_purchases",
  "GET /user/marketplace_purchases/stubbed",
  "GET /user/memberships/orgs",
  "GET /user/migrations",
  "GET /user/migrations/{migration_id}/repositories",
  "GET /user/orgs",
  "GET /user/packages",
  "GET /user/packages/{package_type}/{package_name}/versions",
  "GET /user/public_emails",
  "GET /user/repos",
  "GET /user/repository_invitations",
  "GET /user/starred",
  "GET /user/subscriptions",
  "GET /user/teams",
  "GET /users",
  "GET /users/{username}/events",
  "GET /users/{username}/events/orgs/{org}",
  "GET /users/{username}/events/public",
  "GET /users/{username}/followers",
  "GET /users/{username}/following",
  "GET /users/{username}/gists",
  "GET /users/{username}/gpg_keys",
  "GET /users/{username}/keys",
  "GET /users/{username}/orgs",
  "GET /users/{username}/packages",
  "GET /users/{username}/projects",
  "GET /users/{username}/received_events",
  "GET /users/{username}/received_events/public",
  "GET /users/{username}/repos",
  "GET /users/{username}/starred",
  "GET /users/{username}/subscriptions"
];
function P7(i) {
  return typeof i == "string" ? tc.includes(i) : !1;
}
function ic(i) {
  return {
    paginate: Object.assign(ec.bind(null, i), {
      iterator: Np.bind(null, i)
    })
  };
}
ic.VERSION = A7;
var D7 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  composePaginateRest: C7,
  isPaginatingEndpoint: P7,
  paginateRest: ic,
  paginatingEndpoints: tc
}), O7 = /* @__PURE__ */ on(E7), k7 = /* @__PURE__ */ on(S7), N7 = /* @__PURE__ */ on(D7), nc = Ee(function(i, e) {
  var t = Y && Y.__createBinding || (Object.create ? function(f, c, h, b) {
    b === void 0 && (b = h), Object.defineProperty(f, b, { enumerable: !0, get: function() {
      return c[h];
    } });
  } : function(f, c, h, b) {
    b === void 0 && (b = h), f[b] = c[h];
  }), r = Y && Y.__setModuleDefault || (Object.create ? function(f, c) {
    Object.defineProperty(f, "default", { enumerable: !0, value: c });
  } : function(f, c) {
    f.default = c;
  }), s = Y && Y.__importStar || function(f) {
    if (f && f.__esModule)
      return f;
    var c = {};
    if (f != null)
      for (var h in f)
        h !== "default" && Object.hasOwnProperty.call(f, h) && t(c, f, h);
    return r(c, f), c;
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.getOctokitOptions = e.GitHub = e.defaults = e.context = void 0;
  const o = s(ol), l = s(t8);
  e.context = new o.Context();
  const u = l.getApiBaseUrl();
  e.defaults = {
    baseUrl: u,
    request: {
      agent: l.getProxyAgent(u)
    }
  }, e.GitHub = O7.Octokit.plugin(k7.restEndpointMethods, N7.paginateRest).defaults(e.defaults);
  function v(f, c) {
    const h = Object.assign({}, c || {}), b = l.getAuthString(f, h);
    return b && (h.auth = b), h;
  }
  e.getOctokitOptions = v;
});
Ee(function(i, e) {
  var t = Y && Y.__createBinding || (Object.create ? function(u, v, f, c) {
    c === void 0 && (c = f), Object.defineProperty(u, c, { enumerable: !0, get: function() {
      return v[f];
    } });
  } : function(u, v, f, c) {
    c === void 0 && (c = f), u[c] = v[f];
  }), r = Y && Y.__setModuleDefault || (Object.create ? function(u, v) {
    Object.defineProperty(u, "default", { enumerable: !0, value: v });
  } : function(u, v) {
    u.default = v;
  }), s = Y && Y.__importStar || function(u) {
    if (u && u.__esModule)
      return u;
    var v = {};
    if (u != null)
      for (var f in u)
        f !== "default" && Object.hasOwnProperty.call(u, f) && t(v, u, f);
    return r(v, u), v;
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.getOctokit = e.context = void 0;
  const o = s(ol);
  e.context = new o.Context();
  function l(u, v, ...f) {
    const c = nc.GitHub.plugin(...f);
    return new c(nc.getOctokitOptions(u, v));
  }
  e.getOctokit = l;
});
Ee(function(i, e) {
  (function() {
    var t, r = "4.17.21", s = 200, o = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", l = "Expected a function", u = "Invalid `variable` option passed into `_.template`", v = "__lodash_hash_undefined__", f = 500, c = "__lodash_placeholder__", h = 1, b = 2, x = 4, S = 1, D = 2, L = 1, R = 2, B = 4, Q = 8, ee = 16, re = 32, de = 64, ne = 128, F = 256, N = 512, G = 30, V = "...", ae = 800, ie = 16, H = 1, O = 2, $ = 3, j = 1 / 0, J = 9007199254740991, ce = 17976931348623157e292, he = 0 / 0, Fe = 4294967295, Be = Fe - 1, ge = Fe >>> 1, Ye = [
      ["ary", ne],
      ["bind", L],
      ["bindKey", R],
      ["curry", Q],
      ["curryRight", ee],
      ["flip", N],
      ["partial", re],
      ["partialRight", de],
      ["rearg", F]
    ], Ve = "[object Arguments]", aa = "[object Array]", Pe = "[object AsyncFunction]", nt = "[object Boolean]", Qa = "[object Date]", wa = "[object DOMException]", y = "[object Error]", E = "[object Function]", q = "[object GeneratorFunction]", z = "[object Map]", X = "[object Number]", be = "[object Null]", Ae = "[object Object]", Ka = "[object Promise]", Fa = "[object Proxy]", St = "[object RegExp]", Ya = "[object Set]", qi = "[object String]", Tn = "[object Symbol]", vu = "[object Undefined]", zi = "[object WeakMap]", gu = "[object WeakSet]", $i = "[object ArrayBuffer]", li = "[object DataView]", Vr = "[object Float32Array]", jr = "[object Float64Array]", Mr = "[object Int8Array]", qr = "[object Int16Array]", zr = "[object Int32Array]", $r = "[object Uint8Array]", Hr = "[object Uint8ClampedArray]", Wr = "[object Uint16Array]", Qr = "[object Uint32Array]", wu = /\b__p \+= '';/g, bu = /\b(__p \+=) '' \+/g, _u = /(__e\(.*?\)|\b__t\)) \+\n'';/g, _o = /&(?:amp|lt|gt|quot|#39);/g, xo = /[&<>"']/g, xu = RegExp(_o.source), yu = RegExp(xo.source), Eu = /<%-([\s\S]+?)%>/g, Tu = /<%([\s\S]+?)%>/g, yo = /<%=([\s\S]+?)%>/g, Su = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, Au = /^\w*$/, Ru = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Kr = /[\\^$.*+?()[\]{}|]/g, Cu = RegExp(Kr.source), Yr = /^\s+/, Pu = /\s/, Du = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, Ou = /\{\n\/\* \[wrapped with (.+)\] \*/, ku = /,? & /, Nu = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, Fu = /[()=,{}\[\]\/\s]/, Gu = /\\(\\)?/g, Lu = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Eo = /\w*$/, Uu = /^[-+]0x[0-9a-f]+$/i, Iu = /^0b[01]+$/i, Bu = /^\[object .+?Constructor\]$/, Vu = /^0o[0-7]+$/i, ju = /^(?:0|[1-9]\d*)$/, Mu = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, Sn = /($^)/, qu = /['\n\r\u2028\u2029\\]/g, An = "\\ud800-\\udfff", zu = "\\u0300-\\u036f", $u = "\\ufe20-\\ufe2f", Hu = "\\u20d0-\\u20ff", To = zu + $u + Hu, So = "\\u2700-\\u27bf", Ao = "a-z\\xdf-\\xf6\\xf8-\\xff", Wu = "\\xac\\xb1\\xd7\\xf7", Qu = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", Ku = "\\u2000-\\u206f", Yu = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Ro = "A-Z\\xc0-\\xd6\\xd8-\\xde", Co = "\\ufe0e\\ufe0f", Po = Wu + Qu + Ku + Yu, Jr = "['\u2019]", Ju = "[" + An + "]", Do = "[" + Po + "]", Rn = "[" + To + "]", Oo = "\\d+", Zu = "[" + So + "]", ko = "[" + Ao + "]", No = "[^" + An + Po + Oo + So + Ao + Ro + "]", Zr = "\\ud83c[\\udffb-\\udfff]", Xu = "(?:" + Rn + "|" + Zr + ")", Fo = "[^" + An + "]", Xr = "(?:\\ud83c[\\udde6-\\uddff]){2}", es = "[\\ud800-\\udbff][\\udc00-\\udfff]", ci = "[" + Ro + "]", Go = "\\u200d", Lo = "(?:" + ko + "|" + No + ")", e2 = "(?:" + ci + "|" + No + ")", Uo = "(?:" + Jr + "(?:d|ll|m|re|s|t|ve))?", Io = "(?:" + Jr + "(?:D|LL|M|RE|S|T|VE))?", Bo = Xu + "?", Vo = "[" + Co + "]?", a2 = "(?:" + Go + "(?:" + [Fo, Xr, es].join("|") + ")" + Vo + Bo + ")*", t2 = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", i2 = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", jo = Vo + Bo + a2, n2 = "(?:" + [Zu, Xr, es].join("|") + ")" + jo, r2 = "(?:" + [Fo + Rn + "?", Rn, Xr, es, Ju].join("|") + ")", s2 = RegExp(Jr, "g"), p2 = RegExp(Rn, "g"), as = RegExp(Zr + "(?=" + Zr + ")|" + r2 + jo, "g"), o2 = RegExp([
      ci + "?" + ko + "+" + Uo + "(?=" + [Do, ci, "$"].join("|") + ")",
      e2 + "+" + Io + "(?=" + [Do, ci + Lo, "$"].join("|") + ")",
      ci + "?" + Lo + "+" + Uo,
      ci + "+" + Io,
      i2,
      t2,
      Oo,
      n2
    ].join("|"), "g"), d2 = RegExp("[" + Go + An + To + Co + "]"), l2 = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, c2 = [
      "Array",
      "Buffer",
      "DataView",
      "Date",
      "Error",
      "Float32Array",
      "Float64Array",
      "Function",
      "Int8Array",
      "Int16Array",
      "Int32Array",
      "Map",
      "Math",
      "Object",
      "Promise",
      "RegExp",
      "Set",
      "String",
      "Symbol",
      "TypeError",
      "Uint8Array",
      "Uint8ClampedArray",
      "Uint16Array",
      "Uint32Array",
      "WeakMap",
      "_",
      "clearTimeout",
      "isFinite",
      "parseInt",
      "setTimeout"
    ], u2 = -1, Ne = {};
    Ne[Vr] = Ne[jr] = Ne[Mr] = Ne[qr] = Ne[zr] = Ne[$r] = Ne[Hr] = Ne[Wr] = Ne[Qr] = !0, Ne[Ve] = Ne[aa] = Ne[$i] = Ne[nt] = Ne[li] = Ne[Qa] = Ne[y] = Ne[E] = Ne[z] = Ne[X] = Ne[Ae] = Ne[St] = Ne[Ya] = Ne[qi] = Ne[zi] = !1;
    var ke = {};
    ke[Ve] = ke[aa] = ke[$i] = ke[li] = ke[nt] = ke[Qa] = ke[Vr] = ke[jr] = ke[Mr] = ke[qr] = ke[zr] = ke[z] = ke[X] = ke[Ae] = ke[St] = ke[Ya] = ke[qi] = ke[Tn] = ke[$r] = ke[Hr] = ke[Wr] = ke[Qr] = !0, ke[y] = ke[E] = ke[zi] = !1;
    var m2 = {
      \u00C0: "A",
      \u00C1: "A",
      \u00C2: "A",
      \u00C3: "A",
      \u00C4: "A",
      \u00C5: "A",
      \u00E0: "a",
      \u00E1: "a",
      \u00E2: "a",
      \u00E3: "a",
      \u00E4: "a",
      \u00E5: "a",
      \u00C7: "C",
      \u00E7: "c",
      \u00D0: "D",
      \u00F0: "d",
      \u00C8: "E",
      \u00C9: "E",
      \u00CA: "E",
      \u00CB: "E",
      \u00E8: "e",
      \u00E9: "e",
      \u00EA: "e",
      \u00EB: "e",
      \u00CC: "I",
      \u00CD: "I",
      \u00CE: "I",
      \u00CF: "I",
      \u00EC: "i",
      \u00ED: "i",
      \u00EE: "i",
      \u00EF: "i",
      \u00D1: "N",
      \u00F1: "n",
      \u00D2: "O",
      \u00D3: "O",
      \u00D4: "O",
      \u00D5: "O",
      \u00D6: "O",
      \u00D8: "O",
      \u00F2: "o",
      \u00F3: "o",
      \u00F4: "o",
      \u00F5: "o",
      \u00F6: "o",
      \u00F8: "o",
      \u00D9: "U",
      \u00DA: "U",
      \u00DB: "U",
      \u00DC: "U",
      \u00F9: "u",
      \u00FA: "u",
      \u00FB: "u",
      \u00FC: "u",
      \u00DD: "Y",
      \u00FD: "y",
      \u00FF: "y",
      \u00C6: "Ae",
      \u00E6: "ae",
      \u00DE: "Th",
      \u00FE: "th",
      \u00DF: "ss",
      \u0100: "A",
      \u0102: "A",
      \u0104: "A",
      \u0101: "a",
      \u0103: "a",
      \u0105: "a",
      \u0106: "C",
      \u0108: "C",
      \u010A: "C",
      \u010C: "C",
      \u0107: "c",
      \u0109: "c",
      \u010B: "c",
      \u010D: "c",
      \u010E: "D",
      \u0110: "D",
      \u010F: "d",
      \u0111: "d",
      \u0112: "E",
      \u0114: "E",
      \u0116: "E",
      \u0118: "E",
      \u011A: "E",
      \u0113: "e",
      \u0115: "e",
      \u0117: "e",
      \u0119: "e",
      \u011B: "e",
      \u011C: "G",
      \u011E: "G",
      \u0120: "G",
      \u0122: "G",
      \u011D: "g",
      \u011F: "g",
      \u0121: "g",
      \u0123: "g",
      \u0124: "H",
      \u0126: "H",
      \u0125: "h",
      \u0127: "h",
      \u0128: "I",
      \u012A: "I",
      \u012C: "I",
      \u012E: "I",
      \u0130: "I",
      \u0129: "i",
      \u012B: "i",
      \u012D: "i",
      \u012F: "i",
      \u0131: "i",
      \u0134: "J",
      \u0135: "j",
      \u0136: "K",
      \u0137: "k",
      \u0138: "k",
      \u0139: "L",
      \u013B: "L",
      \u013D: "L",
      \u013F: "L",
      \u0141: "L",
      \u013A: "l",
      \u013C: "l",
      \u013E: "l",
      \u0140: "l",
      \u0142: "l",
      \u0143: "N",
      \u0145: "N",
      \u0147: "N",
      \u014A: "N",
      \u0144: "n",
      \u0146: "n",
      \u0148: "n",
      \u014B: "n",
      \u014C: "O",
      \u014E: "O",
      \u0150: "O",
      \u014D: "o",
      \u014F: "o",
      \u0151: "o",
      \u0154: "R",
      \u0156: "R",
      \u0158: "R",
      \u0155: "r",
      \u0157: "r",
      \u0159: "r",
      \u015A: "S",
      \u015C: "S",
      \u015E: "S",
      \u0160: "S",
      \u015B: "s",
      \u015D: "s",
      \u015F: "s",
      \u0161: "s",
      \u0162: "T",
      \u0164: "T",
      \u0166: "T",
      \u0163: "t",
      \u0165: "t",
      \u0167: "t",
      \u0168: "U",
      \u016A: "U",
      \u016C: "U",
      \u016E: "U",
      \u0170: "U",
      \u0172: "U",
      \u0169: "u",
      \u016B: "u",
      \u016D: "u",
      \u016F: "u",
      \u0171: "u",
      \u0173: "u",
      \u0174: "W",
      \u0175: "w",
      \u0176: "Y",
      \u0177: "y",
      \u0178: "Y",
      \u0179: "Z",
      \u017B: "Z",
      \u017D: "Z",
      \u017A: "z",
      \u017C: "z",
      \u017E: "z",
      \u0132: "IJ",
      \u0133: "ij",
      \u0152: "Oe",
      \u0153: "oe",
      \u0149: "'n",
      \u017F: "s"
    }, f2 = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#39;"
    }, h2 = {
      "&amp;": "&",
      "&lt;": "<",
      "&gt;": ">",
      "&quot;": '"',
      "&#39;": "'"
    }, v2 = {
      "\\": "\\",
      "'": "'",
      "\n": "n",
      "\r": "r",
      "\u2028": "u2028",
      "\u2029": "u2029"
    }, g2 = parseFloat, w2 = parseInt, Mo = typeof Y == "object" && Y && Y.Object === Object && Y, b2 = typeof self == "object" && self && self.Object === Object && self, ta = Mo || b2 || Function("return this")(), ts = e && !e.nodeType && e, Wt = ts && !0 && i && !i.nodeType && i, qo = Wt && Wt.exports === ts, is = qo && Mo.process, Ga = function() {
      try {
        var A = Wt && Wt.require && Wt.require("util").types;
        return A || is && is.binding && is.binding("util");
      } catch (k) {
      }
    }(), zo = Ga && Ga.isArrayBuffer, $o = Ga && Ga.isDate, Ho = Ga && Ga.isMap, Wo = Ga && Ga.isRegExp, Qo = Ga && Ga.isSet, Ko = Ga && Ga.isTypedArray;
    function Aa(A, k, P) {
      switch (P.length) {
        case 0:
          return A.call(k);
        case 1:
          return A.call(k, P[0]);
        case 2:
          return A.call(k, P[0], P[1]);
        case 3:
          return A.call(k, P[0], P[1], P[2]);
      }
      return A.apply(k, P);
    }
    function _2(A, k, P, Z) {
      for (var ue = -1, Se = A == null ? 0 : A.length; ++ue < Se; ) {
        var We = A[ue];
        k(Z, We, P(We), A);
      }
      return Z;
    }
    function La(A, k) {
      for (var P = -1, Z = A == null ? 0 : A.length; ++P < Z && k(A[P], P, A) !== !1; )
        ;
      return A;
    }
    function x2(A, k) {
      for (var P = A == null ? 0 : A.length; P-- && k(A[P], P, A) !== !1; )
        ;
      return A;
    }
    function Yo(A, k) {
      for (var P = -1, Z = A == null ? 0 : A.length; ++P < Z; )
        if (!k(A[P], P, A))
          return !1;
      return !0;
    }
    function At(A, k) {
      for (var P = -1, Z = A == null ? 0 : A.length, ue = 0, Se = []; ++P < Z; ) {
        var We = A[P];
        k(We, P, A) && (Se[ue++] = We);
      }
      return Se;
    }
    function Cn(A, k) {
      var P = A == null ? 0 : A.length;
      return !!P && ui(A, k, 0) > -1;
    }
    function ns(A, k, P) {
      for (var Z = -1, ue = A == null ? 0 : A.length; ++Z < ue; )
        if (P(k, A[Z]))
          return !0;
      return !1;
    }
    function Ge(A, k) {
      for (var P = -1, Z = A == null ? 0 : A.length, ue = Array(Z); ++P < Z; )
        ue[P] = k(A[P], P, A);
      return ue;
    }
    function Rt(A, k) {
      for (var P = -1, Z = k.length, ue = A.length; ++P < Z; )
        A[ue + P] = k[P];
      return A;
    }
    function rs(A, k, P, Z) {
      var ue = -1, Se = A == null ? 0 : A.length;
      for (Z && Se && (P = A[++ue]); ++ue < Se; )
        P = k(P, A[ue], ue, A);
      return P;
    }
    function y2(A, k, P, Z) {
      var ue = A == null ? 0 : A.length;
      for (Z && ue && (P = A[--ue]); ue--; )
        P = k(P, A[ue], ue, A);
      return P;
    }
    function ss(A, k) {
      for (var P = -1, Z = A == null ? 0 : A.length; ++P < Z; )
        if (k(A[P], P, A))
          return !0;
      return !1;
    }
    var E2 = ps("length");
    function T2(A) {
      return A.split("");
    }
    function S2(A) {
      return A.match(Nu) || [];
    }
    function Jo(A, k, P) {
      var Z;
      return P(A, function(ue, Se, We) {
        if (k(ue, Se, We))
          return Z = Se, !1;
      }), Z;
    }
    function Pn(A, k, P, Z) {
      for (var ue = A.length, Se = P + (Z ? 1 : -1); Z ? Se-- : ++Se < ue; )
        if (k(A[Se], Se, A))
          return Se;
      return -1;
    }
    function ui(A, k, P) {
      return k === k ? U2(A, k, P) : Pn(A, Zo, P);
    }
    function A2(A, k, P, Z) {
      for (var ue = P - 1, Se = A.length; ++ue < Se; )
        if (Z(A[ue], k))
          return ue;
      return -1;
    }
    function Zo(A) {
      return A !== A;
    }
    function Xo(A, k) {
      var P = A == null ? 0 : A.length;
      return P ? ds(A, k) / P : he;
    }
    function ps(A) {
      return function(k) {
        return k == null ? t : k[A];
      };
    }
    function os(A) {
      return function(k) {
        return A == null ? t : A[k];
      };
    }
    function e1(A, k, P, Z, ue) {
      return ue(A, function(Se, We, Oe) {
        P = Z ? (Z = !1, Se) : k(P, Se, We, Oe);
      }), P;
    }
    function R2(A, k) {
      var P = A.length;
      for (A.sort(k); P--; )
        A[P] = A[P].value;
      return A;
    }
    function ds(A, k) {
      for (var P, Z = -1, ue = A.length; ++Z < ue; ) {
        var Se = k(A[Z]);
        Se !== t && (P = P === t ? Se : P + Se);
      }
      return P;
    }
    function ls(A, k) {
      for (var P = -1, Z = Array(A); ++P < A; )
        Z[P] = k(P);
      return Z;
    }
    function C2(A, k) {
      return Ge(k, function(P) {
        return [P, A[P]];
      });
    }
    function a1(A) {
      return A && A.slice(0, r1(A) + 1).replace(Yr, "");
    }
    function Ra(A) {
      return function(k) {
        return A(k);
      };
    }
    function cs(A, k) {
      return Ge(k, function(P) {
        return A[P];
      });
    }
    function Hi(A, k) {
      return A.has(k);
    }
    function t1(A, k) {
      for (var P = -1, Z = A.length; ++P < Z && ui(k, A[P], 0) > -1; )
        ;
      return P;
    }
    function i1(A, k) {
      for (var P = A.length; P-- && ui(k, A[P], 0) > -1; )
        ;
      return P;
    }
    function P2(A, k) {
      for (var P = A.length, Z = 0; P--; )
        A[P] === k && ++Z;
      return Z;
    }
    var D2 = os(m2), O2 = os(f2);
    function k2(A) {
      return "\\" + v2[A];
    }
    function N2(A, k) {
      return A == null ? t : A[k];
    }
    function mi(A) {
      return d2.test(A);
    }
    function F2(A) {
      return l2.test(A);
    }
    function G2(A) {
      for (var k, P = []; !(k = A.next()).done; )
        P.push(k.value);
      return P;
    }
    function us(A) {
      var k = -1, P = Array(A.size);
      return A.forEach(function(Z, ue) {
        P[++k] = [ue, Z];
      }), P;
    }
    function n1(A, k) {
      return function(P) {
        return A(k(P));
      };
    }
    function Ct(A, k) {
      for (var P = -1, Z = A.length, ue = 0, Se = []; ++P < Z; ) {
        var We = A[P];
        (We === k || We === c) && (A[P] = c, Se[ue++] = P);
      }
      return Se;
    }
    function Dn(A) {
      var k = -1, P = Array(A.size);
      return A.forEach(function(Z) {
        P[++k] = Z;
      }), P;
    }
    function L2(A) {
      var k = -1, P = Array(A.size);
      return A.forEach(function(Z) {
        P[++k] = [Z, Z];
      }), P;
    }
    function U2(A, k, P) {
      for (var Z = P - 1, ue = A.length; ++Z < ue; )
        if (A[Z] === k)
          return Z;
      return -1;
    }
    function I2(A, k, P) {
      for (var Z = P + 1; Z--; )
        if (A[Z] === k)
          return Z;
      return Z;
    }
    function fi(A) {
      return mi(A) ? V2(A) : E2(A);
    }
    function Ja(A) {
      return mi(A) ? j2(A) : T2(A);
    }
    function r1(A) {
      for (var k = A.length; k-- && Pu.test(A.charAt(k)); )
        ;
      return k;
    }
    var B2 = os(h2);
    function V2(A) {
      for (var k = as.lastIndex = 0; as.test(A); )
        ++k;
      return k;
    }
    function j2(A) {
      return A.match(as) || [];
    }
    function M2(A) {
      return A.match(o2) || [];
    }
    var q2 = function A(k) {
      k = k == null ? ta : hi.defaults(ta.Object(), k, hi.pick(ta, c2));
      var P = k.Array, Z = k.Date, ue = k.Error, Se = k.Function, We = k.Math, Oe = k.Object, ms = k.RegExp, z2 = k.String, Ua = k.TypeError, On = P.prototype, $2 = Se.prototype, vi = Oe.prototype, kn = k["__core-js_shared__"], Nn = $2.toString, De = vi.hasOwnProperty, H2 = 0, s1 = function() {
        var a = /[^.]+$/.exec(kn && kn.keys && kn.keys.IE_PROTO || "");
        return a ? "Symbol(src)_1." + a : "";
      }(), Fn = vi.toString, W2 = Nn.call(Oe), Q2 = ta._, K2 = ms("^" + Nn.call(De).replace(Kr, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), Gn = qo ? k.Buffer : t, Pt = k.Symbol, Ln = k.Uint8Array, p1 = Gn ? Gn.allocUnsafe : t, Un = n1(Oe.getPrototypeOf, Oe), o1 = Oe.create, d1 = vi.propertyIsEnumerable, In = On.splice, l1 = Pt ? Pt.isConcatSpreadable : t, Wi = Pt ? Pt.iterator : t, Qt = Pt ? Pt.toStringTag : t, Bn = function() {
        try {
          var a = Xt(Oe, "defineProperty");
          return a({}, "", {}), a;
        } catch (n) {
        }
      }(), Y2 = k.clearTimeout !== ta.clearTimeout && k.clearTimeout, J2 = Z && Z.now !== ta.Date.now && Z.now, Z2 = k.setTimeout !== ta.setTimeout && k.setTimeout, Vn = We.ceil, jn = We.floor, fs = Oe.getOwnPropertySymbols, X2 = Gn ? Gn.isBuffer : t, c1 = k.isFinite, em = On.join, am = n1(Oe.keys, Oe), Qe = We.max, sa = We.min, tm = Z.now, im = k.parseInt, u1 = We.random, nm = On.reverse, hs = Xt(k, "DataView"), Qi = Xt(k, "Map"), vs = Xt(k, "Promise"), gi = Xt(k, "Set"), Ki = Xt(k, "WeakMap"), Yi = Xt(Oe, "create"), Mn = Ki && new Ki(), wi = {}, rm = ei(hs), sm = ei(Qi), pm = ei(vs), om = ei(gi), dm = ei(Ki), qn = Pt ? Pt.prototype : t, Ji = qn ? qn.valueOf : t, m1 = qn ? qn.toString : t;
      function g(a) {
        if (je(a) && !me(a) && !(a instanceof xe)) {
          if (a instanceof Ia)
            return a;
          if (De.call(a, "__wrapped__"))
            return fd(a);
        }
        return new Ia(a);
      }
      var bi = function() {
        function a() {
        }
        return function(n) {
          if (!Le(n))
            return {};
          if (o1)
            return o1(n);
          a.prototype = n;
          var p = new a();
          return a.prototype = t, p;
        };
      }();
      function zn() {
      }
      function Ia(a, n) {
        this.__wrapped__ = a, this.__actions__ = [], this.__chain__ = !!n, this.__index__ = 0, this.__values__ = t;
      }
      g.templateSettings = {
        escape: Eu,
        evaluate: Tu,
        interpolate: yo,
        variable: "",
        imports: {
          _: g
        }
      }, g.prototype = zn.prototype, g.prototype.constructor = g, Ia.prototype = bi(zn.prototype), Ia.prototype.constructor = Ia;
      function xe(a) {
        this.__wrapped__ = a, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = Fe, this.__views__ = [];
      }
      function lm() {
        var a = new xe(this.__wrapped__);
        return a.__actions__ = ba(this.__actions__), a.__dir__ = this.__dir__, a.__filtered__ = this.__filtered__, a.__iteratees__ = ba(this.__iteratees__), a.__takeCount__ = this.__takeCount__, a.__views__ = ba(this.__views__), a;
      }
      function cm() {
        if (this.__filtered__) {
          var a = new xe(this);
          a.__dir__ = -1, a.__filtered__ = !0;
        } else
          a = this.clone(), a.__dir__ *= -1;
        return a;
      }
      function um() {
        var a = this.__wrapped__.value(), n = this.__dir__, p = me(a), d = n < 0, m = p ? a.length : 0, w = T0(0, m, this.__views__), _ = w.start, T = w.end, C = T - _, U = d ? T : _ - 1, I = this.__iteratees__, M = I.length, K = 0, te = sa(C, this.__takeCount__);
        if (!p || !d && m == C && te == C)
          return U1(a, this.__actions__);
        var pe = [];
        e:
          for (; C-- && K < te; ) {
            U += n;
            for (var ve = -1, oe = a[U]; ++ve < M; ) {
              var _e = I[ve], ye = _e.iteratee, Da = _e.type, va = ye(oe);
              if (Da == O)
                oe = va;
              else if (!va) {
                if (Da == H)
                  continue e;
                break e;
              }
            }
            pe[K++] = oe;
          }
        return pe;
      }
      xe.prototype = bi(zn.prototype), xe.prototype.constructor = xe;
      function Kt(a) {
        var n = -1, p = a == null ? 0 : a.length;
        for (this.clear(); ++n < p; ) {
          var d = a[n];
          this.set(d[0], d[1]);
        }
      }
      function mm() {
        this.__data__ = Yi ? Yi(null) : {}, this.size = 0;
      }
      function fm(a) {
        var n = this.has(a) && delete this.__data__[a];
        return this.size -= n ? 1 : 0, n;
      }
      function hm(a) {
        var n = this.__data__;
        if (Yi) {
          var p = n[a];
          return p === v ? t : p;
        }
        return De.call(n, a) ? n[a] : t;
      }
      function vm(a) {
        var n = this.__data__;
        return Yi ? n[a] !== t : De.call(n, a);
      }
      function gm(a, n) {
        var p = this.__data__;
        return this.size += this.has(a) ? 0 : 1, p[a] = Yi && n === t ? v : n, this;
      }
      Kt.prototype.clear = mm, Kt.prototype.delete = fm, Kt.prototype.get = hm, Kt.prototype.has = vm, Kt.prototype.set = gm;
      function lt(a) {
        var n = -1, p = a == null ? 0 : a.length;
        for (this.clear(); ++n < p; ) {
          var d = a[n];
          this.set(d[0], d[1]);
        }
      }
      function wm() {
        this.__data__ = [], this.size = 0;
      }
      function bm(a) {
        var n = this.__data__, p = $n(n, a);
        if (p < 0)
          return !1;
        var d = n.length - 1;
        return p == d ? n.pop() : In.call(n, p, 1), --this.size, !0;
      }
      function _m(a) {
        var n = this.__data__, p = $n(n, a);
        return p < 0 ? t : n[p][1];
      }
      function xm(a) {
        return $n(this.__data__, a) > -1;
      }
      function ym(a, n) {
        var p = this.__data__, d = $n(p, a);
        return d < 0 ? (++this.size, p.push([a, n])) : p[d][1] = n, this;
      }
      lt.prototype.clear = wm, lt.prototype.delete = bm, lt.prototype.get = _m, lt.prototype.has = xm, lt.prototype.set = ym;
      function ct(a) {
        var n = -1, p = a == null ? 0 : a.length;
        for (this.clear(); ++n < p; ) {
          var d = a[n];
          this.set(d[0], d[1]);
        }
      }
      function Em() {
        this.size = 0, this.__data__ = {
          hash: new Kt(),
          map: new (Qi || lt)(),
          string: new Kt()
        };
      }
      function Tm(a) {
        var n = ir(this, a).delete(a);
        return this.size -= n ? 1 : 0, n;
      }
      function Sm(a) {
        return ir(this, a).get(a);
      }
      function Am(a) {
        return ir(this, a).has(a);
      }
      function Rm(a, n) {
        var p = ir(this, a), d = p.size;
        return p.set(a, n), this.size += p.size == d ? 0 : 1, this;
      }
      ct.prototype.clear = Em, ct.prototype.delete = Tm, ct.prototype.get = Sm, ct.prototype.has = Am, ct.prototype.set = Rm;
      function Yt(a) {
        var n = -1, p = a == null ? 0 : a.length;
        for (this.__data__ = new ct(); ++n < p; )
          this.add(a[n]);
      }
      function Cm(a) {
        return this.__data__.set(a, v), this;
      }
      function Pm(a) {
        return this.__data__.has(a);
      }
      Yt.prototype.add = Yt.prototype.push = Cm, Yt.prototype.has = Pm;
      function Za(a) {
        var n = this.__data__ = new lt(a);
        this.size = n.size;
      }
      function Dm() {
        this.__data__ = new lt(), this.size = 0;
      }
      function Om(a) {
        var n = this.__data__, p = n.delete(a);
        return this.size = n.size, p;
      }
      function km(a) {
        return this.__data__.get(a);
      }
      function Nm(a) {
        return this.__data__.has(a);
      }
      function Fm(a, n) {
        var p = this.__data__;
        if (p instanceof lt) {
          var d = p.__data__;
          if (!Qi || d.length < s - 1)
            return d.push([a, n]), this.size = ++p.size, this;
          p = this.__data__ = new ct(d);
        }
        return p.set(a, n), this.size = p.size, this;
      }
      Za.prototype.clear = Dm, Za.prototype.delete = Om, Za.prototype.get = km, Za.prototype.has = Nm, Za.prototype.set = Fm;
      function f1(a, n) {
        var p = me(a), d = !p && ai(a), m = !p && !d && Ft(a), w = !p && !d && !m && Ei(a), _ = p || d || m || w, T = _ ? ls(a.length, z2) : [], C = T.length;
        for (var U in a)
          (n || De.call(a, U)) && !(_ && (U == "length" || m && (U == "offset" || U == "parent") || w && (U == "buffer" || U == "byteLength" || U == "byteOffset") || ht(U, C))) && T.push(U);
        return T;
      }
      function h1(a) {
        var n = a.length;
        return n ? a[Rs(0, n - 1)] : t;
      }
      function Gm(a, n) {
        return nr(ba(a), Jt(n, 0, a.length));
      }
      function Lm(a) {
        return nr(ba(a));
      }
      function gs(a, n, p) {
        (p !== t && !Xa(a[n], p) || p === t && !(n in a)) && ut(a, n, p);
      }
      function Zi(a, n, p) {
        var d = a[n];
        (!(De.call(a, n) && Xa(d, p)) || p === t && !(n in a)) && ut(a, n, p);
      }
      function $n(a, n) {
        for (var p = a.length; p--; )
          if (Xa(a[p][0], n))
            return p;
        return -1;
      }
      function Um(a, n, p, d) {
        return Dt(a, function(m, w, _) {
          n(d, m, p(m), _);
        }), d;
      }
      function v1(a, n) {
        return a && st(n, Je(n), a);
      }
      function Im(a, n) {
        return a && st(n, xa(n), a);
      }
      function ut(a, n, p) {
        n == "__proto__" && Bn ? Bn(a, n, {
          configurable: !0,
          enumerable: !0,
          value: p,
          writable: !0
        }) : a[n] = p;
      }
      function ws(a, n) {
        for (var p = -1, d = n.length, m = P(d), w = a == null; ++p < d; )
          m[p] = w ? t : Zs(a, n[p]);
        return m;
      }
      function Jt(a, n, p) {
        return a === a && (p !== t && (a = a <= p ? a : p), n !== t && (a = a >= n ? a : n)), a;
      }
      function Ba(a, n, p, d, m, w) {
        var _, T = n & h, C = n & b, U = n & x;
        if (p && (_ = m ? p(a, d, m, w) : p(a)), _ !== t)
          return _;
        if (!Le(a))
          return a;
        var I = me(a);
        if (I) {
          if (_ = A0(a), !T)
            return ba(a, _);
        } else {
          var M = pa(a), K = M == E || M == q;
          if (Ft(a))
            return V1(a, T);
          if (M == Ae || M == Ve || K && !m) {
            if (_ = C || K ? {} : rd(a), !T)
              return C ? h0(a, Im(_, a)) : f0(a, v1(_, a));
          } else {
            if (!ke[M])
              return m ? a : {};
            _ = R0(a, M, T);
          }
        }
        w || (w = new Za());
        var te = w.get(a);
        if (te)
          return te;
        w.set(a, _), Fd(a) ? a.forEach(function(oe) {
          _.add(Ba(oe, n, p, oe, a, w));
        }) : kd(a) && a.forEach(function(oe, _e) {
          _.set(_e, Ba(oe, n, p, _e, a, w));
        });
        var pe = U ? C ? Is : Us : C ? xa : Je, ve = I ? t : pe(a);
        return La(ve || a, function(oe, _e) {
          ve && (_e = oe, oe = a[_e]), Zi(_, _e, Ba(oe, n, p, _e, a, w));
        }), _;
      }
      function Bm(a) {
        var n = Je(a);
        return function(p) {
          return g1(p, a, n);
        };
      }
      function g1(a, n, p) {
        var d = p.length;
        if (a == null)
          return !d;
        for (a = Oe(a); d--; ) {
          var m = p[d], w = n[m], _ = a[m];
          if (_ === t && !(m in a) || !w(_))
            return !1;
        }
        return !0;
      }
      function w1(a, n, p) {
        if (typeof a != "function")
          throw new Ua(l);
        return sn(function() {
          a.apply(t, p);
        }, n);
      }
      function Xi(a, n, p, d) {
        var m = -1, w = Cn, _ = !0, T = a.length, C = [], U = n.length;
        if (!T)
          return C;
        p && (n = Ge(n, Ra(p))), d ? (w = ns, _ = !1) : n.length >= s && (w = Hi, _ = !1, n = new Yt(n));
        e:
          for (; ++m < T; ) {
            var I = a[m], M = p == null ? I : p(I);
            if (I = d || I !== 0 ? I : 0, _ && M === M) {
              for (var K = U; K--; )
                if (n[K] === M)
                  continue e;
              C.push(I);
            } else
              w(n, M, d) || C.push(I);
          }
        return C;
      }
      var Dt = $1(rt), b1 = $1(_s, !0);
      function Vm(a, n) {
        var p = !0;
        return Dt(a, function(d, m, w) {
          return p = !!n(d, m, w), p;
        }), p;
      }
      function Hn(a, n, p) {
        for (var d = -1, m = a.length; ++d < m; ) {
          var w = a[d], _ = n(w);
          if (_ != null && (T === t ? _ === _ && !Pa(_) : p(_, T)))
            var T = _, C = w;
        }
        return C;
      }
      function jm(a, n, p, d) {
        var m = a.length;
        for (p = fe(p), p < 0 && (p = -p > m ? 0 : m + p), d = d === t || d > m ? m : fe(d), d < 0 && (d += m), d = p > d ? 0 : Ld(d); p < d; )
          a[p++] = n;
        return a;
      }
      function _1(a, n) {
        var p = [];
        return Dt(a, function(d, m, w) {
          n(d, m, w) && p.push(d);
        }), p;
      }
      function ia(a, n, p, d, m) {
        var w = -1, _ = a.length;
        for (p || (p = P0), m || (m = []); ++w < _; ) {
          var T = a[w];
          n > 0 && p(T) ? n > 1 ? ia(T, n - 1, p, d, m) : Rt(m, T) : d || (m[m.length] = T);
        }
        return m;
      }
      var bs = H1(), x1 = H1(!0);
      function rt(a, n) {
        return a && bs(a, n, Je);
      }
      function _s(a, n) {
        return a && x1(a, n, Je);
      }
      function Wn(a, n) {
        return At(n, function(p) {
          return vt(a[p]);
        });
      }
      function Zt(a, n) {
        n = kt(n, a);
        for (var p = 0, d = n.length; a != null && p < d; )
          a = a[pt(n[p++])];
        return p && p == d ? a : t;
      }
      function y1(a, n, p) {
        var d = n(a);
        return me(a) ? d : Rt(d, p(a));
      }
      function fa(a) {
        return a == null ? a === t ? vu : be : Qt && Qt in Oe(a) ? E0(a) : L0(a);
      }
      function xs(a, n) {
        return a > n;
      }
      function Mm(a, n) {
        return a != null && De.call(a, n);
      }
      function qm(a, n) {
        return a != null && n in Oe(a);
      }
      function zm(a, n, p) {
        return a >= sa(n, p) && a < Qe(n, p);
      }
      function ys(a, n, p) {
        for (var d = p ? ns : Cn, m = a[0].length, w = a.length, _ = w, T = P(w), C = 1 / 0, U = []; _--; ) {
          var I = a[_];
          _ && n && (I = Ge(I, Ra(n))), C = sa(I.length, C), T[_] = !p && (n || m >= 120 && I.length >= 120) ? new Yt(_ && I) : t;
        }
        I = a[0];
        var M = -1, K = T[0];
        e:
          for (; ++M < m && U.length < C; ) {
            var te = I[M], pe = n ? n(te) : te;
            if (te = p || te !== 0 ? te : 0, !(K ? Hi(K, pe) : d(U, pe, p))) {
              for (_ = w; --_; ) {
                var ve = T[_];
                if (!(ve ? Hi(ve, pe) : d(a[_], pe, p)))
                  continue e;
              }
              K && K.push(pe), U.push(te);
            }
          }
        return U;
      }
      function $m(a, n, p, d) {
        return rt(a, function(m, w, _) {
          n(d, p(m), w, _);
        }), d;
      }
      function en(a, n, p) {
        n = kt(n, a), a = dd(a, n);
        var d = a == null ? a : a[pt(ja(n))];
        return d == null ? t : Aa(d, a, p);
      }
      function E1(a) {
        return je(a) && fa(a) == Ve;
      }
      function Hm(a) {
        return je(a) && fa(a) == $i;
      }
      function Wm(a) {
        return je(a) && fa(a) == Qa;
      }
      function an(a, n, p, d, m) {
        return a === n ? !0 : a == null || n == null || !je(a) && !je(n) ? a !== a && n !== n : Qm(a, n, p, d, an, m);
      }
      function Qm(a, n, p, d, m, w) {
        var _ = me(a), T = me(n), C = _ ? aa : pa(a), U = T ? aa : pa(n);
        C = C == Ve ? Ae : C, U = U == Ve ? Ae : U;
        var I = C == Ae, M = U == Ae, K = C == U;
        if (K && Ft(a)) {
          if (!Ft(n))
            return !1;
          _ = !0, I = !1;
        }
        if (K && !I)
          return w || (w = new Za()), _ || Ei(a) ? td(a, n, p, d, m, w) : x0(a, n, C, p, d, m, w);
        if (!(p & S)) {
          var te = I && De.call(a, "__wrapped__"), pe = M && De.call(n, "__wrapped__");
          if (te || pe) {
            var ve = te ? a.value() : a, oe = pe ? n.value() : n;
            return w || (w = new Za()), m(ve, oe, p, d, w);
          }
        }
        return K ? (w || (w = new Za()), y0(a, n, p, d, m, w)) : !1;
      }
      function Km(a) {
        return je(a) && pa(a) == z;
      }
      function Es(a, n, p, d) {
        var m = p.length, w = m, _ = !d;
        if (a == null)
          return !w;
        for (a = Oe(a); m--; ) {
          var T = p[m];
          if (_ && T[2] ? T[1] !== a[T[0]] : !(T[0] in a))
            return !1;
        }
        for (; ++m < w; ) {
          T = p[m];
          var C = T[0], U = a[C], I = T[1];
          if (_ && T[2]) {
            if (U === t && !(C in a))
              return !1;
          } else {
            var M = new Za();
            if (d)
              var K = d(U, I, C, a, n, M);
            if (!(K === t ? an(I, U, S | D, d, M) : K))
              return !1;
          }
        }
        return !0;
      }
      function T1(a) {
        if (!Le(a) || O0(a))
          return !1;
        var n = vt(a) ? K2 : Bu;
        return n.test(ei(a));
      }
      function Ym(a) {
        return je(a) && fa(a) == St;
      }
      function Jm(a) {
        return je(a) && pa(a) == Ya;
      }
      function Zm(a) {
        return je(a) && lr(a.length) && !!Ne[fa(a)];
      }
      function S1(a) {
        return typeof a == "function" ? a : a == null ? ya : typeof a == "object" ? me(a) ? C1(a[0], a[1]) : R1(a) : Wd(a);
      }
      function Ts(a) {
        if (!rn(a))
          return am(a);
        var n = [];
        for (var p in Oe(a))
          De.call(a, p) && p != "constructor" && n.push(p);
        return n;
      }
      function Xm(a) {
        if (!Le(a))
          return G0(a);
        var n = rn(a), p = [];
        for (var d in a)
          d == "constructor" && (n || !De.call(a, d)) || p.push(d);
        return p;
      }
      function Ss(a, n) {
        return a < n;
      }
      function A1(a, n) {
        var p = -1, d = _a(a) ? P(a.length) : [];
        return Dt(a, function(m, w, _) {
          d[++p] = n(m, w, _);
        }), d;
      }
      function R1(a) {
        var n = Vs(a);
        return n.length == 1 && n[0][2] ? pd(n[0][0], n[0][1]) : function(p) {
          return p === a || Es(p, a, n);
        };
      }
      function C1(a, n) {
        return Ms(a) && sd(n) ? pd(pt(a), n) : function(p) {
          var d = Zs(p, a);
          return d === t && d === n ? Xs(p, a) : an(n, d, S | D);
        };
      }
      function Qn(a, n, p, d, m) {
        a !== n && bs(n, function(w, _) {
          if (m || (m = new Za()), Le(w))
            e0(a, n, _, p, Qn, d, m);
          else {
            var T = d ? d(zs(a, _), w, _ + "", a, n, m) : t;
            T === t && (T = w), gs(a, _, T);
          }
        }, xa);
      }
      function e0(a, n, p, d, m, w, _) {
        var T = zs(a, p), C = zs(n, p), U = _.get(C);
        if (U) {
          gs(a, p, U);
          return;
        }
        var I = w ? w(T, C, p + "", a, n, _) : t, M = I === t;
        if (M) {
          var K = me(C), te = !K && Ft(C), pe = !K && !te && Ei(C);
          I = C, K || te || pe ? me(T) ? I = T : ze(T) ? I = ba(T) : te ? (M = !1, I = V1(C, !0)) : pe ? (M = !1, I = j1(C, !0)) : I = [] : pn(C) || ai(C) ? (I = T, ai(T) ? I = Ud(T) : (!Le(T) || vt(T)) && (I = rd(C))) : M = !1;
        }
        M && (_.set(C, I), m(I, C, d, w, _), _.delete(C)), gs(a, p, I);
      }
      function P1(a, n) {
        var p = a.length;
        if (!!p)
          return n += n < 0 ? p : 0, ht(n, p) ? a[n] : t;
      }
      function D1(a, n, p) {
        n.length ? n = Ge(n, function(w) {
          return me(w) ? function(_) {
            return Zt(_, w.length === 1 ? w[0] : w);
          } : w;
        }) : n = [ya];
        var d = -1;
        n = Ge(n, Ra(se()));
        var m = A1(a, function(w, _, T) {
          var C = Ge(n, function(U) {
            return U(w);
          });
          return { criteria: C, index: ++d, value: w };
        });
        return R2(m, function(w, _) {
          return m0(w, _, p);
        });
      }
      function a0(a, n) {
        return O1(a, n, function(p, d) {
          return Xs(a, d);
        });
      }
      function O1(a, n, p) {
        for (var d = -1, m = n.length, w = {}; ++d < m; ) {
          var _ = n[d], T = Zt(a, _);
          p(T, _) && tn(w, kt(_, a), T);
        }
        return w;
      }
      function t0(a) {
        return function(n) {
          return Zt(n, a);
        };
      }
      function As(a, n, p, d) {
        var m = d ? A2 : ui, w = -1, _ = n.length, T = a;
        for (a === n && (n = ba(n)), p && (T = Ge(a, Ra(p))); ++w < _; )
          for (var C = 0, U = n[w], I = p ? p(U) : U; (C = m(T, I, C, d)) > -1; )
            T !== a && In.call(T, C, 1), In.call(a, C, 1);
        return a;
      }
      function k1(a, n) {
        for (var p = a ? n.length : 0, d = p - 1; p--; ) {
          var m = n[p];
          if (p == d || m !== w) {
            var w = m;
            ht(m) ? In.call(a, m, 1) : Ds(a, m);
          }
        }
        return a;
      }
      function Rs(a, n) {
        return a + jn(u1() * (n - a + 1));
      }
      function i0(a, n, p, d) {
        for (var m = -1, w = Qe(Vn((n - a) / (p || 1)), 0), _ = P(w); w--; )
          _[d ? w : ++m] = a, a += p;
        return _;
      }
      function Cs(a, n) {
        var p = "";
        if (!a || n < 1 || n > J)
          return p;
        do
          n % 2 && (p += a), n = jn(n / 2), n && (a += a);
        while (n);
        return p;
      }
      function we(a, n) {
        return $s(od(a, n, ya), a + "");
      }
      function n0(a) {
        return h1(Ti(a));
      }
      function r0(a, n) {
        var p = Ti(a);
        return nr(p, Jt(n, 0, p.length));
      }
      function tn(a, n, p, d) {
        if (!Le(a))
          return a;
        n = kt(n, a);
        for (var m = -1, w = n.length, _ = w - 1, T = a; T != null && ++m < w; ) {
          var C = pt(n[m]), U = p;
          if (C === "__proto__" || C === "constructor" || C === "prototype")
            return a;
          if (m != _) {
            var I = T[C];
            U = d ? d(I, C, T) : t, U === t && (U = Le(I) ? I : ht(n[m + 1]) ? [] : {});
          }
          Zi(T, C, U), T = T[C];
        }
        return a;
      }
      var N1 = Mn ? function(a, n) {
        return Mn.set(a, n), a;
      } : ya, s0 = Bn ? function(a, n) {
        return Bn(a, "toString", {
          configurable: !0,
          enumerable: !1,
          value: ap(n),
          writable: !0
        });
      } : ya;
      function p0(a) {
        return nr(Ti(a));
      }
      function Va(a, n, p) {
        var d = -1, m = a.length;
        n < 0 && (n = -n > m ? 0 : m + n), p = p > m ? m : p, p < 0 && (p += m), m = n > p ? 0 : p - n >>> 0, n >>>= 0;
        for (var w = P(m); ++d < m; )
          w[d] = a[d + n];
        return w;
      }
      function o0(a, n) {
        var p;
        return Dt(a, function(d, m, w) {
          return p = n(d, m, w), !p;
        }), !!p;
      }
      function Kn(a, n, p) {
        var d = 0, m = a == null ? d : a.length;
        if (typeof n == "number" && n === n && m <= ge) {
          for (; d < m; ) {
            var w = d + m >>> 1, _ = a[w];
            _ !== null && !Pa(_) && (p ? _ <= n : _ < n) ? d = w + 1 : m = w;
          }
          return m;
        }
        return Ps(a, n, ya, p);
      }
      function Ps(a, n, p, d) {
        var m = 0, w = a == null ? 0 : a.length;
        if (w === 0)
          return 0;
        n = p(n);
        for (var _ = n !== n, T = n === null, C = Pa(n), U = n === t; m < w; ) {
          var I = jn((m + w) / 2), M = p(a[I]), K = M !== t, te = M === null, pe = M === M, ve = Pa(M);
          if (_)
            var oe = d || pe;
          else
            U ? oe = pe && (d || K) : T ? oe = pe && K && (d || !te) : C ? oe = pe && K && !te && (d || !ve) : te || ve ? oe = !1 : oe = d ? M <= n : M < n;
          oe ? m = I + 1 : w = I;
        }
        return sa(w, Be);
      }
      function F1(a, n) {
        for (var p = -1, d = a.length, m = 0, w = []; ++p < d; ) {
          var _ = a[p], T = n ? n(_) : _;
          if (!p || !Xa(T, C)) {
            var C = T;
            w[m++] = _ === 0 ? 0 : _;
          }
        }
        return w;
      }
      function G1(a) {
        return typeof a == "number" ? a : Pa(a) ? he : +a;
      }
      function Ca(a) {
        if (typeof a == "string")
          return a;
        if (me(a))
          return Ge(a, Ca) + "";
        if (Pa(a))
          return m1 ? m1.call(a) : "";
        var n = a + "";
        return n == "0" && 1 / a == -j ? "-0" : n;
      }
      function Ot(a, n, p) {
        var d = -1, m = Cn, w = a.length, _ = !0, T = [], C = T;
        if (p)
          _ = !1, m = ns;
        else if (w >= s) {
          var U = n ? null : b0(a);
          if (U)
            return Dn(U);
          _ = !1, m = Hi, C = new Yt();
        } else
          C = n ? [] : T;
        e:
          for (; ++d < w; ) {
            var I = a[d], M = n ? n(I) : I;
            if (I = p || I !== 0 ? I : 0, _ && M === M) {
              for (var K = C.length; K--; )
                if (C[K] === M)
                  continue e;
              n && C.push(M), T.push(I);
            } else
              m(C, M, p) || (C !== T && C.push(M), T.push(I));
          }
        return T;
      }
      function Ds(a, n) {
        return n = kt(n, a), a = dd(a, n), a == null || delete a[pt(ja(n))];
      }
      function L1(a, n, p, d) {
        return tn(a, n, p(Zt(a, n)), d);
      }
      function Yn(a, n, p, d) {
        for (var m = a.length, w = d ? m : -1; (d ? w-- : ++w < m) && n(a[w], w, a); )
          ;
        return p ? Va(a, d ? 0 : w, d ? w + 1 : m) : Va(a, d ? w + 1 : 0, d ? m : w);
      }
      function U1(a, n) {
        var p = a;
        return p instanceof xe && (p = p.value()), rs(n, function(d, m) {
          return m.func.apply(m.thisArg, Rt([d], m.args));
        }, p);
      }
      function Os(a, n, p) {
        var d = a.length;
        if (d < 2)
          return d ? Ot(a[0]) : [];
        for (var m = -1, w = P(d); ++m < d; )
          for (var _ = a[m], T = -1; ++T < d; )
            T != m && (w[m] = Xi(w[m] || _, a[T], n, p));
        return Ot(ia(w, 1), n, p);
      }
      function I1(a, n, p) {
        for (var d = -1, m = a.length, w = n.length, _ = {}; ++d < m; ) {
          var T = d < w ? n[d] : t;
          p(_, a[d], T);
        }
        return _;
      }
      function ks(a) {
        return ze(a) ? a : [];
      }
      function Ns(a) {
        return typeof a == "function" ? a : ya;
      }
      function kt(a, n) {
        return me(a) ? a : Ms(a, n) ? [a] : md(Re(a));
      }
      var d0 = we;
      function Nt(a, n, p) {
        var d = a.length;
        return p = p === t ? d : p, !n && p >= d ? a : Va(a, n, p);
      }
      var B1 = Y2 || function(a) {
        return ta.clearTimeout(a);
      };
      function V1(a, n) {
        if (n)
          return a.slice();
        var p = a.length, d = p1 ? p1(p) : new a.constructor(p);
        return a.copy(d), d;
      }
      function Fs(a) {
        var n = new a.constructor(a.byteLength);
        return new Ln(n).set(new Ln(a)), n;
      }
      function l0(a, n) {
        var p = n ? Fs(a.buffer) : a.buffer;
        return new a.constructor(p, a.byteOffset, a.byteLength);
      }
      function c0(a) {
        var n = new a.constructor(a.source, Eo.exec(a));
        return n.lastIndex = a.lastIndex, n;
      }
      function u0(a) {
        return Ji ? Oe(Ji.call(a)) : {};
      }
      function j1(a, n) {
        var p = n ? Fs(a.buffer) : a.buffer;
        return new a.constructor(p, a.byteOffset, a.length);
      }
      function M1(a, n) {
        if (a !== n) {
          var p = a !== t, d = a === null, m = a === a, w = Pa(a), _ = n !== t, T = n === null, C = n === n, U = Pa(n);
          if (!T && !U && !w && a > n || w && _ && C && !T && !U || d && _ && C || !p && C || !m)
            return 1;
          if (!d && !w && !U && a < n || U && p && m && !d && !w || T && p && m || !_ && m || !C)
            return -1;
        }
        return 0;
      }
      function m0(a, n, p) {
        for (var d = -1, m = a.criteria, w = n.criteria, _ = m.length, T = p.length; ++d < _; ) {
          var C = M1(m[d], w[d]);
          if (C) {
            if (d >= T)
              return C;
            var U = p[d];
            return C * (U == "desc" ? -1 : 1);
          }
        }
        return a.index - n.index;
      }
      function q1(a, n, p, d) {
        for (var m = -1, w = a.length, _ = p.length, T = -1, C = n.length, U = Qe(w - _, 0), I = P(C + U), M = !d; ++T < C; )
          I[T] = n[T];
        for (; ++m < _; )
          (M || m < w) && (I[p[m]] = a[m]);
        for (; U--; )
          I[T++] = a[m++];
        return I;
      }
      function z1(a, n, p, d) {
        for (var m = -1, w = a.length, _ = -1, T = p.length, C = -1, U = n.length, I = Qe(w - T, 0), M = P(I + U), K = !d; ++m < I; )
          M[m] = a[m];
        for (var te = m; ++C < U; )
          M[te + C] = n[C];
        for (; ++_ < T; )
          (K || m < w) && (M[te + p[_]] = a[m++]);
        return M;
      }
      function ba(a, n) {
        var p = -1, d = a.length;
        for (n || (n = P(d)); ++p < d; )
          n[p] = a[p];
        return n;
      }
      function st(a, n, p, d) {
        var m = !p;
        p || (p = {});
        for (var w = -1, _ = n.length; ++w < _; ) {
          var T = n[w], C = d ? d(p[T], a[T], T, p, a) : t;
          C === t && (C = a[T]), m ? ut(p, T, C) : Zi(p, T, C);
        }
        return p;
      }
      function f0(a, n) {
        return st(a, js(a), n);
      }
      function h0(a, n) {
        return st(a, id(a), n);
      }
      function Jn(a, n) {
        return function(p, d) {
          var m = me(p) ? _2 : Um, w = n ? n() : {};
          return m(p, a, se(d, 2), w);
        };
      }
      function _i(a) {
        return we(function(n, p) {
          var d = -1, m = p.length, w = m > 1 ? p[m - 1] : t, _ = m > 2 ? p[2] : t;
          for (w = a.length > 3 && typeof w == "function" ? (m--, w) : t, _ && ha(p[0], p[1], _) && (w = m < 3 ? t : w, m = 1), n = Oe(n); ++d < m; ) {
            var T = p[d];
            T && a(n, T, d, w);
          }
          return n;
        });
      }
      function $1(a, n) {
        return function(p, d) {
          if (p == null)
            return p;
          if (!_a(p))
            return a(p, d);
          for (var m = p.length, w = n ? m : -1, _ = Oe(p); (n ? w-- : ++w < m) && d(_[w], w, _) !== !1; )
            ;
          return p;
        };
      }
      function H1(a) {
        return function(n, p, d) {
          for (var m = -1, w = Oe(n), _ = d(n), T = _.length; T--; ) {
            var C = _[a ? T : ++m];
            if (p(w[C], C, w) === !1)
              break;
          }
          return n;
        };
      }
      function v0(a, n, p) {
        var d = n & L, m = nn(a);
        function w() {
          var _ = this && this !== ta && this instanceof w ? m : a;
          return _.apply(d ? p : this, arguments);
        }
        return w;
      }
      function W1(a) {
        return function(n) {
          n = Re(n);
          var p = mi(n) ? Ja(n) : t, d = p ? p[0] : n.charAt(0), m = p ? Nt(p, 1).join("") : n.slice(1);
          return d[a]() + m;
        };
      }
      function xi(a) {
        return function(n) {
          return rs($d(zd(n).replace(s2, "")), a, "");
        };
      }
      function nn(a) {
        return function() {
          var n = arguments;
          switch (n.length) {
            case 0:
              return new a();
            case 1:
              return new a(n[0]);
            case 2:
              return new a(n[0], n[1]);
            case 3:
              return new a(n[0], n[1], n[2]);
            case 4:
              return new a(n[0], n[1], n[2], n[3]);
            case 5:
              return new a(n[0], n[1], n[2], n[3], n[4]);
            case 6:
              return new a(n[0], n[1], n[2], n[3], n[4], n[5]);
            case 7:
              return new a(n[0], n[1], n[2], n[3], n[4], n[5], n[6]);
          }
          var p = bi(a.prototype), d = a.apply(p, n);
          return Le(d) ? d : p;
        };
      }
      function g0(a, n, p) {
        var d = nn(a);
        function m() {
          for (var w = arguments.length, _ = P(w), T = w, C = yi(m); T--; )
            _[T] = arguments[T];
          var U = w < 3 && _[0] !== C && _[w - 1] !== C ? [] : Ct(_, C);
          if (w -= U.length, w < p)
            return Z1(a, n, Zn, m.placeholder, t, _, U, t, t, p - w);
          var I = this && this !== ta && this instanceof m ? d : a;
          return Aa(I, this, _);
        }
        return m;
      }
      function Q1(a) {
        return function(n, p, d) {
          var m = Oe(n);
          if (!_a(n)) {
            var w = se(p, 3);
            n = Je(n), p = function(T) {
              return w(m[T], T, m);
            };
          }
          var _ = a(n, p, d);
          return _ > -1 ? m[w ? n[_] : _] : t;
        };
      }
      function K1(a) {
        return ft(function(n) {
          var p = n.length, d = p, m = Ia.prototype.thru;
          for (a && n.reverse(); d--; ) {
            var w = n[d];
            if (typeof w != "function")
              throw new Ua(l);
            if (m && !_ && tr(w) == "wrapper")
              var _ = new Ia([], !0);
          }
          for (d = _ ? d : p; ++d < p; ) {
            w = n[d];
            var T = tr(w), C = T == "wrapper" ? Bs(w) : t;
            C && qs(C[0]) && C[1] == (ne | Q | re | F) && !C[4].length && C[9] == 1 ? _ = _[tr(C[0])].apply(_, C[3]) : _ = w.length == 1 && qs(w) ? _[T]() : _.thru(w);
          }
          return function() {
            var U = arguments, I = U[0];
            if (_ && U.length == 1 && me(I))
              return _.plant(I).value();
            for (var M = 0, K = p ? n[M].apply(this, U) : I; ++M < p; )
              K = n[M].call(this, K);
            return K;
          };
        });
      }
      function Zn(a, n, p, d, m, w, _, T, C, U) {
        var I = n & ne, M = n & L, K = n & R, te = n & (Q | ee), pe = n & N, ve = K ? t : nn(a);
        function oe() {
          for (var _e = arguments.length, ye = P(_e), Da = _e; Da--; )
            ye[Da] = arguments[Da];
          if (te)
            var va = yi(oe), Oa = P2(ye, va);
          if (d && (ye = q1(ye, d, m, te)), w && (ye = z1(ye, w, _, te)), _e -= Oa, te && _e < U) {
            var $e = Ct(ye, va);
            return Z1(a, n, Zn, oe.placeholder, p, ye, $e, T, C, U - _e);
          }
          var et = M ? p : this, wt = K ? et[a] : a;
          return _e = ye.length, T ? ye = U0(ye, T) : pe && _e > 1 && ye.reverse(), I && C < _e && (ye.length = C), this && this !== ta && this instanceof oe && (wt = ve || nn(wt)), wt.apply(et, ye);
        }
        return oe;
      }
      function Y1(a, n) {
        return function(p, d) {
          return $m(p, a, n(d), {});
        };
      }
      function Xn(a, n) {
        return function(p, d) {
          var m;
          if (p === t && d === t)
            return n;
          if (p !== t && (m = p), d !== t) {
            if (m === t)
              return d;
            typeof p == "string" || typeof d == "string" ? (p = Ca(p), d = Ca(d)) : (p = G1(p), d = G1(d)), m = a(p, d);
          }
          return m;
        };
      }
      function Gs(a) {
        return ft(function(n) {
          return n = Ge(n, Ra(se())), we(function(p) {
            var d = this;
            return a(n, function(m) {
              return Aa(m, d, p);
            });
          });
        });
      }
      function er(a, n) {
        n = n === t ? " " : Ca(n);
        var p = n.length;
        if (p < 2)
          return p ? Cs(n, a) : n;
        var d = Cs(n, Vn(a / fi(n)));
        return mi(n) ? Nt(Ja(d), 0, a).join("") : d.slice(0, a);
      }
      function w0(a, n, p, d) {
        var m = n & L, w = nn(a);
        function _() {
          for (var T = -1, C = arguments.length, U = -1, I = d.length, M = P(I + C), K = this && this !== ta && this instanceof _ ? w : a; ++U < I; )
            M[U] = d[U];
          for (; C--; )
            M[U++] = arguments[++T];
          return Aa(K, m ? p : this, M);
        }
        return _;
      }
      function J1(a) {
        return function(n, p, d) {
          return d && typeof d != "number" && ha(n, p, d) && (p = d = t), n = gt(n), p === t ? (p = n, n = 0) : p = gt(p), d = d === t ? n < p ? 1 : -1 : gt(d), i0(n, p, d, a);
        };
      }
      function ar(a) {
        return function(n, p) {
          return typeof n == "string" && typeof p == "string" || (n = Ma(n), p = Ma(p)), a(n, p);
        };
      }
      function Z1(a, n, p, d, m, w, _, T, C, U) {
        var I = n & Q, M = I ? _ : t, K = I ? t : _, te = I ? w : t, pe = I ? t : w;
        n |= I ? re : de, n &= ~(I ? de : re), n & B || (n &= ~(L | R));
        var ve = [
          a,
          n,
          m,
          te,
          M,
          pe,
          K,
          T,
          C,
          U
        ], oe = p.apply(t, ve);
        return qs(a) && ld(oe, ve), oe.placeholder = d, cd(oe, a, n);
      }
      function Ls(a) {
        var n = We[a];
        return function(p, d) {
          if (p = Ma(p), d = d == null ? 0 : sa(fe(d), 292), d && c1(p)) {
            var m = (Re(p) + "e").split("e"), w = n(m[0] + "e" + (+m[1] + d));
            return m = (Re(w) + "e").split("e"), +(m[0] + "e" + (+m[1] - d));
          }
          return n(p);
        };
      }
      var b0 = gi && 1 / Dn(new gi([, -0]))[1] == j ? function(a) {
        return new gi(a);
      } : np;
      function X1(a) {
        return function(n) {
          var p = pa(n);
          return p == z ? us(n) : p == Ya ? L2(n) : C2(n, a(n));
        };
      }
      function mt(a, n, p, d, m, w, _, T) {
        var C = n & R;
        if (!C && typeof a != "function")
          throw new Ua(l);
        var U = d ? d.length : 0;
        if (U || (n &= ~(re | de), d = m = t), _ = _ === t ? _ : Qe(fe(_), 0), T = T === t ? T : fe(T), U -= m ? m.length : 0, n & de) {
          var I = d, M = m;
          d = m = t;
        }
        var K = C ? t : Bs(a), te = [
          a,
          n,
          p,
          d,
          m,
          I,
          M,
          w,
          _,
          T
        ];
        if (K && F0(te, K), a = te[0], n = te[1], p = te[2], d = te[3], m = te[4], T = te[9] = te[9] === t ? C ? 0 : a.length : Qe(te[9] - U, 0), !T && n & (Q | ee) && (n &= ~(Q | ee)), !n || n == L)
          var pe = v0(a, n, p);
        else
          n == Q || n == ee ? pe = g0(a, n, T) : (n == re || n == (L | re)) && !m.length ? pe = w0(a, n, p, d) : pe = Zn.apply(t, te);
        var ve = K ? N1 : ld;
        return cd(ve(pe, te), a, n);
      }
      function ed(a, n, p, d) {
        return a === t || Xa(a, vi[p]) && !De.call(d, p) ? n : a;
      }
      function ad(a, n, p, d, m, w) {
        return Le(a) && Le(n) && (w.set(n, a), Qn(a, n, t, ad, w), w.delete(n)), a;
      }
      function _0(a) {
        return pn(a) ? t : a;
      }
      function td(a, n, p, d, m, w) {
        var _ = p & S, T = a.length, C = n.length;
        if (T != C && !(_ && C > T))
          return !1;
        var U = w.get(a), I = w.get(n);
        if (U && I)
          return U == n && I == a;
        var M = -1, K = !0, te = p & D ? new Yt() : t;
        for (w.set(a, n), w.set(n, a); ++M < T; ) {
          var pe = a[M], ve = n[M];
          if (d)
            var oe = _ ? d(ve, pe, M, n, a, w) : d(pe, ve, M, a, n, w);
          if (oe !== t) {
            if (oe)
              continue;
            K = !1;
            break;
          }
          if (te) {
            if (!ss(n, function(_e, ye) {
              if (!Hi(te, ye) && (pe === _e || m(pe, _e, p, d, w)))
                return te.push(ye);
            })) {
              K = !1;
              break;
            }
          } else if (!(pe === ve || m(pe, ve, p, d, w))) {
            K = !1;
            break;
          }
        }
        return w.delete(a), w.delete(n), K;
      }
      function x0(a, n, p, d, m, w, _) {
        switch (p) {
          case li:
            if (a.byteLength != n.byteLength || a.byteOffset != n.byteOffset)
              return !1;
            a = a.buffer, n = n.buffer;
          case $i:
            return !(a.byteLength != n.byteLength || !w(new Ln(a), new Ln(n)));
          case nt:
          case Qa:
          case X:
            return Xa(+a, +n);
          case y:
            return a.name == n.name && a.message == n.message;
          case St:
          case qi:
            return a == n + "";
          case z:
            var T = us;
          case Ya:
            var C = d & S;
            if (T || (T = Dn), a.size != n.size && !C)
              return !1;
            var U = _.get(a);
            if (U)
              return U == n;
            d |= D, _.set(a, n);
            var I = td(T(a), T(n), d, m, w, _);
            return _.delete(a), I;
          case Tn:
            if (Ji)
              return Ji.call(a) == Ji.call(n);
        }
        return !1;
      }
      function y0(a, n, p, d, m, w) {
        var _ = p & S, T = Us(a), C = T.length, U = Us(n), I = U.length;
        if (C != I && !_)
          return !1;
        for (var M = C; M--; ) {
          var K = T[M];
          if (!(_ ? K in n : De.call(n, K)))
            return !1;
        }
        var te = w.get(a), pe = w.get(n);
        if (te && pe)
          return te == n && pe == a;
        var ve = !0;
        w.set(a, n), w.set(n, a);
        for (var oe = _; ++M < C; ) {
          K = T[M];
          var _e = a[K], ye = n[K];
          if (d)
            var Da = _ ? d(ye, _e, K, n, a, w) : d(_e, ye, K, a, n, w);
          if (!(Da === t ? _e === ye || m(_e, ye, p, d, w) : Da)) {
            ve = !1;
            break;
          }
          oe || (oe = K == "constructor");
        }
        if (ve && !oe) {
          var va = a.constructor, Oa = n.constructor;
          va != Oa && "constructor" in a && "constructor" in n && !(typeof va == "function" && va instanceof va && typeof Oa == "function" && Oa instanceof Oa) && (ve = !1);
        }
        return w.delete(a), w.delete(n), ve;
      }
      function ft(a) {
        return $s(od(a, t, gd), a + "");
      }
      function Us(a) {
        return y1(a, Je, js);
      }
      function Is(a) {
        return y1(a, xa, id);
      }
      var Bs = Mn ? function(a) {
        return Mn.get(a);
      } : np;
      function tr(a) {
        for (var n = a.name + "", p = wi[n], d = De.call(wi, n) ? p.length : 0; d--; ) {
          var m = p[d], w = m.func;
          if (w == null || w == a)
            return m.name;
        }
        return n;
      }
      function yi(a) {
        var n = De.call(g, "placeholder") ? g : a;
        return n.placeholder;
      }
      function se() {
        var a = g.iteratee || tp;
        return a = a === tp ? S1 : a, arguments.length ? a(arguments[0], arguments[1]) : a;
      }
      function ir(a, n) {
        var p = a.__data__;
        return D0(n) ? p[typeof n == "string" ? "string" : "hash"] : p.map;
      }
      function Vs(a) {
        for (var n = Je(a), p = n.length; p--; ) {
          var d = n[p], m = a[d];
          n[p] = [d, m, sd(m)];
        }
        return n;
      }
      function Xt(a, n) {
        var p = N2(a, n);
        return T1(p) ? p : t;
      }
      function E0(a) {
        var n = De.call(a, Qt), p = a[Qt];
        try {
          a[Qt] = t;
          var d = !0;
        } catch (w) {
        }
        var m = Fn.call(a);
        return d && (n ? a[Qt] = p : delete a[Qt]), m;
      }
      var js = fs ? function(a) {
        return a == null ? [] : (a = Oe(a), At(fs(a), function(n) {
          return d1.call(a, n);
        }));
      } : rp, id = fs ? function(a) {
        for (var n = []; a; )
          Rt(n, js(a)), a = Un(a);
        return n;
      } : rp, pa = fa;
      (hs && pa(new hs(new ArrayBuffer(1))) != li || Qi && pa(new Qi()) != z || vs && pa(vs.resolve()) != Ka || gi && pa(new gi()) != Ya || Ki && pa(new Ki()) != zi) && (pa = function(a) {
        var n = fa(a), p = n == Ae ? a.constructor : t, d = p ? ei(p) : "";
        if (d)
          switch (d) {
            case rm:
              return li;
            case sm:
              return z;
            case pm:
              return Ka;
            case om:
              return Ya;
            case dm:
              return zi;
          }
        return n;
      });
      function T0(a, n, p) {
        for (var d = -1, m = p.length; ++d < m; ) {
          var w = p[d], _ = w.size;
          switch (w.type) {
            case "drop":
              a += _;
              break;
            case "dropRight":
              n -= _;
              break;
            case "take":
              n = sa(n, a + _);
              break;
            case "takeRight":
              a = Qe(a, n - _);
              break;
          }
        }
        return { start: a, end: n };
      }
      function S0(a) {
        var n = a.match(Ou);
        return n ? n[1].split(ku) : [];
      }
      function nd(a, n, p) {
        n = kt(n, a);
        for (var d = -1, m = n.length, w = !1; ++d < m; ) {
          var _ = pt(n[d]);
          if (!(w = a != null && p(a, _)))
            break;
          a = a[_];
        }
        return w || ++d != m ? w : (m = a == null ? 0 : a.length, !!m && lr(m) && ht(_, m) && (me(a) || ai(a)));
      }
      function A0(a) {
        var n = a.length, p = new a.constructor(n);
        return n && typeof a[0] == "string" && De.call(a, "index") && (p.index = a.index, p.input = a.input), p;
      }
      function rd(a) {
        return typeof a.constructor == "function" && !rn(a) ? bi(Un(a)) : {};
      }
      function R0(a, n, p) {
        var d = a.constructor;
        switch (n) {
          case $i:
            return Fs(a);
          case nt:
          case Qa:
            return new d(+a);
          case li:
            return l0(a, p);
          case Vr:
          case jr:
          case Mr:
          case qr:
          case zr:
          case $r:
          case Hr:
          case Wr:
          case Qr:
            return j1(a, p);
          case z:
            return new d();
          case X:
          case qi:
            return new d(a);
          case St:
            return c0(a);
          case Ya:
            return new d();
          case Tn:
            return u0(a);
        }
      }
      function C0(a, n) {
        var p = n.length;
        if (!p)
          return a;
        var d = p - 1;
        return n[d] = (p > 1 ? "& " : "") + n[d], n = n.join(p > 2 ? ", " : " "), a.replace(Du, `{
/* [wrapped with ` + n + `] */
`);
      }
      function P0(a) {
        return me(a) || ai(a) || !!(l1 && a && a[l1]);
      }
      function ht(a, n) {
        var p = typeof a;
        return n = n ?? J, !!n && (p == "number" || p != "symbol" && ju.test(a)) && a > -1 && a % 1 == 0 && a < n;
      }
      function ha(a, n, p) {
        if (!Le(p))
          return !1;
        var d = typeof n;
        return (d == "number" ? _a(p) && ht(n, p.length) : d == "string" && n in p) ? Xa(p[n], a) : !1;
      }
      function Ms(a, n) {
        if (me(a))
          return !1;
        var p = typeof a;
        return p == "number" || p == "symbol" || p == "boolean" || a == null || Pa(a) ? !0 : Au.test(a) || !Su.test(a) || n != null && a in Oe(n);
      }
      function D0(a) {
        var n = typeof a;
        return n == "string" || n == "number" || n == "symbol" || n == "boolean" ? a !== "__proto__" : a === null;
      }
      function qs(a) {
        var n = tr(a), p = g[n];
        if (typeof p != "function" || !(n in xe.prototype))
          return !1;
        if (a === p)
          return !0;
        var d = Bs(p);
        return !!d && a === d[0];
      }
      function O0(a) {
        return !!s1 && s1 in a;
      }
      var k0 = kn ? vt : sp;
      function rn(a) {
        var n = a && a.constructor, p = typeof n == "function" && n.prototype || vi;
        return a === p;
      }
      function sd(a) {
        return a === a && !Le(a);
      }
      function pd(a, n) {
        return function(p) {
          return p == null ? !1 : p[a] === n && (n !== t || a in Oe(p));
        };
      }
      function N0(a) {
        var n = or(a, function(d) {
          return p.size === f && p.clear(), d;
        }), p = n.cache;
        return n;
      }
      function F0(a, n) {
        var p = a[1], d = n[1], m = p | d, w = m < (L | R | ne), _ = d == ne && p == Q || d == ne && p == F && a[7].length <= n[8] || d == (ne | F) && n[7].length <= n[8] && p == Q;
        if (!(w || _))
          return a;
        d & L && (a[2] = n[2], m |= p & L ? 0 : B);
        var T = n[3];
        if (T) {
          var C = a[3];
          a[3] = C ? q1(C, T, n[4]) : T, a[4] = C ? Ct(a[3], c) : n[4];
        }
        return T = n[5], T && (C = a[5], a[5] = C ? z1(C, T, n[6]) : T, a[6] = C ? Ct(a[5], c) : n[6]), T = n[7], T && (a[7] = T), d & ne && (a[8] = a[8] == null ? n[8] : sa(a[8], n[8])), a[9] == null && (a[9] = n[9]), a[0] = n[0], a[1] = m, a;
      }
      function G0(a) {
        var n = [];
        if (a != null)
          for (var p in Oe(a))
            n.push(p);
        return n;
      }
      function L0(a) {
        return Fn.call(a);
      }
      function od(a, n, p) {
        return n = Qe(n === t ? a.length - 1 : n, 0), function() {
          for (var d = arguments, m = -1, w = Qe(d.length - n, 0), _ = P(w); ++m < w; )
            _[m] = d[n + m];
          m = -1;
          for (var T = P(n + 1); ++m < n; )
            T[m] = d[m];
          return T[n] = p(_), Aa(a, this, T);
        };
      }
      function dd(a, n) {
        return n.length < 2 ? a : Zt(a, Va(n, 0, -1));
      }
      function U0(a, n) {
        for (var p = a.length, d = sa(n.length, p), m = ba(a); d--; ) {
          var w = n[d];
          a[d] = ht(w, p) ? m[w] : t;
        }
        return a;
      }
      function zs(a, n) {
        if (!(n === "constructor" && typeof a[n] == "function") && n != "__proto__")
          return a[n];
      }
      var ld = ud(N1), sn = Z2 || function(a, n) {
        return ta.setTimeout(a, n);
      }, $s = ud(s0);
      function cd(a, n, p) {
        var d = n + "";
        return $s(a, C0(d, I0(S0(d), p)));
      }
      function ud(a) {
        var n = 0, p = 0;
        return function() {
          var d = tm(), m = ie - (d - p);
          if (p = d, m > 0) {
            if (++n >= ae)
              return arguments[0];
          } else
            n = 0;
          return a.apply(t, arguments);
        };
      }
      function nr(a, n) {
        var p = -1, d = a.length, m = d - 1;
        for (n = n === t ? d : n; ++p < n; ) {
          var w = Rs(p, m), _ = a[w];
          a[w] = a[p], a[p] = _;
        }
        return a.length = n, a;
      }
      var md = N0(function(a) {
        var n = [];
        return a.charCodeAt(0) === 46 && n.push(""), a.replace(Ru, function(p, d, m, w) {
          n.push(m ? w.replace(Gu, "$1") : d || p);
        }), n;
      });
      function pt(a) {
        if (typeof a == "string" || Pa(a))
          return a;
        var n = a + "";
        return n == "0" && 1 / a == -j ? "-0" : n;
      }
      function ei(a) {
        if (a != null) {
          try {
            return Nn.call(a);
          } catch (n) {
          }
          try {
            return a + "";
          } catch (n) {
          }
        }
        return "";
      }
      function I0(a, n) {
        return La(Ye, function(p) {
          var d = "_." + p[0];
          n & p[1] && !Cn(a, d) && a.push(d);
        }), a.sort();
      }
      function fd(a) {
        if (a instanceof xe)
          return a.clone();
        var n = new Ia(a.__wrapped__, a.__chain__);
        return n.__actions__ = ba(a.__actions__), n.__index__ = a.__index__, n.__values__ = a.__values__, n;
      }
      function B0(a, n, p) {
        (p ? ha(a, n, p) : n === t) ? n = 1 : n = Qe(fe(n), 0);
        var d = a == null ? 0 : a.length;
        if (!d || n < 1)
          return [];
        for (var m = 0, w = 0, _ = P(Vn(d / n)); m < d; )
          _[w++] = Va(a, m, m += n);
        return _;
      }
      function V0(a) {
        for (var n = -1, p = a == null ? 0 : a.length, d = 0, m = []; ++n < p; ) {
          var w = a[n];
          w && (m[d++] = w);
        }
        return m;
      }
      function j0() {
        var a = arguments.length;
        if (!a)
          return [];
        for (var n = P(a - 1), p = arguments[0], d = a; d--; )
          n[d - 1] = arguments[d];
        return Rt(me(p) ? ba(p) : [p], ia(n, 1));
      }
      var M0 = we(function(a, n) {
        return ze(a) ? Xi(a, ia(n, 1, ze, !0)) : [];
      }), q0 = we(function(a, n) {
        var p = ja(n);
        return ze(p) && (p = t), ze(a) ? Xi(a, ia(n, 1, ze, !0), se(p, 2)) : [];
      }), z0 = we(function(a, n) {
        var p = ja(n);
        return ze(p) && (p = t), ze(a) ? Xi(a, ia(n, 1, ze, !0), t, p) : [];
      });
      function $0(a, n, p) {
        var d = a == null ? 0 : a.length;
        return d ? (n = p || n === t ? 1 : fe(n), Va(a, n < 0 ? 0 : n, d)) : [];
      }
      function H0(a, n, p) {
        var d = a == null ? 0 : a.length;
        return d ? (n = p || n === t ? 1 : fe(n), n = d - n, Va(a, 0, n < 0 ? 0 : n)) : [];
      }
      function W0(a, n) {
        return a && a.length ? Yn(a, se(n, 3), !0, !0) : [];
      }
      function Q0(a, n) {
        return a && a.length ? Yn(a, se(n, 3), !0) : [];
      }
      function K0(a, n, p, d) {
        var m = a == null ? 0 : a.length;
        return m ? (p && typeof p != "number" && ha(a, n, p) && (p = 0, d = m), jm(a, n, p, d)) : [];
      }
      function hd(a, n, p) {
        var d = a == null ? 0 : a.length;
        if (!d)
          return -1;
        var m = p == null ? 0 : fe(p);
        return m < 0 && (m = Qe(d + m, 0)), Pn(a, se(n, 3), m);
      }
      function vd(a, n, p) {
        var d = a == null ? 0 : a.length;
        if (!d)
          return -1;
        var m = d - 1;
        return p !== t && (m = fe(p), m = p < 0 ? Qe(d + m, 0) : sa(m, d - 1)), Pn(a, se(n, 3), m, !0);
      }
      function gd(a) {
        var n = a == null ? 0 : a.length;
        return n ? ia(a, 1) : [];
      }
      function Y0(a) {
        var n = a == null ? 0 : a.length;
        return n ? ia(a, j) : [];
      }
      function J0(a, n) {
        var p = a == null ? 0 : a.length;
        return p ? (n = n === t ? 1 : fe(n), ia(a, n)) : [];
      }
      function Z0(a) {
        for (var n = -1, p = a == null ? 0 : a.length, d = {}; ++n < p; ) {
          var m = a[n];
          d[m[0]] = m[1];
        }
        return d;
      }
      function wd(a) {
        return a && a.length ? a[0] : t;
      }
      function X0(a, n, p) {
        var d = a == null ? 0 : a.length;
        if (!d)
          return -1;
        var m = p == null ? 0 : fe(p);
        return m < 0 && (m = Qe(d + m, 0)), ui(a, n, m);
      }
      function e6(a) {
        var n = a == null ? 0 : a.length;
        return n ? Va(a, 0, -1) : [];
      }
      var a6 = we(function(a) {
        var n = Ge(a, ks);
        return n.length && n[0] === a[0] ? ys(n) : [];
      }), t6 = we(function(a) {
        var n = ja(a), p = Ge(a, ks);
        return n === ja(p) ? n = t : p.pop(), p.length && p[0] === a[0] ? ys(p, se(n, 2)) : [];
      }), i6 = we(function(a) {
        var n = ja(a), p = Ge(a, ks);
        return n = typeof n == "function" ? n : t, n && p.pop(), p.length && p[0] === a[0] ? ys(p, t, n) : [];
      });
      function n6(a, n) {
        return a == null ? "" : em.call(a, n);
      }
      function ja(a) {
        var n = a == null ? 0 : a.length;
        return n ? a[n - 1] : t;
      }
      function r6(a, n, p) {
        var d = a == null ? 0 : a.length;
        if (!d)
          return -1;
        var m = d;
        return p !== t && (m = fe(p), m = m < 0 ? Qe(d + m, 0) : sa(m, d - 1)), n === n ? I2(a, n, m) : Pn(a, Zo, m, !0);
      }
      function s6(a, n) {
        return a && a.length ? P1(a, fe(n)) : t;
      }
      var p6 = we(bd);
      function bd(a, n) {
        return a && a.length && n && n.length ? As(a, n) : a;
      }
      function o6(a, n, p) {
        return a && a.length && n && n.length ? As(a, n, se(p, 2)) : a;
      }
      function d6(a, n, p) {
        return a && a.length && n && n.length ? As(a, n, t, p) : a;
      }
      var l6 = ft(function(a, n) {
        var p = a == null ? 0 : a.length, d = ws(a, n);
        return k1(a, Ge(n, function(m) {
          return ht(m, p) ? +m : m;
        }).sort(M1)), d;
      });
      function c6(a, n) {
        var p = [];
        if (!(a && a.length))
          return p;
        var d = -1, m = [], w = a.length;
        for (n = se(n, 3); ++d < w; ) {
          var _ = a[d];
          n(_, d, a) && (p.push(_), m.push(d));
        }
        return k1(a, m), p;
      }
      function Hs(a) {
        return a == null ? a : nm.call(a);
      }
      function u6(a, n, p) {
        var d = a == null ? 0 : a.length;
        return d ? (p && typeof p != "number" && ha(a, n, p) ? (n = 0, p = d) : (n = n == null ? 0 : fe(n), p = p === t ? d : fe(p)), Va(a, n, p)) : [];
      }
      function m6(a, n) {
        return Kn(a, n);
      }
      function f6(a, n, p) {
        return Ps(a, n, se(p, 2));
      }
      function h6(a, n) {
        var p = a == null ? 0 : a.length;
        if (p) {
          var d = Kn(a, n);
          if (d < p && Xa(a[d], n))
            return d;
        }
        return -1;
      }
      function v6(a, n) {
        return Kn(a, n, !0);
      }
      function g6(a, n, p) {
        return Ps(a, n, se(p, 2), !0);
      }
      function w6(a, n) {
        var p = a == null ? 0 : a.length;
        if (p) {
          var d = Kn(a, n, !0) - 1;
          if (Xa(a[d], n))
            return d;
        }
        return -1;
      }
      function b6(a) {
        return a && a.length ? F1(a) : [];
      }
      function _6(a, n) {
        return a && a.length ? F1(a, se(n, 2)) : [];
      }
      function x6(a) {
        var n = a == null ? 0 : a.length;
        return n ? Va(a, 1, n) : [];
      }
      function y6(a, n, p) {
        return a && a.length ? (n = p || n === t ? 1 : fe(n), Va(a, 0, n < 0 ? 0 : n)) : [];
      }
      function E6(a, n, p) {
        var d = a == null ? 0 : a.length;
        return d ? (n = p || n === t ? 1 : fe(n), n = d - n, Va(a, n < 0 ? 0 : n, d)) : [];
      }
      function T6(a, n) {
        return a && a.length ? Yn(a, se(n, 3), !1, !0) : [];
      }
      function S6(a, n) {
        return a && a.length ? Yn(a, se(n, 3)) : [];
      }
      var A6 = we(function(a) {
        return Ot(ia(a, 1, ze, !0));
      }), R6 = we(function(a) {
        var n = ja(a);
        return ze(n) && (n = t), Ot(ia(a, 1, ze, !0), se(n, 2));
      }), C6 = we(function(a) {
        var n = ja(a);
        return n = typeof n == "function" ? n : t, Ot(ia(a, 1, ze, !0), t, n);
      });
      function P6(a) {
        return a && a.length ? Ot(a) : [];
      }
      function D6(a, n) {
        return a && a.length ? Ot(a, se(n, 2)) : [];
      }
      function O6(a, n) {
        return n = typeof n == "function" ? n : t, a && a.length ? Ot(a, t, n) : [];
      }
      function Ws(a) {
        if (!(a && a.length))
          return [];
        var n = 0;
        return a = At(a, function(p) {
          if (ze(p))
            return n = Qe(p.length, n), !0;
        }), ls(n, function(p) {
          return Ge(a, ps(p));
        });
      }
      function _d(a, n) {
        if (!(a && a.length))
          return [];
        var p = Ws(a);
        return n == null ? p : Ge(p, function(d) {
          return Aa(n, t, d);
        });
      }
      var k6 = we(function(a, n) {
        return ze(a) ? Xi(a, n) : [];
      }), N6 = we(function(a) {
        return Os(At(a, ze));
      }), F6 = we(function(a) {
        var n = ja(a);
        return ze(n) && (n = t), Os(At(a, ze), se(n, 2));
      }), G6 = we(function(a) {
        var n = ja(a);
        return n = typeof n == "function" ? n : t, Os(At(a, ze), t, n);
      }), L6 = we(Ws);
      function U6(a, n) {
        return I1(a || [], n || [], Zi);
      }
      function I6(a, n) {
        return I1(a || [], n || [], tn);
      }
      var B6 = we(function(a) {
        var n = a.length, p = n > 1 ? a[n - 1] : t;
        return p = typeof p == "function" ? (a.pop(), p) : t, _d(a, p);
      });
      function xd(a) {
        var n = g(a);
        return n.__chain__ = !0, n;
      }
      function V6(a, n) {
        return n(a), a;
      }
      function rr(a, n) {
        return n(a);
      }
      var j6 = ft(function(a) {
        var n = a.length, p = n ? a[0] : 0, d = this.__wrapped__, m = function(w) {
          return ws(w, a);
        };
        return n > 1 || this.__actions__.length || !(d instanceof xe) || !ht(p) ? this.thru(m) : (d = d.slice(p, +p + (n ? 1 : 0)), d.__actions__.push({
          func: rr,
          args: [m],
          thisArg: t
        }), new Ia(d, this.__chain__).thru(function(w) {
          return n && !w.length && w.push(t), w;
        }));
      });
      function M6() {
        return xd(this);
      }
      function q6() {
        return new Ia(this.value(), this.__chain__);
      }
      function z6() {
        this.__values__ === t && (this.__values__ = Gd(this.value()));
        var a = this.__index__ >= this.__values__.length, n = a ? t : this.__values__[this.__index__++];
        return { done: a, value: n };
      }
      function $6() {
        return this;
      }
      function H6(a) {
        for (var n, p = this; p instanceof zn; ) {
          var d = fd(p);
          d.__index__ = 0, d.__values__ = t, n ? m.__wrapped__ = d : n = d;
          var m = d;
          p = p.__wrapped__;
        }
        return m.__wrapped__ = a, n;
      }
      function W6() {
        var a = this.__wrapped__;
        if (a instanceof xe) {
          var n = a;
          return this.__actions__.length && (n = new xe(this)), n = n.reverse(), n.__actions__.push({
            func: rr,
            args: [Hs],
            thisArg: t
          }), new Ia(n, this.__chain__);
        }
        return this.thru(Hs);
      }
      function Q6() {
        return U1(this.__wrapped__, this.__actions__);
      }
      var K6 = Jn(function(a, n, p) {
        De.call(a, p) ? ++a[p] : ut(a, p, 1);
      });
      function Y6(a, n, p) {
        var d = me(a) ? Yo : Vm;
        return p && ha(a, n, p) && (n = t), d(a, se(n, 3));
      }
      function J6(a, n) {
        var p = me(a) ? At : _1;
        return p(a, se(n, 3));
      }
      var Z6 = Q1(hd), X6 = Q1(vd);
      function e4(a, n) {
        return ia(sr(a, n), 1);
      }
      function a4(a, n) {
        return ia(sr(a, n), j);
      }
      function t4(a, n, p) {
        return p = p === t ? 1 : fe(p), ia(sr(a, n), p);
      }
      function yd(a, n) {
        var p = me(a) ? La : Dt;
        return p(a, se(n, 3));
      }
      function Ed(a, n) {
        var p = me(a) ? x2 : b1;
        return p(a, se(n, 3));
      }
      var i4 = Jn(function(a, n, p) {
        De.call(a, p) ? a[p].push(n) : ut(a, p, [n]);
      });
      function n4(a, n, p, d) {
        a = _a(a) ? a : Ti(a), p = p && !d ? fe(p) : 0;
        var m = a.length;
        return p < 0 && (p = Qe(m + p, 0)), cr(a) ? p <= m && a.indexOf(n, p) > -1 : !!m && ui(a, n, p) > -1;
      }
      var r4 = we(function(a, n, p) {
        var d = -1, m = typeof n == "function", w = _a(a) ? P(a.length) : [];
        return Dt(a, function(_) {
          w[++d] = m ? Aa(n, _, p) : en(_, n, p);
        }), w;
      }), s4 = Jn(function(a, n, p) {
        ut(a, p, n);
      });
      function sr(a, n) {
        var p = me(a) ? Ge : A1;
        return p(a, se(n, 3));
      }
      function p4(a, n, p, d) {
        return a == null ? [] : (me(n) || (n = n == null ? [] : [n]), p = d ? t : p, me(p) || (p = p == null ? [] : [p]), D1(a, n, p));
      }
      var o4 = Jn(function(a, n, p) {
        a[p ? 0 : 1].push(n);
      }, function() {
        return [[], []];
      });
      function d4(a, n, p) {
        var d = me(a) ? rs : e1, m = arguments.length < 3;
        return d(a, se(n, 4), p, m, Dt);
      }
      function l4(a, n, p) {
        var d = me(a) ? y2 : e1, m = arguments.length < 3;
        return d(a, se(n, 4), p, m, b1);
      }
      function c4(a, n) {
        var p = me(a) ? At : _1;
        return p(a, dr(se(n, 3)));
      }
      function u4(a) {
        var n = me(a) ? h1 : n0;
        return n(a);
      }
      function m4(a, n, p) {
        (p ? ha(a, n, p) : n === t) ? n = 1 : n = fe(n);
        var d = me(a) ? Gm : r0;
        return d(a, n);
      }
      function f4(a) {
        var n = me(a) ? Lm : p0;
        return n(a);
      }
      function h4(a) {
        if (a == null)
          return 0;
        if (_a(a))
          return cr(a) ? fi(a) : a.length;
        var n = pa(a);
        return n == z || n == Ya ? a.size : Ts(a).length;
      }
      function v4(a, n, p) {
        var d = me(a) ? ss : o0;
        return p && ha(a, n, p) && (n = t), d(a, se(n, 3));
      }
      var g4 = we(function(a, n) {
        if (a == null)
          return [];
        var p = n.length;
        return p > 1 && ha(a, n[0], n[1]) ? n = [] : p > 2 && ha(n[0], n[1], n[2]) && (n = [n[0]]), D1(a, ia(n, 1), []);
      }), pr = J2 || function() {
        return ta.Date.now();
      };
      function w4(a, n) {
        if (typeof n != "function")
          throw new Ua(l);
        return a = fe(a), function() {
          if (--a < 1)
            return n.apply(this, arguments);
        };
      }
      function Td(a, n, p) {
        return n = p ? t : n, n = a && n == null ? a.length : n, mt(a, ne, t, t, t, t, n);
      }
      function Sd(a, n) {
        var p;
        if (typeof n != "function")
          throw new Ua(l);
        return a = fe(a), function() {
          return --a > 0 && (p = n.apply(this, arguments)), a <= 1 && (n = t), p;
        };
      }
      var Qs = we(function(a, n, p) {
        var d = L;
        if (p.length) {
          var m = Ct(p, yi(Qs));
          d |= re;
        }
        return mt(a, d, n, p, m);
      }), Ad = we(function(a, n, p) {
        var d = L | R;
        if (p.length) {
          var m = Ct(p, yi(Ad));
          d |= re;
        }
        return mt(n, d, a, p, m);
      });
      function Rd(a, n, p) {
        n = p ? t : n;
        var d = mt(a, Q, t, t, t, t, t, n);
        return d.placeholder = Rd.placeholder, d;
      }
      function Cd(a, n, p) {
        n = p ? t : n;
        var d = mt(a, ee, t, t, t, t, t, n);
        return d.placeholder = Cd.placeholder, d;
      }
      function Pd(a, n, p) {
        var d, m, w, _, T, C, U = 0, I = !1, M = !1, K = !0;
        if (typeof a != "function")
          throw new Ua(l);
        n = Ma(n) || 0, Le(p) && (I = !!p.leading, M = "maxWait" in p, w = M ? Qe(Ma(p.maxWait) || 0, n) : w, K = "trailing" in p ? !!p.trailing : K);
        function te($e) {
          var et = d, wt = m;
          return d = m = t, U = $e, _ = a.apply(wt, et), _;
        }
        function pe($e) {
          return U = $e, T = sn(_e, n), I ? te($e) : _;
        }
        function ve($e) {
          var et = $e - C, wt = $e - U, Qd = n - et;
          return M ? sa(Qd, w - wt) : Qd;
        }
        function oe($e) {
          var et = $e - C, wt = $e - U;
          return C === t || et >= n || et < 0 || M && wt >= w;
        }
        function _e() {
          var $e = pr();
          if (oe($e))
            return ye($e);
          T = sn(_e, ve($e));
        }
        function ye($e) {
          return T = t, K && d ? te($e) : (d = m = t, _);
        }
        function Da() {
          T !== t && B1(T), U = 0, d = C = m = T = t;
        }
        function va() {
          return T === t ? _ : ye(pr());
        }
        function Oa() {
          var $e = pr(), et = oe($e);
          if (d = arguments, m = this, C = $e, et) {
            if (T === t)
              return pe(C);
            if (M)
              return B1(T), T = sn(_e, n), te(C);
          }
          return T === t && (T = sn(_e, n)), _;
        }
        return Oa.cancel = Da, Oa.flush = va, Oa;
      }
      var b4 = we(function(a, n) {
        return w1(a, 1, n);
      }), _4 = we(function(a, n, p) {
        return w1(a, Ma(n) || 0, p);
      });
      function x4(a) {
        return mt(a, N);
      }
      function or(a, n) {
        if (typeof a != "function" || n != null && typeof n != "function")
          throw new Ua(l);
        var p = function() {
          var d = arguments, m = n ? n.apply(this, d) : d[0], w = p.cache;
          if (w.has(m))
            return w.get(m);
          var _ = a.apply(this, d);
          return p.cache = w.set(m, _) || w, _;
        };
        return p.cache = new (or.Cache || ct)(), p;
      }
      or.Cache = ct;
      function dr(a) {
        if (typeof a != "function")
          throw new Ua(l);
        return function() {
          var n = arguments;
          switch (n.length) {
            case 0:
              return !a.call(this);
            case 1:
              return !a.call(this, n[0]);
            case 2:
              return !a.call(this, n[0], n[1]);
            case 3:
              return !a.call(this, n[0], n[1], n[2]);
          }
          return !a.apply(this, n);
        };
      }
      function y4(a) {
        return Sd(2, a);
      }
      var E4 = d0(function(a, n) {
        n = n.length == 1 && me(n[0]) ? Ge(n[0], Ra(se())) : Ge(ia(n, 1), Ra(se()));
        var p = n.length;
        return we(function(d) {
          for (var m = -1, w = sa(d.length, p); ++m < w; )
            d[m] = n[m].call(this, d[m]);
          return Aa(a, this, d);
        });
      }), Ks = we(function(a, n) {
        var p = Ct(n, yi(Ks));
        return mt(a, re, t, n, p);
      }), Dd = we(function(a, n) {
        var p = Ct(n, yi(Dd));
        return mt(a, de, t, n, p);
      }), T4 = ft(function(a, n) {
        return mt(a, F, t, t, t, n);
      });
      function S4(a, n) {
        if (typeof a != "function")
          throw new Ua(l);
        return n = n === t ? n : fe(n), we(a, n);
      }
      function A4(a, n) {
        if (typeof a != "function")
          throw new Ua(l);
        return n = n == null ? 0 : Qe(fe(n), 0), we(function(p) {
          var d = p[n], m = Nt(p, 0, n);
          return d && Rt(m, d), Aa(a, this, m);
        });
      }
      function R4(a, n, p) {
        var d = !0, m = !0;
        if (typeof a != "function")
          throw new Ua(l);
        return Le(p) && (d = "leading" in p ? !!p.leading : d, m = "trailing" in p ? !!p.trailing : m), Pd(a, n, {
          leading: d,
          maxWait: n,
          trailing: m
        });
      }
      function C4(a) {
        return Td(a, 1);
      }
      function P4(a, n) {
        return Ks(Ns(n), a);
      }
      function D4() {
        if (!arguments.length)
          return [];
        var a = arguments[0];
        return me(a) ? a : [a];
      }
      function O4(a) {
        return Ba(a, x);
      }
      function k4(a, n) {
        return n = typeof n == "function" ? n : t, Ba(a, x, n);
      }
      function N4(a) {
        return Ba(a, h | x);
      }
      function F4(a, n) {
        return n = typeof n == "function" ? n : t, Ba(a, h | x, n);
      }
      function G4(a, n) {
        return n == null || g1(a, n, Je(n));
      }
      function Xa(a, n) {
        return a === n || a !== a && n !== n;
      }
      var L4 = ar(xs), U4 = ar(function(a, n) {
        return a >= n;
      }), ai = E1(function() {
        return arguments;
      }()) ? E1 : function(a) {
        return je(a) && De.call(a, "callee") && !d1.call(a, "callee");
      }, me = P.isArray, I4 = zo ? Ra(zo) : Hm;
      function _a(a) {
        return a != null && lr(a.length) && !vt(a);
      }
      function ze(a) {
        return je(a) && _a(a);
      }
      function B4(a) {
        return a === !0 || a === !1 || je(a) && fa(a) == nt;
      }
      var Ft = X2 || sp, V4 = $o ? Ra($o) : Wm;
      function j4(a) {
        return je(a) && a.nodeType === 1 && !pn(a);
      }
      function M4(a) {
        if (a == null)
          return !0;
        if (_a(a) && (me(a) || typeof a == "string" || typeof a.splice == "function" || Ft(a) || Ei(a) || ai(a)))
          return !a.length;
        var n = pa(a);
        if (n == z || n == Ya)
          return !a.size;
        if (rn(a))
          return !Ts(a).length;
        for (var p in a)
          if (De.call(a, p))
            return !1;
        return !0;
      }
      function q4(a, n) {
        return an(a, n);
      }
      function z4(a, n, p) {
        p = typeof p == "function" ? p : t;
        var d = p ? p(a, n) : t;
        return d === t ? an(a, n, t, p) : !!d;
      }
      function Ys(a) {
        if (!je(a))
          return !1;
        var n = fa(a);
        return n == y || n == wa || typeof a.message == "string" && typeof a.name == "string" && !pn(a);
      }
      function $4(a) {
        return typeof a == "number" && c1(a);
      }
      function vt(a) {
        if (!Le(a))
          return !1;
        var n = fa(a);
        return n == E || n == q || n == Pe || n == Fa;
      }
      function Od(a) {
        return typeof a == "number" && a == fe(a);
      }
      function lr(a) {
        return typeof a == "number" && a > -1 && a % 1 == 0 && a <= J;
      }
      function Le(a) {
        var n = typeof a;
        return a != null && (n == "object" || n == "function");
      }
      function je(a) {
        return a != null && typeof a == "object";
      }
      var kd = Ho ? Ra(Ho) : Km;
      function H4(a, n) {
        return a === n || Es(a, n, Vs(n));
      }
      function W4(a, n, p) {
        return p = typeof p == "function" ? p : t, Es(a, n, Vs(n), p);
      }
      function Q4(a) {
        return Nd(a) && a != +a;
      }
      function K4(a) {
        if (k0(a))
          throw new ue(o);
        return T1(a);
      }
      function Y4(a) {
        return a === null;
      }
      function J4(a) {
        return a == null;
      }
      function Nd(a) {
        return typeof a == "number" || je(a) && fa(a) == X;
      }
      function pn(a) {
        if (!je(a) || fa(a) != Ae)
          return !1;
        var n = Un(a);
        if (n === null)
          return !0;
        var p = De.call(n, "constructor") && n.constructor;
        return typeof p == "function" && p instanceof p && Nn.call(p) == W2;
      }
      var Js = Wo ? Ra(Wo) : Ym;
      function Z4(a) {
        return Od(a) && a >= -J && a <= J;
      }
      var Fd = Qo ? Ra(Qo) : Jm;
      function cr(a) {
        return typeof a == "string" || !me(a) && je(a) && fa(a) == qi;
      }
      function Pa(a) {
        return typeof a == "symbol" || je(a) && fa(a) == Tn;
      }
      var Ei = Ko ? Ra(Ko) : Zm;
      function X4(a) {
        return a === t;
      }
      function e3(a) {
        return je(a) && pa(a) == zi;
      }
      function a3(a) {
        return je(a) && fa(a) == gu;
      }
      var t3 = ar(Ss), i3 = ar(function(a, n) {
        return a <= n;
      });
      function Gd(a) {
        if (!a)
          return [];
        if (_a(a))
          return cr(a) ? Ja(a) : ba(a);
        if (Wi && a[Wi])
          return G2(a[Wi]());
        var n = pa(a), p = n == z ? us : n == Ya ? Dn : Ti;
        return p(a);
      }
      function gt(a) {
        if (!a)
          return a === 0 ? a : 0;
        if (a = Ma(a), a === j || a === -j) {
          var n = a < 0 ? -1 : 1;
          return n * ce;
        }
        return a === a ? a : 0;
      }
      function fe(a) {
        var n = gt(a), p = n % 1;
        return n === n ? p ? n - p : n : 0;
      }
      function Ld(a) {
        return a ? Jt(fe(a), 0, Fe) : 0;
      }
      function Ma(a) {
        if (typeof a == "number")
          return a;
        if (Pa(a))
          return he;
        if (Le(a)) {
          var n = typeof a.valueOf == "function" ? a.valueOf() : a;
          a = Le(n) ? n + "" : n;
        }
        if (typeof a != "string")
          return a === 0 ? a : +a;
        a = a1(a);
        var p = Iu.test(a);
        return p || Vu.test(a) ? w2(a.slice(2), p ? 2 : 8) : Uu.test(a) ? he : +a;
      }
      function Ud(a) {
        return st(a, xa(a));
      }
      function n3(a) {
        return a ? Jt(fe(a), -J, J) : a === 0 ? a : 0;
      }
      function Re(a) {
        return a == null ? "" : Ca(a);
      }
      var r3 = _i(function(a, n) {
        if (rn(n) || _a(n)) {
          st(n, Je(n), a);
          return;
        }
        for (var p in n)
          De.call(n, p) && Zi(a, p, n[p]);
      }), Id = _i(function(a, n) {
        st(n, xa(n), a);
      }), ur = _i(function(a, n, p, d) {
        st(n, xa(n), a, d);
      }), s3 = _i(function(a, n, p, d) {
        st(n, Je(n), a, d);
      }), p3 = ft(ws);
      function o3(a, n) {
        var p = bi(a);
        return n == null ? p : v1(p, n);
      }
      var d3 = we(function(a, n) {
        a = Oe(a);
        var p = -1, d = n.length, m = d > 2 ? n[2] : t;
        for (m && ha(n[0], n[1], m) && (d = 1); ++p < d; )
          for (var w = n[p], _ = xa(w), T = -1, C = _.length; ++T < C; ) {
            var U = _[T], I = a[U];
            (I === t || Xa(I, vi[U]) && !De.call(a, U)) && (a[U] = w[U]);
          }
        return a;
      }), l3 = we(function(a) {
        return a.push(t, ad), Aa(Bd, t, a);
      });
      function c3(a, n) {
        return Jo(a, se(n, 3), rt);
      }
      function u3(a, n) {
        return Jo(a, se(n, 3), _s);
      }
      function m3(a, n) {
        return a == null ? a : bs(a, se(n, 3), xa);
      }
      function f3(a, n) {
        return a == null ? a : x1(a, se(n, 3), xa);
      }
      function h3(a, n) {
        return a && rt(a, se(n, 3));
      }
      function v3(a, n) {
        return a && _s(a, se(n, 3));
      }
      function g3(a) {
        return a == null ? [] : Wn(a, Je(a));
      }
      function w3(a) {
        return a == null ? [] : Wn(a, xa(a));
      }
      function Zs(a, n, p) {
        var d = a == null ? t : Zt(a, n);
        return d === t ? p : d;
      }
      function b3(a, n) {
        return a != null && nd(a, n, Mm);
      }
      function Xs(a, n) {
        return a != null && nd(a, n, qm);
      }
      var _3 = Y1(function(a, n, p) {
        n != null && typeof n.toString != "function" && (n = Fn.call(n)), a[n] = p;
      }, ap(ya)), x3 = Y1(function(a, n, p) {
        n != null && typeof n.toString != "function" && (n = Fn.call(n)), De.call(a, n) ? a[n].push(p) : a[n] = [p];
      }, se), y3 = we(en);
      function Je(a) {
        return _a(a) ? f1(a) : Ts(a);
      }
      function xa(a) {
        return _a(a) ? f1(a, !0) : Xm(a);
      }
      function E3(a, n) {
        var p = {};
        return n = se(n, 3), rt(a, function(d, m, w) {
          ut(p, n(d, m, w), d);
        }), p;
      }
      function T3(a, n) {
        var p = {};
        return n = se(n, 3), rt(a, function(d, m, w) {
          ut(p, m, n(d, m, w));
        }), p;
      }
      var S3 = _i(function(a, n, p) {
        Qn(a, n, p);
      }), Bd = _i(function(a, n, p, d) {
        Qn(a, n, p, d);
      }), A3 = ft(function(a, n) {
        var p = {};
        if (a == null)
          return p;
        var d = !1;
        n = Ge(n, function(w) {
          return w = kt(w, a), d || (d = w.length > 1), w;
        }), st(a, Is(a), p), d && (p = Ba(p, h | b | x, _0));
        for (var m = n.length; m--; )
          Ds(p, n[m]);
        return p;
      });
      function R3(a, n) {
        return Vd(a, dr(se(n)));
      }
      var C3 = ft(function(a, n) {
        return a == null ? {} : a0(a, n);
      });
      function Vd(a, n) {
        if (a == null)
          return {};
        var p = Ge(Is(a), function(d) {
          return [d];
        });
        return n = se(n), O1(a, p, function(d, m) {
          return n(d, m[0]);
        });
      }
      function P3(a, n, p) {
        n = kt(n, a);
        var d = -1, m = n.length;
        for (m || (m = 1, a = t); ++d < m; ) {
          var w = a == null ? t : a[pt(n[d])];
          w === t && (d = m, w = p), a = vt(w) ? w.call(a) : w;
        }
        return a;
      }
      function D3(a, n, p) {
        return a == null ? a : tn(a, n, p);
      }
      function O3(a, n, p, d) {
        return d = typeof d == "function" ? d : t, a == null ? a : tn(a, n, p, d);
      }
      var jd = X1(Je), Md = X1(xa);
      function k3(a, n, p) {
        var d = me(a), m = d || Ft(a) || Ei(a);
        if (n = se(n, 4), p == null) {
          var w = a && a.constructor;
          m ? p = d ? new w() : [] : Le(a) ? p = vt(w) ? bi(Un(a)) : {} : p = {};
        }
        return (m ? La : rt)(a, function(_, T, C) {
          return n(p, _, T, C);
        }), p;
      }
      function N3(a, n) {
        return a == null ? !0 : Ds(a, n);
      }
      function F3(a, n, p) {
        return a == null ? a : L1(a, n, Ns(p));
      }
      function G3(a, n, p, d) {
        return d = typeof d == "function" ? d : t, a == null ? a : L1(a, n, Ns(p), d);
      }
      function Ti(a) {
        return a == null ? [] : cs(a, Je(a));
      }
      function L3(a) {
        return a == null ? [] : cs(a, xa(a));
      }
      function U3(a, n, p) {
        return p === t && (p = n, n = t), p !== t && (p = Ma(p), p = p === p ? p : 0), n !== t && (n = Ma(n), n = n === n ? n : 0), Jt(Ma(a), n, p);
      }
      function I3(a, n, p) {
        return n = gt(n), p === t ? (p = n, n = 0) : p = gt(p), a = Ma(a), zm(a, n, p);
      }
      function B3(a, n, p) {
        if (p && typeof p != "boolean" && ha(a, n, p) && (n = p = t), p === t && (typeof n == "boolean" ? (p = n, n = t) : typeof a == "boolean" && (p = a, a = t)), a === t && n === t ? (a = 0, n = 1) : (a = gt(a), n === t ? (n = a, a = 0) : n = gt(n)), a > n) {
          var d = a;
          a = n, n = d;
        }
        if (p || a % 1 || n % 1) {
          var m = u1();
          return sa(a + m * (n - a + g2("1e-" + ((m + "").length - 1))), n);
        }
        return Rs(a, n);
      }
      var V3 = xi(function(a, n, p) {
        return n = n.toLowerCase(), a + (p ? qd(n) : n);
      });
      function qd(a) {
        return ep(Re(a).toLowerCase());
      }
      function zd(a) {
        return a = Re(a), a && a.replace(Mu, D2).replace(p2, "");
      }
      function j3(a, n, p) {
        a = Re(a), n = Ca(n);
        var d = a.length;
        p = p === t ? d : Jt(fe(p), 0, d);
        var m = p;
        return p -= n.length, p >= 0 && a.slice(p, m) == n;
      }
      function M3(a) {
        return a = Re(a), a && yu.test(a) ? a.replace(xo, O2) : a;
      }
      function q3(a) {
        return a = Re(a), a && Cu.test(a) ? a.replace(Kr, "\\$&") : a;
      }
      var z3 = xi(function(a, n, p) {
        return a + (p ? "-" : "") + n.toLowerCase();
      }), $3 = xi(function(a, n, p) {
        return a + (p ? " " : "") + n.toLowerCase();
      }), H3 = W1("toLowerCase");
      function W3(a, n, p) {
        a = Re(a), n = fe(n);
        var d = n ? fi(a) : 0;
        if (!n || d >= n)
          return a;
        var m = (n - d) / 2;
        return er(jn(m), p) + a + er(Vn(m), p);
      }
      function Q3(a, n, p) {
        a = Re(a), n = fe(n);
        var d = n ? fi(a) : 0;
        return n && d < n ? a + er(n - d, p) : a;
      }
      function K3(a, n, p) {
        a = Re(a), n = fe(n);
        var d = n ? fi(a) : 0;
        return n && d < n ? er(n - d, p) + a : a;
      }
      function Y3(a, n, p) {
        return p || n == null ? n = 0 : n && (n = +n), im(Re(a).replace(Yr, ""), n || 0);
      }
      function J3(a, n, p) {
        return (p ? ha(a, n, p) : n === t) ? n = 1 : n = fe(n), Cs(Re(a), n);
      }
      function Z3() {
        var a = arguments, n = Re(a[0]);
        return a.length < 3 ? n : n.replace(a[1], a[2]);
      }
      var X3 = xi(function(a, n, p) {
        return a + (p ? "_" : "") + n.toLowerCase();
      });
      function e9(a, n, p) {
        return p && typeof p != "number" && ha(a, n, p) && (n = p = t), p = p === t ? Fe : p >>> 0, p ? (a = Re(a), a && (typeof n == "string" || n != null && !Js(n)) && (n = Ca(n), !n && mi(a)) ? Nt(Ja(a), 0, p) : a.split(n, p)) : [];
      }
      var a9 = xi(function(a, n, p) {
        return a + (p ? " " : "") + ep(n);
      });
      function t9(a, n, p) {
        return a = Re(a), p = p == null ? 0 : Jt(fe(p), 0, a.length), n = Ca(n), a.slice(p, p + n.length) == n;
      }
      function i9(a, n, p) {
        var d = g.templateSettings;
        p && ha(a, n, p) && (n = t), a = Re(a), n = ur({}, n, d, ed);
        var m = ur({}, n.imports, d.imports, ed), w = Je(m), _ = cs(m, w), T, C, U = 0, I = n.interpolate || Sn, M = "__p += '", K = ms((n.escape || Sn).source + "|" + I.source + "|" + (I === yo ? Lu : Sn).source + "|" + (n.evaluate || Sn).source + "|$", "g"), te = "//# sourceURL=" + (De.call(n, "sourceURL") ? (n.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++u2 + "]") + `
`;
        a.replace(K, function(oe, _e, ye, Da, va, Oa) {
          return ye || (ye = Da), M += a.slice(U, Oa).replace(qu, k2), _e && (T = !0, M += `' +
__e(` + _e + `) +
'`), va && (C = !0, M += `';
` + va + `;
__p += '`), ye && (M += `' +
((__t = (` + ye + `)) == null ? '' : __t) +
'`), U = Oa + oe.length, oe;
        }), M += `';
`;
        var pe = De.call(n, "variable") && n.variable;
        if (!pe)
          M = `with (obj) {
` + M + `
}
`;
        else if (Fu.test(pe))
          throw new ue(u);
        M = (C ? M.replace(wu, "") : M).replace(bu, "$1").replace(_u, "$1;"), M = "function(" + (pe || "obj") + `) {
` + (pe ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (T ? ", __e = _.escape" : "") + (C ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + M + `return __p
}`;
        var ve = Hd(function() {
          return Se(w, te + "return " + M).apply(t, _);
        });
        if (ve.source = M, Ys(ve))
          throw ve;
        return ve;
      }
      function n9(a) {
        return Re(a).toLowerCase();
      }
      function r9(a) {
        return Re(a).toUpperCase();
      }
      function s9(a, n, p) {
        if (a = Re(a), a && (p || n === t))
          return a1(a);
        if (!a || !(n = Ca(n)))
          return a;
        var d = Ja(a), m = Ja(n), w = t1(d, m), _ = i1(d, m) + 1;
        return Nt(d, w, _).join("");
      }
      function p9(a, n, p) {
        if (a = Re(a), a && (p || n === t))
          return a.slice(0, r1(a) + 1);
        if (!a || !(n = Ca(n)))
          return a;
        var d = Ja(a), m = i1(d, Ja(n)) + 1;
        return Nt(d, 0, m).join("");
      }
      function o9(a, n, p) {
        if (a = Re(a), a && (p || n === t))
          return a.replace(Yr, "");
        if (!a || !(n = Ca(n)))
          return a;
        var d = Ja(a), m = t1(d, Ja(n));
        return Nt(d, m).join("");
      }
      function d9(a, n) {
        var p = G, d = V;
        if (Le(n)) {
          var m = "separator" in n ? n.separator : m;
          p = "length" in n ? fe(n.length) : p, d = "omission" in n ? Ca(n.omission) : d;
        }
        a = Re(a);
        var w = a.length;
        if (mi(a)) {
          var _ = Ja(a);
          w = _.length;
        }
        if (p >= w)
          return a;
        var T = p - fi(d);
        if (T < 1)
          return d;
        var C = _ ? Nt(_, 0, T).join("") : a.slice(0, T);
        if (m === t)
          return C + d;
        if (_ && (T += C.length - T), Js(m)) {
          if (a.slice(T).search(m)) {
            var U, I = C;
            for (m.global || (m = ms(m.source, Re(Eo.exec(m)) + "g")), m.lastIndex = 0; U = m.exec(I); )
              var M = U.index;
            C = C.slice(0, M === t ? T : M);
          }
        } else if (a.indexOf(Ca(m), T) != T) {
          var K = C.lastIndexOf(m);
          K > -1 && (C = C.slice(0, K));
        }
        return C + d;
      }
      function l9(a) {
        return a = Re(a), a && xu.test(a) ? a.replace(_o, B2) : a;
      }
      var c9 = xi(function(a, n, p) {
        return a + (p ? " " : "") + n.toUpperCase();
      }), ep = W1("toUpperCase");
      function $d(a, n, p) {
        return a = Re(a), n = p ? t : n, n === t ? F2(a) ? M2(a) : S2(a) : a.match(n) || [];
      }
      var Hd = we(function(a, n) {
        try {
          return Aa(a, t, n);
        } catch (p) {
          return Ys(p) ? p : new ue(p);
        }
      }), u9 = ft(function(a, n) {
        return La(n, function(p) {
          p = pt(p), ut(a, p, Qs(a[p], a));
        }), a;
      });
      function m9(a) {
        var n = a == null ? 0 : a.length, p = se();
        return a = n ? Ge(a, function(d) {
          if (typeof d[1] != "function")
            throw new Ua(l);
          return [p(d[0]), d[1]];
        }) : [], we(function(d) {
          for (var m = -1; ++m < n; ) {
            var w = a[m];
            if (Aa(w[0], this, d))
              return Aa(w[1], this, d);
          }
        });
      }
      function f9(a) {
        return Bm(Ba(a, h));
      }
      function ap(a) {
        return function() {
          return a;
        };
      }
      function h9(a, n) {
        return a == null || a !== a ? n : a;
      }
      var v9 = K1(), g9 = K1(!0);
      function ya(a) {
        return a;
      }
      function tp(a) {
        return S1(typeof a == "function" ? a : Ba(a, h));
      }
      function w9(a) {
        return R1(Ba(a, h));
      }
      function b9(a, n) {
        return C1(a, Ba(n, h));
      }
      var _9 = we(function(a, n) {
        return function(p) {
          return en(p, a, n);
        };
      }), x9 = we(function(a, n) {
        return function(p) {
          return en(a, p, n);
        };
      });
      function ip(a, n, p) {
        var d = Je(n), m = Wn(n, d);
        p == null && !(Le(n) && (m.length || !d.length)) && (p = n, n = a, a = this, m = Wn(n, Je(n)));
        var w = !(Le(p) && "chain" in p) || !!p.chain, _ = vt(a);
        return La(m, function(T) {
          var C = n[T];
          a[T] = C, _ && (a.prototype[T] = function() {
            var U = this.__chain__;
            if (w || U) {
              var I = a(this.__wrapped__), M = I.__actions__ = ba(this.__actions__);
              return M.push({ func: C, args: arguments, thisArg: a }), I.__chain__ = U, I;
            }
            return C.apply(a, Rt([this.value()], arguments));
          });
        }), a;
      }
      function y9() {
        return ta._ === this && (ta._ = Q2), this;
      }
      function np() {
      }
      function E9(a) {
        return a = fe(a), we(function(n) {
          return P1(n, a);
        });
      }
      var T9 = Gs(Ge), S9 = Gs(Yo), A9 = Gs(ss);
      function Wd(a) {
        return Ms(a) ? ps(pt(a)) : t0(a);
      }
      function R9(a) {
        return function(n) {
          return a == null ? t : Zt(a, n);
        };
      }
      var C9 = J1(), P9 = J1(!0);
      function rp() {
        return [];
      }
      function sp() {
        return !1;
      }
      function D9() {
        return {};
      }
      function O9() {
        return "";
      }
      function k9() {
        return !0;
      }
      function N9(a, n) {
        if (a = fe(a), a < 1 || a > J)
          return [];
        var p = Fe, d = sa(a, Fe);
        n = se(n), a -= Fe;
        for (var m = ls(d, n); ++p < a; )
          n(p);
        return m;
      }
      function F9(a) {
        return me(a) ? Ge(a, pt) : Pa(a) ? [a] : ba(md(Re(a)));
      }
      function G9(a) {
        var n = ++H2;
        return Re(a) + n;
      }
      var L9 = Xn(function(a, n) {
        return a + n;
      }, 0), U9 = Ls("ceil"), I9 = Xn(function(a, n) {
        return a / n;
      }, 1), B9 = Ls("floor");
      function V9(a) {
        return a && a.length ? Hn(a, ya, xs) : t;
      }
      function j9(a, n) {
        return a && a.length ? Hn(a, se(n, 2), xs) : t;
      }
      function M9(a) {
        return Xo(a, ya);
      }
      function q9(a, n) {
        return Xo(a, se(n, 2));
      }
      function z9(a) {
        return a && a.length ? Hn(a, ya, Ss) : t;
      }
      function $9(a, n) {
        return a && a.length ? Hn(a, se(n, 2), Ss) : t;
      }
      var H9 = Xn(function(a, n) {
        return a * n;
      }, 1), W9 = Ls("round"), Q9 = Xn(function(a, n) {
        return a - n;
      }, 0);
      function K9(a) {
        return a && a.length ? ds(a, ya) : 0;
      }
      function Y9(a, n) {
        return a && a.length ? ds(a, se(n, 2)) : 0;
      }
      return g.after = w4, g.ary = Td, g.assign = r3, g.assignIn = Id, g.assignInWith = ur, g.assignWith = s3, g.at = p3, g.before = Sd, g.bind = Qs, g.bindAll = u9, g.bindKey = Ad, g.castArray = D4, g.chain = xd, g.chunk = B0, g.compact = V0, g.concat = j0, g.cond = m9, g.conforms = f9, g.constant = ap, g.countBy = K6, g.create = o3, g.curry = Rd, g.curryRight = Cd, g.debounce = Pd, g.defaults = d3, g.defaultsDeep = l3, g.defer = b4, g.delay = _4, g.difference = M0, g.differenceBy = q0, g.differenceWith = z0, g.drop = $0, g.dropRight = H0, g.dropRightWhile = W0, g.dropWhile = Q0, g.fill = K0, g.filter = J6, g.flatMap = e4, g.flatMapDeep = a4, g.flatMapDepth = t4, g.flatten = gd, g.flattenDeep = Y0, g.flattenDepth = J0, g.flip = x4, g.flow = v9, g.flowRight = g9, g.fromPairs = Z0, g.functions = g3, g.functionsIn = w3, g.groupBy = i4, g.initial = e6, g.intersection = a6, g.intersectionBy = t6, g.intersectionWith = i6, g.invert = _3, g.invertBy = x3, g.invokeMap = r4, g.iteratee = tp, g.keyBy = s4, g.keys = Je, g.keysIn = xa, g.map = sr, g.mapKeys = E3, g.mapValues = T3, g.matches = w9, g.matchesProperty = b9, g.memoize = or, g.merge = S3, g.mergeWith = Bd, g.method = _9, g.methodOf = x9, g.mixin = ip, g.negate = dr, g.nthArg = E9, g.omit = A3, g.omitBy = R3, g.once = y4, g.orderBy = p4, g.over = T9, g.overArgs = E4, g.overEvery = S9, g.overSome = A9, g.partial = Ks, g.partialRight = Dd, g.partition = o4, g.pick = C3, g.pickBy = Vd, g.property = Wd, g.propertyOf = R9, g.pull = p6, g.pullAll = bd, g.pullAllBy = o6, g.pullAllWith = d6, g.pullAt = l6, g.range = C9, g.rangeRight = P9, g.rearg = T4, g.reject = c4, g.remove = c6, g.rest = S4, g.reverse = Hs, g.sampleSize = m4, g.set = D3, g.setWith = O3, g.shuffle = f4, g.slice = u6, g.sortBy = g4, g.sortedUniq = b6, g.sortedUniqBy = _6, g.split = e9, g.spread = A4, g.tail = x6, g.take = y6, g.takeRight = E6, g.takeRightWhile = T6, g.takeWhile = S6, g.tap = V6, g.throttle = R4, g.thru = rr, g.toArray = Gd, g.toPairs = jd, g.toPairsIn = Md, g.toPath = F9, g.toPlainObject = Ud, g.transform = k3, g.unary = C4, g.union = A6, g.unionBy = R6, g.unionWith = C6, g.uniq = P6, g.uniqBy = D6, g.uniqWith = O6, g.unset = N3, g.unzip = Ws, g.unzipWith = _d, g.update = F3, g.updateWith = G3, g.values = Ti, g.valuesIn = L3, g.without = k6, g.words = $d, g.wrap = P4, g.xor = N6, g.xorBy = F6, g.xorWith = G6, g.zip = L6, g.zipObject = U6, g.zipObjectDeep = I6, g.zipWith = B6, g.entries = jd, g.entriesIn = Md, g.extend = Id, g.extendWith = ur, ip(g, g), g.add = L9, g.attempt = Hd, g.camelCase = V3, g.capitalize = qd, g.ceil = U9, g.clamp = U3, g.clone = O4, g.cloneDeep = N4, g.cloneDeepWith = F4, g.cloneWith = k4, g.conformsTo = G4, g.deburr = zd, g.defaultTo = h9, g.divide = I9, g.endsWith = j3, g.eq = Xa, g.escape = M3, g.escapeRegExp = q3, g.every = Y6, g.find = Z6, g.findIndex = hd, g.findKey = c3, g.findLast = X6, g.findLastIndex = vd, g.findLastKey = u3, g.floor = B9, g.forEach = yd, g.forEachRight = Ed, g.forIn = m3, g.forInRight = f3, g.forOwn = h3, g.forOwnRight = v3, g.get = Zs, g.gt = L4, g.gte = U4, g.has = b3, g.hasIn = Xs, g.head = wd, g.identity = ya, g.includes = n4, g.indexOf = X0, g.inRange = I3, g.invoke = y3, g.isArguments = ai, g.isArray = me, g.isArrayBuffer = I4, g.isArrayLike = _a, g.isArrayLikeObject = ze, g.isBoolean = B4, g.isBuffer = Ft, g.isDate = V4, g.isElement = j4, g.isEmpty = M4, g.isEqual = q4, g.isEqualWith = z4, g.isError = Ys, g.isFinite = $4, g.isFunction = vt, g.isInteger = Od, g.isLength = lr, g.isMap = kd, g.isMatch = H4, g.isMatchWith = W4, g.isNaN = Q4, g.isNative = K4, g.isNil = J4, g.isNull = Y4, g.isNumber = Nd, g.isObject = Le, g.isObjectLike = je, g.isPlainObject = pn, g.isRegExp = Js, g.isSafeInteger = Z4, g.isSet = Fd, g.isString = cr, g.isSymbol = Pa, g.isTypedArray = Ei, g.isUndefined = X4, g.isWeakMap = e3, g.isWeakSet = a3, g.join = n6, g.kebabCase = z3, g.last = ja, g.lastIndexOf = r6, g.lowerCase = $3, g.lowerFirst = H3, g.lt = t3, g.lte = i3, g.max = V9, g.maxBy = j9, g.mean = M9, g.meanBy = q9, g.min = z9, g.minBy = $9, g.stubArray = rp, g.stubFalse = sp, g.stubObject = D9, g.stubString = O9, g.stubTrue = k9, g.multiply = H9, g.nth = s6, g.noConflict = y9, g.noop = np, g.now = pr, g.pad = W3, g.padEnd = Q3, g.padStart = K3, g.parseInt = Y3, g.random = B3, g.reduce = d4, g.reduceRight = l4, g.repeat = J3, g.replace = Z3, g.result = P3, g.round = W9, g.runInContext = A, g.sample = u4, g.size = h4, g.snakeCase = X3, g.some = v4, g.sortedIndex = m6, g.sortedIndexBy = f6, g.sortedIndexOf = h6, g.sortedLastIndex = v6, g.sortedLastIndexBy = g6, g.sortedLastIndexOf = w6, g.startCase = a9, g.startsWith = t9, g.subtract = Q9, g.sum = K9, g.sumBy = Y9, g.template = i9, g.times = N9, g.toFinite = gt, g.toInteger = fe, g.toLength = Ld, g.toLower = n9, g.toNumber = Ma, g.toSafeInteger = n3, g.toString = Re, g.toUpper = r9, g.trim = s9, g.trimEnd = p9, g.trimStart = o9, g.truncate = d9, g.unescape = l9, g.uniqueId = G9, g.upperCase = c9, g.upperFirst = ep, g.each = yd, g.eachRight = Ed, g.first = wd, ip(g, function() {
        var a = {};
        return rt(g, function(n, p) {
          De.call(g.prototype, p) || (a[p] = n);
        }), a;
      }(), { chain: !1 }), g.VERSION = r, La(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(a) {
        g[a].placeholder = g;
      }), La(["drop", "take"], function(a, n) {
        xe.prototype[a] = function(p) {
          p = p === t ? 1 : Qe(fe(p), 0);
          var d = this.__filtered__ && !n ? new xe(this) : this.clone();
          return d.__filtered__ ? d.__takeCount__ = sa(p, d.__takeCount__) : d.__views__.push({
            size: sa(p, Fe),
            type: a + (d.__dir__ < 0 ? "Right" : "")
          }), d;
        }, xe.prototype[a + "Right"] = function(p) {
          return this.reverse()[a](p).reverse();
        };
      }), La(["filter", "map", "takeWhile"], function(a, n) {
        var p = n + 1, d = p == H || p == $;
        xe.prototype[a] = function(m) {
          var w = this.clone();
          return w.__iteratees__.push({
            iteratee: se(m, 3),
            type: p
          }), w.__filtered__ = w.__filtered__ || d, w;
        };
      }), La(["head", "last"], function(a, n) {
        var p = "take" + (n ? "Right" : "");
        xe.prototype[a] = function() {
          return this[p](1).value()[0];
        };
      }), La(["initial", "tail"], function(a, n) {
        var p = "drop" + (n ? "" : "Right");
        xe.prototype[a] = function() {
          return this.__filtered__ ? new xe(this) : this[p](1);
        };
      }), xe.prototype.compact = function() {
        return this.filter(ya);
      }, xe.prototype.find = function(a) {
        return this.filter(a).head();
      }, xe.prototype.findLast = function(a) {
        return this.reverse().find(a);
      }, xe.prototype.invokeMap = we(function(a, n) {
        return typeof a == "function" ? new xe(this) : this.map(function(p) {
          return en(p, a, n);
        });
      }), xe.prototype.reject = function(a) {
        return this.filter(dr(se(a)));
      }, xe.prototype.slice = function(a, n) {
        a = fe(a);
        var p = this;
        return p.__filtered__ && (a > 0 || n < 0) ? new xe(p) : (a < 0 ? p = p.takeRight(-a) : a && (p = p.drop(a)), n !== t && (n = fe(n), p = n < 0 ? p.dropRight(-n) : p.take(n - a)), p);
      }, xe.prototype.takeRightWhile = function(a) {
        return this.reverse().takeWhile(a).reverse();
      }, xe.prototype.toArray = function() {
        return this.take(Fe);
      }, rt(xe.prototype, function(a, n) {
        var p = /^(?:filter|find|map|reject)|While$/.test(n), d = /^(?:head|last)$/.test(n), m = g[d ? "take" + (n == "last" ? "Right" : "") : n], w = d || /^find/.test(n);
        !m || (g.prototype[n] = function() {
          var _ = this.__wrapped__, T = d ? [1] : arguments, C = _ instanceof xe, U = T[0], I = C || me(_), M = function(_e) {
            var ye = m.apply(g, Rt([_e], T));
            return d && K ? ye[0] : ye;
          };
          I && p && typeof U == "function" && U.length != 1 && (C = I = !1);
          var K = this.__chain__, te = !!this.__actions__.length, pe = w && !K, ve = C && !te;
          if (!w && I) {
            _ = ve ? _ : new xe(this);
            var oe = a.apply(_, T);
            return oe.__actions__.push({ func: rr, args: [M], thisArg: t }), new Ia(oe, K);
          }
          return pe && ve ? a.apply(this, T) : (oe = this.thru(M), pe ? d ? oe.value()[0] : oe.value() : oe);
        });
      }), La(["pop", "push", "shift", "sort", "splice", "unshift"], function(a) {
        var n = On[a], p = /^(?:push|sort|unshift)$/.test(a) ? "tap" : "thru", d = /^(?:pop|shift)$/.test(a);
        g.prototype[a] = function() {
          var m = arguments;
          if (d && !this.__chain__) {
            var w = this.value();
            return n.apply(me(w) ? w : [], m);
          }
          return this[p](function(_) {
            return n.apply(me(_) ? _ : [], m);
          });
        };
      }), rt(xe.prototype, function(a, n) {
        var p = g[n];
        if (p) {
          var d = p.name + "";
          De.call(wi, d) || (wi[d] = []), wi[d].push({ name: n, func: p });
        }
      }), wi[Zn(t, R).name] = [{
        name: "wrapper",
        func: t
      }], xe.prototype.clone = lm, xe.prototype.reverse = cm, xe.prototype.value = um, g.prototype.at = j6, g.prototype.chain = M6, g.prototype.commit = q6, g.prototype.next = z6, g.prototype.plant = H6, g.prototype.reverse = W6, g.prototype.toJSON = g.prototype.valueOf = g.prototype.value = Q6, g.prototype.first = g.prototype.head, Wi && (g.prototype[Wi] = $6), g;
    }, hi = q2();
    Wt ? ((Wt.exports = hi)._ = hi, ts._ = hi) : ta._ = hi;
  }).call(Y);
});
var rc = function(e, t) {
  return function() {
    for (var s = new Array(arguments.length), o = 0; o < s.length; o++)
      s[o] = arguments[o];
    return e.apply(t, s);
  };
}, Fp = Object.prototype.toString, Gp = function(i) {
  return function(e) {
    var t = Fp.call(e);
    return i[t] || (i[t] = t.slice(8, -1).toLowerCase());
  };
}(Object.create(null));
function pi(i) {
  return i = i.toLowerCase(), function(t) {
    return Gp(t) === i;
  };
}
function Lp(i) {
  return Array.isArray(i);
}
function Er(i) {
  return typeof i == "undefined";
}
function F7(i) {
  return i !== null && !Er(i) && i.constructor !== null && !Er(i.constructor) && typeof i.constructor.isBuffer == "function" && i.constructor.isBuffer(i);
}
var sc = pi("ArrayBuffer");
function G7(i) {
  var e;
  return typeof ArrayBuffer != "undefined" && ArrayBuffer.isView ? e = ArrayBuffer.isView(i) : e = i && i.buffer && sc(i.buffer), e;
}
function L7(i) {
  return typeof i == "string";
}
function U7(i) {
  return typeof i == "number";
}
function pc(i) {
  return i !== null && typeof i == "object";
}
function Tr(i) {
  if (Gp(i) !== "object")
    return !1;
  var e = Object.getPrototypeOf(i);
  return e === null || e === Object.prototype;
}
var I7 = pi("Date"), B7 = pi("File"), V7 = pi("Blob"), j7 = pi("FileList");
function Up(i) {
  return Fp.call(i) === "[object Function]";
}
function M7(i) {
  return pc(i) && Up(i.pipe);
}
function q7(i) {
  var e = "[object FormData]";
  return i && (typeof FormData == "function" && i instanceof FormData || Fp.call(i) === e || Up(i.toString) && i.toString() === e);
}
var z7 = pi("URLSearchParams");
function $7(i) {
  return i.trim ? i.trim() : i.replace(/^\s+|\s+$/g, "");
}
function H7() {
  return typeof navigator != "undefined" && (navigator.product === "ReactNative" || navigator.product === "NativeScript" || navigator.product === "NS") ? !1 : typeof window != "undefined" && typeof document != "undefined";
}
function Ip(i, e) {
  if (!(i === null || typeof i == "undefined"))
    if (typeof i != "object" && (i = [i]), Lp(i))
      for (var t = 0, r = i.length; t < r; t++)
        e.call(null, i[t], t, i);
    else
      for (var s in i)
        Object.prototype.hasOwnProperty.call(i, s) && e.call(null, i[s], s, i);
}
function Bp() {
  var i = {};
  function e(s, o) {
    Tr(i[o]) && Tr(s) ? i[o] = Bp(i[o], s) : Tr(s) ? i[o] = Bp({}, s) : Lp(s) ? i[o] = s.slice() : i[o] = s;
  }
  for (var t = 0, r = arguments.length; t < r; t++)
    Ip(arguments[t], e);
  return i;
}
function W7(i, e, t) {
  return Ip(e, function(s, o) {
    t && typeof s == "function" ? i[o] = rc(s, t) : i[o] = s;
  }), i;
}
function Q7(i) {
  return i.charCodeAt(0) === 65279 && (i = i.slice(1)), i;
}
function K7(i, e, t, r) {
  i.prototype = Object.create(e.prototype, r), i.prototype.constructor = i, t && Object.assign(i.prototype, t);
}
function Y7(i, e, t) {
  var r, s, o, l = {};
  e = e || {};
  do {
    for (r = Object.getOwnPropertyNames(i), s = r.length; s-- > 0; )
      o = r[s], l[o] || (e[o] = i[o], l[o] = !0);
    i = Object.getPrototypeOf(i);
  } while (i && (!t || t(i, e)) && i !== Object.prototype);
  return e;
}
function J7(i, e, t) {
  i = String(i), (t === void 0 || t > i.length) && (t = i.length), t -= e.length;
  var r = i.indexOf(e, t);
  return r !== -1 && r === t;
}
function Z7(i) {
  if (!i)
    return null;
  var e = i.length;
  if (Er(e))
    return null;
  for (var t = new Array(e); e-- > 0; )
    t[e] = i[e];
  return t;
}
var X7 = function(i) {
  return function(e) {
    return i && e instanceof i;
  };
}(typeof Uint8Array != "undefined" && Object.getPrototypeOf(Uint8Array)), W = {
  isArray: Lp,
  isArrayBuffer: sc,
  isBuffer: F7,
  isFormData: q7,
  isArrayBufferView: G7,
  isString: L7,
  isNumber: U7,
  isObject: pc,
  isPlainObject: Tr,
  isUndefined: Er,
  isDate: I7,
  isFile: B7,
  isBlob: V7,
  isFunction: Up,
  isStream: M7,
  isURLSearchParams: z7,
  isStandardBrowserEnv: H7,
  forEach: Ip,
  merge: Bp,
  extend: W7,
  trim: $7,
  stripBOM: Q7,
  inherits: K7,
  toFlatObject: Y7,
  kindOf: Gp,
  kindOfTest: pi,
  endsWith: J7,
  toArray: Z7,
  isTypedArray: X7,
  isFileList: j7
};
function oc(i) {
  return encodeURIComponent(i).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
var Sr = function(e, t, r) {
  if (!t)
    return e;
  var s;
  if (r)
    s = r(t);
  else if (W.isURLSearchParams(t))
    s = t.toString();
  else {
    var o = [];
    W.forEach(t, function(v, f) {
      v === null || typeof v == "undefined" || (W.isArray(v) ? f = f + "[]" : v = [v], W.forEach(v, function(h) {
        W.isDate(h) ? h = h.toISOString() : W.isObject(h) && (h = JSON.stringify(h)), o.push(oc(f) + "=" + oc(h));
      }));
    }), s = o.join("&");
  }
  if (s) {
    var l = e.indexOf("#");
    l !== -1 && (e = e.slice(0, l)), e += (e.indexOf("?") === -1 ? "?" : "&") + s;
  }
  return e;
};
function Ar() {
  this.handlers = [];
}
Ar.prototype.use = function(e, t, r) {
  return this.handlers.push({
    fulfilled: e,
    rejected: t,
    synchronous: r ? r.synchronous : !1,
    runWhen: r ? r.runWhen : null
  }), this.handlers.length - 1;
}, Ar.prototype.eject = function(e) {
  this.handlers[e] && (this.handlers[e] = null);
}, Ar.prototype.forEach = function(e) {
  W.forEach(this.handlers, function(r) {
    r !== null && e(r);
  });
};
var dc = Ar, lc = function(e, t) {
  W.forEach(e, function(s, o) {
    o !== t && o.toUpperCase() === t.toUpperCase() && (e[t] = s, delete e[o]);
  });
};
function ki(i, e, t, r, s) {
  Error.call(this), this.message = i, this.name = "AxiosError", e && (this.code = e), t && (this.config = t), r && (this.request = r), s && (this.response = s);
}
W.inherits(ki, Error, {
  toJSON: function() {
    return {
      message: this.message,
      name: this.name,
      description: this.description,
      number: this.number,
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      config: this.config,
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  }
});
var cc = ki.prototype, uc = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED"
].forEach(function(i) {
  uc[i] = { value: i };
}), Object.defineProperties(ki, uc), Object.defineProperty(cc, "isAxiosError", { value: !0 }), ki.from = function(i, e, t, r, s, o) {
  var l = Object.create(cc);
  return W.toFlatObject(i, l, function(v) {
    return v !== Error.prototype;
  }), ki.call(l, i.message, e, t, r, s), l.name = i.name, o && Object.assign(l, o), l;
};
var le = ki, Vp = {
  silentJSONParsing: !0,
  forcedJSONParsing: !0,
  clarifyTimeoutError: !1
};
function ef(i, e) {
  e = e || new FormData();
  var t = [];
  function r(o) {
    return o === null ? "" : W.isDate(o) ? o.toISOString() : W.isArrayBuffer(o) || W.isTypedArray(o) ? typeof Blob == "function" ? new Blob([o]) : Buffer.from(o) : o;
  }
  function s(o, l) {
    if (W.isPlainObject(o) || W.isArray(o)) {
      if (t.indexOf(o) !== -1)
        throw Error("Circular reference detected in " + l);
      t.push(o), W.forEach(o, function(v, f) {
        if (!W.isUndefined(v)) {
          var c = l ? l + "." + f : f, h;
          if (v && !l && typeof v == "object") {
            if (W.endsWith(f, "{}"))
              v = JSON.stringify(v);
            else if (W.endsWith(f, "[]") && (h = W.toArray(v))) {
              h.forEach(function(b) {
                !W.isUndefined(b) && e.append(c, r(b));
              });
              return;
            }
          }
          s(v, c);
        }
      }), t.pop();
    } else
      e.append(l, r(o));
  }
  return s(i), e;
}
var mc = ef, jp = function(e, t, r) {
  var s = r.config.validateStatus;
  !r.status || !s || s(r.status) ? e(r) : t(new le("Request failed with status code " + r.status, [le.ERR_BAD_REQUEST, le.ERR_BAD_RESPONSE][Math.floor(r.status / 100) - 4], r.config, r.request, r));
}, af = W.isStandardBrowserEnv() ? function() {
  return {
    write: function(t, r, s, o, l, u) {
      var v = [];
      v.push(t + "=" + encodeURIComponent(r)), W.isNumber(s) && v.push("expires=" + new Date(s).toGMTString()), W.isString(o) && v.push("path=" + o), W.isString(l) && v.push("domain=" + l), u === !0 && v.push("secure"), document.cookie = v.join("; ");
    },
    read: function(t) {
      var r = document.cookie.match(new RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
      return r ? decodeURIComponent(r[3]) : null;
    },
    remove: function(t) {
      this.write(t, "", Date.now() - 864e5);
    }
  };
}() : function() {
  return {
    write: function() {
    },
    read: function() {
      return null;
    },
    remove: function() {
    }
  };
}(), tf = function(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}, nf = function(e, t) {
  return t ? e.replace(/\/+$/, "") + "/" + t.replace(/^\/+/, "") : e;
}, Mp = function(e, t) {
  return e && !tf(t) ? nf(e, t) : t;
}, rf = [
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
], sf = function(e) {
  var t = {}, r, s, o;
  return e && W.forEach(e.split(`
`), function(u) {
    if (o = u.indexOf(":"), r = W.trim(u.substr(0, o)).toLowerCase(), s = W.trim(u.substr(o + 1)), r) {
      if (t[r] && rf.indexOf(r) >= 0)
        return;
      r === "set-cookie" ? t[r] = (t[r] ? t[r] : []).concat([s]) : t[r] = t[r] ? t[r] + ", " + s : s;
    }
  }), t;
}, pf = W.isStandardBrowserEnv() ? function() {
  var e = /(msie|trident)/i.test(navigator.userAgent), t = document.createElement("a"), r;
  function s(o) {
    var l = o;
    return e && (t.setAttribute("href", l), l = t.href), t.setAttribute("href", l), {
      href: t.href,
      protocol: t.protocol ? t.protocol.replace(/:$/, "") : "",
      host: t.host,
      search: t.search ? t.search.replace(/^\?/, "") : "",
      hash: t.hash ? t.hash.replace(/^#/, "") : "",
      hostname: t.hostname,
      port: t.port,
      pathname: t.pathname.charAt(0) === "/" ? t.pathname : "/" + t.pathname
    };
  }
  return r = s(window.location.href), function(l) {
    var u = W.isString(l) ? s(l) : l;
    return u.protocol === r.protocol && u.host === r.host;
  };
}() : function() {
  return function() {
    return !0;
  };
}();
function fc(i) {
  le.call(this, i ?? "canceled", le.ERR_CANCELED), this.name = "CanceledError";
}
W.inherits(fc, le, {
  __CANCEL__: !0
});
var vn = fc, of = function(e) {
  var t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return t && t[1] || "";
}, df = function(e) {
  return new Promise(function(r, s) {
    var o = e.data, l = e.headers, u = e.responseType, v;
    function f() {
      e.cancelToken && e.cancelToken.unsubscribe(v), e.signal && e.signal.removeEventListener("abort", v);
    }
    W.isFormData(o) && W.isStandardBrowserEnv() && delete l["Content-Type"];
    var c = new XMLHttpRequest();
    if (e.auth) {
      var h = e.auth.username || "", b = e.auth.password ? unescape(encodeURIComponent(e.auth.password)) : "";
      l.Authorization = "Basic " + btoa(h + ":" + b);
    }
    var x = Mp(e.baseURL, e.url);
    c.open(e.method.toUpperCase(), Sr(x, e.params, e.paramsSerializer), !0), c.timeout = e.timeout;
    function S() {
      if (!!c) {
        var R = "getAllResponseHeaders" in c ? sf(c.getAllResponseHeaders()) : null, B = !u || u === "text" || u === "json" ? c.responseText : c.response, Q = {
          data: B,
          status: c.status,
          statusText: c.statusText,
          headers: R,
          config: e,
          request: c
        };
        jp(function(re) {
          r(re), f();
        }, function(re) {
          s(re), f();
        }, Q), c = null;
      }
    }
    if ("onloadend" in c ? c.onloadend = S : c.onreadystatechange = function() {
      !c || c.readyState !== 4 || c.status === 0 && !(c.responseURL && c.responseURL.indexOf("file:") === 0) || setTimeout(S);
    }, c.onabort = function() {
      !c || (s(new le("Request aborted", le.ECONNABORTED, e, c)), c = null);
    }, c.onerror = function() {
      s(new le("Network Error", le.ERR_NETWORK, e, c, c)), c = null;
    }, c.ontimeout = function() {
      var B = e.timeout ? "timeout of " + e.timeout + "ms exceeded" : "timeout exceeded", Q = e.transitional || Vp;
      e.timeoutErrorMessage && (B = e.timeoutErrorMessage), s(new le(B, Q.clarifyTimeoutError ? le.ETIMEDOUT : le.ECONNABORTED, e, c)), c = null;
    }, W.isStandardBrowserEnv()) {
      var D = (e.withCredentials || pf(x)) && e.xsrfCookieName ? af.read(e.xsrfCookieName) : void 0;
      D && (l[e.xsrfHeaderName] = D);
    }
    "setRequestHeader" in c && W.forEach(l, function(B, Q) {
      typeof o == "undefined" && Q.toLowerCase() === "content-type" ? delete l[Q] : c.setRequestHeader(Q, B);
    }), W.isUndefined(e.withCredentials) || (c.withCredentials = !!e.withCredentials), u && u !== "json" && (c.responseType = e.responseType), typeof e.onDownloadProgress == "function" && c.addEventListener("progress", e.onDownloadProgress), typeof e.onUploadProgress == "function" && c.upload && c.upload.addEventListener("progress", e.onUploadProgress), (e.cancelToken || e.signal) && (v = function(R) {
      !c || (s(!R || R && R.type ? new vn() : R), c.abort(), c = null);
    }, e.cancelToken && e.cancelToken.subscribe(v), e.signal && (e.signal.aborted ? v() : e.signal.addEventListener("abort", v))), o || (o = null);
    var L = of(x);
    if (L && ["http", "https", "file"].indexOf(L) === -1) {
      s(new le("Unsupported protocol " + L + ":", le.ERR_BAD_REQUEST, e));
      return;
    }
    c.send(o);
  });
}, Ni = 1e3, Fi = Ni * 60, Gi = Fi * 60, oi = Gi * 24, lf = oi * 7, cf = oi * 365.25, uf = function(i, e) {
  e = e || {};
  var t = typeof i;
  if (t === "string" && i.length > 0)
    return mf(i);
  if (t === "number" && isFinite(i))
    return e.long ? hf(i) : ff(i);
  throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(i));
};
function mf(i) {
  if (i = String(i), !(i.length > 100)) {
    var e = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(i);
    if (!!e) {
      var t = parseFloat(e[1]), r = (e[2] || "ms").toLowerCase();
      switch (r) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return t * cf;
        case "weeks":
        case "week":
        case "w":
          return t * lf;
        case "days":
        case "day":
        case "d":
          return t * oi;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return t * Gi;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return t * Fi;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return t * Ni;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return t;
        default:
          return;
      }
    }
  }
}
function ff(i) {
  var e = Math.abs(i);
  return e >= oi ? Math.round(i / oi) + "d" : e >= Gi ? Math.round(i / Gi) + "h" : e >= Fi ? Math.round(i / Fi) + "m" : e >= Ni ? Math.round(i / Ni) + "s" : i + "ms";
}
function hf(i) {
  var e = Math.abs(i);
  return e >= oi ? Rr(i, e, oi, "day") : e >= Gi ? Rr(i, e, Gi, "hour") : e >= Fi ? Rr(i, e, Fi, "minute") : e >= Ni ? Rr(i, e, Ni, "second") : i + " ms";
}
function Rr(i, e, t, r) {
  var s = e >= t * 1.5;
  return Math.round(i / t) + " " + r + (s ? "s" : "");
}
function vf(i) {
  t.debug = t, t.default = t, t.coerce = v, t.disable = o, t.enable = s, t.enabled = l, t.humanize = uf, t.destroy = f, Object.keys(i).forEach((c) => {
    t[c] = i[c];
  }), t.names = [], t.skips = [], t.formatters = {};
  function e(c) {
    let h = 0;
    for (let b = 0; b < c.length; b++)
      h = (h << 5) - h + c.charCodeAt(b), h |= 0;
    return t.colors[Math.abs(h) % t.colors.length];
  }
  t.selectColor = e;
  function t(c) {
    let h, b = null, x, S;
    function D(...L) {
      if (!D.enabled)
        return;
      const R = D, B = Number(new Date()), Q = B - (h || B);
      R.diff = Q, R.prev = h, R.curr = B, h = B, L[0] = t.coerce(L[0]), typeof L[0] != "string" && L.unshift("%O");
      let ee = 0;
      L[0] = L[0].replace(/%([a-zA-Z%])/g, (de, ne) => {
        if (de === "%%")
          return "%";
        ee++;
        const F = t.formatters[ne];
        if (typeof F == "function") {
          const N = L[ee];
          de = F.call(R, N), L.splice(ee, 1), ee--;
        }
        return de;
      }), t.formatArgs.call(R, L), (R.log || t.log).apply(R, L);
    }
    return D.namespace = c, D.useColors = t.useColors(), D.color = t.selectColor(c), D.extend = r, D.destroy = t.destroy, Object.defineProperty(D, "enabled", {
      enumerable: !0,
      configurable: !1,
      get: () => b !== null ? b : (x !== t.namespaces && (x = t.namespaces, S = t.enabled(c)), S),
      set: (L) => {
        b = L;
      }
    }), typeof t.init == "function" && t.init(D), D;
  }
  function r(c, h) {
    const b = t(this.namespace + (typeof h == "undefined" ? ":" : h) + c);
    return b.log = this.log, b;
  }
  function s(c) {
    t.save(c), t.namespaces = c, t.names = [], t.skips = [];
    let h;
    const b = (typeof c == "string" ? c : "").split(/[\s,]+/), x = b.length;
    for (h = 0; h < x; h++)
      !b[h] || (c = b[h].replace(/\*/g, ".*?"), c[0] === "-" ? t.skips.push(new RegExp("^" + c.slice(1) + "$")) : t.names.push(new RegExp("^" + c + "$")));
  }
  function o() {
    const c = [
      ...t.names.map(u),
      ...t.skips.map(u).map((h) => "-" + h)
    ].join(",");
    return t.enable(""), c;
  }
  function l(c) {
    if (c[c.length - 1] === "*")
      return !0;
    let h, b;
    for (h = 0, b = t.skips.length; h < b; h++)
      if (t.skips[h].test(c))
        return !1;
    for (h = 0, b = t.names.length; h < b; h++)
      if (t.names[h].test(c))
        return !0;
    return !1;
  }
  function u(c) {
    return c.toString().substring(2, c.toString().length - 2).replace(/\.\*\?$/, "*");
  }
  function v(c) {
    return c instanceof Error ? c.stack || c.message : c;
  }
  function f() {
    console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
  }
  return t.enable(t.load()), t;
}
var hc = vf, gf = Ee(function(i, e) {
  e.formatArgs = r, e.save = s, e.load = o, e.useColors = t, e.storage = l(), e.destroy = (() => {
    let v = !1;
    return () => {
      v || (v = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
    };
  })(), e.colors = [
    "#0000CC",
    "#0000FF",
    "#0033CC",
    "#0033FF",
    "#0066CC",
    "#0066FF",
    "#0099CC",
    "#0099FF",
    "#00CC00",
    "#00CC33",
    "#00CC66",
    "#00CC99",
    "#00CCCC",
    "#00CCFF",
    "#3300CC",
    "#3300FF",
    "#3333CC",
    "#3333FF",
    "#3366CC",
    "#3366FF",
    "#3399CC",
    "#3399FF",
    "#33CC00",
    "#33CC33",
    "#33CC66",
    "#33CC99",
    "#33CCCC",
    "#33CCFF",
    "#6600CC",
    "#6600FF",
    "#6633CC",
    "#6633FF",
    "#66CC00",
    "#66CC33",
    "#9900CC",
    "#9900FF",
    "#9933CC",
    "#9933FF",
    "#99CC00",
    "#99CC33",
    "#CC0000",
    "#CC0033",
    "#CC0066",
    "#CC0099",
    "#CC00CC",
    "#CC00FF",
    "#CC3300",
    "#CC3333",
    "#CC3366",
    "#CC3399",
    "#CC33CC",
    "#CC33FF",
    "#CC6600",
    "#CC6633",
    "#CC9900",
    "#CC9933",
    "#CCCC00",
    "#CCCC33",
    "#FF0000",
    "#FF0033",
    "#FF0066",
    "#FF0099",
    "#FF00CC",
    "#FF00FF",
    "#FF3300",
    "#FF3333",
    "#FF3366",
    "#FF3399",
    "#FF33CC",
    "#FF33FF",
    "#FF6600",
    "#FF6633",
    "#FF9900",
    "#FF9933",
    "#FFCC00",
    "#FFCC33"
  ];
  function t() {
    return typeof window != "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs) ? !0 : typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/) ? !1 : typeof document != "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window != "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
  }
  function r(v) {
    if (v[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + v[0] + (this.useColors ? "%c " : " ") + "+" + i.exports.humanize(this.diff), !this.useColors)
      return;
    const f = "color: " + this.color;
    v.splice(1, 0, f, "color: inherit");
    let c = 0, h = 0;
    v[0].replace(/%[a-zA-Z%]/g, (b) => {
      b !== "%%" && (c++, b === "%c" && (h = c));
    }), v.splice(h, 0, f);
  }
  e.log = console.debug || console.log || (() => {
  });
  function s(v) {
    try {
      v ? e.storage.setItem("debug", v) : e.storage.removeItem("debug");
    } catch (f) {
    }
  }
  function o() {
    let v;
    try {
      v = e.storage.getItem("debug");
    } catch (f) {
    }
    return !v && typeof process != "undefined" && "env" in process && (v = process.env.DEBUG), v;
  }
  function l() {
    try {
      return localStorage;
    } catch (v) {
    }
  }
  i.exports = hc(e);
  const { formatters: u } = i.exports;
  u.j = function(v) {
    try {
      return JSON.stringify(v);
    } catch (f) {
      return "[UnexpectedJSONParseError]: " + f.message;
    }
  };
}), $a = (i, e = process.argv) => {
  const t = i.startsWith("-") ? "" : i.length === 1 ? "-" : "--", r = e.indexOf(t + i), s = e.indexOf("--");
  return r !== -1 && (s === -1 || r < s);
};
const { env: Xe } = process;
let qt;
$a("no-color") || $a("no-colors") || $a("color=false") || $a("color=never") ? qt = 0 : ($a("color") || $a("colors") || $a("color=true") || $a("color=always")) && (qt = 1), "FORCE_COLOR" in Xe && (Xe.FORCE_COLOR === "true" ? qt = 1 : Xe.FORCE_COLOR === "false" ? qt = 0 : qt = Xe.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(Xe.FORCE_COLOR, 10), 3));
function qp(i) {
  return i === 0 ? !1 : {
    level: i,
    hasBasic: !0,
    has256: i >= 2,
    has16m: i >= 3
  };
}
function zp(i, e) {
  if (qt === 0)
    return 0;
  if ($a("color=16m") || $a("color=full") || $a("color=truecolor"))
    return 3;
  if ($a("color=256"))
    return 2;
  if (i && !e && qt === void 0)
    return 0;
  const t = qt || 0;
  if (Xe.TERM === "dumb")
    return t;
  if (process.platform === "win32") {
    const r = Si.default.release().split(".");
    return Number(r[0]) >= 10 && Number(r[2]) >= 10586 ? Number(r[2]) >= 14931 ? 3 : 2 : 1;
  }
  if ("CI" in Xe)
    return ["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "GITHUB_ACTIONS", "BUILDKITE"].some((r) => r in Xe) || Xe.CI_NAME === "codeship" ? 1 : t;
  if ("TEAMCITY_VERSION" in Xe)
    return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(Xe.TEAMCITY_VERSION) ? 1 : 0;
  if (Xe.COLORTERM === "truecolor")
    return 3;
  if ("TERM_PROGRAM" in Xe) {
    const r = parseInt((Xe.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
    switch (Xe.TERM_PROGRAM) {
      case "iTerm.app":
        return r >= 3 ? 3 : 2;
      case "Apple_Terminal":
        return 2;
    }
  }
  return /-256(color)?$/i.test(Xe.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(Xe.TERM) || "COLORTERM" in Xe ? 1 : t;
}
function wf(i) {
  const e = zp(i, i && i.isTTY);
  return qp(e);
}
var bf = {
  supportsColor: wf,
  stdout: qp(zp(!0, op.default.isatty(1))),
  stderr: qp(zp(!0, op.default.isatty(2)))
}, _f = Ee(function(i, e) {
  e.init = v, e.log = o, e.formatArgs = r, e.save = l, e.load = u, e.useColors = t, e.destroy = ka.default.deprecate(() => {
  }, "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."), e.colors = [6, 2, 3, 4, 5, 1];
  try {
    const c = bf;
    c && (c.stderr || c).level >= 2 && (e.colors = [
      20,
      21,
      26,
      27,
      32,
      33,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      56,
      57,
      62,
      63,
      68,
      69,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      92,
      93,
      98,
      99,
      112,
      113,
      128,
      129,
      134,
      135,
      148,
      149,
      160,
      161,
      162,
      163,
      164,
      165,
      166,
      167,
      168,
      169,
      170,
      171,
      172,
      173,
      178,
      179,
      184,
      185,
      196,
      197,
      198,
      199,
      200,
      201,
      202,
      203,
      204,
      205,
      206,
      207,
      208,
      209,
      214,
      215,
      220,
      221
    ]);
  } catch (c) {
  }
  e.inspectOpts = Object.keys(process.env).filter((c) => /^debug_/i.test(c)).reduce((c, h) => {
    const b = h.substring(6).toLowerCase().replace(/_([a-z])/g, (S, D) => D.toUpperCase());
    let x = process.env[h];
    return /^(yes|on|true|enabled)$/i.test(x) ? x = !0 : /^(no|off|false|disabled)$/i.test(x) ? x = !1 : x === "null" ? x = null : x = Number(x), c[b] = x, c;
  }, {});
  function t() {
    return "colors" in e.inspectOpts ? Boolean(e.inspectOpts.colors) : op.default.isatty(process.stderr.fd);
  }
  function r(c) {
    const { namespace: h, useColors: b } = this;
    if (b) {
      const x = this.color, S = "[3" + (x < 8 ? x : "8;5;" + x), D = `  ${S};1m${h} [0m`;
      c[0] = D + c[0].split(`
`).join(`
` + D), c.push(S + "m+" + i.exports.humanize(this.diff) + "[0m");
    } else
      c[0] = s() + h + " " + c[0];
  }
  function s() {
    return e.inspectOpts.hideDate ? "" : new Date().toISOString() + " ";
  }
  function o(...c) {
    return process.stderr.write(ka.default.format(...c) + `
`);
  }
  function l(c) {
    c ? process.env.DEBUG = c : delete process.env.DEBUG;
  }
  function u() {
    return process.env.DEBUG;
  }
  function v(c) {
    c.inspectOpts = {};
    const h = Object.keys(e.inspectOpts);
    for (let b = 0; b < h.length; b++)
      c.inspectOpts[h[b]] = e.inspectOpts[h[b]];
  }
  i.exports = hc(e);
  const { formatters: f } = i.exports;
  f.o = function(c) {
    return this.inspectOpts.colors = this.useColors, ka.default.inspect(c, this.inspectOpts).split(`
`).map((h) => h.trim()).join(" ");
  }, f.O = function(c) {
    return this.inspectOpts.colors = this.useColors, ka.default.inspect(c, this.inspectOpts);
  };
}), xf = Ee(function(i) {
  typeof process == "undefined" || process.type === "renderer" || process.browser === !0 || process.__nwjs ? i.exports = gf : i.exports = _f;
}), gn, vc = function() {
  if (!gn) {
    try {
      gn = xf("follow-redirects");
    } catch (i) {
    }
    typeof gn != "function" && (gn = function() {
    });
  }
  gn.apply(null, arguments);
}, $p = Ea.default.URL, gc = na.default.Writable, Hp = ["abort", "aborted", "connect", "error", "socket", "timeout"], Wp = Object.create(null);
Hp.forEach(function(i) {
  Wp[i] = function(e, t, r) {
    this._redirectable.emit(i, e, t, r);
  };
});
var yf = wn("ERR_INVALID_URL", "Invalid URL", TypeError), wc = wn("ERR_FR_REDIRECTION_FAILURE", "Redirected request failed"), Ef = wn("ERR_FR_TOO_MANY_REDIRECTS", "Maximum number of redirects exceeded"), Tf = wn("ERR_FR_MAX_BODY_LENGTH_EXCEEDED", "Request body larger than maxBodyLength limit"), Sf = wn("ERR_STREAM_WRITE_AFTER_END", "write after end");
function Na(i, e) {
  gc.call(this), this._sanitizeOptions(i), this._options = i, this._ended = !1, this._ending = !1, this._redirectCount = 0, this._redirects = [], this._requestBodyLength = 0, this._requestBodyBuffers = [], e && this.on("response", e);
  var t = this;
  this._onNativeResponse = function(r) {
    t._processResponse(r);
  }, this._performRequest();
}
Na.prototype = Object.create(gc.prototype), Na.prototype.abort = function() {
  xc(this._currentRequest), this.emit("abort");
}, Na.prototype.write = function(i, e, t) {
  if (this._ending)
    throw new Sf();
  if (!di(i) && !Cf(i))
    throw new TypeError("data should be a string, Buffer or Uint8Array");
  if (bn(e) && (t = e, e = null), i.length === 0) {
    t && t();
    return;
  }
  this._requestBodyLength + i.length <= this._options.maxBodyLength ? (this._requestBodyLength += i.length, this._requestBodyBuffers.push({ data: i, encoding: e }), this._currentRequest.write(i, e, t)) : (this.emit("error", new Tf()), this.abort());
}, Na.prototype.end = function(i, e, t) {
  if (bn(i) ? (t = i, i = e = null) : bn(e) && (t = e, e = null), !i)
    this._ended = this._ending = !0, this._currentRequest.end(null, null, t);
  else {
    var r = this, s = this._currentRequest;
    this.write(i, e, function() {
      r._ended = !0, s.end(null, null, t);
    }), this._ending = !0;
  }
}, Na.prototype.setHeader = function(i, e) {
  this._options.headers[i] = e, this._currentRequest.setHeader(i, e);
}, Na.prototype.removeHeader = function(i) {
  delete this._options.headers[i], this._currentRequest.removeHeader(i);
}, Na.prototype.setTimeout = function(i, e) {
  var t = this;
  function r(l) {
    l.setTimeout(i), l.removeListener("timeout", l.destroy), l.addListener("timeout", l.destroy);
  }
  function s(l) {
    t._timeout && clearTimeout(t._timeout), t._timeout = setTimeout(function() {
      t.emit("timeout"), o();
    }, i), r(l);
  }
  function o() {
    t._timeout && (clearTimeout(t._timeout), t._timeout = null), t.removeListener("abort", o), t.removeListener("error", o), t.removeListener("response", o), e && t.removeListener("timeout", e), t.socket || t._currentRequest.removeListener("socket", s);
  }
  return e && this.on("timeout", e), this.socket ? s(this.socket) : this._currentRequest.once("socket", s), this.on("socket", r), this.on("abort", o), this.on("error", o), this.on("response", o), this;
}, [
  "flushHeaders",
  "getHeader",
  "setNoDelay",
  "setSocketKeepAlive"
].forEach(function(i) {
  Na.prototype[i] = function(e, t) {
    return this._currentRequest[i](e, t);
  };
}), ["aborted", "connection", "socket"].forEach(function(i) {
  Object.defineProperty(Na.prototype, i, {
    get: function() {
      return this._currentRequest[i];
    }
  });
}), Na.prototype._sanitizeOptions = function(i) {
  if (i.headers || (i.headers = {}), i.host && (i.hostname || (i.hostname = i.host), delete i.host), !i.pathname && i.path) {
    var e = i.path.indexOf("?");
    e < 0 ? i.pathname = i.path : (i.pathname = i.path.substring(0, e), i.search = i.path.substring(e));
  }
}, Na.prototype._performRequest = function() {
  var i = this._options.protocol, e = this._options.nativeProtocols[i];
  if (!e) {
    this.emit("error", new TypeError("Unsupported protocol " + i));
    return;
  }
  if (this._options.agents) {
    var t = i.slice(0, -1);
    this._options.agent = this._options.agents[t];
  }
  var r = this._currentRequest = e.request(this._options, this._onNativeResponse);
  r._redirectable = this;
  for (var s of Hp)
    r.on(s, Wp[s]);
  if (this._currentUrl = /^\//.test(this._options.path) ? Ea.default.format(this._options) : this._options.path, this._isRedirect) {
    var o = 0, l = this, u = this._requestBodyBuffers;
    (function v(f) {
      if (r === l._currentRequest)
        if (f)
          l.emit("error", f);
        else if (o < u.length) {
          var c = u[o++];
          r.finished || r.write(c.data, c.encoding, v);
        } else
          l._ended && r.end();
    })();
  }
}, Na.prototype._processResponse = function(i) {
  var e = i.statusCode;
  this._options.trackRedirects && this._redirects.push({
    url: this._currentUrl,
    headers: i.headers,
    statusCode: e
  });
  var t = i.headers.location;
  if (!t || this._options.followRedirects === !1 || e < 300 || e >= 400) {
    i.responseUrl = this._currentUrl, i.redirects = this._redirects, this.emit("response", i), this._requestBodyBuffers = [];
    return;
  }
  if (xc(this._currentRequest), i.destroy(), ++this._redirectCount > this._options.maxRedirects) {
    this.emit("error", new Ef());
    return;
  }
  var r, s = this._options.beforeRedirect;
  s && (r = Object.assign({
    Host: i.req.getHeader("host")
  }, this._options.headers));
  var o = this._options.method;
  ((e === 301 || e === 302) && this._options.method === "POST" || e === 303 && !/^(?:GET|HEAD)$/.test(this._options.method)) && (this._options.method = "GET", this._requestBodyBuffers = [], Qp(/^content-/i, this._options.headers));
  var l = Qp(/^host$/i, this._options.headers), u = Ea.default.parse(this._currentUrl), v = l || u.host, f = /^\w+:/.test(t) ? this._currentUrl : Ea.default.format(Object.assign(u, { host: v })), c;
  try {
    c = Ea.default.resolve(f, t);
  } catch (S) {
    this.emit("error", new wc({ cause: S }));
    return;
  }
  vc("redirecting to", c), this._isRedirect = !0;
  var h = Ea.default.parse(c);
  if (Object.assign(this._options, h), (h.protocol !== u.protocol && h.protocol !== "https:" || h.host !== v && !Rf(h.host, v)) && Qp(/^(?:authorization|cookie)$/i, this._options.headers), bn(s)) {
    var b = {
      headers: i.headers,
      statusCode: e
    }, x = {
      url: f,
      method: o,
      headers: r
    };
    try {
      s(this._options, b, x);
    } catch (S) {
      this.emit("error", S);
      return;
    }
    this._sanitizeOptions(this._options);
  }
  try {
    this._performRequest();
  } catch (S) {
    this.emit("error", new wc({ cause: S }));
  }
};
function bc(i) {
  var e = {
    maxRedirects: 21,
    maxBodyLength: 10 * 1024 * 1024
  }, t = {};
  return Object.keys(i).forEach(function(r) {
    var s = r + ":", o = t[s] = i[r], l = e[r] = Object.create(o);
    function u(f, c, h) {
      if (di(f)) {
        var b;
        try {
          b = _c(new $p(f));
        } catch (x) {
          b = Ea.default.parse(f);
        }
        if (!di(b.protocol))
          throw new yf({ input: f });
        f = b;
      } else
        $p && f instanceof $p ? f = _c(f) : (h = c, c = f, f = { protocol: s });
      return bn(c) && (h = c, c = null), c = Object.assign({
        maxRedirects: e.maxRedirects,
        maxBodyLength: e.maxBodyLength
      }, f, c), c.nativeProtocols = t, !di(c.host) && !di(c.hostname) && (c.hostname = "::1"), pp.default.equal(c.protocol, s, "protocol mismatch"), vc("options", c), new Na(c, h);
    }
    function v(f, c, h) {
      var b = l.request(f, c, h);
      return b.end(), b;
    }
    Object.defineProperties(l, {
      request: { value: u, configurable: !0, enumerable: !0, writable: !0 },
      get: { value: v, configurable: !0, enumerable: !0, writable: !0 }
    });
  }), e;
}
function Af() {
}
function _c(i) {
  var e = {
    protocol: i.protocol,
    hostname: i.hostname.startsWith("[") ? i.hostname.slice(1, -1) : i.hostname,
    hash: i.hash,
    search: i.search,
    pathname: i.pathname,
    path: i.pathname + i.search,
    href: i.href
  };
  return i.port !== "" && (e.port = Number(i.port)), e;
}
function Qp(i, e) {
  var t;
  for (var r in e)
    i.test(r) && (t = e[r], delete e[r]);
  return t === null || typeof t == "undefined" ? void 0 : String(t).trim();
}
function wn(i, e, t) {
  function r(s) {
    Error.captureStackTrace(this, this.constructor), Object.assign(this, s || {}), this.code = i, this.message = this.cause ? e + ": " + this.cause.message : e;
  }
  return r.prototype = new (t || Error)(), r.prototype.constructor = r, r.prototype.name = "Error [" + i + "]", r;
}
function xc(i) {
  for (var e of Hp)
    i.removeListener(e, Wp[e]);
  i.on("error", Af), i.abort();
}
function Rf(i, e) {
  pp.default(di(i) && di(e));
  var t = i.length - e.length - 1;
  return t > 0 && i[t] === "." && i.endsWith(e);
}
function di(i) {
  return typeof i == "string" || i instanceof String;
}
function bn(i) {
  return typeof i == "function";
}
function Cf(i) {
  return typeof i == "object" && "length" in i;
}
var Kp = bc({ http: bt.default, https: ti.default }), Pf = bc;
Kp.wrap = Pf;
var Yp = {
  version: "0.27.2"
}, Df = Kp.http, Of = Kp.https, kf = Yp.version, yc = /https:?/, Ec = ["http:", "https:", "file:"];
function Tc(i, e, t) {
  if (i.hostname = e.host, i.host = e.host, i.port = e.port, i.path = t, e.auth) {
    var r = Buffer.from(e.auth.username + ":" + e.auth.password, "utf8").toString("base64");
    i.headers["Proxy-Authorization"] = "Basic " + r;
  }
  i.beforeRedirect = function(o) {
    o.headers.host = o.host, Tc(o, e, o.href);
  };
}
var Nf = function(e) {
  return new Promise(function(r, s) {
    var o;
    function l() {
      e.cancelToken && e.cancelToken.unsubscribe(o), e.signal && e.signal.removeEventListener("abort", o);
    }
    var u = function(ge) {
      l(), r(ge);
    }, v = !1, f = function(ge) {
      l(), v = !0, s(ge);
    }, c = e.data, h = e.headers, b = {};
    if (Object.keys(h).forEach(function(ge) {
      b[ge.toLowerCase()] = ge;
    }), "user-agent" in b ? h[b["user-agent"]] || delete h[b["user-agent"]] : h["User-Agent"] = "axios/" + kf, W.isFormData(c) && W.isFunction(c.getHeaders))
      Object.assign(h, c.getHeaders());
    else if (c && !W.isStream(c)) {
      if (!Buffer.isBuffer(c))
        if (W.isArrayBuffer(c))
          c = Buffer.from(new Uint8Array(c));
        else if (W.isString(c))
          c = Buffer.from(c, "utf-8");
        else
          return f(new le("Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream", le.ERR_BAD_REQUEST, e));
      if (e.maxBodyLength > -1 && c.length > e.maxBodyLength)
        return f(new le("Request body larger than maxBodyLength limit", le.ERR_BAD_REQUEST, e));
      b["content-length"] || (h["Content-Length"] = c.length);
    }
    var x = void 0;
    if (e.auth) {
      var S = e.auth.username || "", D = e.auth.password || "";
      x = S + ":" + D;
    }
    var L = Mp(e.baseURL, e.url), R = Ea.default.parse(L), B = R.protocol || Ec[0];
    if (Ec.indexOf(B) === -1)
      return f(new le("Unsupported protocol " + B, le.ERR_BAD_REQUEST, e));
    if (!x && R.auth) {
      var Q = R.auth.split(":"), ee = Q[0] || "", re = Q[1] || "";
      x = ee + ":" + re;
    }
    x && b.authorization && delete h[b.authorization];
    var de = yc.test(B), ne = de ? e.httpsAgent : e.httpAgent;
    try {
      Sr(R.path, e.params, e.paramsSerializer).replace(/^\?/, "");
    } catch (Be) {
      var F = new Error(Be.message);
      F.config = e, F.url = e.url, F.exists = !0, f(F);
    }
    var N = {
      path: Sr(R.path, e.params, e.paramsSerializer).replace(/^\?/, ""),
      method: e.method.toUpperCase(),
      headers: h,
      agent: ne,
      agents: { http: e.httpAgent, https: e.httpsAgent },
      auth: x
    };
    e.socketPath ? N.socketPath = e.socketPath : (N.hostname = R.hostname, N.port = R.port);
    var G = e.proxy;
    if (!G && G !== !1) {
      var V = B.slice(0, -1) + "_proxy", ae = process.env[V] || process.env[V.toUpperCase()];
      if (ae) {
        var ie = Ea.default.parse(ae), H = process.env.no_proxy || process.env.NO_PROXY, O = !0;
        if (H) {
          var $ = H.split(",").map(function(ge) {
            return ge.trim();
          });
          O = !$.some(function(ge) {
            return ge ? ge === "*" || ge[0] === "." && R.hostname.substr(R.hostname.length - ge.length) === ge ? !0 : R.hostname === ge : !1;
          });
        }
        if (O && (G = {
          host: ie.hostname,
          port: ie.port,
          protocol: ie.protocol
        }, ie.auth)) {
          var j = ie.auth.split(":");
          G.auth = {
            username: j[0],
            password: j[1]
          };
        }
      }
    }
    G && (N.headers.host = R.hostname + (R.port ? ":" + R.port : ""), Tc(N, G, B + "//" + R.hostname + (R.port ? ":" + R.port : "") + N.path));
    var J, ce = de && (G ? yc.test(G.protocol) : !0);
    e.transport ? J = e.transport : e.maxRedirects === 0 ? J = ce ? ti.default : bt.default : (e.maxRedirects && (N.maxRedirects = e.maxRedirects), e.beforeRedirect && (N.beforeRedirect = e.beforeRedirect), J = ce ? Of : Df), e.maxBodyLength > -1 && (N.maxBodyLength = e.maxBodyLength), e.insecureHTTPParser && (N.insecureHTTPParser = e.insecureHTTPParser);
    var he = J.request(N, function(ge) {
      if (!he.aborted) {
        var Ye = ge, Ve = ge.req || he;
        if (ge.statusCode !== 204 && Ve.method !== "HEAD" && e.decompress !== !1)
          switch (ge.headers["content-encoding"]) {
            case "gzip":
            case "compress":
            case "deflate":
              Ye = Ye.pipe(Ut.default.createUnzip()), delete ge.headers["content-encoding"];
              break;
          }
        var aa = {
          status: ge.statusCode,
          statusText: ge.statusMessage,
          headers: ge.headers,
          config: e,
          request: Ve
        };
        if (e.responseType === "stream")
          aa.data = Ye, jp(u, f, aa);
        else {
          var Pe = [], nt = 0;
          Ye.on("data", function(wa) {
            Pe.push(wa), nt += wa.length, e.maxContentLength > -1 && nt > e.maxContentLength && (v = !0, Ye.destroy(), f(new le("maxContentLength size of " + e.maxContentLength + " exceeded", le.ERR_BAD_RESPONSE, e, Ve)));
          }), Ye.on("aborted", function() {
            v || (Ye.destroy(), f(new le("maxContentLength size of " + e.maxContentLength + " exceeded", le.ERR_BAD_RESPONSE, e, Ve)));
          }), Ye.on("error", function(wa) {
            he.aborted || f(le.from(wa, null, e, Ve));
          }), Ye.on("end", function() {
            try {
              var wa = Pe.length === 1 ? Pe[0] : Buffer.concat(Pe);
              e.responseType !== "arraybuffer" && (wa = wa.toString(e.responseEncoding), (!e.responseEncoding || e.responseEncoding === "utf8") && (wa = W.stripBOM(wa))), aa.data = wa;
            } catch (y) {
              f(le.from(y, null, e, aa.request, aa));
            }
            jp(u, f, aa);
          });
        }
      }
    });
    if (he.on("error", function(ge) {
      f(le.from(ge, null, e, he));
    }), he.on("socket", function(ge) {
      ge.setKeepAlive(!0, 1e3 * 60);
    }), e.timeout) {
      var Fe = parseInt(e.timeout, 10);
      if (isNaN(Fe)) {
        f(new le("error trying to parse `config.timeout` to int", le.ERR_BAD_OPTION_VALUE, e, he));
        return;
      }
      he.setTimeout(Fe, function() {
        he.abort();
        var ge = e.transitional || Vp;
        f(new le("timeout of " + Fe + "ms exceeded", ge.clarifyTimeoutError ? le.ETIMEDOUT : le.ECONNABORTED, e, he));
      });
    }
    (e.cancelToken || e.signal) && (o = function(Be) {
      he.aborted || (he.abort(), f(!Be || Be && Be.type ? new vn() : Be));
    }, e.cancelToken && e.cancelToken.subscribe(o), e.signal && (e.signal.aborted ? o() : e.signal.addEventListener("abort", o))), W.isStream(c) ? c.on("error", function(ge) {
      f(le.from(ge, e, null, he));
    }).pipe(he) : he.end(c);
  });
}, Sc = na.default.Stream, Ac = it;
function it() {
  this.source = null, this.dataSize = 0, this.maxDataSize = 1024 * 1024, this.pauseStream = !0, this._maxDataSizeExceeded = !1, this._released = !1, this._bufferedEvents = [];
}
ka.default.inherits(it, Sc), it.create = function(i, e) {
  var t = new this();
  e = e || {};
  for (var r in e)
    t[r] = e[r];
  t.source = i;
  var s = i.emit;
  return i.emit = function() {
    return t._handleEmit(arguments), s.apply(i, arguments);
  }, i.on("error", function() {
  }), t.pauseStream && i.pause(), t;
}, Object.defineProperty(it.prototype, "readable", {
  configurable: !0,
  enumerable: !0,
  get: function() {
    return this.source.readable;
  }
}), it.prototype.setEncoding = function() {
  return this.source.setEncoding.apply(this.source, arguments);
}, it.prototype.resume = function() {
  this._released || this.release(), this.source.resume();
}, it.prototype.pause = function() {
  this.source.pause();
}, it.prototype.release = function() {
  this._released = !0, this._bufferedEvents.forEach(function(i) {
    this.emit.apply(this, i);
  }.bind(this)), this._bufferedEvents = [];
}, it.prototype.pipe = function() {
  var i = Sc.prototype.pipe.apply(this, arguments);
  return this.resume(), i;
}, it.prototype._handleEmit = function(i) {
  if (this._released) {
    this.emit.apply(this, i);
    return;
  }
  i[0] === "data" && (this.dataSize += i[1].length, this._checkIfMaxDataSizeExceeded()), this._bufferedEvents.push(i);
}, it.prototype._checkIfMaxDataSizeExceeded = function() {
  if (!this._maxDataSizeExceeded && !(this.dataSize <= this.maxDataSize)) {
    this._maxDataSizeExceeded = !0;
    var i = "DelayedStream#maxDataSize of " + this.maxDataSize + " bytes exceeded.";
    this.emit("error", new Error(i));
  }
};
var Rc = na.default.Stream, Jp = qe;
function qe() {
  this.writable = !1, this.readable = !0, this.dataSize = 0, this.maxDataSize = 2 * 1024 * 1024, this.pauseStreams = !0, this._released = !1, this._streams = [], this._currentStream = null, this._insideLoop = !1, this._pendingNext = !1;
}
ka.default.inherits(qe, Rc), qe.create = function(i) {
  var e = new this();
  i = i || {};
  for (var t in i)
    e[t] = i[t];
  return e;
}, qe.isStreamLike = function(i) {
  return typeof i != "function" && typeof i != "string" && typeof i != "boolean" && typeof i != "number" && !Buffer.isBuffer(i);
}, qe.prototype.append = function(i) {
  var e = qe.isStreamLike(i);
  if (e) {
    if (!(i instanceof Ac)) {
      var t = Ac.create(i, {
        maxDataSize: 1 / 0,
        pauseStream: this.pauseStreams
      });
      i.on("data", this._checkDataSize.bind(this)), i = t;
    }
    this._handleErrors(i), this.pauseStreams && i.pause();
  }
  return this._streams.push(i), this;
}, qe.prototype.pipe = function(i, e) {
  return Rc.prototype.pipe.call(this, i, e), this.resume(), i;
}, qe.prototype._getNext = function() {
  if (this._currentStream = null, this._insideLoop) {
    this._pendingNext = !0;
    return;
  }
  this._insideLoop = !0;
  try {
    do
      this._pendingNext = !1, this._realGetNext();
    while (this._pendingNext);
  } finally {
    this._insideLoop = !1;
  }
}, qe.prototype._realGetNext = function() {
  var i = this._streams.shift();
  if (typeof i == "undefined") {
    this.end();
    return;
  }
  if (typeof i != "function") {
    this._pipeNext(i);
    return;
  }
  var e = i;
  e(function(t) {
    var r = qe.isStreamLike(t);
    r && (t.on("data", this._checkDataSize.bind(this)), this._handleErrors(t)), this._pipeNext(t);
  }.bind(this));
}, qe.prototype._pipeNext = function(i) {
  this._currentStream = i;
  var e = qe.isStreamLike(i);
  if (e) {
    i.on("end", this._getNext.bind(this)), i.pipe(this, { end: !1 });
    return;
  }
  var t = i;
  this.write(t), this._getNext();
}, qe.prototype._handleErrors = function(i) {
  var e = this;
  i.on("error", function(t) {
    e._emitError(t);
  });
}, qe.prototype.write = function(i) {
  this.emit("data", i);
}, qe.prototype.pause = function() {
  !this.pauseStreams || (this.pauseStreams && this._currentStream && typeof this._currentStream.pause == "function" && this._currentStream.pause(), this.emit("pause"));
}, qe.prototype.resume = function() {
  this._released || (this._released = !0, this.writable = !0, this._getNext()), this.pauseStreams && this._currentStream && typeof this._currentStream.resume == "function" && this._currentStream.resume(), this.emit("resume");
}, qe.prototype.end = function() {
  this._reset(), this.emit("end");
}, qe.prototype.destroy = function() {
  this._reset(), this.emit("close");
}, qe.prototype._reset = function() {
  this.writable = !1, this._streams = [], this._currentStream = null;
}, qe.prototype._checkDataSize = function() {
  if (this._updateDataSize(), !(this.dataSize <= this.maxDataSize)) {
    var i = "DelayedStream#maxDataSize of " + this.maxDataSize + " bytes exceeded.";
    this._emitError(new Error(i));
  }
}, qe.prototype._updateDataSize = function() {
  this.dataSize = 0;
  var i = this;
  this._streams.forEach(function(e) {
    !e.dataSize || (i.dataSize += e.dataSize);
  }), this._currentStream && this._currentStream.dataSize && (this.dataSize += this._currentStream.dataSize);
}, qe.prototype._emitError = function(i) {
  this._reset(), this.emit("error", i);
};
var Ff = {
  "application/1d-interleaved-parityfec": {
    source: "iana"
  },
  "application/3gpdash-qoe-report+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/3gpp-ims+xml": {
    source: "iana",
    compressible: !0
  },
  "application/3gpphal+json": {
    source: "iana",
    compressible: !0
  },
  "application/3gpphalforms+json": {
    source: "iana",
    compressible: !0
  },
  "application/a2l": {
    source: "iana"
  },
  "application/ace+cbor": {
    source: "iana"
  },
  "application/activemessage": {
    source: "iana"
  },
  "application/activity+json": {
    source: "iana",
    compressible: !0
  },
  "application/alto-costmap+json": {
    source: "iana",
    compressible: !0
  },
  "application/alto-costmapfilter+json": {
    source: "iana",
    compressible: !0
  },
  "application/alto-directory+json": {
    source: "iana",
    compressible: !0
  },
  "application/alto-endpointcost+json": {
    source: "iana",
    compressible: !0
  },
  "application/alto-endpointcostparams+json": {
    source: "iana",
    compressible: !0
  },
  "application/alto-endpointprop+json": {
    source: "iana",
    compressible: !0
  },
  "application/alto-endpointpropparams+json": {
    source: "iana",
    compressible: !0
  },
  "application/alto-error+json": {
    source: "iana",
    compressible: !0
  },
  "application/alto-networkmap+json": {
    source: "iana",
    compressible: !0
  },
  "application/alto-networkmapfilter+json": {
    source: "iana",
    compressible: !0
  },
  "application/alto-updatestreamcontrol+json": {
    source: "iana",
    compressible: !0
  },
  "application/alto-updatestreamparams+json": {
    source: "iana",
    compressible: !0
  },
  "application/aml": {
    source: "iana"
  },
  "application/andrew-inset": {
    source: "iana",
    extensions: [
      "ez"
    ]
  },
  "application/applefile": {
    source: "iana"
  },
  "application/applixware": {
    source: "apache",
    extensions: [
      "aw"
    ]
  },
  "application/at+jwt": {
    source: "iana"
  },
  "application/atf": {
    source: "iana"
  },
  "application/atfx": {
    source: "iana"
  },
  "application/atom+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "atom"
    ]
  },
  "application/atomcat+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "atomcat"
    ]
  },
  "application/atomdeleted+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "atomdeleted"
    ]
  },
  "application/atomicmail": {
    source: "iana"
  },
  "application/atomsvc+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "atomsvc"
    ]
  },
  "application/atsc-dwd+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "dwd"
    ]
  },
  "application/atsc-dynamic-event-message": {
    source: "iana"
  },
  "application/atsc-held+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "held"
    ]
  },
  "application/atsc-rdt+json": {
    source: "iana",
    compressible: !0
  },
  "application/atsc-rsat+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "rsat"
    ]
  },
  "application/atxml": {
    source: "iana"
  },
  "application/auth-policy+xml": {
    source: "iana",
    compressible: !0
  },
  "application/bacnet-xdd+zip": {
    source: "iana",
    compressible: !1
  },
  "application/batch-smtp": {
    source: "iana"
  },
  "application/bdoc": {
    compressible: !1,
    extensions: [
      "bdoc"
    ]
  },
  "application/beep+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/calendar+json": {
    source: "iana",
    compressible: !0
  },
  "application/calendar+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xcs"
    ]
  },
  "application/call-completion": {
    source: "iana"
  },
  "application/cals-1840": {
    source: "iana"
  },
  "application/captive+json": {
    source: "iana",
    compressible: !0
  },
  "application/cbor": {
    source: "iana"
  },
  "application/cbor-seq": {
    source: "iana"
  },
  "application/cccex": {
    source: "iana"
  },
  "application/ccmp+xml": {
    source: "iana",
    compressible: !0
  },
  "application/ccxml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "ccxml"
    ]
  },
  "application/cdfx+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "cdfx"
    ]
  },
  "application/cdmi-capability": {
    source: "iana",
    extensions: [
      "cdmia"
    ]
  },
  "application/cdmi-container": {
    source: "iana",
    extensions: [
      "cdmic"
    ]
  },
  "application/cdmi-domain": {
    source: "iana",
    extensions: [
      "cdmid"
    ]
  },
  "application/cdmi-object": {
    source: "iana",
    extensions: [
      "cdmio"
    ]
  },
  "application/cdmi-queue": {
    source: "iana",
    extensions: [
      "cdmiq"
    ]
  },
  "application/cdni": {
    source: "iana"
  },
  "application/cea": {
    source: "iana"
  },
  "application/cea-2018+xml": {
    source: "iana",
    compressible: !0
  },
  "application/cellml+xml": {
    source: "iana",
    compressible: !0
  },
  "application/cfw": {
    source: "iana"
  },
  "application/city+json": {
    source: "iana",
    compressible: !0
  },
  "application/clr": {
    source: "iana"
  },
  "application/clue+xml": {
    source: "iana",
    compressible: !0
  },
  "application/clue_info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/cms": {
    source: "iana"
  },
  "application/cnrp+xml": {
    source: "iana",
    compressible: !0
  },
  "application/coap-group+json": {
    source: "iana",
    compressible: !0
  },
  "application/coap-payload": {
    source: "iana"
  },
  "application/commonground": {
    source: "iana"
  },
  "application/conference-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/cose": {
    source: "iana"
  },
  "application/cose-key": {
    source: "iana"
  },
  "application/cose-key-set": {
    source: "iana"
  },
  "application/cpl+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "cpl"
    ]
  },
  "application/csrattrs": {
    source: "iana"
  },
  "application/csta+xml": {
    source: "iana",
    compressible: !0
  },
  "application/cstadata+xml": {
    source: "iana",
    compressible: !0
  },
  "application/csvm+json": {
    source: "iana",
    compressible: !0
  },
  "application/cu-seeme": {
    source: "apache",
    extensions: [
      "cu"
    ]
  },
  "application/cwt": {
    source: "iana"
  },
  "application/cybercash": {
    source: "iana"
  },
  "application/dart": {
    compressible: !0
  },
  "application/dash+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "mpd"
    ]
  },
  "application/dash-patch+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "mpp"
    ]
  },
  "application/dashdelta": {
    source: "iana"
  },
  "application/davmount+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "davmount"
    ]
  },
  "application/dca-rft": {
    source: "iana"
  },
  "application/dcd": {
    source: "iana"
  },
  "application/dec-dx": {
    source: "iana"
  },
  "application/dialog-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/dicom": {
    source: "iana"
  },
  "application/dicom+json": {
    source: "iana",
    compressible: !0
  },
  "application/dicom+xml": {
    source: "iana",
    compressible: !0
  },
  "application/dii": {
    source: "iana"
  },
  "application/dit": {
    source: "iana"
  },
  "application/dns": {
    source: "iana"
  },
  "application/dns+json": {
    source: "iana",
    compressible: !0
  },
  "application/dns-message": {
    source: "iana"
  },
  "application/docbook+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "dbk"
    ]
  },
  "application/dots+cbor": {
    source: "iana"
  },
  "application/dskpp+xml": {
    source: "iana",
    compressible: !0
  },
  "application/dssc+der": {
    source: "iana",
    extensions: [
      "dssc"
    ]
  },
  "application/dssc+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xdssc"
    ]
  },
  "application/dvcs": {
    source: "iana"
  },
  "application/ecmascript": {
    source: "iana",
    compressible: !0,
    extensions: [
      "es",
      "ecma"
    ]
  },
  "application/edi-consent": {
    source: "iana"
  },
  "application/edi-x12": {
    source: "iana",
    compressible: !1
  },
  "application/edifact": {
    source: "iana",
    compressible: !1
  },
  "application/efi": {
    source: "iana"
  },
  "application/elm+json": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/elm+xml": {
    source: "iana",
    compressible: !0
  },
  "application/emergencycalldata.cap+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/emergencycalldata.comment+xml": {
    source: "iana",
    compressible: !0
  },
  "application/emergencycalldata.control+xml": {
    source: "iana",
    compressible: !0
  },
  "application/emergencycalldata.deviceinfo+xml": {
    source: "iana",
    compressible: !0
  },
  "application/emergencycalldata.ecall.msd": {
    source: "iana"
  },
  "application/emergencycalldata.providerinfo+xml": {
    source: "iana",
    compressible: !0
  },
  "application/emergencycalldata.serviceinfo+xml": {
    source: "iana",
    compressible: !0
  },
  "application/emergencycalldata.subscriberinfo+xml": {
    source: "iana",
    compressible: !0
  },
  "application/emergencycalldata.veds+xml": {
    source: "iana",
    compressible: !0
  },
  "application/emma+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "emma"
    ]
  },
  "application/emotionml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "emotionml"
    ]
  },
  "application/encaprtp": {
    source: "iana"
  },
  "application/epp+xml": {
    source: "iana",
    compressible: !0
  },
  "application/epub+zip": {
    source: "iana",
    compressible: !1,
    extensions: [
      "epub"
    ]
  },
  "application/eshop": {
    source: "iana"
  },
  "application/exi": {
    source: "iana",
    extensions: [
      "exi"
    ]
  },
  "application/expect-ct-report+json": {
    source: "iana",
    compressible: !0
  },
  "application/express": {
    source: "iana",
    extensions: [
      "exp"
    ]
  },
  "application/fastinfoset": {
    source: "iana"
  },
  "application/fastsoap": {
    source: "iana"
  },
  "application/fdt+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "fdt"
    ]
  },
  "application/fhir+json": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/fhir+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/fido.trusted-apps+json": {
    compressible: !0
  },
  "application/fits": {
    source: "iana"
  },
  "application/flexfec": {
    source: "iana"
  },
  "application/font-sfnt": {
    source: "iana"
  },
  "application/font-tdpfr": {
    source: "iana",
    extensions: [
      "pfr"
    ]
  },
  "application/font-woff": {
    source: "iana",
    compressible: !1
  },
  "application/framework-attributes+xml": {
    source: "iana",
    compressible: !0
  },
  "application/geo+json": {
    source: "iana",
    compressible: !0,
    extensions: [
      "geojson"
    ]
  },
  "application/geo+json-seq": {
    source: "iana"
  },
  "application/geopackage+sqlite3": {
    source: "iana"
  },
  "application/geoxacml+xml": {
    source: "iana",
    compressible: !0
  },
  "application/gltf-buffer": {
    source: "iana"
  },
  "application/gml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "gml"
    ]
  },
  "application/gpx+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "gpx"
    ]
  },
  "application/gxf": {
    source: "apache",
    extensions: [
      "gxf"
    ]
  },
  "application/gzip": {
    source: "iana",
    compressible: !1,
    extensions: [
      "gz"
    ]
  },
  "application/h224": {
    source: "iana"
  },
  "application/held+xml": {
    source: "iana",
    compressible: !0
  },
  "application/hjson": {
    extensions: [
      "hjson"
    ]
  },
  "application/http": {
    source: "iana"
  },
  "application/hyperstudio": {
    source: "iana",
    extensions: [
      "stk"
    ]
  },
  "application/ibe-key-request+xml": {
    source: "iana",
    compressible: !0
  },
  "application/ibe-pkg-reply+xml": {
    source: "iana",
    compressible: !0
  },
  "application/ibe-pp-data": {
    source: "iana"
  },
  "application/iges": {
    source: "iana"
  },
  "application/im-iscomposing+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/index": {
    source: "iana"
  },
  "application/index.cmd": {
    source: "iana"
  },
  "application/index.obj": {
    source: "iana"
  },
  "application/index.response": {
    source: "iana"
  },
  "application/index.vnd": {
    source: "iana"
  },
  "application/inkml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "ink",
      "inkml"
    ]
  },
  "application/iotp": {
    source: "iana"
  },
  "application/ipfix": {
    source: "iana",
    extensions: [
      "ipfix"
    ]
  },
  "application/ipp": {
    source: "iana"
  },
  "application/isup": {
    source: "iana"
  },
  "application/its+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "its"
    ]
  },
  "application/java-archive": {
    source: "apache",
    compressible: !1,
    extensions: [
      "jar",
      "war",
      "ear"
    ]
  },
  "application/java-serialized-object": {
    source: "apache",
    compressible: !1,
    extensions: [
      "ser"
    ]
  },
  "application/java-vm": {
    source: "apache",
    compressible: !1,
    extensions: [
      "class"
    ]
  },
  "application/javascript": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0,
    extensions: [
      "js",
      "mjs"
    ]
  },
  "application/jf2feed+json": {
    source: "iana",
    compressible: !0
  },
  "application/jose": {
    source: "iana"
  },
  "application/jose+json": {
    source: "iana",
    compressible: !0
  },
  "application/jrd+json": {
    source: "iana",
    compressible: !0
  },
  "application/jscalendar+json": {
    source: "iana",
    compressible: !0
  },
  "application/json": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0,
    extensions: [
      "json",
      "map"
    ]
  },
  "application/json-patch+json": {
    source: "iana",
    compressible: !0
  },
  "application/json-seq": {
    source: "iana"
  },
  "application/json5": {
    extensions: [
      "json5"
    ]
  },
  "application/jsonml+json": {
    source: "apache",
    compressible: !0,
    extensions: [
      "jsonml"
    ]
  },
  "application/jwk+json": {
    source: "iana",
    compressible: !0
  },
  "application/jwk-set+json": {
    source: "iana",
    compressible: !0
  },
  "application/jwt": {
    source: "iana"
  },
  "application/kpml-request+xml": {
    source: "iana",
    compressible: !0
  },
  "application/kpml-response+xml": {
    source: "iana",
    compressible: !0
  },
  "application/ld+json": {
    source: "iana",
    compressible: !0,
    extensions: [
      "jsonld"
    ]
  },
  "application/lgr+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "lgr"
    ]
  },
  "application/link-format": {
    source: "iana"
  },
  "application/load-control+xml": {
    source: "iana",
    compressible: !0
  },
  "application/lost+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "lostxml"
    ]
  },
  "application/lostsync+xml": {
    source: "iana",
    compressible: !0
  },
  "application/lpf+zip": {
    source: "iana",
    compressible: !1
  },
  "application/lxf": {
    source: "iana"
  },
  "application/mac-binhex40": {
    source: "iana",
    extensions: [
      "hqx"
    ]
  },
  "application/mac-compactpro": {
    source: "apache",
    extensions: [
      "cpt"
    ]
  },
  "application/macwriteii": {
    source: "iana"
  },
  "application/mads+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "mads"
    ]
  },
  "application/manifest+json": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0,
    extensions: [
      "webmanifest"
    ]
  },
  "application/marc": {
    source: "iana",
    extensions: [
      "mrc"
    ]
  },
  "application/marcxml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "mrcx"
    ]
  },
  "application/mathematica": {
    source: "iana",
    extensions: [
      "ma",
      "nb",
      "mb"
    ]
  },
  "application/mathml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "mathml"
    ]
  },
  "application/mathml-content+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mathml-presentation+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mbms-associated-procedure-description+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mbms-deregister+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mbms-envelope+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mbms-msk+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mbms-msk-response+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mbms-protection-description+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mbms-reception-report+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mbms-register+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mbms-register-response+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mbms-schedule+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mbms-user-service-description+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mbox": {
    source: "iana",
    extensions: [
      "mbox"
    ]
  },
  "application/media-policy-dataset+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "mpf"
    ]
  },
  "application/media_control+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mediaservercontrol+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "mscml"
    ]
  },
  "application/merge-patch+json": {
    source: "iana",
    compressible: !0
  },
  "application/metalink+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "metalink"
    ]
  },
  "application/metalink4+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "meta4"
    ]
  },
  "application/mets+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "mets"
    ]
  },
  "application/mf4": {
    source: "iana"
  },
  "application/mikey": {
    source: "iana"
  },
  "application/mipc": {
    source: "iana"
  },
  "application/missing-blocks+cbor-seq": {
    source: "iana"
  },
  "application/mmt-aei+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "maei"
    ]
  },
  "application/mmt-usd+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "musd"
    ]
  },
  "application/mods+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "mods"
    ]
  },
  "application/moss-keys": {
    source: "iana"
  },
  "application/moss-signature": {
    source: "iana"
  },
  "application/mosskey-data": {
    source: "iana"
  },
  "application/mosskey-request": {
    source: "iana"
  },
  "application/mp21": {
    source: "iana",
    extensions: [
      "m21",
      "mp21"
    ]
  },
  "application/mp4": {
    source: "iana",
    extensions: [
      "mp4s",
      "m4p"
    ]
  },
  "application/mpeg4-generic": {
    source: "iana"
  },
  "application/mpeg4-iod": {
    source: "iana"
  },
  "application/mpeg4-iod-xmt": {
    source: "iana"
  },
  "application/mrb-consumer+xml": {
    source: "iana",
    compressible: !0
  },
  "application/mrb-publish+xml": {
    source: "iana",
    compressible: !0
  },
  "application/msc-ivr+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/msc-mixer+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/msword": {
    source: "iana",
    compressible: !1,
    extensions: [
      "doc",
      "dot"
    ]
  },
  "application/mud+json": {
    source: "iana",
    compressible: !0
  },
  "application/multipart-core": {
    source: "iana"
  },
  "application/mxf": {
    source: "iana",
    extensions: [
      "mxf"
    ]
  },
  "application/n-quads": {
    source: "iana",
    extensions: [
      "nq"
    ]
  },
  "application/n-triples": {
    source: "iana",
    extensions: [
      "nt"
    ]
  },
  "application/nasdata": {
    source: "iana"
  },
  "application/news-checkgroups": {
    source: "iana",
    charset: "US-ASCII"
  },
  "application/news-groupinfo": {
    source: "iana",
    charset: "US-ASCII"
  },
  "application/news-transmission": {
    source: "iana"
  },
  "application/nlsml+xml": {
    source: "iana",
    compressible: !0
  },
  "application/node": {
    source: "iana",
    extensions: [
      "cjs"
    ]
  },
  "application/nss": {
    source: "iana"
  },
  "application/oauth-authz-req+jwt": {
    source: "iana"
  },
  "application/oblivious-dns-message": {
    source: "iana"
  },
  "application/ocsp-request": {
    source: "iana"
  },
  "application/ocsp-response": {
    source: "iana"
  },
  "application/octet-stream": {
    source: "iana",
    compressible: !1,
    extensions: [
      "bin",
      "dms",
      "lrf",
      "mar",
      "so",
      "dist",
      "distz",
      "pkg",
      "bpk",
      "dump",
      "elc",
      "deploy",
      "exe",
      "dll",
      "deb",
      "dmg",
      "iso",
      "img",
      "msi",
      "msp",
      "msm",
      "buffer"
    ]
  },
  "application/oda": {
    source: "iana",
    extensions: [
      "oda"
    ]
  },
  "application/odm+xml": {
    source: "iana",
    compressible: !0
  },
  "application/odx": {
    source: "iana"
  },
  "application/oebps-package+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "opf"
    ]
  },
  "application/ogg": {
    source: "iana",
    compressible: !1,
    extensions: [
      "ogx"
    ]
  },
  "application/omdoc+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "omdoc"
    ]
  },
  "application/onenote": {
    source: "apache",
    extensions: [
      "onetoc",
      "onetoc2",
      "onetmp",
      "onepkg"
    ]
  },
  "application/opc-nodeset+xml": {
    source: "iana",
    compressible: !0
  },
  "application/oscore": {
    source: "iana"
  },
  "application/oxps": {
    source: "iana",
    extensions: [
      "oxps"
    ]
  },
  "application/p21": {
    source: "iana"
  },
  "application/p21+zip": {
    source: "iana",
    compressible: !1
  },
  "application/p2p-overlay+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "relo"
    ]
  },
  "application/parityfec": {
    source: "iana"
  },
  "application/passport": {
    source: "iana"
  },
  "application/patch-ops-error+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xer"
    ]
  },
  "application/pdf": {
    source: "iana",
    compressible: !1,
    extensions: [
      "pdf"
    ]
  },
  "application/pdx": {
    source: "iana"
  },
  "application/pem-certificate-chain": {
    source: "iana"
  },
  "application/pgp-encrypted": {
    source: "iana",
    compressible: !1,
    extensions: [
      "pgp"
    ]
  },
  "application/pgp-keys": {
    source: "iana",
    extensions: [
      "asc"
    ]
  },
  "application/pgp-signature": {
    source: "iana",
    extensions: [
      "asc",
      "sig"
    ]
  },
  "application/pics-rules": {
    source: "apache",
    extensions: [
      "prf"
    ]
  },
  "application/pidf+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/pidf-diff+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/pkcs10": {
    source: "iana",
    extensions: [
      "p10"
    ]
  },
  "application/pkcs12": {
    source: "iana"
  },
  "application/pkcs7-mime": {
    source: "iana",
    extensions: [
      "p7m",
      "p7c"
    ]
  },
  "application/pkcs7-signature": {
    source: "iana",
    extensions: [
      "p7s"
    ]
  },
  "application/pkcs8": {
    source: "iana",
    extensions: [
      "p8"
    ]
  },
  "application/pkcs8-encrypted": {
    source: "iana"
  },
  "application/pkix-attr-cert": {
    source: "iana",
    extensions: [
      "ac"
    ]
  },
  "application/pkix-cert": {
    source: "iana",
    extensions: [
      "cer"
    ]
  },
  "application/pkix-crl": {
    source: "iana",
    extensions: [
      "crl"
    ]
  },
  "application/pkix-pkipath": {
    source: "iana",
    extensions: [
      "pkipath"
    ]
  },
  "application/pkixcmp": {
    source: "iana",
    extensions: [
      "pki"
    ]
  },
  "application/pls+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "pls"
    ]
  },
  "application/poc-settings+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/postscript": {
    source: "iana",
    compressible: !0,
    extensions: [
      "ai",
      "eps",
      "ps"
    ]
  },
  "application/ppsp-tracker+json": {
    source: "iana",
    compressible: !0
  },
  "application/problem+json": {
    source: "iana",
    compressible: !0
  },
  "application/problem+xml": {
    source: "iana",
    compressible: !0
  },
  "application/provenance+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "provx"
    ]
  },
  "application/prs.alvestrand.titrax-sheet": {
    source: "iana"
  },
  "application/prs.cww": {
    source: "iana",
    extensions: [
      "cww"
    ]
  },
  "application/prs.cyn": {
    source: "iana",
    charset: "7-BIT"
  },
  "application/prs.hpub+zip": {
    source: "iana",
    compressible: !1
  },
  "application/prs.nprend": {
    source: "iana"
  },
  "application/prs.plucker": {
    source: "iana"
  },
  "application/prs.rdf-xml-crypt": {
    source: "iana"
  },
  "application/prs.xsf+xml": {
    source: "iana",
    compressible: !0
  },
  "application/pskc+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "pskcxml"
    ]
  },
  "application/pvd+json": {
    source: "iana",
    compressible: !0
  },
  "application/qsig": {
    source: "iana"
  },
  "application/raml+yaml": {
    compressible: !0,
    extensions: [
      "raml"
    ]
  },
  "application/raptorfec": {
    source: "iana"
  },
  "application/rdap+json": {
    source: "iana",
    compressible: !0
  },
  "application/rdf+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "rdf",
      "owl"
    ]
  },
  "application/reginfo+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "rif"
    ]
  },
  "application/relax-ng-compact-syntax": {
    source: "iana",
    extensions: [
      "rnc"
    ]
  },
  "application/remote-printing": {
    source: "iana"
  },
  "application/reputon+json": {
    source: "iana",
    compressible: !0
  },
  "application/resource-lists+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "rl"
    ]
  },
  "application/resource-lists-diff+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "rld"
    ]
  },
  "application/rfc+xml": {
    source: "iana",
    compressible: !0
  },
  "application/riscos": {
    source: "iana"
  },
  "application/rlmi+xml": {
    source: "iana",
    compressible: !0
  },
  "application/rls-services+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "rs"
    ]
  },
  "application/route-apd+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "rapd"
    ]
  },
  "application/route-s-tsid+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "sls"
    ]
  },
  "application/route-usd+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "rusd"
    ]
  },
  "application/rpki-ghostbusters": {
    source: "iana",
    extensions: [
      "gbr"
    ]
  },
  "application/rpki-manifest": {
    source: "iana",
    extensions: [
      "mft"
    ]
  },
  "application/rpki-publication": {
    source: "iana"
  },
  "application/rpki-roa": {
    source: "iana",
    extensions: [
      "roa"
    ]
  },
  "application/rpki-updown": {
    source: "iana"
  },
  "application/rsd+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "rsd"
    ]
  },
  "application/rss+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "rss"
    ]
  },
  "application/rtf": {
    source: "iana",
    compressible: !0,
    extensions: [
      "rtf"
    ]
  },
  "application/rtploopback": {
    source: "iana"
  },
  "application/rtx": {
    source: "iana"
  },
  "application/samlassertion+xml": {
    source: "iana",
    compressible: !0
  },
  "application/samlmetadata+xml": {
    source: "iana",
    compressible: !0
  },
  "application/sarif+json": {
    source: "iana",
    compressible: !0
  },
  "application/sarif-external-properties+json": {
    source: "iana",
    compressible: !0
  },
  "application/sbe": {
    source: "iana"
  },
  "application/sbml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "sbml"
    ]
  },
  "application/scaip+xml": {
    source: "iana",
    compressible: !0
  },
  "application/scim+json": {
    source: "iana",
    compressible: !0
  },
  "application/scvp-cv-request": {
    source: "iana",
    extensions: [
      "scq"
    ]
  },
  "application/scvp-cv-response": {
    source: "iana",
    extensions: [
      "scs"
    ]
  },
  "application/scvp-vp-request": {
    source: "iana",
    extensions: [
      "spq"
    ]
  },
  "application/scvp-vp-response": {
    source: "iana",
    extensions: [
      "spp"
    ]
  },
  "application/sdp": {
    source: "iana",
    extensions: [
      "sdp"
    ]
  },
  "application/secevent+jwt": {
    source: "iana"
  },
  "application/senml+cbor": {
    source: "iana"
  },
  "application/senml+json": {
    source: "iana",
    compressible: !0
  },
  "application/senml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "senmlx"
    ]
  },
  "application/senml-etch+cbor": {
    source: "iana"
  },
  "application/senml-etch+json": {
    source: "iana",
    compressible: !0
  },
  "application/senml-exi": {
    source: "iana"
  },
  "application/sensml+cbor": {
    source: "iana"
  },
  "application/sensml+json": {
    source: "iana",
    compressible: !0
  },
  "application/sensml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "sensmlx"
    ]
  },
  "application/sensml-exi": {
    source: "iana"
  },
  "application/sep+xml": {
    source: "iana",
    compressible: !0
  },
  "application/sep-exi": {
    source: "iana"
  },
  "application/session-info": {
    source: "iana"
  },
  "application/set-payment": {
    source: "iana"
  },
  "application/set-payment-initiation": {
    source: "iana",
    extensions: [
      "setpay"
    ]
  },
  "application/set-registration": {
    source: "iana"
  },
  "application/set-registration-initiation": {
    source: "iana",
    extensions: [
      "setreg"
    ]
  },
  "application/sgml": {
    source: "iana"
  },
  "application/sgml-open-catalog": {
    source: "iana"
  },
  "application/shf+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "shf"
    ]
  },
  "application/sieve": {
    source: "iana",
    extensions: [
      "siv",
      "sieve"
    ]
  },
  "application/simple-filter+xml": {
    source: "iana",
    compressible: !0
  },
  "application/simple-message-summary": {
    source: "iana"
  },
  "application/simplesymbolcontainer": {
    source: "iana"
  },
  "application/sipc": {
    source: "iana"
  },
  "application/slate": {
    source: "iana"
  },
  "application/smil": {
    source: "iana"
  },
  "application/smil+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "smi",
      "smil"
    ]
  },
  "application/smpte336m": {
    source: "iana"
  },
  "application/soap+fastinfoset": {
    source: "iana"
  },
  "application/soap+xml": {
    source: "iana",
    compressible: !0
  },
  "application/sparql-query": {
    source: "iana",
    extensions: [
      "rq"
    ]
  },
  "application/sparql-results+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "srx"
    ]
  },
  "application/spdx+json": {
    source: "iana",
    compressible: !0
  },
  "application/spirits-event+xml": {
    source: "iana",
    compressible: !0
  },
  "application/sql": {
    source: "iana"
  },
  "application/srgs": {
    source: "iana",
    extensions: [
      "gram"
    ]
  },
  "application/srgs+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "grxml"
    ]
  },
  "application/sru+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "sru"
    ]
  },
  "application/ssdl+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "ssdl"
    ]
  },
  "application/ssml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "ssml"
    ]
  },
  "application/stix+json": {
    source: "iana",
    compressible: !0
  },
  "application/swid+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "swidtag"
    ]
  },
  "application/tamp-apex-update": {
    source: "iana"
  },
  "application/tamp-apex-update-confirm": {
    source: "iana"
  },
  "application/tamp-community-update": {
    source: "iana"
  },
  "application/tamp-community-update-confirm": {
    source: "iana"
  },
  "application/tamp-error": {
    source: "iana"
  },
  "application/tamp-sequence-adjust": {
    source: "iana"
  },
  "application/tamp-sequence-adjust-confirm": {
    source: "iana"
  },
  "application/tamp-status-query": {
    source: "iana"
  },
  "application/tamp-status-response": {
    source: "iana"
  },
  "application/tamp-update": {
    source: "iana"
  },
  "application/tamp-update-confirm": {
    source: "iana"
  },
  "application/tar": {
    compressible: !0
  },
  "application/taxii+json": {
    source: "iana",
    compressible: !0
  },
  "application/td+json": {
    source: "iana",
    compressible: !0
  },
  "application/tei+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "tei",
      "teicorpus"
    ]
  },
  "application/tetra_isi": {
    source: "iana"
  },
  "application/thraud+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "tfi"
    ]
  },
  "application/timestamp-query": {
    source: "iana"
  },
  "application/timestamp-reply": {
    source: "iana"
  },
  "application/timestamped-data": {
    source: "iana",
    extensions: [
      "tsd"
    ]
  },
  "application/tlsrpt+gzip": {
    source: "iana"
  },
  "application/tlsrpt+json": {
    source: "iana",
    compressible: !0
  },
  "application/tnauthlist": {
    source: "iana"
  },
  "application/token-introspection+jwt": {
    source: "iana"
  },
  "application/toml": {
    compressible: !0,
    extensions: [
      "toml"
    ]
  },
  "application/trickle-ice-sdpfrag": {
    source: "iana"
  },
  "application/trig": {
    source: "iana",
    extensions: [
      "trig"
    ]
  },
  "application/ttml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "ttml"
    ]
  },
  "application/tve-trigger": {
    source: "iana"
  },
  "application/tzif": {
    source: "iana"
  },
  "application/tzif-leap": {
    source: "iana"
  },
  "application/ubjson": {
    compressible: !1,
    extensions: [
      "ubj"
    ]
  },
  "application/ulpfec": {
    source: "iana"
  },
  "application/urc-grpsheet+xml": {
    source: "iana",
    compressible: !0
  },
  "application/urc-ressheet+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "rsheet"
    ]
  },
  "application/urc-targetdesc+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "td"
    ]
  },
  "application/urc-uisocketdesc+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vcard+json": {
    source: "iana",
    compressible: !0
  },
  "application/vcard+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vemmi": {
    source: "iana"
  },
  "application/vividence.scriptfile": {
    source: "apache"
  },
  "application/vnd.1000minds.decision-model+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "1km"
    ]
  },
  "application/vnd.3gpp-prose+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp-prose-pc3ch+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp-v2x-local-service-information": {
    source: "iana"
  },
  "application/vnd.3gpp.5gnas": {
    source: "iana"
  },
  "application/vnd.3gpp.access-transfer-events+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.bsf+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.gmop+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.gtpc": {
    source: "iana"
  },
  "application/vnd.3gpp.interworking-data": {
    source: "iana"
  },
  "application/vnd.3gpp.lpp": {
    source: "iana"
  },
  "application/vnd.3gpp.mc-signalling-ear": {
    source: "iana"
  },
  "application/vnd.3gpp.mcdata-affiliation-command+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcdata-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcdata-payload": {
    source: "iana"
  },
  "application/vnd.3gpp.mcdata-service-config+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcdata-signalling": {
    source: "iana"
  },
  "application/vnd.3gpp.mcdata-ue-config+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcdata-user-profile+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcptt-affiliation-command+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcptt-floor-request+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcptt-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcptt-location-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcptt-mbms-usage-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcptt-service-config+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcptt-signed+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcptt-ue-config+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcptt-ue-init-config+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcptt-user-profile+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcvideo-affiliation-command+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcvideo-affiliation-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcvideo-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcvideo-location-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcvideo-mbms-usage-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcvideo-service-config+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcvideo-transmission-request+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcvideo-ue-config+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mcvideo-user-profile+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.mid-call+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.ngap": {
    source: "iana"
  },
  "application/vnd.3gpp.pfcp": {
    source: "iana"
  },
  "application/vnd.3gpp.pic-bw-large": {
    source: "iana",
    extensions: [
      "plb"
    ]
  },
  "application/vnd.3gpp.pic-bw-small": {
    source: "iana",
    extensions: [
      "psb"
    ]
  },
  "application/vnd.3gpp.pic-bw-var": {
    source: "iana",
    extensions: [
      "pvb"
    ]
  },
  "application/vnd.3gpp.s1ap": {
    source: "iana"
  },
  "application/vnd.3gpp.sms": {
    source: "iana"
  },
  "application/vnd.3gpp.sms+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.srvcc-ext+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.srvcc-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.state-and-event-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp.ussd+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp2.bcmcsinfo+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.3gpp2.sms": {
    source: "iana"
  },
  "application/vnd.3gpp2.tcap": {
    source: "iana",
    extensions: [
      "tcap"
    ]
  },
  "application/vnd.3lightssoftware.imagescal": {
    source: "iana"
  },
  "application/vnd.3m.post-it-notes": {
    source: "iana",
    extensions: [
      "pwn"
    ]
  },
  "application/vnd.accpac.simply.aso": {
    source: "iana",
    extensions: [
      "aso"
    ]
  },
  "application/vnd.accpac.simply.imp": {
    source: "iana",
    extensions: [
      "imp"
    ]
  },
  "application/vnd.acucobol": {
    source: "iana",
    extensions: [
      "acu"
    ]
  },
  "application/vnd.acucorp": {
    source: "iana",
    extensions: [
      "atc",
      "acutc"
    ]
  },
  "application/vnd.adobe.air-application-installer-package+zip": {
    source: "apache",
    compressible: !1,
    extensions: [
      "air"
    ]
  },
  "application/vnd.adobe.flash.movie": {
    source: "iana"
  },
  "application/vnd.adobe.formscentral.fcdt": {
    source: "iana",
    extensions: [
      "fcdt"
    ]
  },
  "application/vnd.adobe.fxp": {
    source: "iana",
    extensions: [
      "fxp",
      "fxpl"
    ]
  },
  "application/vnd.adobe.partial-upload": {
    source: "iana"
  },
  "application/vnd.adobe.xdp+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xdp"
    ]
  },
  "application/vnd.adobe.xfdf": {
    source: "iana",
    extensions: [
      "xfdf"
    ]
  },
  "application/vnd.aether.imp": {
    source: "iana"
  },
  "application/vnd.afpc.afplinedata": {
    source: "iana"
  },
  "application/vnd.afpc.afplinedata-pagedef": {
    source: "iana"
  },
  "application/vnd.afpc.cmoca-cmresource": {
    source: "iana"
  },
  "application/vnd.afpc.foca-charset": {
    source: "iana"
  },
  "application/vnd.afpc.foca-codedfont": {
    source: "iana"
  },
  "application/vnd.afpc.foca-codepage": {
    source: "iana"
  },
  "application/vnd.afpc.modca": {
    source: "iana"
  },
  "application/vnd.afpc.modca-cmtable": {
    source: "iana"
  },
  "application/vnd.afpc.modca-formdef": {
    source: "iana"
  },
  "application/vnd.afpc.modca-mediummap": {
    source: "iana"
  },
  "application/vnd.afpc.modca-objectcontainer": {
    source: "iana"
  },
  "application/vnd.afpc.modca-overlay": {
    source: "iana"
  },
  "application/vnd.afpc.modca-pagesegment": {
    source: "iana"
  },
  "application/vnd.age": {
    source: "iana",
    extensions: [
      "age"
    ]
  },
  "application/vnd.ah-barcode": {
    source: "iana"
  },
  "application/vnd.ahead.space": {
    source: "iana",
    extensions: [
      "ahead"
    ]
  },
  "application/vnd.airzip.filesecure.azf": {
    source: "iana",
    extensions: [
      "azf"
    ]
  },
  "application/vnd.airzip.filesecure.azs": {
    source: "iana",
    extensions: [
      "azs"
    ]
  },
  "application/vnd.amadeus+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.amazon.ebook": {
    source: "apache",
    extensions: [
      "azw"
    ]
  },
  "application/vnd.amazon.mobi8-ebook": {
    source: "iana"
  },
  "application/vnd.americandynamics.acc": {
    source: "iana",
    extensions: [
      "acc"
    ]
  },
  "application/vnd.amiga.ami": {
    source: "iana",
    extensions: [
      "ami"
    ]
  },
  "application/vnd.amundsen.maze+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.android.ota": {
    source: "iana"
  },
  "application/vnd.android.package-archive": {
    source: "apache",
    compressible: !1,
    extensions: [
      "apk"
    ]
  },
  "application/vnd.anki": {
    source: "iana"
  },
  "application/vnd.anser-web-certificate-issue-initiation": {
    source: "iana",
    extensions: [
      "cii"
    ]
  },
  "application/vnd.anser-web-funds-transfer-initiation": {
    source: "apache",
    extensions: [
      "fti"
    ]
  },
  "application/vnd.antix.game-component": {
    source: "iana",
    extensions: [
      "atx"
    ]
  },
  "application/vnd.apache.arrow.file": {
    source: "iana"
  },
  "application/vnd.apache.arrow.stream": {
    source: "iana"
  },
  "application/vnd.apache.thrift.binary": {
    source: "iana"
  },
  "application/vnd.apache.thrift.compact": {
    source: "iana"
  },
  "application/vnd.apache.thrift.json": {
    source: "iana"
  },
  "application/vnd.api+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.aplextor.warrp+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.apothekende.reservation+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.apple.installer+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "mpkg"
    ]
  },
  "application/vnd.apple.keynote": {
    source: "iana",
    extensions: [
      "key"
    ]
  },
  "application/vnd.apple.mpegurl": {
    source: "iana",
    extensions: [
      "m3u8"
    ]
  },
  "application/vnd.apple.numbers": {
    source: "iana",
    extensions: [
      "numbers"
    ]
  },
  "application/vnd.apple.pages": {
    source: "iana",
    extensions: [
      "pages"
    ]
  },
  "application/vnd.apple.pkpass": {
    compressible: !1,
    extensions: [
      "pkpass"
    ]
  },
  "application/vnd.arastra.swi": {
    source: "iana"
  },
  "application/vnd.aristanetworks.swi": {
    source: "iana",
    extensions: [
      "swi"
    ]
  },
  "application/vnd.artisan+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.artsquare": {
    source: "iana"
  },
  "application/vnd.astraea-software.iota": {
    source: "iana",
    extensions: [
      "iota"
    ]
  },
  "application/vnd.audiograph": {
    source: "iana",
    extensions: [
      "aep"
    ]
  },
  "application/vnd.autopackage": {
    source: "iana"
  },
  "application/vnd.avalon+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.avistar+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.balsamiq.bmml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "bmml"
    ]
  },
  "application/vnd.balsamiq.bmpr": {
    source: "iana"
  },
  "application/vnd.banana-accounting": {
    source: "iana"
  },
  "application/vnd.bbf.usp.error": {
    source: "iana"
  },
  "application/vnd.bbf.usp.msg": {
    source: "iana"
  },
  "application/vnd.bbf.usp.msg+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.bekitzur-stech+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.bint.med-content": {
    source: "iana"
  },
  "application/vnd.biopax.rdf+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.blink-idb-value-wrapper": {
    source: "iana"
  },
  "application/vnd.blueice.multipass": {
    source: "iana",
    extensions: [
      "mpm"
    ]
  },
  "application/vnd.bluetooth.ep.oob": {
    source: "iana"
  },
  "application/vnd.bluetooth.le.oob": {
    source: "iana"
  },
  "application/vnd.bmi": {
    source: "iana",
    extensions: [
      "bmi"
    ]
  },
  "application/vnd.bpf": {
    source: "iana"
  },
  "application/vnd.bpf3": {
    source: "iana"
  },
  "application/vnd.businessobjects": {
    source: "iana",
    extensions: [
      "rep"
    ]
  },
  "application/vnd.byu.uapi+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.cab-jscript": {
    source: "iana"
  },
  "application/vnd.canon-cpdl": {
    source: "iana"
  },
  "application/vnd.canon-lips": {
    source: "iana"
  },
  "application/vnd.capasystems-pg+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.cendio.thinlinc.clientconf": {
    source: "iana"
  },
  "application/vnd.century-systems.tcp_stream": {
    source: "iana"
  },
  "application/vnd.chemdraw+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "cdxml"
    ]
  },
  "application/vnd.chess-pgn": {
    source: "iana"
  },
  "application/vnd.chipnuts.karaoke-mmd": {
    source: "iana",
    extensions: [
      "mmd"
    ]
  },
  "application/vnd.ciedi": {
    source: "iana"
  },
  "application/vnd.cinderella": {
    source: "iana",
    extensions: [
      "cdy"
    ]
  },
  "application/vnd.cirpack.isdn-ext": {
    source: "iana"
  },
  "application/vnd.citationstyles.style+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "csl"
    ]
  },
  "application/vnd.claymore": {
    source: "iana",
    extensions: [
      "cla"
    ]
  },
  "application/vnd.cloanto.rp9": {
    source: "iana",
    extensions: [
      "rp9"
    ]
  },
  "application/vnd.clonk.c4group": {
    source: "iana",
    extensions: [
      "c4g",
      "c4d",
      "c4f",
      "c4p",
      "c4u"
    ]
  },
  "application/vnd.cluetrust.cartomobile-config": {
    source: "iana",
    extensions: [
      "c11amc"
    ]
  },
  "application/vnd.cluetrust.cartomobile-config-pkg": {
    source: "iana",
    extensions: [
      "c11amz"
    ]
  },
  "application/vnd.coffeescript": {
    source: "iana"
  },
  "application/vnd.collabio.xodocuments.document": {
    source: "iana"
  },
  "application/vnd.collabio.xodocuments.document-template": {
    source: "iana"
  },
  "application/vnd.collabio.xodocuments.presentation": {
    source: "iana"
  },
  "application/vnd.collabio.xodocuments.presentation-template": {
    source: "iana"
  },
  "application/vnd.collabio.xodocuments.spreadsheet": {
    source: "iana"
  },
  "application/vnd.collabio.xodocuments.spreadsheet-template": {
    source: "iana"
  },
  "application/vnd.collection+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.collection.doc+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.collection.next+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.comicbook+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.comicbook-rar": {
    source: "iana"
  },
  "application/vnd.commerce-battelle": {
    source: "iana"
  },
  "application/vnd.commonspace": {
    source: "iana",
    extensions: [
      "csp"
    ]
  },
  "application/vnd.contact.cmsg": {
    source: "iana",
    extensions: [
      "cdbcmsg"
    ]
  },
  "application/vnd.coreos.ignition+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.cosmocaller": {
    source: "iana",
    extensions: [
      "cmc"
    ]
  },
  "application/vnd.crick.clicker": {
    source: "iana",
    extensions: [
      "clkx"
    ]
  },
  "application/vnd.crick.clicker.keyboard": {
    source: "iana",
    extensions: [
      "clkk"
    ]
  },
  "application/vnd.crick.clicker.palette": {
    source: "iana",
    extensions: [
      "clkp"
    ]
  },
  "application/vnd.crick.clicker.template": {
    source: "iana",
    extensions: [
      "clkt"
    ]
  },
  "application/vnd.crick.clicker.wordbank": {
    source: "iana",
    extensions: [
      "clkw"
    ]
  },
  "application/vnd.criticaltools.wbs+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "wbs"
    ]
  },
  "application/vnd.cryptii.pipe+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.crypto-shade-file": {
    source: "iana"
  },
  "application/vnd.cryptomator.encrypted": {
    source: "iana"
  },
  "application/vnd.cryptomator.vault": {
    source: "iana"
  },
  "application/vnd.ctc-posml": {
    source: "iana",
    extensions: [
      "pml"
    ]
  },
  "application/vnd.ctct.ws+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.cups-pdf": {
    source: "iana"
  },
  "application/vnd.cups-postscript": {
    source: "iana"
  },
  "application/vnd.cups-ppd": {
    source: "iana",
    extensions: [
      "ppd"
    ]
  },
  "application/vnd.cups-raster": {
    source: "iana"
  },
  "application/vnd.cups-raw": {
    source: "iana"
  },
  "application/vnd.curl": {
    source: "iana"
  },
  "application/vnd.curl.car": {
    source: "apache",
    extensions: [
      "car"
    ]
  },
  "application/vnd.curl.pcurl": {
    source: "apache",
    extensions: [
      "pcurl"
    ]
  },
  "application/vnd.cyan.dean.root+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.cybank": {
    source: "iana"
  },
  "application/vnd.cyclonedx+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.cyclonedx+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.d2l.coursepackage1p0+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.d3m-dataset": {
    source: "iana"
  },
  "application/vnd.d3m-problem": {
    source: "iana"
  },
  "application/vnd.dart": {
    source: "iana",
    compressible: !0,
    extensions: [
      "dart"
    ]
  },
  "application/vnd.data-vision.rdz": {
    source: "iana",
    extensions: [
      "rdz"
    ]
  },
  "application/vnd.datapackage+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.dataresource+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.dbf": {
    source: "iana",
    extensions: [
      "dbf"
    ]
  },
  "application/vnd.debian.binary-package": {
    source: "iana"
  },
  "application/vnd.dece.data": {
    source: "iana",
    extensions: [
      "uvf",
      "uvvf",
      "uvd",
      "uvvd"
    ]
  },
  "application/vnd.dece.ttml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "uvt",
      "uvvt"
    ]
  },
  "application/vnd.dece.unspecified": {
    source: "iana",
    extensions: [
      "uvx",
      "uvvx"
    ]
  },
  "application/vnd.dece.zip": {
    source: "iana",
    extensions: [
      "uvz",
      "uvvz"
    ]
  },
  "application/vnd.denovo.fcselayout-link": {
    source: "iana",
    extensions: [
      "fe_launch"
    ]
  },
  "application/vnd.desmume.movie": {
    source: "iana"
  },
  "application/vnd.dir-bi.plate-dl-nosuffix": {
    source: "iana"
  },
  "application/vnd.dm.delegation+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.dna": {
    source: "iana",
    extensions: [
      "dna"
    ]
  },
  "application/vnd.document+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.dolby.mlp": {
    source: "apache",
    extensions: [
      "mlp"
    ]
  },
  "application/vnd.dolby.mobile.1": {
    source: "iana"
  },
  "application/vnd.dolby.mobile.2": {
    source: "iana"
  },
  "application/vnd.doremir.scorecloud-binary-document": {
    source: "iana"
  },
  "application/vnd.dpgraph": {
    source: "iana",
    extensions: [
      "dpg"
    ]
  },
  "application/vnd.dreamfactory": {
    source: "iana",
    extensions: [
      "dfac"
    ]
  },
  "application/vnd.drive+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ds-keypoint": {
    source: "apache",
    extensions: [
      "kpxx"
    ]
  },
  "application/vnd.dtg.local": {
    source: "iana"
  },
  "application/vnd.dtg.local.flash": {
    source: "iana"
  },
  "application/vnd.dtg.local.html": {
    source: "iana"
  },
  "application/vnd.dvb.ait": {
    source: "iana",
    extensions: [
      "ait"
    ]
  },
  "application/vnd.dvb.dvbisl+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.dvb.dvbj": {
    source: "iana"
  },
  "application/vnd.dvb.esgcontainer": {
    source: "iana"
  },
  "application/vnd.dvb.ipdcdftnotifaccess": {
    source: "iana"
  },
  "application/vnd.dvb.ipdcesgaccess": {
    source: "iana"
  },
  "application/vnd.dvb.ipdcesgaccess2": {
    source: "iana"
  },
  "application/vnd.dvb.ipdcesgpdd": {
    source: "iana"
  },
  "application/vnd.dvb.ipdcroaming": {
    source: "iana"
  },
  "application/vnd.dvb.iptv.alfec-base": {
    source: "iana"
  },
  "application/vnd.dvb.iptv.alfec-enhancement": {
    source: "iana"
  },
  "application/vnd.dvb.notif-aggregate-root+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.dvb.notif-container+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.dvb.notif-generic+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.dvb.notif-ia-msglist+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.dvb.notif-ia-registration-request+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.dvb.notif-ia-registration-response+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.dvb.notif-init+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.dvb.pfr": {
    source: "iana"
  },
  "application/vnd.dvb.service": {
    source: "iana",
    extensions: [
      "svc"
    ]
  },
  "application/vnd.dxr": {
    source: "iana"
  },
  "application/vnd.dynageo": {
    source: "iana",
    extensions: [
      "geo"
    ]
  },
  "application/vnd.dzr": {
    source: "iana"
  },
  "application/vnd.easykaraoke.cdgdownload": {
    source: "iana"
  },
  "application/vnd.ecdis-update": {
    source: "iana"
  },
  "application/vnd.ecip.rlp": {
    source: "iana"
  },
  "application/vnd.eclipse.ditto+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ecowin.chart": {
    source: "iana",
    extensions: [
      "mag"
    ]
  },
  "application/vnd.ecowin.filerequest": {
    source: "iana"
  },
  "application/vnd.ecowin.fileupdate": {
    source: "iana"
  },
  "application/vnd.ecowin.series": {
    source: "iana"
  },
  "application/vnd.ecowin.seriesrequest": {
    source: "iana"
  },
  "application/vnd.ecowin.seriesupdate": {
    source: "iana"
  },
  "application/vnd.efi.img": {
    source: "iana"
  },
  "application/vnd.efi.iso": {
    source: "iana"
  },
  "application/vnd.emclient.accessrequest+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.enliven": {
    source: "iana",
    extensions: [
      "nml"
    ]
  },
  "application/vnd.enphase.envoy": {
    source: "iana"
  },
  "application/vnd.eprints.data+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.epson.esf": {
    source: "iana",
    extensions: [
      "esf"
    ]
  },
  "application/vnd.epson.msf": {
    source: "iana",
    extensions: [
      "msf"
    ]
  },
  "application/vnd.epson.quickanime": {
    source: "iana",
    extensions: [
      "qam"
    ]
  },
  "application/vnd.epson.salt": {
    source: "iana",
    extensions: [
      "slt"
    ]
  },
  "application/vnd.epson.ssf": {
    source: "iana",
    extensions: [
      "ssf"
    ]
  },
  "application/vnd.ericsson.quickcall": {
    source: "iana"
  },
  "application/vnd.espass-espass+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.eszigno3+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "es3",
      "et3"
    ]
  },
  "application/vnd.etsi.aoc+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.asic-e+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.etsi.asic-s+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.etsi.cug+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.iptvcommand+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.iptvdiscovery+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.iptvprofile+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.iptvsad-bc+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.iptvsad-cod+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.iptvsad-npvr+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.iptvservice+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.iptvsync+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.iptvueprofile+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.mcid+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.mheg5": {
    source: "iana"
  },
  "application/vnd.etsi.overload-control-policy-dataset+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.pstn+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.sci+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.simservs+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.timestamp-token": {
    source: "iana"
  },
  "application/vnd.etsi.tsl+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.etsi.tsl.der": {
    source: "iana"
  },
  "application/vnd.eu.kasparian.car+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.eudora.data": {
    source: "iana"
  },
  "application/vnd.evolv.ecig.profile": {
    source: "iana"
  },
  "application/vnd.evolv.ecig.settings": {
    source: "iana"
  },
  "application/vnd.evolv.ecig.theme": {
    source: "iana"
  },
  "application/vnd.exstream-empower+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.exstream-package": {
    source: "iana"
  },
  "application/vnd.ezpix-album": {
    source: "iana",
    extensions: [
      "ez2"
    ]
  },
  "application/vnd.ezpix-package": {
    source: "iana",
    extensions: [
      "ez3"
    ]
  },
  "application/vnd.f-secure.mobile": {
    source: "iana"
  },
  "application/vnd.familysearch.gedcom+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.fastcopy-disk-image": {
    source: "iana"
  },
  "application/vnd.fdf": {
    source: "iana",
    extensions: [
      "fdf"
    ]
  },
  "application/vnd.fdsn.mseed": {
    source: "iana",
    extensions: [
      "mseed"
    ]
  },
  "application/vnd.fdsn.seed": {
    source: "iana",
    extensions: [
      "seed",
      "dataless"
    ]
  },
  "application/vnd.ffsns": {
    source: "iana"
  },
  "application/vnd.ficlab.flb+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.filmit.zfc": {
    source: "iana"
  },
  "application/vnd.fints": {
    source: "iana"
  },
  "application/vnd.firemonkeys.cloudcell": {
    source: "iana"
  },
  "application/vnd.flographit": {
    source: "iana",
    extensions: [
      "gph"
    ]
  },
  "application/vnd.fluxtime.clip": {
    source: "iana",
    extensions: [
      "ftc"
    ]
  },
  "application/vnd.font-fontforge-sfd": {
    source: "iana"
  },
  "application/vnd.framemaker": {
    source: "iana",
    extensions: [
      "fm",
      "frame",
      "maker",
      "book"
    ]
  },
  "application/vnd.frogans.fnc": {
    source: "iana",
    extensions: [
      "fnc"
    ]
  },
  "application/vnd.frogans.ltf": {
    source: "iana",
    extensions: [
      "ltf"
    ]
  },
  "application/vnd.fsc.weblaunch": {
    source: "iana",
    extensions: [
      "fsc"
    ]
  },
  "application/vnd.fujifilm.fb.docuworks": {
    source: "iana"
  },
  "application/vnd.fujifilm.fb.docuworks.binder": {
    source: "iana"
  },
  "application/vnd.fujifilm.fb.docuworks.container": {
    source: "iana"
  },
  "application/vnd.fujifilm.fb.jfi+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.fujitsu.oasys": {
    source: "iana",
    extensions: [
      "oas"
    ]
  },
  "application/vnd.fujitsu.oasys2": {
    source: "iana",
    extensions: [
      "oa2"
    ]
  },
  "application/vnd.fujitsu.oasys3": {
    source: "iana",
    extensions: [
      "oa3"
    ]
  },
  "application/vnd.fujitsu.oasysgp": {
    source: "iana",
    extensions: [
      "fg5"
    ]
  },
  "application/vnd.fujitsu.oasysprs": {
    source: "iana",
    extensions: [
      "bh2"
    ]
  },
  "application/vnd.fujixerox.art-ex": {
    source: "iana"
  },
  "application/vnd.fujixerox.art4": {
    source: "iana"
  },
  "application/vnd.fujixerox.ddd": {
    source: "iana",
    extensions: [
      "ddd"
    ]
  },
  "application/vnd.fujixerox.docuworks": {
    source: "iana",
    extensions: [
      "xdw"
    ]
  },
  "application/vnd.fujixerox.docuworks.binder": {
    source: "iana",
    extensions: [
      "xbd"
    ]
  },
  "application/vnd.fujixerox.docuworks.container": {
    source: "iana"
  },
  "application/vnd.fujixerox.hbpl": {
    source: "iana"
  },
  "application/vnd.fut-misnet": {
    source: "iana"
  },
  "application/vnd.futoin+cbor": {
    source: "iana"
  },
  "application/vnd.futoin+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.fuzzysheet": {
    source: "iana",
    extensions: [
      "fzs"
    ]
  },
  "application/vnd.genomatix.tuxedo": {
    source: "iana",
    extensions: [
      "txd"
    ]
  },
  "application/vnd.gentics.grd+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.geo+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.geocube+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.geogebra.file": {
    source: "iana",
    extensions: [
      "ggb"
    ]
  },
  "application/vnd.geogebra.slides": {
    source: "iana"
  },
  "application/vnd.geogebra.tool": {
    source: "iana",
    extensions: [
      "ggt"
    ]
  },
  "application/vnd.geometry-explorer": {
    source: "iana",
    extensions: [
      "gex",
      "gre"
    ]
  },
  "application/vnd.geonext": {
    source: "iana",
    extensions: [
      "gxt"
    ]
  },
  "application/vnd.geoplan": {
    source: "iana",
    extensions: [
      "g2w"
    ]
  },
  "application/vnd.geospace": {
    source: "iana",
    extensions: [
      "g3w"
    ]
  },
  "application/vnd.gerber": {
    source: "iana"
  },
  "application/vnd.globalplatform.card-content-mgt": {
    source: "iana"
  },
  "application/vnd.globalplatform.card-content-mgt-response": {
    source: "iana"
  },
  "application/vnd.gmx": {
    source: "iana",
    extensions: [
      "gmx"
    ]
  },
  "application/vnd.google-apps.document": {
    compressible: !1,
    extensions: [
      "gdoc"
    ]
  },
  "application/vnd.google-apps.presentation": {
    compressible: !1,
    extensions: [
      "gslides"
    ]
  },
  "application/vnd.google-apps.spreadsheet": {
    compressible: !1,
    extensions: [
      "gsheet"
    ]
  },
  "application/vnd.google-earth.kml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "kml"
    ]
  },
  "application/vnd.google-earth.kmz": {
    source: "iana",
    compressible: !1,
    extensions: [
      "kmz"
    ]
  },
  "application/vnd.gov.sk.e-form+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.gov.sk.e-form+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.gov.sk.xmldatacontainer+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.grafeq": {
    source: "iana",
    extensions: [
      "gqf",
      "gqs"
    ]
  },
  "application/vnd.gridmp": {
    source: "iana"
  },
  "application/vnd.groove-account": {
    source: "iana",
    extensions: [
      "gac"
    ]
  },
  "application/vnd.groove-help": {
    source: "iana",
    extensions: [
      "ghf"
    ]
  },
  "application/vnd.groove-identity-message": {
    source: "iana",
    extensions: [
      "gim"
    ]
  },
  "application/vnd.groove-injector": {
    source: "iana",
    extensions: [
      "grv"
    ]
  },
  "application/vnd.groove-tool-message": {
    source: "iana",
    extensions: [
      "gtm"
    ]
  },
  "application/vnd.groove-tool-template": {
    source: "iana",
    extensions: [
      "tpl"
    ]
  },
  "application/vnd.groove-vcard": {
    source: "iana",
    extensions: [
      "vcg"
    ]
  },
  "application/vnd.hal+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.hal+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "hal"
    ]
  },
  "application/vnd.handheld-entertainment+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "zmm"
    ]
  },
  "application/vnd.hbci": {
    source: "iana",
    extensions: [
      "hbci"
    ]
  },
  "application/vnd.hc+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.hcl-bireports": {
    source: "iana"
  },
  "application/vnd.hdt": {
    source: "iana"
  },
  "application/vnd.heroku+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.hhe.lesson-player": {
    source: "iana",
    extensions: [
      "les"
    ]
  },
  "application/vnd.hl7cda+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/vnd.hl7v2+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/vnd.hp-hpgl": {
    source: "iana",
    extensions: [
      "hpgl"
    ]
  },
  "application/vnd.hp-hpid": {
    source: "iana",
    extensions: [
      "hpid"
    ]
  },
  "application/vnd.hp-hps": {
    source: "iana",
    extensions: [
      "hps"
    ]
  },
  "application/vnd.hp-jlyt": {
    source: "iana",
    extensions: [
      "jlt"
    ]
  },
  "application/vnd.hp-pcl": {
    source: "iana",
    extensions: [
      "pcl"
    ]
  },
  "application/vnd.hp-pclxl": {
    source: "iana",
    extensions: [
      "pclxl"
    ]
  },
  "application/vnd.httphone": {
    source: "iana"
  },
  "application/vnd.hydrostatix.sof-data": {
    source: "iana",
    extensions: [
      "sfd-hdstx"
    ]
  },
  "application/vnd.hyper+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.hyper-item+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.hyperdrive+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.hzn-3d-crossword": {
    source: "iana"
  },
  "application/vnd.ibm.afplinedata": {
    source: "iana"
  },
  "application/vnd.ibm.electronic-media": {
    source: "iana"
  },
  "application/vnd.ibm.minipay": {
    source: "iana",
    extensions: [
      "mpy"
    ]
  },
  "application/vnd.ibm.modcap": {
    source: "iana",
    extensions: [
      "afp",
      "listafp",
      "list3820"
    ]
  },
  "application/vnd.ibm.rights-management": {
    source: "iana",
    extensions: [
      "irm"
    ]
  },
  "application/vnd.ibm.secure-container": {
    source: "iana",
    extensions: [
      "sc"
    ]
  },
  "application/vnd.iccprofile": {
    source: "iana",
    extensions: [
      "icc",
      "icm"
    ]
  },
  "application/vnd.ieee.1905": {
    source: "iana"
  },
  "application/vnd.igloader": {
    source: "iana",
    extensions: [
      "igl"
    ]
  },
  "application/vnd.imagemeter.folder+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.imagemeter.image+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.immervision-ivp": {
    source: "iana",
    extensions: [
      "ivp"
    ]
  },
  "application/vnd.immervision-ivu": {
    source: "iana",
    extensions: [
      "ivu"
    ]
  },
  "application/vnd.ims.imsccv1p1": {
    source: "iana"
  },
  "application/vnd.ims.imsccv1p2": {
    source: "iana"
  },
  "application/vnd.ims.imsccv1p3": {
    source: "iana"
  },
  "application/vnd.ims.lis.v2.result+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ims.lti.v2.toolconsumerprofile+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ims.lti.v2.toolproxy+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ims.lti.v2.toolproxy.id+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ims.lti.v2.toolsettings+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ims.lti.v2.toolsettings.simple+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.informedcontrol.rms+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.informix-visionary": {
    source: "iana"
  },
  "application/vnd.infotech.project": {
    source: "iana"
  },
  "application/vnd.infotech.project+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.innopath.wamp.notification": {
    source: "iana"
  },
  "application/vnd.insors.igm": {
    source: "iana",
    extensions: [
      "igm"
    ]
  },
  "application/vnd.intercon.formnet": {
    source: "iana",
    extensions: [
      "xpw",
      "xpx"
    ]
  },
  "application/vnd.intergeo": {
    source: "iana",
    extensions: [
      "i2g"
    ]
  },
  "application/vnd.intertrust.digibox": {
    source: "iana"
  },
  "application/vnd.intertrust.nncp": {
    source: "iana"
  },
  "application/vnd.intu.qbo": {
    source: "iana",
    extensions: [
      "qbo"
    ]
  },
  "application/vnd.intu.qfx": {
    source: "iana",
    extensions: [
      "qfx"
    ]
  },
  "application/vnd.iptc.g2.catalogitem+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.iptc.g2.conceptitem+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.iptc.g2.knowledgeitem+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.iptc.g2.newsitem+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.iptc.g2.newsmessage+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.iptc.g2.packageitem+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.iptc.g2.planningitem+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ipunplugged.rcprofile": {
    source: "iana",
    extensions: [
      "rcprofile"
    ]
  },
  "application/vnd.irepository.package+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "irp"
    ]
  },
  "application/vnd.is-xpr": {
    source: "iana",
    extensions: [
      "xpr"
    ]
  },
  "application/vnd.isac.fcs": {
    source: "iana",
    extensions: [
      "fcs"
    ]
  },
  "application/vnd.iso11783-10+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.jam": {
    source: "iana",
    extensions: [
      "jam"
    ]
  },
  "application/vnd.japannet-directory-service": {
    source: "iana"
  },
  "application/vnd.japannet-jpnstore-wakeup": {
    source: "iana"
  },
  "application/vnd.japannet-payment-wakeup": {
    source: "iana"
  },
  "application/vnd.japannet-registration": {
    source: "iana"
  },
  "application/vnd.japannet-registration-wakeup": {
    source: "iana"
  },
  "application/vnd.japannet-setstore-wakeup": {
    source: "iana"
  },
  "application/vnd.japannet-verification": {
    source: "iana"
  },
  "application/vnd.japannet-verification-wakeup": {
    source: "iana"
  },
  "application/vnd.jcp.javame.midlet-rms": {
    source: "iana",
    extensions: [
      "rms"
    ]
  },
  "application/vnd.jisp": {
    source: "iana",
    extensions: [
      "jisp"
    ]
  },
  "application/vnd.joost.joda-archive": {
    source: "iana",
    extensions: [
      "joda"
    ]
  },
  "application/vnd.jsk.isdn-ngn": {
    source: "iana"
  },
  "application/vnd.kahootz": {
    source: "iana",
    extensions: [
      "ktz",
      "ktr"
    ]
  },
  "application/vnd.kde.karbon": {
    source: "iana",
    extensions: [
      "karbon"
    ]
  },
  "application/vnd.kde.kchart": {
    source: "iana",
    extensions: [
      "chrt"
    ]
  },
  "application/vnd.kde.kformula": {
    source: "iana",
    extensions: [
      "kfo"
    ]
  },
  "application/vnd.kde.kivio": {
    source: "iana",
    extensions: [
      "flw"
    ]
  },
  "application/vnd.kde.kontour": {
    source: "iana",
    extensions: [
      "kon"
    ]
  },
  "application/vnd.kde.kpresenter": {
    source: "iana",
    extensions: [
      "kpr",
      "kpt"
    ]
  },
  "application/vnd.kde.kspread": {
    source: "iana",
    extensions: [
      "ksp"
    ]
  },
  "application/vnd.kde.kword": {
    source: "iana",
    extensions: [
      "kwd",
      "kwt"
    ]
  },
  "application/vnd.kenameaapp": {
    source: "iana",
    extensions: [
      "htke"
    ]
  },
  "application/vnd.kidspiration": {
    source: "iana",
    extensions: [
      "kia"
    ]
  },
  "application/vnd.kinar": {
    source: "iana",
    extensions: [
      "kne",
      "knp"
    ]
  },
  "application/vnd.koan": {
    source: "iana",
    extensions: [
      "skp",
      "skd",
      "skt",
      "skm"
    ]
  },
  "application/vnd.kodak-descriptor": {
    source: "iana",
    extensions: [
      "sse"
    ]
  },
  "application/vnd.las": {
    source: "iana"
  },
  "application/vnd.las.las+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.las.las+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "lasxml"
    ]
  },
  "application/vnd.laszip": {
    source: "iana"
  },
  "application/vnd.leap+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.liberty-request+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.llamagraphics.life-balance.desktop": {
    source: "iana",
    extensions: [
      "lbd"
    ]
  },
  "application/vnd.llamagraphics.life-balance.exchange+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "lbe"
    ]
  },
  "application/vnd.logipipe.circuit+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.loom": {
    source: "iana"
  },
  "application/vnd.lotus-1-2-3": {
    source: "iana",
    extensions: [
      "123"
    ]
  },
  "application/vnd.lotus-approach": {
    source: "iana",
    extensions: [
      "apr"
    ]
  },
  "application/vnd.lotus-freelance": {
    source: "iana",
    extensions: [
      "pre"
    ]
  },
  "application/vnd.lotus-notes": {
    source: "iana",
    extensions: [
      "nsf"
    ]
  },
  "application/vnd.lotus-organizer": {
    source: "iana",
    extensions: [
      "org"
    ]
  },
  "application/vnd.lotus-screencam": {
    source: "iana",
    extensions: [
      "scm"
    ]
  },
  "application/vnd.lotus-wordpro": {
    source: "iana",
    extensions: [
      "lwp"
    ]
  },
  "application/vnd.macports.portpkg": {
    source: "iana",
    extensions: [
      "portpkg"
    ]
  },
  "application/vnd.mapbox-vector-tile": {
    source: "iana",
    extensions: [
      "mvt"
    ]
  },
  "application/vnd.marlin.drm.actiontoken+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.marlin.drm.conftoken+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.marlin.drm.license+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.marlin.drm.mdcf": {
    source: "iana"
  },
  "application/vnd.mason+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.maxar.archive.3tz+zip": {
    source: "iana",
    compressible: !1
  },
  "application/vnd.maxmind.maxmind-db": {
    source: "iana"
  },
  "application/vnd.mcd": {
    source: "iana",
    extensions: [
      "mcd"
    ]
  },
  "application/vnd.medcalcdata": {
    source: "iana",
    extensions: [
      "mc1"
    ]
  },
  "application/vnd.mediastation.cdkey": {
    source: "iana",
    extensions: [
      "cdkey"
    ]
  },
  "application/vnd.meridian-slingshot": {
    source: "iana"
  },
  "application/vnd.mfer": {
    source: "iana",
    extensions: [
      "mwf"
    ]
  },
  "application/vnd.mfmp": {
    source: "iana",
    extensions: [
      "mfm"
    ]
  },
  "application/vnd.micro+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.micrografx.flo": {
    source: "iana",
    extensions: [
      "flo"
    ]
  },
  "application/vnd.micrografx.igx": {
    source: "iana",
    extensions: [
      "igx"
    ]
  },
  "application/vnd.microsoft.portable-executable": {
    source: "iana"
  },
  "application/vnd.microsoft.windows.thumbnail-cache": {
    source: "iana"
  },
  "application/vnd.miele+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.mif": {
    source: "iana",
    extensions: [
      "mif"
    ]
  },
  "application/vnd.minisoft-hp3000-save": {
    source: "iana"
  },
  "application/vnd.mitsubishi.misty-guard.trustweb": {
    source: "iana"
  },
  "application/vnd.mobius.daf": {
    source: "iana",
    extensions: [
      "daf"
    ]
  },
  "application/vnd.mobius.dis": {
    source: "iana",
    extensions: [
      "dis"
    ]
  },
  "application/vnd.mobius.mbk": {
    source: "iana",
    extensions: [
      "mbk"
    ]
  },
  "application/vnd.mobius.mqy": {
    source: "iana",
    extensions: [
      "mqy"
    ]
  },
  "application/vnd.mobius.msl": {
    source: "iana",
    extensions: [
      "msl"
    ]
  },
  "application/vnd.mobius.plc": {
    source: "iana",
    extensions: [
      "plc"
    ]
  },
  "application/vnd.mobius.txf": {
    source: "iana",
    extensions: [
      "txf"
    ]
  },
  "application/vnd.mophun.application": {
    source: "iana",
    extensions: [
      "mpn"
    ]
  },
  "application/vnd.mophun.certificate": {
    source: "iana",
    extensions: [
      "mpc"
    ]
  },
  "application/vnd.motorola.flexsuite": {
    source: "iana"
  },
  "application/vnd.motorola.flexsuite.adsi": {
    source: "iana"
  },
  "application/vnd.motorola.flexsuite.fis": {
    source: "iana"
  },
  "application/vnd.motorola.flexsuite.gotap": {
    source: "iana"
  },
  "application/vnd.motorola.flexsuite.kmr": {
    source: "iana"
  },
  "application/vnd.motorola.flexsuite.ttc": {
    source: "iana"
  },
  "application/vnd.motorola.flexsuite.wem": {
    source: "iana"
  },
  "application/vnd.motorola.iprm": {
    source: "iana"
  },
  "application/vnd.mozilla.xul+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xul"
    ]
  },
  "application/vnd.ms-3mfdocument": {
    source: "iana"
  },
  "application/vnd.ms-artgalry": {
    source: "iana",
    extensions: [
      "cil"
    ]
  },
  "application/vnd.ms-asf": {
    source: "iana"
  },
  "application/vnd.ms-cab-compressed": {
    source: "iana",
    extensions: [
      "cab"
    ]
  },
  "application/vnd.ms-color.iccprofile": {
    source: "apache"
  },
  "application/vnd.ms-excel": {
    source: "iana",
    compressible: !1,
    extensions: [
      "xls",
      "xlm",
      "xla",
      "xlc",
      "xlt",
      "xlw"
    ]
  },
  "application/vnd.ms-excel.addin.macroenabled.12": {
    source: "iana",
    extensions: [
      "xlam"
    ]
  },
  "application/vnd.ms-excel.sheet.binary.macroenabled.12": {
    source: "iana",
    extensions: [
      "xlsb"
    ]
  },
  "application/vnd.ms-excel.sheet.macroenabled.12": {
    source: "iana",
    extensions: [
      "xlsm"
    ]
  },
  "application/vnd.ms-excel.template.macroenabled.12": {
    source: "iana",
    extensions: [
      "xltm"
    ]
  },
  "application/vnd.ms-fontobject": {
    source: "iana",
    compressible: !0,
    extensions: [
      "eot"
    ]
  },
  "application/vnd.ms-htmlhelp": {
    source: "iana",
    extensions: [
      "chm"
    ]
  },
  "application/vnd.ms-ims": {
    source: "iana",
    extensions: [
      "ims"
    ]
  },
  "application/vnd.ms-lrm": {
    source: "iana",
    extensions: [
      "lrm"
    ]
  },
  "application/vnd.ms-office.activex+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ms-officetheme": {
    source: "iana",
    extensions: [
      "thmx"
    ]
  },
  "application/vnd.ms-opentype": {
    source: "apache",
    compressible: !0
  },
  "application/vnd.ms-outlook": {
    compressible: !1,
    extensions: [
      "msg"
    ]
  },
  "application/vnd.ms-package.obfuscated-opentype": {
    source: "apache"
  },
  "application/vnd.ms-pki.seccat": {
    source: "apache",
    extensions: [
      "cat"
    ]
  },
  "application/vnd.ms-pki.stl": {
    source: "apache",
    extensions: [
      "stl"
    ]
  },
  "application/vnd.ms-playready.initiator+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ms-powerpoint": {
    source: "iana",
    compressible: !1,
    extensions: [
      "ppt",
      "pps",
      "pot"
    ]
  },
  "application/vnd.ms-powerpoint.addin.macroenabled.12": {
    source: "iana",
    extensions: [
      "ppam"
    ]
  },
  "application/vnd.ms-powerpoint.presentation.macroenabled.12": {
    source: "iana",
    extensions: [
      "pptm"
    ]
  },
  "application/vnd.ms-powerpoint.slide.macroenabled.12": {
    source: "iana",
    extensions: [
      "sldm"
    ]
  },
  "application/vnd.ms-powerpoint.slideshow.macroenabled.12": {
    source: "iana",
    extensions: [
      "ppsm"
    ]
  },
  "application/vnd.ms-powerpoint.template.macroenabled.12": {
    source: "iana",
    extensions: [
      "potm"
    ]
  },
  "application/vnd.ms-printdevicecapabilities+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ms-printing.printticket+xml": {
    source: "apache",
    compressible: !0
  },
  "application/vnd.ms-printschematicket+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ms-project": {
    source: "iana",
    extensions: [
      "mpp",
      "mpt"
    ]
  },
  "application/vnd.ms-tnef": {
    source: "iana"
  },
  "application/vnd.ms-windows.devicepairing": {
    source: "iana"
  },
  "application/vnd.ms-windows.nwprinting.oob": {
    source: "iana"
  },
  "application/vnd.ms-windows.printerpairing": {
    source: "iana"
  },
  "application/vnd.ms-windows.wsd.oob": {
    source: "iana"
  },
  "application/vnd.ms-wmdrm.lic-chlg-req": {
    source: "iana"
  },
  "application/vnd.ms-wmdrm.lic-resp": {
    source: "iana"
  },
  "application/vnd.ms-wmdrm.meter-chlg-req": {
    source: "iana"
  },
  "application/vnd.ms-wmdrm.meter-resp": {
    source: "iana"
  },
  "application/vnd.ms-word.document.macroenabled.12": {
    source: "iana",
    extensions: [
      "docm"
    ]
  },
  "application/vnd.ms-word.template.macroenabled.12": {
    source: "iana",
    extensions: [
      "dotm"
    ]
  },
  "application/vnd.ms-works": {
    source: "iana",
    extensions: [
      "wps",
      "wks",
      "wcm",
      "wdb"
    ]
  },
  "application/vnd.ms-wpl": {
    source: "iana",
    extensions: [
      "wpl"
    ]
  },
  "application/vnd.ms-xpsdocument": {
    source: "iana",
    compressible: !1,
    extensions: [
      "xps"
    ]
  },
  "application/vnd.msa-disk-image": {
    source: "iana"
  },
  "application/vnd.mseq": {
    source: "iana",
    extensions: [
      "mseq"
    ]
  },
  "application/vnd.msign": {
    source: "iana"
  },
  "application/vnd.multiad.creator": {
    source: "iana"
  },
  "application/vnd.multiad.creator.cif": {
    source: "iana"
  },
  "application/vnd.music-niff": {
    source: "iana"
  },
  "application/vnd.musician": {
    source: "iana",
    extensions: [
      "mus"
    ]
  },
  "application/vnd.muvee.style": {
    source: "iana",
    extensions: [
      "msty"
    ]
  },
  "application/vnd.mynfc": {
    source: "iana",
    extensions: [
      "taglet"
    ]
  },
  "application/vnd.nacamar.ybrid+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.ncd.control": {
    source: "iana"
  },
  "application/vnd.ncd.reference": {
    source: "iana"
  },
  "application/vnd.nearst.inv+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.nebumind.line": {
    source: "iana"
  },
  "application/vnd.nervana": {
    source: "iana"
  },
  "application/vnd.netfpx": {
    source: "iana"
  },
  "application/vnd.neurolanguage.nlu": {
    source: "iana",
    extensions: [
      "nlu"
    ]
  },
  "application/vnd.nimn": {
    source: "iana"
  },
  "application/vnd.nintendo.nitro.rom": {
    source: "iana"
  },
  "application/vnd.nintendo.snes.rom": {
    source: "iana"
  },
  "application/vnd.nitf": {
    source: "iana",
    extensions: [
      "ntf",
      "nitf"
    ]
  },
  "application/vnd.noblenet-directory": {
    source: "iana",
    extensions: [
      "nnd"
    ]
  },
  "application/vnd.noblenet-sealer": {
    source: "iana",
    extensions: [
      "nns"
    ]
  },
  "application/vnd.noblenet-web": {
    source: "iana",
    extensions: [
      "nnw"
    ]
  },
  "application/vnd.nokia.catalogs": {
    source: "iana"
  },
  "application/vnd.nokia.conml+wbxml": {
    source: "iana"
  },
  "application/vnd.nokia.conml+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.nokia.iptv.config+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.nokia.isds-radio-presets": {
    source: "iana"
  },
  "application/vnd.nokia.landmark+wbxml": {
    source: "iana"
  },
  "application/vnd.nokia.landmark+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.nokia.landmarkcollection+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.nokia.n-gage.ac+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "ac"
    ]
  },
  "application/vnd.nokia.n-gage.data": {
    source: "iana",
    extensions: [
      "ngdat"
    ]
  },
  "application/vnd.nokia.n-gage.symbian.install": {
    source: "iana",
    extensions: [
      "n-gage"
    ]
  },
  "application/vnd.nokia.ncd": {
    source: "iana"
  },
  "application/vnd.nokia.pcd+wbxml": {
    source: "iana"
  },
  "application/vnd.nokia.pcd+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.nokia.radio-preset": {
    source: "iana",
    extensions: [
      "rpst"
    ]
  },
  "application/vnd.nokia.radio-presets": {
    source: "iana",
    extensions: [
      "rpss"
    ]
  },
  "application/vnd.novadigm.edm": {
    source: "iana",
    extensions: [
      "edm"
    ]
  },
  "application/vnd.novadigm.edx": {
    source: "iana",
    extensions: [
      "edx"
    ]
  },
  "application/vnd.novadigm.ext": {
    source: "iana",
    extensions: [
      "ext"
    ]
  },
  "application/vnd.ntt-local.content-share": {
    source: "iana"
  },
  "application/vnd.ntt-local.file-transfer": {
    source: "iana"
  },
  "application/vnd.ntt-local.ogw_remote-access": {
    source: "iana"
  },
  "application/vnd.ntt-local.sip-ta_remote": {
    source: "iana"
  },
  "application/vnd.ntt-local.sip-ta_tcp_stream": {
    source: "iana"
  },
  "application/vnd.oasis.opendocument.chart": {
    source: "iana",
    extensions: [
      "odc"
    ]
  },
  "application/vnd.oasis.opendocument.chart-template": {
    source: "iana",
    extensions: [
      "otc"
    ]
  },
  "application/vnd.oasis.opendocument.database": {
    source: "iana",
    extensions: [
      "odb"
    ]
  },
  "application/vnd.oasis.opendocument.formula": {
    source: "iana",
    extensions: [
      "odf"
    ]
  },
  "application/vnd.oasis.opendocument.formula-template": {
    source: "iana",
    extensions: [
      "odft"
    ]
  },
  "application/vnd.oasis.opendocument.graphics": {
    source: "iana",
    compressible: !1,
    extensions: [
      "odg"
    ]
  },
  "application/vnd.oasis.opendocument.graphics-template": {
    source: "iana",
    extensions: [
      "otg"
    ]
  },
  "application/vnd.oasis.opendocument.image": {
    source: "iana",
    extensions: [
      "odi"
    ]
  },
  "application/vnd.oasis.opendocument.image-template": {
    source: "iana",
    extensions: [
      "oti"
    ]
  },
  "application/vnd.oasis.opendocument.presentation": {
    source: "iana",
    compressible: !1,
    extensions: [
      "odp"
    ]
  },
  "application/vnd.oasis.opendocument.presentation-template": {
    source: "iana",
    extensions: [
      "otp"
    ]
  },
  "application/vnd.oasis.opendocument.spreadsheet": {
    source: "iana",
    compressible: !1,
    extensions: [
      "ods"
    ]
  },
  "application/vnd.oasis.opendocument.spreadsheet-template": {
    source: "iana",
    extensions: [
      "ots"
    ]
  },
  "application/vnd.oasis.opendocument.text": {
    source: "iana",
    compressible: !1,
    extensions: [
      "odt"
    ]
  },
  "application/vnd.oasis.opendocument.text-master": {
    source: "iana",
    extensions: [
      "odm"
    ]
  },
  "application/vnd.oasis.opendocument.text-template": {
    source: "iana",
    extensions: [
      "ott"
    ]
  },
  "application/vnd.oasis.opendocument.text-web": {
    source: "iana",
    extensions: [
      "oth"
    ]
  },
  "application/vnd.obn": {
    source: "iana"
  },
  "application/vnd.ocf+cbor": {
    source: "iana"
  },
  "application/vnd.oci.image.manifest.v1+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oftn.l10n+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oipf.contentaccessdownload+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oipf.contentaccessstreaming+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oipf.cspg-hexbinary": {
    source: "iana"
  },
  "application/vnd.oipf.dae.svg+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oipf.dae.xhtml+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oipf.mippvcontrolmessage+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oipf.pae.gem": {
    source: "iana"
  },
  "application/vnd.oipf.spdiscovery+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oipf.spdlist+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oipf.ueprofile+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oipf.userprofile+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.olpc-sugar": {
    source: "iana",
    extensions: [
      "xo"
    ]
  },
  "application/vnd.oma-scws-config": {
    source: "iana"
  },
  "application/vnd.oma-scws-http-request": {
    source: "iana"
  },
  "application/vnd.oma-scws-http-response": {
    source: "iana"
  },
  "application/vnd.oma.bcast.associated-procedure-parameter+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.bcast.drm-trigger+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.bcast.imd+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.bcast.ltkm": {
    source: "iana"
  },
  "application/vnd.oma.bcast.notification+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.bcast.provisioningtrigger": {
    source: "iana"
  },
  "application/vnd.oma.bcast.sgboot": {
    source: "iana"
  },
  "application/vnd.oma.bcast.sgdd+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.bcast.sgdu": {
    source: "iana"
  },
  "application/vnd.oma.bcast.simple-symbol-container": {
    source: "iana"
  },
  "application/vnd.oma.bcast.smartcard-trigger+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.bcast.sprov+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.bcast.stkm": {
    source: "iana"
  },
  "application/vnd.oma.cab-address-book+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.cab-feature-handler+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.cab-pcc+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.cab-subs-invite+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.cab-user-prefs+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.dcd": {
    source: "iana"
  },
  "application/vnd.oma.dcdc": {
    source: "iana"
  },
  "application/vnd.oma.dd2+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "dd2"
    ]
  },
  "application/vnd.oma.drm.risd+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.group-usage-list+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.lwm2m+cbor": {
    source: "iana"
  },
  "application/vnd.oma.lwm2m+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.lwm2m+tlv": {
    source: "iana"
  },
  "application/vnd.oma.pal+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.poc.detailed-progress-report+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.poc.final-report+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.poc.groups+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.poc.invocation-descriptor+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.poc.optimized-progress-report+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.push": {
    source: "iana"
  },
  "application/vnd.oma.scidm.messages+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oma.xcap-directory+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.omads-email+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/vnd.omads-file+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/vnd.omads-folder+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/vnd.omaloc-supl-init": {
    source: "iana"
  },
  "application/vnd.onepager": {
    source: "iana"
  },
  "application/vnd.onepagertamp": {
    source: "iana"
  },
  "application/vnd.onepagertamx": {
    source: "iana"
  },
  "application/vnd.onepagertat": {
    source: "iana"
  },
  "application/vnd.onepagertatp": {
    source: "iana"
  },
  "application/vnd.onepagertatx": {
    source: "iana"
  },
  "application/vnd.openblox.game+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "obgx"
    ]
  },
  "application/vnd.openblox.game-binary": {
    source: "iana"
  },
  "application/vnd.openeye.oeb": {
    source: "iana"
  },
  "application/vnd.openofficeorg.extension": {
    source: "apache",
    extensions: [
      "oxt"
    ]
  },
  "application/vnd.openstreetmap.data+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "osm"
    ]
  },
  "application/vnd.opentimestamps.ots": {
    source: "iana"
  },
  "application/vnd.openxmlformats-officedocument.custom-properties+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.customxmlproperties+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.drawing+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.extended-properties+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.comments+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presentation": {
    source: "iana",
    compressible: !1,
    extensions: [
      "pptx"
    ]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slide": {
    source: "iana",
    extensions: [
      "sldx"
    ]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slideshow": {
    source: "iana",
    extensions: [
      "ppsx"
    ]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.tags+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.template": {
    source: "iana",
    extensions: [
      "potx"
    ]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
    source: "iana",
    compressible: !1,
    extensions: [
      "xlsx"
    ]
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.template": {
    source: "iana",
    extensions: [
      "xltx"
    ]
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.theme+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.themeoverride+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.vmldrawing": {
    source: "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
    source: "iana",
    compressible: !1,
    extensions: [
      "docx"
    ]
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
    source: "iana",
    extensions: [
      "dotx"
    ]
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-package.core-properties+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.openxmlformats-package.relationships+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oracle.resource+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.orange.indata": {
    source: "iana"
  },
  "application/vnd.osa.netdeploy": {
    source: "iana"
  },
  "application/vnd.osgeo.mapguide.package": {
    source: "iana",
    extensions: [
      "mgp"
    ]
  },
  "application/vnd.osgi.bundle": {
    source: "iana"
  },
  "application/vnd.osgi.dp": {
    source: "iana",
    extensions: [
      "dp"
    ]
  },
  "application/vnd.osgi.subsystem": {
    source: "iana",
    extensions: [
      "esa"
    ]
  },
  "application/vnd.otps.ct-kip+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.oxli.countgraph": {
    source: "iana"
  },
  "application/vnd.pagerduty+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.palm": {
    source: "iana",
    extensions: [
      "pdb",
      "pqa",
      "oprc"
    ]
  },
  "application/vnd.panoply": {
    source: "iana"
  },
  "application/vnd.paos.xml": {
    source: "iana"
  },
  "application/vnd.patentdive": {
    source: "iana"
  },
  "application/vnd.patientecommsdoc": {
    source: "iana"
  },
  "application/vnd.pawaafile": {
    source: "iana",
    extensions: [
      "paw"
    ]
  },
  "application/vnd.pcos": {
    source: "iana"
  },
  "application/vnd.pg.format": {
    source: "iana",
    extensions: [
      "str"
    ]
  },
  "application/vnd.pg.osasli": {
    source: "iana",
    extensions: [
      "ei6"
    ]
  },
  "application/vnd.piaccess.application-licence": {
    source: "iana"
  },
  "application/vnd.picsel": {
    source: "iana",
    extensions: [
      "efif"
    ]
  },
  "application/vnd.pmi.widget": {
    source: "iana",
    extensions: [
      "wg"
    ]
  },
  "application/vnd.poc.group-advertisement+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.pocketlearn": {
    source: "iana",
    extensions: [
      "plf"
    ]
  },
  "application/vnd.powerbuilder6": {
    source: "iana",
    extensions: [
      "pbd"
    ]
  },
  "application/vnd.powerbuilder6-s": {
    source: "iana"
  },
  "application/vnd.powerbuilder7": {
    source: "iana"
  },
  "application/vnd.powerbuilder7-s": {
    source: "iana"
  },
  "application/vnd.powerbuilder75": {
    source: "iana"
  },
  "application/vnd.powerbuilder75-s": {
    source: "iana"
  },
  "application/vnd.preminet": {
    source: "iana"
  },
  "application/vnd.previewsystems.box": {
    source: "iana",
    extensions: [
      "box"
    ]
  },
  "application/vnd.proteus.magazine": {
    source: "iana",
    extensions: [
      "mgz"
    ]
  },
  "application/vnd.psfs": {
    source: "iana"
  },
  "application/vnd.publishare-delta-tree": {
    source: "iana",
    extensions: [
      "qps"
    ]
  },
  "application/vnd.pvi.ptid1": {
    source: "iana",
    extensions: [
      "ptid"
    ]
  },
  "application/vnd.pwg-multiplexed": {
    source: "iana"
  },
  "application/vnd.pwg-xhtml-print+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.qualcomm.brew-app-res": {
    source: "iana"
  },
  "application/vnd.quarantainenet": {
    source: "iana"
  },
  "application/vnd.quark.quarkxpress": {
    source: "iana",
    extensions: [
      "qxd",
      "qxt",
      "qwd",
      "qwt",
      "qxl",
      "qxb"
    ]
  },
  "application/vnd.quobject-quoxdocument": {
    source: "iana"
  },
  "application/vnd.radisys.moml+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-audit+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-audit-conf+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-audit-conn+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-audit-dialog+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-audit-stream+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-conf+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-dialog+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-dialog-base+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-dialog-fax-detect+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-dialog-fax-sendrecv+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-dialog-group+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-dialog-speech+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.radisys.msml-dialog-transform+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.rainstor.data": {
    source: "iana"
  },
  "application/vnd.rapid": {
    source: "iana"
  },
  "application/vnd.rar": {
    source: "iana",
    extensions: [
      "rar"
    ]
  },
  "application/vnd.realvnc.bed": {
    source: "iana",
    extensions: [
      "bed"
    ]
  },
  "application/vnd.recordare.musicxml": {
    source: "iana",
    extensions: [
      "mxl"
    ]
  },
  "application/vnd.recordare.musicxml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "musicxml"
    ]
  },
  "application/vnd.renlearn.rlprint": {
    source: "iana"
  },
  "application/vnd.resilient.logic": {
    source: "iana"
  },
  "application/vnd.restful+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.rig.cryptonote": {
    source: "iana",
    extensions: [
      "cryptonote"
    ]
  },
  "application/vnd.rim.cod": {
    source: "apache",
    extensions: [
      "cod"
    ]
  },
  "application/vnd.rn-realmedia": {
    source: "apache",
    extensions: [
      "rm"
    ]
  },
  "application/vnd.rn-realmedia-vbr": {
    source: "apache",
    extensions: [
      "rmvb"
    ]
  },
  "application/vnd.route66.link66+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "link66"
    ]
  },
  "application/vnd.rs-274x": {
    source: "iana"
  },
  "application/vnd.ruckus.download": {
    source: "iana"
  },
  "application/vnd.s3sms": {
    source: "iana"
  },
  "application/vnd.sailingtracker.track": {
    source: "iana",
    extensions: [
      "st"
    ]
  },
  "application/vnd.sar": {
    source: "iana"
  },
  "application/vnd.sbm.cid": {
    source: "iana"
  },
  "application/vnd.sbm.mid2": {
    source: "iana"
  },
  "application/vnd.scribus": {
    source: "iana"
  },
  "application/vnd.sealed.3df": {
    source: "iana"
  },
  "application/vnd.sealed.csf": {
    source: "iana"
  },
  "application/vnd.sealed.doc": {
    source: "iana"
  },
  "application/vnd.sealed.eml": {
    source: "iana"
  },
  "application/vnd.sealed.mht": {
    source: "iana"
  },
  "application/vnd.sealed.net": {
    source: "iana"
  },
  "application/vnd.sealed.ppt": {
    source: "iana"
  },
  "application/vnd.sealed.tiff": {
    source: "iana"
  },
  "application/vnd.sealed.xls": {
    source: "iana"
  },
  "application/vnd.sealedmedia.softseal.html": {
    source: "iana"
  },
  "application/vnd.sealedmedia.softseal.pdf": {
    source: "iana"
  },
  "application/vnd.seemail": {
    source: "iana",
    extensions: [
      "see"
    ]
  },
  "application/vnd.seis+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.sema": {
    source: "iana",
    extensions: [
      "sema"
    ]
  },
  "application/vnd.semd": {
    source: "iana",
    extensions: [
      "semd"
    ]
  },
  "application/vnd.semf": {
    source: "iana",
    extensions: [
      "semf"
    ]
  },
  "application/vnd.shade-save-file": {
    source: "iana"
  },
  "application/vnd.shana.informed.formdata": {
    source: "iana",
    extensions: [
      "ifm"
    ]
  },
  "application/vnd.shana.informed.formtemplate": {
    source: "iana",
    extensions: [
      "itp"
    ]
  },
  "application/vnd.shana.informed.interchange": {
    source: "iana",
    extensions: [
      "iif"
    ]
  },
  "application/vnd.shana.informed.package": {
    source: "iana",
    extensions: [
      "ipk"
    ]
  },
  "application/vnd.shootproof+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.shopkick+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.shp": {
    source: "iana"
  },
  "application/vnd.shx": {
    source: "iana"
  },
  "application/vnd.sigrok.session": {
    source: "iana"
  },
  "application/vnd.simtech-mindmapper": {
    source: "iana",
    extensions: [
      "twd",
      "twds"
    ]
  },
  "application/vnd.siren+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.smaf": {
    source: "iana",
    extensions: [
      "mmf"
    ]
  },
  "application/vnd.smart.notebook": {
    source: "iana"
  },
  "application/vnd.smart.teacher": {
    source: "iana",
    extensions: [
      "teacher"
    ]
  },
  "application/vnd.snesdev-page-table": {
    source: "iana"
  },
  "application/vnd.software602.filler.form+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "fo"
    ]
  },
  "application/vnd.software602.filler.form-xml-zip": {
    source: "iana"
  },
  "application/vnd.solent.sdkm+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "sdkm",
      "sdkd"
    ]
  },
  "application/vnd.spotfire.dxp": {
    source: "iana",
    extensions: [
      "dxp"
    ]
  },
  "application/vnd.spotfire.sfs": {
    source: "iana",
    extensions: [
      "sfs"
    ]
  },
  "application/vnd.sqlite3": {
    source: "iana"
  },
  "application/vnd.sss-cod": {
    source: "iana"
  },
  "application/vnd.sss-dtf": {
    source: "iana"
  },
  "application/vnd.sss-ntf": {
    source: "iana"
  },
  "application/vnd.stardivision.calc": {
    source: "apache",
    extensions: [
      "sdc"
    ]
  },
  "application/vnd.stardivision.draw": {
    source: "apache",
    extensions: [
      "sda"
    ]
  },
  "application/vnd.stardivision.impress": {
    source: "apache",
    extensions: [
      "sdd"
    ]
  },
  "application/vnd.stardivision.math": {
    source: "apache",
    extensions: [
      "smf"
    ]
  },
  "application/vnd.stardivision.writer": {
    source: "apache",
    extensions: [
      "sdw",
      "vor"
    ]
  },
  "application/vnd.stardivision.writer-global": {
    source: "apache",
    extensions: [
      "sgl"
    ]
  },
  "application/vnd.stepmania.package": {
    source: "iana",
    extensions: [
      "smzip"
    ]
  },
  "application/vnd.stepmania.stepchart": {
    source: "iana",
    extensions: [
      "sm"
    ]
  },
  "application/vnd.street-stream": {
    source: "iana"
  },
  "application/vnd.sun.wadl+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "wadl"
    ]
  },
  "application/vnd.sun.xml.calc": {
    source: "apache",
    extensions: [
      "sxc"
    ]
  },
  "application/vnd.sun.xml.calc.template": {
    source: "apache",
    extensions: [
      "stc"
    ]
  },
  "application/vnd.sun.xml.draw": {
    source: "apache",
    extensions: [
      "sxd"
    ]
  },
  "application/vnd.sun.xml.draw.template": {
    source: "apache",
    extensions: [
      "std"
    ]
  },
  "application/vnd.sun.xml.impress": {
    source: "apache",
    extensions: [
      "sxi"
    ]
  },
  "application/vnd.sun.xml.impress.template": {
    source: "apache",
    extensions: [
      "sti"
    ]
  },
  "application/vnd.sun.xml.math": {
    source: "apache",
    extensions: [
      "sxm"
    ]
  },
  "application/vnd.sun.xml.writer": {
    source: "apache",
    extensions: [
      "sxw"
    ]
  },
  "application/vnd.sun.xml.writer.global": {
    source: "apache",
    extensions: [
      "sxg"
    ]
  },
  "application/vnd.sun.xml.writer.template": {
    source: "apache",
    extensions: [
      "stw"
    ]
  },
  "application/vnd.sus-calendar": {
    source: "iana",
    extensions: [
      "sus",
      "susp"
    ]
  },
  "application/vnd.svd": {
    source: "iana",
    extensions: [
      "svd"
    ]
  },
  "application/vnd.swiftview-ics": {
    source: "iana"
  },
  "application/vnd.sycle+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.syft+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.symbian.install": {
    source: "apache",
    extensions: [
      "sis",
      "sisx"
    ]
  },
  "application/vnd.syncml+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0,
    extensions: [
      "xsm"
    ]
  },
  "application/vnd.syncml.dm+wbxml": {
    source: "iana",
    charset: "UTF-8",
    extensions: [
      "bdm"
    ]
  },
  "application/vnd.syncml.dm+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0,
    extensions: [
      "xdm"
    ]
  },
  "application/vnd.syncml.dm.notification": {
    source: "iana"
  },
  "application/vnd.syncml.dmddf+wbxml": {
    source: "iana"
  },
  "application/vnd.syncml.dmddf+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0,
    extensions: [
      "ddf"
    ]
  },
  "application/vnd.syncml.dmtnds+wbxml": {
    source: "iana"
  },
  "application/vnd.syncml.dmtnds+xml": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0
  },
  "application/vnd.syncml.ds.notification": {
    source: "iana"
  },
  "application/vnd.tableschema+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.tao.intent-module-archive": {
    source: "iana",
    extensions: [
      "tao"
    ]
  },
  "application/vnd.tcpdump.pcap": {
    source: "iana",
    extensions: [
      "pcap",
      "cap",
      "dmp"
    ]
  },
  "application/vnd.think-cell.ppttc+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.tmd.mediaflex.api+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.tml": {
    source: "iana"
  },
  "application/vnd.tmobile-livetv": {
    source: "iana",
    extensions: [
      "tmo"
    ]
  },
  "application/vnd.tri.onesource": {
    source: "iana"
  },
  "application/vnd.trid.tpt": {
    source: "iana",
    extensions: [
      "tpt"
    ]
  },
  "application/vnd.triscape.mxs": {
    source: "iana",
    extensions: [
      "mxs"
    ]
  },
  "application/vnd.trueapp": {
    source: "iana",
    extensions: [
      "tra"
    ]
  },
  "application/vnd.truedoc": {
    source: "iana"
  },
  "application/vnd.ubisoft.webplayer": {
    source: "iana"
  },
  "application/vnd.ufdl": {
    source: "iana",
    extensions: [
      "ufd",
      "ufdl"
    ]
  },
  "application/vnd.uiq.theme": {
    source: "iana",
    extensions: [
      "utz"
    ]
  },
  "application/vnd.umajin": {
    source: "iana",
    extensions: [
      "umj"
    ]
  },
  "application/vnd.unity": {
    source: "iana",
    extensions: [
      "unityweb"
    ]
  },
  "application/vnd.uoml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "uoml"
    ]
  },
  "application/vnd.uplanet.alert": {
    source: "iana"
  },
  "application/vnd.uplanet.alert-wbxml": {
    source: "iana"
  },
  "application/vnd.uplanet.bearer-choice": {
    source: "iana"
  },
  "application/vnd.uplanet.bearer-choice-wbxml": {
    source: "iana"
  },
  "application/vnd.uplanet.cacheop": {
    source: "iana"
  },
  "application/vnd.uplanet.cacheop-wbxml": {
    source: "iana"
  },
  "application/vnd.uplanet.channel": {
    source: "iana"
  },
  "application/vnd.uplanet.channel-wbxml": {
    source: "iana"
  },
  "application/vnd.uplanet.list": {
    source: "iana"
  },
  "application/vnd.uplanet.list-wbxml": {
    source: "iana"
  },
  "application/vnd.uplanet.listcmd": {
    source: "iana"
  },
  "application/vnd.uplanet.listcmd-wbxml": {
    source: "iana"
  },
  "application/vnd.uplanet.signal": {
    source: "iana"
  },
  "application/vnd.uri-map": {
    source: "iana"
  },
  "application/vnd.valve.source.material": {
    source: "iana"
  },
  "application/vnd.vcx": {
    source: "iana",
    extensions: [
      "vcx"
    ]
  },
  "application/vnd.vd-study": {
    source: "iana"
  },
  "application/vnd.vectorworks": {
    source: "iana"
  },
  "application/vnd.vel+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.verimatrix.vcas": {
    source: "iana"
  },
  "application/vnd.veritone.aion+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.veryant.thin": {
    source: "iana"
  },
  "application/vnd.ves.encrypted": {
    source: "iana"
  },
  "application/vnd.vidsoft.vidconference": {
    source: "iana"
  },
  "application/vnd.visio": {
    source: "iana",
    extensions: [
      "vsd",
      "vst",
      "vss",
      "vsw"
    ]
  },
  "application/vnd.visionary": {
    source: "iana",
    extensions: [
      "vis"
    ]
  },
  "application/vnd.vividence.scriptfile": {
    source: "iana"
  },
  "application/vnd.vsf": {
    source: "iana",
    extensions: [
      "vsf"
    ]
  },
  "application/vnd.wap.sic": {
    source: "iana"
  },
  "application/vnd.wap.slc": {
    source: "iana"
  },
  "application/vnd.wap.wbxml": {
    source: "iana",
    charset: "UTF-8",
    extensions: [
      "wbxml"
    ]
  },
  "application/vnd.wap.wmlc": {
    source: "iana",
    extensions: [
      "wmlc"
    ]
  },
  "application/vnd.wap.wmlscriptc": {
    source: "iana",
    extensions: [
      "wmlsc"
    ]
  },
  "application/vnd.webturbo": {
    source: "iana",
    extensions: [
      "wtb"
    ]
  },
  "application/vnd.wfa.dpp": {
    source: "iana"
  },
  "application/vnd.wfa.p2p": {
    source: "iana"
  },
  "application/vnd.wfa.wsc": {
    source: "iana"
  },
  "application/vnd.windows.devicepairing": {
    source: "iana"
  },
  "application/vnd.wmc": {
    source: "iana"
  },
  "application/vnd.wmf.bootstrap": {
    source: "iana"
  },
  "application/vnd.wolfram.mathematica": {
    source: "iana"
  },
  "application/vnd.wolfram.mathematica.package": {
    source: "iana"
  },
  "application/vnd.wolfram.player": {
    source: "iana",
    extensions: [
      "nbp"
    ]
  },
  "application/vnd.wordperfect": {
    source: "iana",
    extensions: [
      "wpd"
    ]
  },
  "application/vnd.wqd": {
    source: "iana",
    extensions: [
      "wqd"
    ]
  },
  "application/vnd.wrq-hp3000-labelled": {
    source: "iana"
  },
  "application/vnd.wt.stf": {
    source: "iana",
    extensions: [
      "stf"
    ]
  },
  "application/vnd.wv.csp+wbxml": {
    source: "iana"
  },
  "application/vnd.wv.csp+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.wv.ssp+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.xacml+json": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.xara": {
    source: "iana",
    extensions: [
      "xar"
    ]
  },
  "application/vnd.xfdl": {
    source: "iana",
    extensions: [
      "xfdl"
    ]
  },
  "application/vnd.xfdl.webform": {
    source: "iana"
  },
  "application/vnd.xmi+xml": {
    source: "iana",
    compressible: !0
  },
  "application/vnd.xmpie.cpkg": {
    source: "iana"
  },
  "application/vnd.xmpie.dpkg": {
    source: "iana"
  },
  "application/vnd.xmpie.plan": {
    source: "iana"
  },
  "application/vnd.xmpie.ppkg": {
    source: "iana"
  },
  "application/vnd.xmpie.xlim": {
    source: "iana"
  },
  "application/vnd.yamaha.hv-dic": {
    source: "iana",
    extensions: [
      "hvd"
    ]
  },
  "application/vnd.yamaha.hv-script": {
    source: "iana",
    extensions: [
      "hvs"
    ]
  },
  "application/vnd.yamaha.hv-voice": {
    source: "iana",
    extensions: [
      "hvp"
    ]
  },
  "application/vnd.yamaha.openscoreformat": {
    source: "iana",
    extensions: [
      "osf"
    ]
  },
  "application/vnd.yamaha.openscoreformat.osfpvg+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "osfpvg"
    ]
  },
  "application/vnd.yamaha.remote-setup": {
    source: "iana"
  },
  "application/vnd.yamaha.smaf-audio": {
    source: "iana",
    extensions: [
      "saf"
    ]
  },
  "application/vnd.yamaha.smaf-phrase": {
    source: "iana",
    extensions: [
      "spf"
    ]
  },
  "application/vnd.yamaha.through-ngn": {
    source: "iana"
  },
  "application/vnd.yamaha.tunnel-udpencap": {
    source: "iana"
  },
  "application/vnd.yaoweme": {
    source: "iana"
  },
  "application/vnd.yellowriver-custom-menu": {
    source: "iana",
    extensions: [
      "cmp"
    ]
  },
  "application/vnd.youtube.yt": {
    source: "iana"
  },
  "application/vnd.zul": {
    source: "iana",
    extensions: [
      "zir",
      "zirz"
    ]
  },
  "application/vnd.zzazz.deck+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "zaz"
    ]
  },
  "application/voicexml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "vxml"
    ]
  },
  "application/voucher-cms+json": {
    source: "iana",
    compressible: !0
  },
  "application/vq-rtcpxr": {
    source: "iana"
  },
  "application/wasm": {
    source: "iana",
    compressible: !0,
    extensions: [
      "wasm"
    ]
  },
  "application/watcherinfo+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "wif"
    ]
  },
  "application/webpush-options+json": {
    source: "iana",
    compressible: !0
  },
  "application/whoispp-query": {
    source: "iana"
  },
  "application/whoispp-response": {
    source: "iana"
  },
  "application/widget": {
    source: "iana",
    extensions: [
      "wgt"
    ]
  },
  "application/winhlp": {
    source: "apache",
    extensions: [
      "hlp"
    ]
  },
  "application/wita": {
    source: "iana"
  },
  "application/wordperfect5.1": {
    source: "iana"
  },
  "application/wsdl+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "wsdl"
    ]
  },
  "application/wspolicy+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "wspolicy"
    ]
  },
  "application/x-7z-compressed": {
    source: "apache",
    compressible: !1,
    extensions: [
      "7z"
    ]
  },
  "application/x-abiword": {
    source: "apache",
    extensions: [
      "abw"
    ]
  },
  "application/x-ace-compressed": {
    source: "apache",
    extensions: [
      "ace"
    ]
  },
  "application/x-amf": {
    source: "apache"
  },
  "application/x-apple-diskimage": {
    source: "apache",
    extensions: [
      "dmg"
    ]
  },
  "application/x-arj": {
    compressible: !1,
    extensions: [
      "arj"
    ]
  },
  "application/x-authorware-bin": {
    source: "apache",
    extensions: [
      "aab",
      "x32",
      "u32",
      "vox"
    ]
  },
  "application/x-authorware-map": {
    source: "apache",
    extensions: [
      "aam"
    ]
  },
  "application/x-authorware-seg": {
    source: "apache",
    extensions: [
      "aas"
    ]
  },
  "application/x-bcpio": {
    source: "apache",
    extensions: [
      "bcpio"
    ]
  },
  "application/x-bdoc": {
    compressible: !1,
    extensions: [
      "bdoc"
    ]
  },
  "application/x-bittorrent": {
    source: "apache",
    extensions: [
      "torrent"
    ]
  },
  "application/x-blorb": {
    source: "apache",
    extensions: [
      "blb",
      "blorb"
    ]
  },
  "application/x-bzip": {
    source: "apache",
    compressible: !1,
    extensions: [
      "bz"
    ]
  },
  "application/x-bzip2": {
    source: "apache",
    compressible: !1,
    extensions: [
      "bz2",
      "boz"
    ]
  },
  "application/x-cbr": {
    source: "apache",
    extensions: [
      "cbr",
      "cba",
      "cbt",
      "cbz",
      "cb7"
    ]
  },
  "application/x-cdlink": {
    source: "apache",
    extensions: [
      "vcd"
    ]
  },
  "application/x-cfs-compressed": {
    source: "apache",
    extensions: [
      "cfs"
    ]
  },
  "application/x-chat": {
    source: "apache",
    extensions: [
      "chat"
    ]
  },
  "application/x-chess-pgn": {
    source: "apache",
    extensions: [
      "pgn"
    ]
  },
  "application/x-chrome-extension": {
    extensions: [
      "crx"
    ]
  },
  "application/x-cocoa": {
    source: "nginx",
    extensions: [
      "cco"
    ]
  },
  "application/x-compress": {
    source: "apache"
  },
  "application/x-conference": {
    source: "apache",
    extensions: [
      "nsc"
    ]
  },
  "application/x-cpio": {
    source: "apache",
    extensions: [
      "cpio"
    ]
  },
  "application/x-csh": {
    source: "apache",
    extensions: [
      "csh"
    ]
  },
  "application/x-deb": {
    compressible: !1
  },
  "application/x-debian-package": {
    source: "apache",
    extensions: [
      "deb",
      "udeb"
    ]
  },
  "application/x-dgc-compressed": {
    source: "apache",
    extensions: [
      "dgc"
    ]
  },
  "application/x-director": {
    source: "apache",
    extensions: [
      "dir",
      "dcr",
      "dxr",
      "cst",
      "cct",
      "cxt",
      "w3d",
      "fgd",
      "swa"
    ]
  },
  "application/x-doom": {
    source: "apache",
    extensions: [
      "wad"
    ]
  },
  "application/x-dtbncx+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "ncx"
    ]
  },
  "application/x-dtbook+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "dtb"
    ]
  },
  "application/x-dtbresource+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "res"
    ]
  },
  "application/x-dvi": {
    source: "apache",
    compressible: !1,
    extensions: [
      "dvi"
    ]
  },
  "application/x-envoy": {
    source: "apache",
    extensions: [
      "evy"
    ]
  },
  "application/x-eva": {
    source: "apache",
    extensions: [
      "eva"
    ]
  },
  "application/x-font-bdf": {
    source: "apache",
    extensions: [
      "bdf"
    ]
  },
  "application/x-font-dos": {
    source: "apache"
  },
  "application/x-font-framemaker": {
    source: "apache"
  },
  "application/x-font-ghostscript": {
    source: "apache",
    extensions: [
      "gsf"
    ]
  },
  "application/x-font-libgrx": {
    source: "apache"
  },
  "application/x-font-linux-psf": {
    source: "apache",
    extensions: [
      "psf"
    ]
  },
  "application/x-font-pcf": {
    source: "apache",
    extensions: [
      "pcf"
    ]
  },
  "application/x-font-snf": {
    source: "apache",
    extensions: [
      "snf"
    ]
  },
  "application/x-font-speedo": {
    source: "apache"
  },
  "application/x-font-sunos-news": {
    source: "apache"
  },
  "application/x-font-type1": {
    source: "apache",
    extensions: [
      "pfa",
      "pfb",
      "pfm",
      "afm"
    ]
  },
  "application/x-font-vfont": {
    source: "apache"
  },
  "application/x-freearc": {
    source: "apache",
    extensions: [
      "arc"
    ]
  },
  "application/x-futuresplash": {
    source: "apache",
    extensions: [
      "spl"
    ]
  },
  "application/x-gca-compressed": {
    source: "apache",
    extensions: [
      "gca"
    ]
  },
  "application/x-glulx": {
    source: "apache",
    extensions: [
      "ulx"
    ]
  },
  "application/x-gnumeric": {
    source: "apache",
    extensions: [
      "gnumeric"
    ]
  },
  "application/x-gramps-xml": {
    source: "apache",
    extensions: [
      "gramps"
    ]
  },
  "application/x-gtar": {
    source: "apache",
    extensions: [
      "gtar"
    ]
  },
  "application/x-gzip": {
    source: "apache"
  },
  "application/x-hdf": {
    source: "apache",
    extensions: [
      "hdf"
    ]
  },
  "application/x-httpd-php": {
    compressible: !0,
    extensions: [
      "php"
    ]
  },
  "application/x-install-instructions": {
    source: "apache",
    extensions: [
      "install"
    ]
  },
  "application/x-iso9660-image": {
    source: "apache",
    extensions: [
      "iso"
    ]
  },
  "application/x-iwork-keynote-sffkey": {
    extensions: [
      "key"
    ]
  },
  "application/x-iwork-numbers-sffnumbers": {
    extensions: [
      "numbers"
    ]
  },
  "application/x-iwork-pages-sffpages": {
    extensions: [
      "pages"
    ]
  },
  "application/x-java-archive-diff": {
    source: "nginx",
    extensions: [
      "jardiff"
    ]
  },
  "application/x-java-jnlp-file": {
    source: "apache",
    compressible: !1,
    extensions: [
      "jnlp"
    ]
  },
  "application/x-javascript": {
    compressible: !0
  },
  "application/x-keepass2": {
    extensions: [
      "kdbx"
    ]
  },
  "application/x-latex": {
    source: "apache",
    compressible: !1,
    extensions: [
      "latex"
    ]
  },
  "application/x-lua-bytecode": {
    extensions: [
      "luac"
    ]
  },
  "application/x-lzh-compressed": {
    source: "apache",
    extensions: [
      "lzh",
      "lha"
    ]
  },
  "application/x-makeself": {
    source: "nginx",
    extensions: [
      "run"
    ]
  },
  "application/x-mie": {
    source: "apache",
    extensions: [
      "mie"
    ]
  },
  "application/x-mobipocket-ebook": {
    source: "apache",
    extensions: [
      "prc",
      "mobi"
    ]
  },
  "application/x-mpegurl": {
    compressible: !1
  },
  "application/x-ms-application": {
    source: "apache",
    extensions: [
      "application"
    ]
  },
  "application/x-ms-shortcut": {
    source: "apache",
    extensions: [
      "lnk"
    ]
  },
  "application/x-ms-wmd": {
    source: "apache",
    extensions: [
      "wmd"
    ]
  },
  "application/x-ms-wmz": {
    source: "apache",
    extensions: [
      "wmz"
    ]
  },
  "application/x-ms-xbap": {
    source: "apache",
    extensions: [
      "xbap"
    ]
  },
  "application/x-msaccess": {
    source: "apache",
    extensions: [
      "mdb"
    ]
  },
  "application/x-msbinder": {
    source: "apache",
    extensions: [
      "obd"
    ]
  },
  "application/x-mscardfile": {
    source: "apache",
    extensions: [
      "crd"
    ]
  },
  "application/x-msclip": {
    source: "apache",
    extensions: [
      "clp"
    ]
  },
  "application/x-msdos-program": {
    extensions: [
      "exe"
    ]
  },
  "application/x-msdownload": {
    source: "apache",
    extensions: [
      "exe",
      "dll",
      "com",
      "bat",
      "msi"
    ]
  },
  "application/x-msmediaview": {
    source: "apache",
    extensions: [
      "mvb",
      "m13",
      "m14"
    ]
  },
  "application/x-msmetafile": {
    source: "apache",
    extensions: [
      "wmf",
      "wmz",
      "emf",
      "emz"
    ]
  },
  "application/x-msmoney": {
    source: "apache",
    extensions: [
      "mny"
    ]
  },
  "application/x-mspublisher": {
    source: "apache",
    extensions: [
      "pub"
    ]
  },
  "application/x-msschedule": {
    source: "apache",
    extensions: [
      "scd"
    ]
  },
  "application/x-msterminal": {
    source: "apache",
    extensions: [
      "trm"
    ]
  },
  "application/x-mswrite": {
    source: "apache",
    extensions: [
      "wri"
    ]
  },
  "application/x-netcdf": {
    source: "apache",
    extensions: [
      "nc",
      "cdf"
    ]
  },
  "application/x-ns-proxy-autoconfig": {
    compressible: !0,
    extensions: [
      "pac"
    ]
  },
  "application/x-nzb": {
    source: "apache",
    extensions: [
      "nzb"
    ]
  },
  "application/x-perl": {
    source: "nginx",
    extensions: [
      "pl",
      "pm"
    ]
  },
  "application/x-pilot": {
    source: "nginx",
    extensions: [
      "prc",
      "pdb"
    ]
  },
  "application/x-pkcs12": {
    source: "apache",
    compressible: !1,
    extensions: [
      "p12",
      "pfx"
    ]
  },
  "application/x-pkcs7-certificates": {
    source: "apache",
    extensions: [
      "p7b",
      "spc"
    ]
  },
  "application/x-pkcs7-certreqresp": {
    source: "apache",
    extensions: [
      "p7r"
    ]
  },
  "application/x-pki-message": {
    source: "iana"
  },
  "application/x-rar-compressed": {
    source: "apache",
    compressible: !1,
    extensions: [
      "rar"
    ]
  },
  "application/x-redhat-package-manager": {
    source: "nginx",
    extensions: [
      "rpm"
    ]
  },
  "application/x-research-info-systems": {
    source: "apache",
    extensions: [
      "ris"
    ]
  },
  "application/x-sea": {
    source: "nginx",
    extensions: [
      "sea"
    ]
  },
  "application/x-sh": {
    source: "apache",
    compressible: !0,
    extensions: [
      "sh"
    ]
  },
  "application/x-shar": {
    source: "apache",
    extensions: [
      "shar"
    ]
  },
  "application/x-shockwave-flash": {
    source: "apache",
    compressible: !1,
    extensions: [
      "swf"
    ]
  },
  "application/x-silverlight-app": {
    source: "apache",
    extensions: [
      "xap"
    ]
  },
  "application/x-sql": {
    source: "apache",
    extensions: [
      "sql"
    ]
  },
  "application/x-stuffit": {
    source: "apache",
    compressible: !1,
    extensions: [
      "sit"
    ]
  },
  "application/x-stuffitx": {
    source: "apache",
    extensions: [
      "sitx"
    ]
  },
  "application/x-subrip": {
    source: "apache",
    extensions: [
      "srt"
    ]
  },
  "application/x-sv4cpio": {
    source: "apache",
    extensions: [
      "sv4cpio"
    ]
  },
  "application/x-sv4crc": {
    source: "apache",
    extensions: [
      "sv4crc"
    ]
  },
  "application/x-t3vm-image": {
    source: "apache",
    extensions: [
      "t3"
    ]
  },
  "application/x-tads": {
    source: "apache",
    extensions: [
      "gam"
    ]
  },
  "application/x-tar": {
    source: "apache",
    compressible: !0,
    extensions: [
      "tar"
    ]
  },
  "application/x-tcl": {
    source: "apache",
    extensions: [
      "tcl",
      "tk"
    ]
  },
  "application/x-tex": {
    source: "apache",
    extensions: [
      "tex"
    ]
  },
  "application/x-tex-tfm": {
    source: "apache",
    extensions: [
      "tfm"
    ]
  },
  "application/x-texinfo": {
    source: "apache",
    extensions: [
      "texinfo",
      "texi"
    ]
  },
  "application/x-tgif": {
    source: "apache",
    extensions: [
      "obj"
    ]
  },
  "application/x-ustar": {
    source: "apache",
    extensions: [
      "ustar"
    ]
  },
  "application/x-virtualbox-hdd": {
    compressible: !0,
    extensions: [
      "hdd"
    ]
  },
  "application/x-virtualbox-ova": {
    compressible: !0,
    extensions: [
      "ova"
    ]
  },
  "application/x-virtualbox-ovf": {
    compressible: !0,
    extensions: [
      "ovf"
    ]
  },
  "application/x-virtualbox-vbox": {
    compressible: !0,
    extensions: [
      "vbox"
    ]
  },
  "application/x-virtualbox-vbox-extpack": {
    compressible: !1,
    extensions: [
      "vbox-extpack"
    ]
  },
  "application/x-virtualbox-vdi": {
    compressible: !0,
    extensions: [
      "vdi"
    ]
  },
  "application/x-virtualbox-vhd": {
    compressible: !0,
    extensions: [
      "vhd"
    ]
  },
  "application/x-virtualbox-vmdk": {
    compressible: !0,
    extensions: [
      "vmdk"
    ]
  },
  "application/x-wais-source": {
    source: "apache",
    extensions: [
      "src"
    ]
  },
  "application/x-web-app-manifest+json": {
    compressible: !0,
    extensions: [
      "webapp"
    ]
  },
  "application/x-www-form-urlencoded": {
    source: "iana",
    compressible: !0
  },
  "application/x-x509-ca-cert": {
    source: "iana",
    extensions: [
      "der",
      "crt",
      "pem"
    ]
  },
  "application/x-x509-ca-ra-cert": {
    source: "iana"
  },
  "application/x-x509-next-ca-cert": {
    source: "iana"
  },
  "application/x-xfig": {
    source: "apache",
    extensions: [
      "fig"
    ]
  },
  "application/x-xliff+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "xlf"
    ]
  },
  "application/x-xpinstall": {
    source: "apache",
    compressible: !1,
    extensions: [
      "xpi"
    ]
  },
  "application/x-xz": {
    source: "apache",
    extensions: [
      "xz"
    ]
  },
  "application/x-zmachine": {
    source: "apache",
    extensions: [
      "z1",
      "z2",
      "z3",
      "z4",
      "z5",
      "z6",
      "z7",
      "z8"
    ]
  },
  "application/x400-bp": {
    source: "iana"
  },
  "application/xacml+xml": {
    source: "iana",
    compressible: !0
  },
  "application/xaml+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "xaml"
    ]
  },
  "application/xcap-att+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xav"
    ]
  },
  "application/xcap-caps+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xca"
    ]
  },
  "application/xcap-diff+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xdf"
    ]
  },
  "application/xcap-el+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xel"
    ]
  },
  "application/xcap-error+xml": {
    source: "iana",
    compressible: !0
  },
  "application/xcap-ns+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xns"
    ]
  },
  "application/xcon-conference-info+xml": {
    source: "iana",
    compressible: !0
  },
  "application/xcon-conference-info-diff+xml": {
    source: "iana",
    compressible: !0
  },
  "application/xenc+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xenc"
    ]
  },
  "application/xhtml+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xhtml",
      "xht"
    ]
  },
  "application/xhtml-voice+xml": {
    source: "apache",
    compressible: !0
  },
  "application/xliff+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xlf"
    ]
  },
  "application/xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xml",
      "xsl",
      "xsd",
      "rng"
    ]
  },
  "application/xml-dtd": {
    source: "iana",
    compressible: !0,
    extensions: [
      "dtd"
    ]
  },
  "application/xml-external-parsed-entity": {
    source: "iana"
  },
  "application/xml-patch+xml": {
    source: "iana",
    compressible: !0
  },
  "application/xmpp+xml": {
    source: "iana",
    compressible: !0
  },
  "application/xop+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xop"
    ]
  },
  "application/xproc+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "xpl"
    ]
  },
  "application/xslt+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xsl",
      "xslt"
    ]
  },
  "application/xspf+xml": {
    source: "apache",
    compressible: !0,
    extensions: [
      "xspf"
    ]
  },
  "application/xv+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "mxml",
      "xhvml",
      "xvml",
      "xvm"
    ]
  },
  "application/yang": {
    source: "iana",
    extensions: [
      "yang"
    ]
  },
  "application/yang-data+json": {
    source: "iana",
    compressible: !0
  },
  "application/yang-data+xml": {
    source: "iana",
    compressible: !0
  },
  "application/yang-patch+json": {
    source: "iana",
    compressible: !0
  },
  "application/yang-patch+xml": {
    source: "iana",
    compressible: !0
  },
  "application/yin+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "yin"
    ]
  },
  "application/zip": {
    source: "iana",
    compressible: !1,
    extensions: [
      "zip"
    ]
  },
  "application/zlib": {
    source: "iana"
  },
  "application/zstd": {
    source: "iana"
  },
  "audio/1d-interleaved-parityfec": {
    source: "iana"
  },
  "audio/32kadpcm": {
    source: "iana"
  },
  "audio/3gpp": {
    source: "iana",
    compressible: !1,
    extensions: [
      "3gpp"
    ]
  },
  "audio/3gpp2": {
    source: "iana"
  },
  "audio/aac": {
    source: "iana"
  },
  "audio/ac3": {
    source: "iana"
  },
  "audio/adpcm": {
    source: "apache",
    extensions: [
      "adp"
    ]
  },
  "audio/amr": {
    source: "iana",
    extensions: [
      "amr"
    ]
  },
  "audio/amr-wb": {
    source: "iana"
  },
  "audio/amr-wb+": {
    source: "iana"
  },
  "audio/aptx": {
    source: "iana"
  },
  "audio/asc": {
    source: "iana"
  },
  "audio/atrac-advanced-lossless": {
    source: "iana"
  },
  "audio/atrac-x": {
    source: "iana"
  },
  "audio/atrac3": {
    source: "iana"
  },
  "audio/basic": {
    source: "iana",
    compressible: !1,
    extensions: [
      "au",
      "snd"
    ]
  },
  "audio/bv16": {
    source: "iana"
  },
  "audio/bv32": {
    source: "iana"
  },
  "audio/clearmode": {
    source: "iana"
  },
  "audio/cn": {
    source: "iana"
  },
  "audio/dat12": {
    source: "iana"
  },
  "audio/dls": {
    source: "iana"
  },
  "audio/dsr-es201108": {
    source: "iana"
  },
  "audio/dsr-es202050": {
    source: "iana"
  },
  "audio/dsr-es202211": {
    source: "iana"
  },
  "audio/dsr-es202212": {
    source: "iana"
  },
  "audio/dv": {
    source: "iana"
  },
  "audio/dvi4": {
    source: "iana"
  },
  "audio/eac3": {
    source: "iana"
  },
  "audio/encaprtp": {
    source: "iana"
  },
  "audio/evrc": {
    source: "iana"
  },
  "audio/evrc-qcp": {
    source: "iana"
  },
  "audio/evrc0": {
    source: "iana"
  },
  "audio/evrc1": {
    source: "iana"
  },
  "audio/evrcb": {
    source: "iana"
  },
  "audio/evrcb0": {
    source: "iana"
  },
  "audio/evrcb1": {
    source: "iana"
  },
  "audio/evrcnw": {
    source: "iana"
  },
  "audio/evrcnw0": {
    source: "iana"
  },
  "audio/evrcnw1": {
    source: "iana"
  },
  "audio/evrcwb": {
    source: "iana"
  },
  "audio/evrcwb0": {
    source: "iana"
  },
  "audio/evrcwb1": {
    source: "iana"
  },
  "audio/evs": {
    source: "iana"
  },
  "audio/flexfec": {
    source: "iana"
  },
  "audio/fwdred": {
    source: "iana"
  },
  "audio/g711-0": {
    source: "iana"
  },
  "audio/g719": {
    source: "iana"
  },
  "audio/g722": {
    source: "iana"
  },
  "audio/g7221": {
    source: "iana"
  },
  "audio/g723": {
    source: "iana"
  },
  "audio/g726-16": {
    source: "iana"
  },
  "audio/g726-24": {
    source: "iana"
  },
  "audio/g726-32": {
    source: "iana"
  },
  "audio/g726-40": {
    source: "iana"
  },
  "audio/g728": {
    source: "iana"
  },
  "audio/g729": {
    source: "iana"
  },
  "audio/g7291": {
    source: "iana"
  },
  "audio/g729d": {
    source: "iana"
  },
  "audio/g729e": {
    source: "iana"
  },
  "audio/gsm": {
    source: "iana"
  },
  "audio/gsm-efr": {
    source: "iana"
  },
  "audio/gsm-hr-08": {
    source: "iana"
  },
  "audio/ilbc": {
    source: "iana"
  },
  "audio/ip-mr_v2.5": {
    source: "iana"
  },
  "audio/isac": {
    source: "apache"
  },
  "audio/l16": {
    source: "iana"
  },
  "audio/l20": {
    source: "iana"
  },
  "audio/l24": {
    source: "iana",
    compressible: !1
  },
  "audio/l8": {
    source: "iana"
  },
  "audio/lpc": {
    source: "iana"
  },
  "audio/melp": {
    source: "iana"
  },
  "audio/melp1200": {
    source: "iana"
  },
  "audio/melp2400": {
    source: "iana"
  },
  "audio/melp600": {
    source: "iana"
  },
  "audio/mhas": {
    source: "iana"
  },
  "audio/midi": {
    source: "apache",
    extensions: [
      "mid",
      "midi",
      "kar",
      "rmi"
    ]
  },
  "audio/mobile-xmf": {
    source: "iana",
    extensions: [
      "mxmf"
    ]
  },
  "audio/mp3": {
    compressible: !1,
    extensions: [
      "mp3"
    ]
  },
  "audio/mp4": {
    source: "iana",
    compressible: !1,
    extensions: [
      "m4a",
      "mp4a"
    ]
  },
  "audio/mp4a-latm": {
    source: "iana"
  },
  "audio/mpa": {
    source: "iana"
  },
  "audio/mpa-robust": {
    source: "iana"
  },
  "audio/mpeg": {
    source: "iana",
    compressible: !1,
    extensions: [
      "mpga",
      "mp2",
      "mp2a",
      "mp3",
      "m2a",
      "m3a"
    ]
  },
  "audio/mpeg4-generic": {
    source: "iana"
  },
  "audio/musepack": {
    source: "apache"
  },
  "audio/ogg": {
    source: "iana",
    compressible: !1,
    extensions: [
      "oga",
      "ogg",
      "spx",
      "opus"
    ]
  },
  "audio/opus": {
    source: "iana"
  },
  "audio/parityfec": {
    source: "iana"
  },
  "audio/pcma": {
    source: "iana"
  },
  "audio/pcma-wb": {
    source: "iana"
  },
  "audio/pcmu": {
    source: "iana"
  },
  "audio/pcmu-wb": {
    source: "iana"
  },
  "audio/prs.sid": {
    source: "iana"
  },
  "audio/qcelp": {
    source: "iana"
  },
  "audio/raptorfec": {
    source: "iana"
  },
  "audio/red": {
    source: "iana"
  },
  "audio/rtp-enc-aescm128": {
    source: "iana"
  },
  "audio/rtp-midi": {
    source: "iana"
  },
  "audio/rtploopback": {
    source: "iana"
  },
  "audio/rtx": {
    source: "iana"
  },
  "audio/s3m": {
    source: "apache",
    extensions: [
      "s3m"
    ]
  },
  "audio/scip": {
    source: "iana"
  },
  "audio/silk": {
    source: "apache",
    extensions: [
      "sil"
    ]
  },
  "audio/smv": {
    source: "iana"
  },
  "audio/smv-qcp": {
    source: "iana"
  },
  "audio/smv0": {
    source: "iana"
  },
  "audio/sofa": {
    source: "iana"
  },
  "audio/sp-midi": {
    source: "iana"
  },
  "audio/speex": {
    source: "iana"
  },
  "audio/t140c": {
    source: "iana"
  },
  "audio/t38": {
    source: "iana"
  },
  "audio/telephone-event": {
    source: "iana"
  },
  "audio/tetra_acelp": {
    source: "iana"
  },
  "audio/tetra_acelp_bb": {
    source: "iana"
  },
  "audio/tone": {
    source: "iana"
  },
  "audio/tsvcis": {
    source: "iana"
  },
  "audio/uemclip": {
    source: "iana"
  },
  "audio/ulpfec": {
    source: "iana"
  },
  "audio/usac": {
    source: "iana"
  },
  "audio/vdvi": {
    source: "iana"
  },
  "audio/vmr-wb": {
    source: "iana"
  },
  "audio/vnd.3gpp.iufp": {
    source: "iana"
  },
  "audio/vnd.4sb": {
    source: "iana"
  },
  "audio/vnd.audiokoz": {
    source: "iana"
  },
  "audio/vnd.celp": {
    source: "iana"
  },
  "audio/vnd.cisco.nse": {
    source: "iana"
  },
  "audio/vnd.cmles.radio-events": {
    source: "iana"
  },
  "audio/vnd.cns.anp1": {
    source: "iana"
  },
  "audio/vnd.cns.inf1": {
    source: "iana"
  },
  "audio/vnd.dece.audio": {
    source: "iana",
    extensions: [
      "uva",
      "uvva"
    ]
  },
  "audio/vnd.digital-winds": {
    source: "iana",
    extensions: [
      "eol"
    ]
  },
  "audio/vnd.dlna.adts": {
    source: "iana"
  },
  "audio/vnd.dolby.heaac.1": {
    source: "iana"
  },
  "audio/vnd.dolby.heaac.2": {
    source: "iana"
  },
  "audio/vnd.dolby.mlp": {
    source: "iana"
  },
  "audio/vnd.dolby.mps": {
    source: "iana"
  },
  "audio/vnd.dolby.pl2": {
    source: "iana"
  },
  "audio/vnd.dolby.pl2x": {
    source: "iana"
  },
  "audio/vnd.dolby.pl2z": {
    source: "iana"
  },
  "audio/vnd.dolby.pulse.1": {
    source: "iana"
  },
  "audio/vnd.dra": {
    source: "iana",
    extensions: [
      "dra"
    ]
  },
  "audio/vnd.dts": {
    source: "iana",
    extensions: [
      "dts"
    ]
  },
  "audio/vnd.dts.hd": {
    source: "iana",
    extensions: [
      "dtshd"
    ]
  },
  "audio/vnd.dts.uhd": {
    source: "iana"
  },
  "audio/vnd.dvb.file": {
    source: "iana"
  },
  "audio/vnd.everad.plj": {
    source: "iana"
  },
  "audio/vnd.hns.audio": {
    source: "iana"
  },
  "audio/vnd.lucent.voice": {
    source: "iana",
    extensions: [
      "lvp"
    ]
  },
  "audio/vnd.ms-playready.media.pya": {
    source: "iana",
    extensions: [
      "pya"
    ]
  },
  "audio/vnd.nokia.mobile-xmf": {
    source: "iana"
  },
  "audio/vnd.nortel.vbk": {
    source: "iana"
  },
  "audio/vnd.nuera.ecelp4800": {
    source: "iana",
    extensions: [
      "ecelp4800"
    ]
  },
  "audio/vnd.nuera.ecelp7470": {
    source: "iana",
    extensions: [
      "ecelp7470"
    ]
  },
  "audio/vnd.nuera.ecelp9600": {
    source: "iana",
    extensions: [
      "ecelp9600"
    ]
  },
  "audio/vnd.octel.sbc": {
    source: "iana"
  },
  "audio/vnd.presonus.multitrack": {
    source: "iana"
  },
  "audio/vnd.qcelp": {
    source: "iana"
  },
  "audio/vnd.rhetorex.32kadpcm": {
    source: "iana"
  },
  "audio/vnd.rip": {
    source: "iana",
    extensions: [
      "rip"
    ]
  },
  "audio/vnd.rn-realaudio": {
    compressible: !1
  },
  "audio/vnd.sealedmedia.softseal.mpeg": {
    source: "iana"
  },
  "audio/vnd.vmx.cvsd": {
    source: "iana"
  },
  "audio/vnd.wave": {
    compressible: !1
  },
  "audio/vorbis": {
    source: "iana",
    compressible: !1
  },
  "audio/vorbis-config": {
    source: "iana"
  },
  "audio/wav": {
    compressible: !1,
    extensions: [
      "wav"
    ]
  },
  "audio/wave": {
    compressible: !1,
    extensions: [
      "wav"
    ]
  },
  "audio/webm": {
    source: "apache",
    compressible: !1,
    extensions: [
      "weba"
    ]
  },
  "audio/x-aac": {
    source: "apache",
    compressible: !1,
    extensions: [
      "aac"
    ]
  },
  "audio/x-aiff": {
    source: "apache",
    extensions: [
      "aif",
      "aiff",
      "aifc"
    ]
  },
  "audio/x-caf": {
    source: "apache",
    compressible: !1,
    extensions: [
      "caf"
    ]
  },
  "audio/x-flac": {
    source: "apache",
    extensions: [
      "flac"
    ]
  },
  "audio/x-m4a": {
    source: "nginx",
    extensions: [
      "m4a"
    ]
  },
  "audio/x-matroska": {
    source: "apache",
    extensions: [
      "mka"
    ]
  },
  "audio/x-mpegurl": {
    source: "apache",
    extensions: [
      "m3u"
    ]
  },
  "audio/x-ms-wax": {
    source: "apache",
    extensions: [
      "wax"
    ]
  },
  "audio/x-ms-wma": {
    source: "apache",
    extensions: [
      "wma"
    ]
  },
  "audio/x-pn-realaudio": {
    source: "apache",
    extensions: [
      "ram",
      "ra"
    ]
  },
  "audio/x-pn-realaudio-plugin": {
    source: "apache",
    extensions: [
      "rmp"
    ]
  },
  "audio/x-realaudio": {
    source: "nginx",
    extensions: [
      "ra"
    ]
  },
  "audio/x-tta": {
    source: "apache"
  },
  "audio/x-wav": {
    source: "apache",
    extensions: [
      "wav"
    ]
  },
  "audio/xm": {
    source: "apache",
    extensions: [
      "xm"
    ]
  },
  "chemical/x-cdx": {
    source: "apache",
    extensions: [
      "cdx"
    ]
  },
  "chemical/x-cif": {
    source: "apache",
    extensions: [
      "cif"
    ]
  },
  "chemical/x-cmdf": {
    source: "apache",
    extensions: [
      "cmdf"
    ]
  },
  "chemical/x-cml": {
    source: "apache",
    extensions: [
      "cml"
    ]
  },
  "chemical/x-csml": {
    source: "apache",
    extensions: [
      "csml"
    ]
  },
  "chemical/x-pdb": {
    source: "apache"
  },
  "chemical/x-xyz": {
    source: "apache",
    extensions: [
      "xyz"
    ]
  },
  "font/collection": {
    source: "iana",
    extensions: [
      "ttc"
    ]
  },
  "font/otf": {
    source: "iana",
    compressible: !0,
    extensions: [
      "otf"
    ]
  },
  "font/sfnt": {
    source: "iana"
  },
  "font/ttf": {
    source: "iana",
    compressible: !0,
    extensions: [
      "ttf"
    ]
  },
  "font/woff": {
    source: "iana",
    extensions: [
      "woff"
    ]
  },
  "font/woff2": {
    source: "iana",
    extensions: [
      "woff2"
    ]
  },
  "image/aces": {
    source: "iana",
    extensions: [
      "exr"
    ]
  },
  "image/apng": {
    compressible: !1,
    extensions: [
      "apng"
    ]
  },
  "image/avci": {
    source: "iana",
    extensions: [
      "avci"
    ]
  },
  "image/avcs": {
    source: "iana",
    extensions: [
      "avcs"
    ]
  },
  "image/avif": {
    source: "iana",
    compressible: !1,
    extensions: [
      "avif"
    ]
  },
  "image/bmp": {
    source: "iana",
    compressible: !0,
    extensions: [
      "bmp"
    ]
  },
  "image/cgm": {
    source: "iana",
    extensions: [
      "cgm"
    ]
  },
  "image/dicom-rle": {
    source: "iana",
    extensions: [
      "drle"
    ]
  },
  "image/emf": {
    source: "iana",
    extensions: [
      "emf"
    ]
  },
  "image/fits": {
    source: "iana",
    extensions: [
      "fits"
    ]
  },
  "image/g3fax": {
    source: "iana",
    extensions: [
      "g3"
    ]
  },
  "image/gif": {
    source: "iana",
    compressible: !1,
    extensions: [
      "gif"
    ]
  },
  "image/heic": {
    source: "iana",
    extensions: [
      "heic"
    ]
  },
  "image/heic-sequence": {
    source: "iana",
    extensions: [
      "heics"
    ]
  },
  "image/heif": {
    source: "iana",
    extensions: [
      "heif"
    ]
  },
  "image/heif-sequence": {
    source: "iana",
    extensions: [
      "heifs"
    ]
  },
  "image/hej2k": {
    source: "iana",
    extensions: [
      "hej2"
    ]
  },
  "image/hsj2": {
    source: "iana",
    extensions: [
      "hsj2"
    ]
  },
  "image/ief": {
    source: "iana",
    extensions: [
      "ief"
    ]
  },
  "image/jls": {
    source: "iana",
    extensions: [
      "jls"
    ]
  },
  "image/jp2": {
    source: "iana",
    compressible: !1,
    extensions: [
      "jp2",
      "jpg2"
    ]
  },
  "image/jpeg": {
    source: "iana",
    compressible: !1,
    extensions: [
      "jpeg",
      "jpg",
      "jpe"
    ]
  },
  "image/jph": {
    source: "iana",
    extensions: [
      "jph"
    ]
  },
  "image/jphc": {
    source: "iana",
    extensions: [
      "jhc"
    ]
  },
  "image/jpm": {
    source: "iana",
    compressible: !1,
    extensions: [
      "jpm"
    ]
  },
  "image/jpx": {
    source: "iana",
    compressible: !1,
    extensions: [
      "jpx",
      "jpf"
    ]
  },
  "image/jxr": {
    source: "iana",
    extensions: [
      "jxr"
    ]
  },
  "image/jxra": {
    source: "iana",
    extensions: [
      "jxra"
    ]
  },
  "image/jxrs": {
    source: "iana",
    extensions: [
      "jxrs"
    ]
  },
  "image/jxs": {
    source: "iana",
    extensions: [
      "jxs"
    ]
  },
  "image/jxsc": {
    source: "iana",
    extensions: [
      "jxsc"
    ]
  },
  "image/jxsi": {
    source: "iana",
    extensions: [
      "jxsi"
    ]
  },
  "image/jxss": {
    source: "iana",
    extensions: [
      "jxss"
    ]
  },
  "image/ktx": {
    source: "iana",
    extensions: [
      "ktx"
    ]
  },
  "image/ktx2": {
    source: "iana",
    extensions: [
      "ktx2"
    ]
  },
  "image/naplps": {
    source: "iana"
  },
  "image/pjpeg": {
    compressible: !1
  },
  "image/png": {
    source: "iana",
    compressible: !1,
    extensions: [
      "png"
    ]
  },
  "image/prs.btif": {
    source: "iana",
    extensions: [
      "btif"
    ]
  },
  "image/prs.pti": {
    source: "iana",
    extensions: [
      "pti"
    ]
  },
  "image/pwg-raster": {
    source: "iana"
  },
  "image/sgi": {
    source: "apache",
    extensions: [
      "sgi"
    ]
  },
  "image/svg+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "svg",
      "svgz"
    ]
  },
  "image/t38": {
    source: "iana",
    extensions: [
      "t38"
    ]
  },
  "image/tiff": {
    source: "iana",
    compressible: !1,
    extensions: [
      "tif",
      "tiff"
    ]
  },
  "image/tiff-fx": {
    source: "iana",
    extensions: [
      "tfx"
    ]
  },
  "image/vnd.adobe.photoshop": {
    source: "iana",
    compressible: !0,
    extensions: [
      "psd"
    ]
  },
  "image/vnd.airzip.accelerator.azv": {
    source: "iana",
    extensions: [
      "azv"
    ]
  },
  "image/vnd.cns.inf2": {
    source: "iana"
  },
  "image/vnd.dece.graphic": {
    source: "iana",
    extensions: [
      "uvi",
      "uvvi",
      "uvg",
      "uvvg"
    ]
  },
  "image/vnd.djvu": {
    source: "iana",
    extensions: [
      "djvu",
      "djv"
    ]
  },
  "image/vnd.dvb.subtitle": {
    source: "iana",
    extensions: [
      "sub"
    ]
  },
  "image/vnd.dwg": {
    source: "iana",
    extensions: [
      "dwg"
    ]
  },
  "image/vnd.dxf": {
    source: "iana",
    extensions: [
      "dxf"
    ]
  },
  "image/vnd.fastbidsheet": {
    source: "iana",
    extensions: [
      "fbs"
    ]
  },
  "image/vnd.fpx": {
    source: "iana",
    extensions: [
      "fpx"
    ]
  },
  "image/vnd.fst": {
    source: "iana",
    extensions: [
      "fst"
    ]
  },
  "image/vnd.fujixerox.edmics-mmr": {
    source: "iana",
    extensions: [
      "mmr"
    ]
  },
  "image/vnd.fujixerox.edmics-rlc": {
    source: "iana",
    extensions: [
      "rlc"
    ]
  },
  "image/vnd.globalgraphics.pgb": {
    source: "iana"
  },
  "image/vnd.microsoft.icon": {
    source: "iana",
    compressible: !0,
    extensions: [
      "ico"
    ]
  },
  "image/vnd.mix": {
    source: "iana"
  },
  "image/vnd.mozilla.apng": {
    source: "iana"
  },
  "image/vnd.ms-dds": {
    compressible: !0,
    extensions: [
      "dds"
    ]
  },
  "image/vnd.ms-modi": {
    source: "iana",
    extensions: [
      "mdi"
    ]
  },
  "image/vnd.ms-photo": {
    source: "apache",
    extensions: [
      "wdp"
    ]
  },
  "image/vnd.net-fpx": {
    source: "iana",
    extensions: [
      "npx"
    ]
  },
  "image/vnd.pco.b16": {
    source: "iana",
    extensions: [
      "b16"
    ]
  },
  "image/vnd.radiance": {
    source: "iana"
  },
  "image/vnd.sealed.png": {
    source: "iana"
  },
  "image/vnd.sealedmedia.softseal.gif": {
    source: "iana"
  },
  "image/vnd.sealedmedia.softseal.jpg": {
    source: "iana"
  },
  "image/vnd.svf": {
    source: "iana"
  },
  "image/vnd.tencent.tap": {
    source: "iana",
    extensions: [
      "tap"
    ]
  },
  "image/vnd.valve.source.texture": {
    source: "iana",
    extensions: [
      "vtf"
    ]
  },
  "image/vnd.wap.wbmp": {
    source: "iana",
    extensions: [
      "wbmp"
    ]
  },
  "image/vnd.xiff": {
    source: "iana",
    extensions: [
      "xif"
    ]
  },
  "image/vnd.zbrush.pcx": {
    source: "iana",
    extensions: [
      "pcx"
    ]
  },
  "image/webp": {
    source: "apache",
    extensions: [
      "webp"
    ]
  },
  "image/wmf": {
    source: "iana",
    extensions: [
      "wmf"
    ]
  },
  "image/x-3ds": {
    source: "apache",
    extensions: [
      "3ds"
    ]
  },
  "image/x-cmu-raster": {
    source: "apache",
    extensions: [
      "ras"
    ]
  },
  "image/x-cmx": {
    source: "apache",
    extensions: [
      "cmx"
    ]
  },
  "image/x-freehand": {
    source: "apache",
    extensions: [
      "fh",
      "fhc",
      "fh4",
      "fh5",
      "fh7"
    ]
  },
  "image/x-icon": {
    source: "apache",
    compressible: !0,
    extensions: [
      "ico"
    ]
  },
  "image/x-jng": {
    source: "nginx",
    extensions: [
      "jng"
    ]
  },
  "image/x-mrsid-image": {
    source: "apache",
    extensions: [
      "sid"
    ]
  },
  "image/x-ms-bmp": {
    source: "nginx",
    compressible: !0,
    extensions: [
      "bmp"
    ]
  },
  "image/x-pcx": {
    source: "apache",
    extensions: [
      "pcx"
    ]
  },
  "image/x-pict": {
    source: "apache",
    extensions: [
      "pic",
      "pct"
    ]
  },
  "image/x-portable-anymap": {
    source: "apache",
    extensions: [
      "pnm"
    ]
  },
  "image/x-portable-bitmap": {
    source: "apache",
    extensions: [
      "pbm"
    ]
  },
  "image/x-portable-graymap": {
    source: "apache",
    extensions: [
      "pgm"
    ]
  },
  "image/x-portable-pixmap": {
    source: "apache",
    extensions: [
      "ppm"
    ]
  },
  "image/x-rgb": {
    source: "apache",
    extensions: [
      "rgb"
    ]
  },
  "image/x-tga": {
    source: "apache",
    extensions: [
      "tga"
    ]
  },
  "image/x-xbitmap": {
    source: "apache",
    extensions: [
      "xbm"
    ]
  },
  "image/x-xcf": {
    compressible: !1
  },
  "image/x-xpixmap": {
    source: "apache",
    extensions: [
      "xpm"
    ]
  },
  "image/x-xwindowdump": {
    source: "apache",
    extensions: [
      "xwd"
    ]
  },
  "message/cpim": {
    source: "iana"
  },
  "message/delivery-status": {
    source: "iana"
  },
  "message/disposition-notification": {
    source: "iana",
    extensions: [
      "disposition-notification"
    ]
  },
  "message/external-body": {
    source: "iana"
  },
  "message/feedback-report": {
    source: "iana"
  },
  "message/global": {
    source: "iana",
    extensions: [
      "u8msg"
    ]
  },
  "message/global-delivery-status": {
    source: "iana",
    extensions: [
      "u8dsn"
    ]
  },
  "message/global-disposition-notification": {
    source: "iana",
    extensions: [
      "u8mdn"
    ]
  },
  "message/global-headers": {
    source: "iana",
    extensions: [
      "u8hdr"
    ]
  },
  "message/http": {
    source: "iana",
    compressible: !1
  },
  "message/imdn+xml": {
    source: "iana",
    compressible: !0
  },
  "message/news": {
    source: "iana"
  },
  "message/partial": {
    source: "iana",
    compressible: !1
  },
  "message/rfc822": {
    source: "iana",
    compressible: !0,
    extensions: [
      "eml",
      "mime"
    ]
  },
  "message/s-http": {
    source: "iana"
  },
  "message/sip": {
    source: "iana"
  },
  "message/sipfrag": {
    source: "iana"
  },
  "message/tracking-status": {
    source: "iana"
  },
  "message/vnd.si.simp": {
    source: "iana"
  },
  "message/vnd.wfa.wsc": {
    source: "iana",
    extensions: [
      "wsc"
    ]
  },
  "model/3mf": {
    source: "iana",
    extensions: [
      "3mf"
    ]
  },
  "model/e57": {
    source: "iana"
  },
  "model/gltf+json": {
    source: "iana",
    compressible: !0,
    extensions: [
      "gltf"
    ]
  },
  "model/gltf-binary": {
    source: "iana",
    compressible: !0,
    extensions: [
      "glb"
    ]
  },
  "model/iges": {
    source: "iana",
    compressible: !1,
    extensions: [
      "igs",
      "iges"
    ]
  },
  "model/mesh": {
    source: "iana",
    compressible: !1,
    extensions: [
      "msh",
      "mesh",
      "silo"
    ]
  },
  "model/mtl": {
    source: "iana",
    extensions: [
      "mtl"
    ]
  },
  "model/obj": {
    source: "iana",
    extensions: [
      "obj"
    ]
  },
  "model/step": {
    source: "iana"
  },
  "model/step+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "stpx"
    ]
  },
  "model/step+zip": {
    source: "iana",
    compressible: !1,
    extensions: [
      "stpz"
    ]
  },
  "model/step-xml+zip": {
    source: "iana",
    compressible: !1,
    extensions: [
      "stpxz"
    ]
  },
  "model/stl": {
    source: "iana",
    extensions: [
      "stl"
    ]
  },
  "model/vnd.collada+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "dae"
    ]
  },
  "model/vnd.dwf": {
    source: "iana",
    extensions: [
      "dwf"
    ]
  },
  "model/vnd.flatland.3dml": {
    source: "iana"
  },
  "model/vnd.gdl": {
    source: "iana",
    extensions: [
      "gdl"
    ]
  },
  "model/vnd.gs-gdl": {
    source: "apache"
  },
  "model/vnd.gs.gdl": {
    source: "iana"
  },
  "model/vnd.gtw": {
    source: "iana",
    extensions: [
      "gtw"
    ]
  },
  "model/vnd.moml+xml": {
    source: "iana",
    compressible: !0
  },
  "model/vnd.mts": {
    source: "iana",
    extensions: [
      "mts"
    ]
  },
  "model/vnd.opengex": {
    source: "iana",
    extensions: [
      "ogex"
    ]
  },
  "model/vnd.parasolid.transmit.binary": {
    source: "iana",
    extensions: [
      "x_b"
    ]
  },
  "model/vnd.parasolid.transmit.text": {
    source: "iana",
    extensions: [
      "x_t"
    ]
  },
  "model/vnd.pytha.pyox": {
    source: "iana"
  },
  "model/vnd.rosette.annotated-data-model": {
    source: "iana"
  },
  "model/vnd.sap.vds": {
    source: "iana",
    extensions: [
      "vds"
    ]
  },
  "model/vnd.usdz+zip": {
    source: "iana",
    compressible: !1,
    extensions: [
      "usdz"
    ]
  },
  "model/vnd.valve.source.compiled-map": {
    source: "iana",
    extensions: [
      "bsp"
    ]
  },
  "model/vnd.vtu": {
    source: "iana",
    extensions: [
      "vtu"
    ]
  },
  "model/vrml": {
    source: "iana",
    compressible: !1,
    extensions: [
      "wrl",
      "vrml"
    ]
  },
  "model/x3d+binary": {
    source: "apache",
    compressible: !1,
    extensions: [
      "x3db",
      "x3dbz"
    ]
  },
  "model/x3d+fastinfoset": {
    source: "iana",
    extensions: [
      "x3db"
    ]
  },
  "model/x3d+vrml": {
    source: "apache",
    compressible: !1,
    extensions: [
      "x3dv",
      "x3dvz"
    ]
  },
  "model/x3d+xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "x3d",
      "x3dz"
    ]
  },
  "model/x3d-vrml": {
    source: "iana",
    extensions: [
      "x3dv"
    ]
  },
  "multipart/alternative": {
    source: "iana",
    compressible: !1
  },
  "multipart/appledouble": {
    source: "iana"
  },
  "multipart/byteranges": {
    source: "iana"
  },
  "multipart/digest": {
    source: "iana"
  },
  "multipart/encrypted": {
    source: "iana",
    compressible: !1
  },
  "multipart/form-data": {
    source: "iana",
    compressible: !1
  },
  "multipart/header-set": {
    source: "iana"
  },
  "multipart/mixed": {
    source: "iana"
  },
  "multipart/multilingual": {
    source: "iana"
  },
  "multipart/parallel": {
    source: "iana"
  },
  "multipart/related": {
    source: "iana",
    compressible: !1
  },
  "multipart/report": {
    source: "iana"
  },
  "multipart/signed": {
    source: "iana",
    compressible: !1
  },
  "multipart/vnd.bint.med-plus": {
    source: "iana"
  },
  "multipart/voice-message": {
    source: "iana"
  },
  "multipart/x-mixed-replace": {
    source: "iana"
  },
  "text/1d-interleaved-parityfec": {
    source: "iana"
  },
  "text/cache-manifest": {
    source: "iana",
    compressible: !0,
    extensions: [
      "appcache",
      "manifest"
    ]
  },
  "text/calendar": {
    source: "iana",
    extensions: [
      "ics",
      "ifb"
    ]
  },
  "text/calender": {
    compressible: !0
  },
  "text/cmd": {
    compressible: !0
  },
  "text/coffeescript": {
    extensions: [
      "coffee",
      "litcoffee"
    ]
  },
  "text/cql": {
    source: "iana"
  },
  "text/cql-expression": {
    source: "iana"
  },
  "text/cql-identifier": {
    source: "iana"
  },
  "text/css": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0,
    extensions: [
      "css"
    ]
  },
  "text/csv": {
    source: "iana",
    compressible: !0,
    extensions: [
      "csv"
    ]
  },
  "text/csv-schema": {
    source: "iana"
  },
  "text/directory": {
    source: "iana"
  },
  "text/dns": {
    source: "iana"
  },
  "text/ecmascript": {
    source: "iana"
  },
  "text/encaprtp": {
    source: "iana"
  },
  "text/enriched": {
    source: "iana"
  },
  "text/fhirpath": {
    source: "iana"
  },
  "text/flexfec": {
    source: "iana"
  },
  "text/fwdred": {
    source: "iana"
  },
  "text/gff3": {
    source: "iana"
  },
  "text/grammar-ref-list": {
    source: "iana"
  },
  "text/html": {
    source: "iana",
    compressible: !0,
    extensions: [
      "html",
      "htm",
      "shtml"
    ]
  },
  "text/jade": {
    extensions: [
      "jade"
    ]
  },
  "text/javascript": {
    source: "iana",
    compressible: !0
  },
  "text/jcr-cnd": {
    source: "iana"
  },
  "text/jsx": {
    compressible: !0,
    extensions: [
      "jsx"
    ]
  },
  "text/less": {
    compressible: !0,
    extensions: [
      "less"
    ]
  },
  "text/markdown": {
    source: "iana",
    compressible: !0,
    extensions: [
      "markdown",
      "md"
    ]
  },
  "text/mathml": {
    source: "nginx",
    extensions: [
      "mml"
    ]
  },
  "text/mdx": {
    compressible: !0,
    extensions: [
      "mdx"
    ]
  },
  "text/mizar": {
    source: "iana"
  },
  "text/n3": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0,
    extensions: [
      "n3"
    ]
  },
  "text/parameters": {
    source: "iana",
    charset: "UTF-8"
  },
  "text/parityfec": {
    source: "iana"
  },
  "text/plain": {
    source: "iana",
    compressible: !0,
    extensions: [
      "txt",
      "text",
      "conf",
      "def",
      "list",
      "log",
      "in",
      "ini"
    ]
  },
  "text/provenance-notation": {
    source: "iana",
    charset: "UTF-8"
  },
  "text/prs.fallenstein.rst": {
    source: "iana"
  },
  "text/prs.lines.tag": {
    source: "iana",
    extensions: [
      "dsc"
    ]
  },
  "text/prs.prop.logic": {
    source: "iana"
  },
  "text/raptorfec": {
    source: "iana"
  },
  "text/red": {
    source: "iana"
  },
  "text/rfc822-headers": {
    source: "iana"
  },
  "text/richtext": {
    source: "iana",
    compressible: !0,
    extensions: [
      "rtx"
    ]
  },
  "text/rtf": {
    source: "iana",
    compressible: !0,
    extensions: [
      "rtf"
    ]
  },
  "text/rtp-enc-aescm128": {
    source: "iana"
  },
  "text/rtploopback": {
    source: "iana"
  },
  "text/rtx": {
    source: "iana"
  },
  "text/sgml": {
    source: "iana",
    extensions: [
      "sgml",
      "sgm"
    ]
  },
  "text/shaclc": {
    source: "iana"
  },
  "text/shex": {
    source: "iana",
    extensions: [
      "shex"
    ]
  },
  "text/slim": {
    extensions: [
      "slim",
      "slm"
    ]
  },
  "text/spdx": {
    source: "iana",
    extensions: [
      "spdx"
    ]
  },
  "text/strings": {
    source: "iana"
  },
  "text/stylus": {
    extensions: [
      "stylus",
      "styl"
    ]
  },
  "text/t140": {
    source: "iana"
  },
  "text/tab-separated-values": {
    source: "iana",
    compressible: !0,
    extensions: [
      "tsv"
    ]
  },
  "text/troff": {
    source: "iana",
    extensions: [
      "t",
      "tr",
      "roff",
      "man",
      "me",
      "ms"
    ]
  },
  "text/turtle": {
    source: "iana",
    charset: "UTF-8",
    extensions: [
      "ttl"
    ]
  },
  "text/ulpfec": {
    source: "iana"
  },
  "text/uri-list": {
    source: "iana",
    compressible: !0,
    extensions: [
      "uri",
      "uris",
      "urls"
    ]
  },
  "text/vcard": {
    source: "iana",
    compressible: !0,
    extensions: [
      "vcard"
    ]
  },
  "text/vnd.a": {
    source: "iana"
  },
  "text/vnd.abc": {
    source: "iana"
  },
  "text/vnd.ascii-art": {
    source: "iana"
  },
  "text/vnd.curl": {
    source: "iana",
    extensions: [
      "curl"
    ]
  },
  "text/vnd.curl.dcurl": {
    source: "apache",
    extensions: [
      "dcurl"
    ]
  },
  "text/vnd.curl.mcurl": {
    source: "apache",
    extensions: [
      "mcurl"
    ]
  },
  "text/vnd.curl.scurl": {
    source: "apache",
    extensions: [
      "scurl"
    ]
  },
  "text/vnd.debian.copyright": {
    source: "iana",
    charset: "UTF-8"
  },
  "text/vnd.dmclientscript": {
    source: "iana"
  },
  "text/vnd.dvb.subtitle": {
    source: "iana",
    extensions: [
      "sub"
    ]
  },
  "text/vnd.esmertec.theme-descriptor": {
    source: "iana",
    charset: "UTF-8"
  },
  "text/vnd.familysearch.gedcom": {
    source: "iana",
    extensions: [
      "ged"
    ]
  },
  "text/vnd.ficlab.flt": {
    source: "iana"
  },
  "text/vnd.fly": {
    source: "iana",
    extensions: [
      "fly"
    ]
  },
  "text/vnd.fmi.flexstor": {
    source: "iana",
    extensions: [
      "flx"
    ]
  },
  "text/vnd.gml": {
    source: "iana"
  },
  "text/vnd.graphviz": {
    source: "iana",
    extensions: [
      "gv"
    ]
  },
  "text/vnd.hans": {
    source: "iana"
  },
  "text/vnd.hgl": {
    source: "iana"
  },
  "text/vnd.in3d.3dml": {
    source: "iana",
    extensions: [
      "3dml"
    ]
  },
  "text/vnd.in3d.spot": {
    source: "iana",
    extensions: [
      "spot"
    ]
  },
  "text/vnd.iptc.newsml": {
    source: "iana"
  },
  "text/vnd.iptc.nitf": {
    source: "iana"
  },
  "text/vnd.latex-z": {
    source: "iana"
  },
  "text/vnd.motorola.reflex": {
    source: "iana"
  },
  "text/vnd.ms-mediapackage": {
    source: "iana"
  },
  "text/vnd.net2phone.commcenter.command": {
    source: "iana"
  },
  "text/vnd.radisys.msml-basic-layout": {
    source: "iana"
  },
  "text/vnd.senx.warpscript": {
    source: "iana"
  },
  "text/vnd.si.uricatalogue": {
    source: "iana"
  },
  "text/vnd.sosi": {
    source: "iana"
  },
  "text/vnd.sun.j2me.app-descriptor": {
    source: "iana",
    charset: "UTF-8",
    extensions: [
      "jad"
    ]
  },
  "text/vnd.trolltech.linguist": {
    source: "iana",
    charset: "UTF-8"
  },
  "text/vnd.wap.si": {
    source: "iana"
  },
  "text/vnd.wap.sl": {
    source: "iana"
  },
  "text/vnd.wap.wml": {
    source: "iana",
    extensions: [
      "wml"
    ]
  },
  "text/vnd.wap.wmlscript": {
    source: "iana",
    extensions: [
      "wmls"
    ]
  },
  "text/vtt": {
    source: "iana",
    charset: "UTF-8",
    compressible: !0,
    extensions: [
      "vtt"
    ]
  },
  "text/x-asm": {
    source: "apache",
    extensions: [
      "s",
      "asm"
    ]
  },
  "text/x-c": {
    source: "apache",
    extensions: [
      "c",
      "cc",
      "cxx",
      "cpp",
      "h",
      "hh",
      "dic"
    ]
  },
  "text/x-component": {
    source: "nginx",
    extensions: [
      "htc"
    ]
  },
  "text/x-fortran": {
    source: "apache",
    extensions: [
      "f",
      "for",
      "f77",
      "f90"
    ]
  },
  "text/x-gwt-rpc": {
    compressible: !0
  },
  "text/x-handlebars-template": {
    extensions: [
      "hbs"
    ]
  },
  "text/x-java-source": {
    source: "apache",
    extensions: [
      "java"
    ]
  },
  "text/x-jquery-tmpl": {
    compressible: !0
  },
  "text/x-lua": {
    extensions: [
      "lua"
    ]
  },
  "text/x-markdown": {
    compressible: !0,
    extensions: [
      "mkd"
    ]
  },
  "text/x-nfo": {
    source: "apache",
    extensions: [
      "nfo"
    ]
  },
  "text/x-opml": {
    source: "apache",
    extensions: [
      "opml"
    ]
  },
  "text/x-org": {
    compressible: !0,
    extensions: [
      "org"
    ]
  },
  "text/x-pascal": {
    source: "apache",
    extensions: [
      "p",
      "pas"
    ]
  },
  "text/x-processing": {
    compressible: !0,
    extensions: [
      "pde"
    ]
  },
  "text/x-sass": {
    extensions: [
      "sass"
    ]
  },
  "text/x-scss": {
    extensions: [
      "scss"
    ]
  },
  "text/x-setext": {
    source: "apache",
    extensions: [
      "etx"
    ]
  },
  "text/x-sfv": {
    source: "apache",
    extensions: [
      "sfv"
    ]
  },
  "text/x-suse-ymp": {
    compressible: !0,
    extensions: [
      "ymp"
    ]
  },
  "text/x-uuencode": {
    source: "apache",
    extensions: [
      "uu"
    ]
  },
  "text/x-vcalendar": {
    source: "apache",
    extensions: [
      "vcs"
    ]
  },
  "text/x-vcard": {
    source: "apache",
    extensions: [
      "vcf"
    ]
  },
  "text/xml": {
    source: "iana",
    compressible: !0,
    extensions: [
      "xml"
    ]
  },
  "text/xml-external-parsed-entity": {
    source: "iana"
  },
  "text/yaml": {
    compressible: !0,
    extensions: [
      "yaml",
      "yml"
    ]
  },
  "video/1d-interleaved-parityfec": {
    source: "iana"
  },
  "video/3gpp": {
    source: "iana",
    extensions: [
      "3gp",
      "3gpp"
    ]
  },
  "video/3gpp-tt": {
    source: "iana"
  },
  "video/3gpp2": {
    source: "iana",
    extensions: [
      "3g2"
    ]
  },
  "video/av1": {
    source: "iana"
  },
  "video/bmpeg": {
    source: "iana"
  },
  "video/bt656": {
    source: "iana"
  },
  "video/celb": {
    source: "iana"
  },
  "video/dv": {
    source: "iana"
  },
  "video/encaprtp": {
    source: "iana"
  },
  "video/ffv1": {
    source: "iana"
  },
  "video/flexfec": {
    source: "iana"
  },
  "video/h261": {
    source: "iana",
    extensions: [
      "h261"
    ]
  },
  "video/h263": {
    source: "iana",
    extensions: [
      "h263"
    ]
  },
  "video/h263-1998": {
    source: "iana"
  },
  "video/h263-2000": {
    source: "iana"
  },
  "video/h264": {
    source: "iana",
    extensions: [
      "h264"
    ]
  },
  "video/h264-rcdo": {
    source: "iana"
  },
  "video/h264-svc": {
    source: "iana"
  },
  "video/h265": {
    source: "iana"
  },
  "video/iso.segment": {
    source: "iana",
    extensions: [
      "m4s"
    ]
  },
  "video/jpeg": {
    source: "iana",
    extensions: [
      "jpgv"
    ]
  },
  "video/jpeg2000": {
    source: "iana"
  },
  "video/jpm": {
    source: "apache",
    extensions: [
      "jpm",
      "jpgm"
    ]
  },
  "video/jxsv": {
    source: "iana"
  },
  "video/mj2": {
    source: "iana",
    extensions: [
      "mj2",
      "mjp2"
    ]
  },
  "video/mp1s": {
    source: "iana"
  },
  "video/mp2p": {
    source: "iana"
  },
  "video/mp2t": {
    source: "iana",
    extensions: [
      "ts"
    ]
  },
  "video/mp4": {
    source: "iana",
    compressible: !1,
    extensions: [
      "mp4",
      "mp4v",
      "mpg4"
    ]
  },
  "video/mp4v-es": {
    source: "iana"
  },
  "video/mpeg": {
    source: "iana",
    compressible: !1,
    extensions: [
      "mpeg",
      "mpg",
      "mpe",
      "m1v",
      "m2v"
    ]
  },
  "video/mpeg4-generic": {
    source: "iana"
  },
  "video/mpv": {
    source: "iana"
  },
  "video/nv": {
    source: "iana"
  },
  "video/ogg": {
    source: "iana",
    compressible: !1,
    extensions: [
      "ogv"
    ]
  },
  "video/parityfec": {
    source: "iana"
  },
  "video/pointer": {
    source: "iana"
  },
  "video/quicktime": {
    source: "iana",
    compressible: !1,
    extensions: [
      "qt",
      "mov"
    ]
  },
  "video/raptorfec": {
    source: "iana"
  },
  "video/raw": {
    source: "iana"
  },
  "video/rtp-enc-aescm128": {
    source: "iana"
  },
  "video/rtploopback": {
    source: "iana"
  },
  "video/rtx": {
    source: "iana"
  },
  "video/scip": {
    source: "iana"
  },
  "video/smpte291": {
    source: "iana"
  },
  "video/smpte292m": {
    source: "iana"
  },
  "video/ulpfec": {
    source: "iana"
  },
  "video/vc1": {
    source: "iana"
  },
  "video/vc2": {
    source: "iana"
  },
  "video/vnd.cctv": {
    source: "iana"
  },
  "video/vnd.dece.hd": {
    source: "iana",
    extensions: [
      "uvh",
      "uvvh"
    ]
  },
  "video/vnd.dece.mobile": {
    source: "iana",
    extensions: [
      "uvm",
      "uvvm"
    ]
  },
  "video/vnd.dece.mp4": {
    source: "iana"
  },
  "video/vnd.dece.pd": {
    source: "iana",
    extensions: [
      "uvp",
      "uvvp"
    ]
  },
  "video/vnd.dece.sd": {
    source: "iana",
    extensions: [
      "uvs",
      "uvvs"
    ]
  },
  "video/vnd.dece.video": {
    source: "iana",
    extensions: [
      "uvv",
      "uvvv"
    ]
  },
  "video/vnd.directv.mpeg": {
    source: "iana"
  },
  "video/vnd.directv.mpeg-tts": {
    source: "iana"
  },
  "video/vnd.dlna.mpeg-tts": {
    source: "iana"
  },
  "video/vnd.dvb.file": {
    source: "iana",
    extensions: [
      "dvb"
    ]
  },
  "video/vnd.fvt": {
    source: "iana",
    extensions: [
      "fvt"
    ]
  },
  "video/vnd.hns.video": {
    source: "iana"
  },
  "video/vnd.iptvforum.1dparityfec-1010": {
    source: "iana"
  },
  "video/vnd.iptvforum.1dparityfec-2005": {
    source: "iana"
  },
  "video/vnd.iptvforum.2dparityfec-1010": {
    source: "iana"
  },
  "video/vnd.iptvforum.2dparityfec-2005": {
    source: "iana"
  },
  "video/vnd.iptvforum.ttsavc": {
    source: "iana"
  },
  "video/vnd.iptvforum.ttsmpeg2": {
    source: "iana"
  },
  "video/vnd.motorola.video": {
    source: "iana"
  },
  "video/vnd.motorola.videop": {
    source: "iana"
  },
  "video/vnd.mpegurl": {
    source: "iana",
    extensions: [
      "mxu",
      "m4u"
    ]
  },
  "video/vnd.ms-playready.media.pyv": {
    source: "iana",
    extensions: [
      "pyv"
    ]
  },
  "video/vnd.nokia.interleaved-multimedia": {
    source: "iana"
  },
  "video/vnd.nokia.mp4vr": {
    source: "iana"
  },
  "video/vnd.nokia.videovoip": {
    source: "iana"
  },
  "video/vnd.objectvideo": {
    source: "iana"
  },
  "video/vnd.radgamettools.bink": {
    source: "iana"
  },
  "video/vnd.radgamettools.smacker": {
    source: "iana"
  },
  "video/vnd.sealed.mpeg1": {
    source: "iana"
  },
  "video/vnd.sealed.mpeg4": {
    source: "iana"
  },
  "video/vnd.sealed.swf": {
    source: "iana"
  },
  "video/vnd.sealedmedia.softseal.mov": {
    source: "iana"
  },
  "video/vnd.uvvu.mp4": {
    source: "iana",
    extensions: [
      "uvu",
      "uvvu"
    ]
  },
  "video/vnd.vivo": {
    source: "iana",
    extensions: [
      "viv"
    ]
  },
  "video/vnd.youtube.yt": {
    source: "iana"
  },
  "video/vp8": {
    source: "iana"
  },
  "video/vp9": {
    source: "iana"
  },
  "video/webm": {
    source: "apache",
    compressible: !1,
    extensions: [
      "webm"
    ]
  },
  "video/x-f4v": {
    source: "apache",
    extensions: [
      "f4v"
    ]
  },
  "video/x-fli": {
    source: "apache",
    extensions: [
      "fli"
    ]
  },
  "video/x-flv": {
    source: "apache",
    compressible: !1,
    extensions: [
      "flv"
    ]
  },
  "video/x-m4v": {
    source: "apache",
    extensions: [
      "m4v"
    ]
  },
  "video/x-matroska": {
    source: "apache",
    compressible: !1,
    extensions: [
      "mkv",
      "mk3d",
      "mks"
    ]
  },
  "video/x-mng": {
    source: "apache",
    extensions: [
      "mng"
    ]
  },
  "video/x-ms-asf": {
    source: "apache",
    extensions: [
      "asf",
      "asx"
    ]
  },
  "video/x-ms-vob": {
    source: "apache",
    extensions: [
      "vob"
    ]
  },
  "video/x-ms-wm": {
    source: "apache",
    extensions: [
      "wm"
    ]
  },
  "video/x-ms-wmv": {
    source: "apache",
    compressible: !1,
    extensions: [
      "wmv"
    ]
  },
  "video/x-ms-wmx": {
    source: "apache",
    extensions: [
      "wmx"
    ]
  },
  "video/x-ms-wvx": {
    source: "apache",
    extensions: [
      "wvx"
    ]
  },
  "video/x-msvideo": {
    source: "apache",
    extensions: [
      "avi"
    ]
  },
  "video/x-sgi-movie": {
    source: "apache",
    extensions: [
      "movie"
    ]
  },
  "video/x-smv": {
    source: "apache",
    extensions: [
      "smv"
    ]
  },
  "x-conference/x-cooltalk": {
    source: "apache",
    extensions: [
      "ice"
    ]
  },
  "x-shader/x-fragment": {
    compressible: !0
  },
  "x-shader/x-vertex": {
    compressible: !0
  }
};
var Cr = Ff;
var Zp = Ee(function(i, e) {
  var t = Gt.default.extname, r = /^\s*([^;\s]*)(?:;|\s|$)/, s = /^text\//i;
  e.charset = o, e.charsets = { lookup: o }, e.contentType = l, e.extension = u, e.extensions = Object.create(null), e.lookup = v, e.types = Object.create(null), f(e.extensions, e.types);
  function o(c) {
    if (!c || typeof c != "string")
      return !1;
    var h = r.exec(c), b = h && Cr[h[1].toLowerCase()];
    return b && b.charset ? b.charset : h && s.test(h[1]) ? "UTF-8" : !1;
  }
  function l(c) {
    if (!c || typeof c != "string")
      return !1;
    var h = c.indexOf("/") === -1 ? e.lookup(c) : c;
    if (!h)
      return !1;
    if (h.indexOf("charset") === -1) {
      var b = e.charset(h);
      b && (h += "; charset=" + b.toLowerCase());
    }
    return h;
  }
  function u(c) {
    if (!c || typeof c != "string")
      return !1;
    var h = r.exec(c), b = h && e.extensions[h[1].toLowerCase()];
    return !b || !b.length ? !1 : b[0];
  }
  function v(c) {
    if (!c || typeof c != "string")
      return !1;
    var h = t("x." + c).toLowerCase().substr(1);
    return h && e.types[h] || !1;
  }
  function f(c, h) {
    var b = ["nginx", "apache", void 0, "iana"];
    Object.keys(Cr).forEach(function(S) {
      var D = Cr[S], L = D.extensions;
      if (!(!L || !L.length)) {
        c[S] = L;
        for (var R = 0; R < L.length; R++) {
          var B = L[R];
          if (h[B]) {
            var Q = b.indexOf(Cr[h[B]].source), ee = b.indexOf(D.source);
            if (h[B] !== "application/octet-stream" && (Q > ee || Q === ee && h[B].substr(0, 12) === "application/"))
              continue;
          }
          h[B] = S;
        }
      }
    });
  }
}), Cc = Gf;
function Gf(i) {
  var e = typeof setImmediate == "function" ? setImmediate : typeof process == "object" && typeof process.nextTick == "function" ? process.nextTick : null;
  e ? e(i) : setTimeout(i, 0);
}
var Xp = Lf;
function Lf(i) {
  var e = !1;
  return Cc(function() {
    e = !0;
  }), function(r, s) {
    e ? i(r, s) : Cc(function() {
      i(r, s);
    });
  };
}
var Pc = Uf;
function Uf(i) {
  Object.keys(i.jobs).forEach(If.bind(i)), i.jobs = {};
}
function If(i) {
  typeof this.jobs[i] == "function" && this.jobs[i]();
}
var eo = Bf;
function Bf(i, e, t, r) {
  var s = t.keyedList ? t.keyedList[t.index] : t.index;
  t.jobs[s] = Vf(e, s, i[s], function(o, l) {
    s in t.jobs && (delete t.jobs[s], o ? Pc(t) : t.results[s] = l, r(o, t.results));
  });
}
function Vf(i, e, t, r) {
  var s;
  return i.length == 2 ? s = i(t, Xp(r)) : s = i(t, e, Xp(r)), s;
}
var Dc = jf;
function jf(i, e) {
  var t = !Array.isArray(i), r = {
    index: 0,
    keyedList: t || e ? Object.keys(i) : null,
    jobs: {},
    results: t ? {} : [],
    size: t ? Object.keys(i).length : i.length
  };
  return e && r.keyedList.sort(t ? e : function(s, o) {
    return e(i[s], i[o]);
  }), r;
}
var Oc = Mf;
function Mf(i) {
  !Object.keys(this.jobs).length || (this.index = this.size, Pc(this), Xp(i)(null, this.results));
}
var qf = zf;
function zf(i, e, t) {
  for (var r = Dc(i); r.index < (r.keyedList || i).length; )
    eo(i, e, r, function(s, o) {
      if (s) {
        t(s, o);
        return;
      }
      if (Object.keys(r.jobs).length === 0) {
        t(null, r.results);
        return;
      }
    }), r.index++;
  return Oc.bind(r, t);
}
var Pr = Wf, $f = kc, Hf = Qf;
function Wf(i, e, t, r) {
  var s = Dc(i, t);
  return eo(i, e, s, function o(l, u) {
    if (l) {
      r(l, u);
      return;
    }
    if (s.index++, s.index < (s.keyedList || i).length) {
      eo(i, e, s, o);
      return;
    }
    r(null, s.results);
  }), Oc.bind(s, r);
}
function kc(i, e) {
  return i < e ? -1 : i > e ? 1 : 0;
}
function Qf(i, e) {
  return -1 * kc(i, e);
}
Pr.ascending = $f, Pr.descending = Hf;
var Kf = Yf;
function Yf(i, e, t) {
  return Pr(i, e, null, t);
}
var Jf = {
  parallel: qf,
  serial: Kf,
  serialOrdered: Pr
}, ao = function(i, e) {
  return Object.keys(e).forEach(function(t) {
    i[t] = i[t] || e[t];
  }), i;
}, Zf = Ea.default.parse, Xf = na.default.Stream, eh = Te;
ka.default.inherits(Te, Jp);
function Te(i) {
  if (!(this instanceof Te))
    return new Te(i);
  this._overheadLength = 0, this._valueLength = 0, this._valuesToMeasure = [], Jp.call(this), i = i || {};
  for (var e in i)
    this[e] = i[e];
}
Te.LINE_BREAK = `\r
`, Te.DEFAULT_CONTENT_TYPE = "application/octet-stream", Te.prototype.append = function(i, e, t) {
  t = t || {}, typeof t == "string" && (t = { filename: t });
  var r = Jp.prototype.append.bind(this);
  if (typeof e == "number" && (e = "" + e), ka.default.isArray(e)) {
    this._error(new Error("Arrays are not supported."));
    return;
  }
  var s = this._multiPartHeader(i, e, t), o = this._multiPartFooter();
  r(s), r(e), r(o), this._trackLength(s, e, t);
}, Te.prototype._trackLength = function(i, e, t) {
  var r = 0;
  t.knownLength != null ? r += +t.knownLength : Buffer.isBuffer(e) ? r = e.length : typeof e == "string" && (r = Buffer.byteLength(e)), this._valueLength += r, this._overheadLength += Buffer.byteLength(i) + Te.LINE_BREAK.length, !(!e || !e.path && !(e.readable && e.hasOwnProperty("httpVersion")) && !(e instanceof Xf)) && (t.knownLength || this._valuesToMeasure.push(e));
}, Te.prototype._lengthRetriever = function(i, e) {
  i.hasOwnProperty("fd") ? i.end != null && i.end != 1 / 0 && i.start != null ? e(null, i.end + 1 - (i.start ? i.start : 0)) : ot.default.stat(i.path, function(t, r) {
    var s;
    if (t) {
      e(t);
      return;
    }
    s = r.size - (i.start ? i.start : 0), e(null, s);
  }) : i.hasOwnProperty("httpVersion") ? e(null, +i.headers["content-length"]) : i.hasOwnProperty("httpModule") ? (i.on("response", function(t) {
    i.pause(), e(null, +t.headers["content-length"]);
  }), i.resume()) : e("Unknown stream");
}, Te.prototype._multiPartHeader = function(i, e, t) {
  if (typeof t.header == "string")
    return t.header;
  var r = this._getContentDisposition(e, t), s = this._getContentType(e, t), o = "", l = {
    "Content-Disposition": ["form-data", 'name="' + i + '"'].concat(r || []),
    "Content-Type": [].concat(s || [])
  };
  typeof t.header == "object" && ao(l, t.header);
  var u;
  for (var v in l)
    !l.hasOwnProperty(v) || (u = l[v], u != null && (Array.isArray(u) || (u = [u]), u.length && (o += v + ": " + u.join("; ") + Te.LINE_BREAK)));
  return "--" + this.getBoundary() + Te.LINE_BREAK + o + Te.LINE_BREAK;
}, Te.prototype._getContentDisposition = function(i, e) {
  var t, r;
  return typeof e.filepath == "string" ? t = Gt.default.normalize(e.filepath).replace(/\\/g, "/") : e.filename || i.name || i.path ? t = Gt.default.basename(e.filename || i.name || i.path) : i.readable && i.hasOwnProperty("httpVersion") && (t = Gt.default.basename(i.client._httpMessage.path || "")), t && (r = 'filename="' + t + '"'), r;
}, Te.prototype._getContentType = function(i, e) {
  var t = e.contentType;
  return !t && i.name && (t = Zp.lookup(i.name)), !t && i.path && (t = Zp.lookup(i.path)), !t && i.readable && i.hasOwnProperty("httpVersion") && (t = i.headers["content-type"]), !t && (e.filepath || e.filename) && (t = Zp.lookup(e.filepath || e.filename)), !t && typeof i == "object" && (t = Te.DEFAULT_CONTENT_TYPE), t;
}, Te.prototype._multiPartFooter = function() {
  return function(i) {
    var e = Te.LINE_BREAK, t = this._streams.length === 0;
    t && (e += this._lastBoundary()), i(e);
  }.bind(this);
}, Te.prototype._lastBoundary = function() {
  return "--" + this.getBoundary() + "--" + Te.LINE_BREAK;
}, Te.prototype.getHeaders = function(i) {
  var e, t = {
    "content-type": "multipart/form-data; boundary=" + this.getBoundary()
  };
  for (e in i)
    i.hasOwnProperty(e) && (t[e.toLowerCase()] = i[e]);
  return t;
}, Te.prototype.setBoundary = function(i) {
  this._boundary = i;
}, Te.prototype.getBoundary = function() {
  return this._boundary || this._generateBoundary(), this._boundary;
}, Te.prototype.getBuffer = function() {
  for (var i = new Buffer.alloc(0), e = this.getBoundary(), t = 0, r = this._streams.length; t < r; t++)
    typeof this._streams[t] != "function" && (Buffer.isBuffer(this._streams[t]) ? i = Buffer.concat([i, this._streams[t]]) : i = Buffer.concat([i, Buffer.from(this._streams[t])]), (typeof this._streams[t] != "string" || this._streams[t].substring(2, e.length + 2) !== e) && (i = Buffer.concat([i, Buffer.from(Te.LINE_BREAK)])));
  return Buffer.concat([i, Buffer.from(this._lastBoundary())]);
}, Te.prototype._generateBoundary = function() {
  for (var i = "--------------------------", e = 0; e < 24; e++)
    i += Math.floor(Math.random() * 10).toString(16);
  this._boundary = i;
}, Te.prototype.getLengthSync = function() {
  var i = this._overheadLength + this._valueLength;
  return this._streams.length && (i += this._lastBoundary().length), this.hasKnownLength() || this._error(new Error("Cannot calculate proper length in synchronous way.")), i;
}, Te.prototype.hasKnownLength = function() {
  var i = !0;
  return this._valuesToMeasure.length && (i = !1), i;
}, Te.prototype.getLength = function(i) {
  var e = this._overheadLength + this._valueLength;
  if (this._streams.length && (e += this._lastBoundary().length), !this._valuesToMeasure.length) {
    process.nextTick(i.bind(this, null, e));
    return;
  }
  Jf.parallel(this._valuesToMeasure, this._lengthRetriever, function(t, r) {
    if (t) {
      i(t);
      return;
    }
    r.forEach(function(s) {
      e += s;
    }), i(null, e);
  });
}, Te.prototype.submit = function(i, e) {
  var t, r, s = { method: "post" };
  return typeof i == "string" ? (i = Zf(i), r = ao({
    port: i.port,
    path: i.pathname,
    host: i.hostname,
    protocol: i.protocol
  }, s)) : (r = ao(i, s), r.port || (r.port = r.protocol == "https:" ? 443 : 80)), r.headers = this.getHeaders(i.headers), r.protocol == "https:" ? t = ti.default.request(r) : t = bt.default.request(r), this.getLength(function(o, l) {
    if (o && o !== "Unknown stream") {
      this._error(o);
      return;
    }
    if (l && t.setHeader("Content-Length", l), this.pipe(t), e) {
      var u, v = function(f, c) {
        return t.removeListener("error", v), t.removeListener("response", u), e.call(this, f, c);
      };
      u = v.bind(this, null), t.on("error", v), t.on("response", u);
    }
  }.bind(this)), t;
}, Te.prototype._error = function(i) {
  this.error || (this.error = i, this.pause(), this.emit("error", i));
}, Te.prototype.toString = function() {
  return "[object FormData]";
};
var ah = eh, th = {
  "Content-Type": "application/x-www-form-urlencoded"
};
function Nc(i, e) {
  !W.isUndefined(i) && W.isUndefined(i["Content-Type"]) && (i["Content-Type"] = e);
}
function ih() {
  var i;
  return typeof XMLHttpRequest != "undefined" ? i = df : typeof process != "undefined" && Object.prototype.toString.call(process) === "[object process]" && (i = Nf), i;
}
function nh(i, e, t) {
  if (W.isString(i))
    try {
      return (e || JSON.parse)(i), W.trim(i);
    } catch (r) {
      if (r.name !== "SyntaxError")
        throw r;
    }
  return (t || JSON.stringify)(i);
}
var Dr = {
  transitional: Vp,
  adapter: ih(),
  transformRequest: [function(e, t) {
    if (lc(t, "Accept"), lc(t, "Content-Type"), W.isFormData(e) || W.isArrayBuffer(e) || W.isBuffer(e) || W.isStream(e) || W.isFile(e) || W.isBlob(e))
      return e;
    if (W.isArrayBufferView(e))
      return e.buffer;
    if (W.isURLSearchParams(e))
      return Nc(t, "application/x-www-form-urlencoded;charset=utf-8"), e.toString();
    var r = W.isObject(e), s = t && t["Content-Type"], o;
    if ((o = W.isFileList(e)) || r && s === "multipart/form-data") {
      var l = this.env && this.env.FormData;
      return mc(o ? { "files[]": e } : e, l && new l());
    } else if (r || s === "application/json")
      return Nc(t, "application/json"), nh(e);
    return e;
  }],
  transformResponse: [function(e) {
    var t = this.transitional || Dr.transitional, r = t && t.silentJSONParsing, s = t && t.forcedJSONParsing, o = !r && this.responseType === "json";
    if (o || s && W.isString(e) && e.length)
      try {
        return JSON.parse(e);
      } catch (l) {
        if (o)
          throw l.name === "SyntaxError" ? le.from(l, le.ERR_BAD_RESPONSE, this, null, this.response) : l;
      }
    return e;
  }],
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: ah
  },
  validateStatus: function(e) {
    return e >= 200 && e < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*"
    }
  }
};
W.forEach(["delete", "get", "head"], function(e) {
  Dr.headers[e] = {};
}), W.forEach(["post", "put", "patch"], function(e) {
  Dr.headers[e] = W.merge(th);
});
var to = Dr, io = function(e, t, r) {
  var s = this || to;
  return W.forEach(r, function(l) {
    e = l.call(s, e, t);
  }), e;
}, Fc = function(e) {
  return !!(e && e.__CANCEL__);
};
function no(i) {
  if (i.cancelToken && i.cancelToken.throwIfRequested(), i.signal && i.signal.aborted)
    throw new vn();
}
var Gc = function(e) {
  no(e), e.headers = e.headers || {}, e.data = io.call(e, e.data, e.headers, e.transformRequest), e.headers = W.merge(e.headers.common || {}, e.headers[e.method] || {}, e.headers), W.forEach(["delete", "get", "head", "post", "put", "patch", "common"], function(s) {
    delete e.headers[s];
  });
  var t = e.adapter || to.adapter;
  return t(e).then(function(s) {
    return no(e), s.data = io.call(e, s.data, s.headers, e.transformResponse), s;
  }, function(s) {
    return Fc(s) || (no(e), s && s.response && (s.response.data = io.call(e, s.response.data, s.response.headers, e.transformResponse))), Promise.reject(s);
  });
}, _n = function(e, t) {
  t = t || {};
  var r = {};
  function s(c, h) {
    return W.isPlainObject(c) && W.isPlainObject(h) ? W.merge(c, h) : W.isPlainObject(h) ? W.merge({}, h) : W.isArray(h) ? h.slice() : h;
  }
  function o(c) {
    if (W.isUndefined(t[c])) {
      if (!W.isUndefined(e[c]))
        return s(void 0, e[c]);
    } else
      return s(e[c], t[c]);
  }
  function l(c) {
    if (!W.isUndefined(t[c]))
      return s(void 0, t[c]);
  }
  function u(c) {
    if (W.isUndefined(t[c])) {
      if (!W.isUndefined(e[c]))
        return s(void 0, e[c]);
    } else
      return s(void 0, t[c]);
  }
  function v(c) {
    if (c in t)
      return s(e[c], t[c]);
    if (c in e)
      return s(void 0, e[c]);
  }
  var f = {
    url: l,
    method: l,
    data: l,
    baseURL: u,
    transformRequest: u,
    transformResponse: u,
    paramsSerializer: u,
    timeout: u,
    timeoutMessage: u,
    withCredentials: u,
    adapter: u,
    responseType: u,
    xsrfCookieName: u,
    xsrfHeaderName: u,
    onUploadProgress: u,
    onDownloadProgress: u,
    decompress: u,
    maxContentLength: u,
    maxBodyLength: u,
    beforeRedirect: u,
    transport: u,
    httpAgent: u,
    httpsAgent: u,
    cancelToken: u,
    socketPath: u,
    responseEncoding: u,
    validateStatus: v
  };
  return W.forEach(Object.keys(e).concat(Object.keys(t)), function(h) {
    var b = f[h] || o, x = b(h);
    W.isUndefined(x) && b !== v || (r[h] = x);
  }), r;
}, rh = Yp.version, ro = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach(function(i, e) {
  ro[i] = function(r) {
    return typeof r === i || "a" + (e < 1 ? "n " : " ") + i;
  };
});
var Lc = {};
ro.transitional = function(e, t, r) {
  function s(o, l) {
    return "[Axios v" + rh + "] Transitional option '" + o + "'" + l + (r ? ". " + r : "");
  }
  return function(o, l, u) {
    if (e === !1)
      throw new le(s(l, " has been removed" + (t ? " in " + t : "")), le.ERR_DEPRECATED);
    return t && !Lc[l] && (Lc[l] = !0, console.warn(s(l, " has been deprecated since v" + t + " and will be removed in the near future"))), e ? e(o, l, u) : !0;
  };
};
function sh(i, e, t) {
  if (typeof i != "object")
    throw new le("options must be an object", le.ERR_BAD_OPTION_VALUE);
  for (var r = Object.keys(i), s = r.length; s-- > 0; ) {
    var o = r[s], l = e[o];
    if (l) {
      var u = i[o], v = u === void 0 || l(u, o, i);
      if (v !== !0)
        throw new le("option " + o + " must be " + v, le.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (t !== !0)
      throw new le("Unknown option " + o, le.ERR_BAD_OPTION);
  }
}
var Uc = {
  assertOptions: sh,
  validators: ro
}, Li = Uc.validators;
function Ui(i) {
  this.defaults = i, this.interceptors = {
    request: new dc(),
    response: new dc()
  };
}
Ui.prototype.request = function(e, t) {
  typeof e == "string" ? (t = t || {}, t.url = e) : t = e || {}, t = _n(this.defaults, t), t.method ? t.method = t.method.toLowerCase() : this.defaults.method ? t.method = this.defaults.method.toLowerCase() : t.method = "get";
  var r = t.transitional;
  r !== void 0 && Uc.assertOptions(r, {
    silentJSONParsing: Li.transitional(Li.boolean),
    forcedJSONParsing: Li.transitional(Li.boolean),
    clarifyTimeoutError: Li.transitional(Li.boolean)
  }, !1);
  var s = [], o = !0;
  this.interceptors.request.forEach(function(x) {
    typeof x.runWhen == "function" && x.runWhen(t) === !1 || (o = o && x.synchronous, s.unshift(x.fulfilled, x.rejected));
  });
  var l = [];
  this.interceptors.response.forEach(function(x) {
    l.push(x.fulfilled, x.rejected);
  });
  var u;
  if (!o) {
    var v = [Gc, void 0];
    for (Array.prototype.unshift.apply(v, s), v = v.concat(l), u = Promise.resolve(t); v.length; )
      u = u.then(v.shift(), v.shift());
    return u;
  }
  for (var f = t; s.length; ) {
    var c = s.shift(), h = s.shift();
    try {
      f = c(f);
    } catch (b) {
      h(b);
      break;
    }
  }
  try {
    u = Gc(f);
  } catch (b) {
    return Promise.reject(b);
  }
  for (; l.length; )
    u = u.then(l.shift(), l.shift());
  return u;
}, Ui.prototype.getUri = function(e) {
  e = _n(this.defaults, e);
  var t = Mp(e.baseURL, e.url);
  return Sr(t, e.params, e.paramsSerializer);
}, W.forEach(["delete", "get", "head", "options"], function(e) {
  Ui.prototype[e] = function(t, r) {
    return this.request(_n(r || {}, {
      method: e,
      url: t,
      data: (r || {}).data
    }));
  };
}), W.forEach(["post", "put", "patch"], function(e) {
  function t(r) {
    return function(o, l, u) {
      return this.request(_n(u || {}, {
        method: e,
        headers: r ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: o,
        data: l
      }));
    };
  }
  Ui.prototype[e] = t(), Ui.prototype[e + "Form"] = t(!0);
});
var Or = Ui;
function Ii(i) {
  if (typeof i != "function")
    throw new TypeError("executor must be a function.");
  var e;
  this.promise = new Promise(function(s) {
    e = s;
  });
  var t = this;
  this.promise.then(function(r) {
    if (!!t._listeners) {
      var s, o = t._listeners.length;
      for (s = 0; s < o; s++)
        t._listeners[s](r);
      t._listeners = null;
    }
  }), this.promise.then = function(r) {
    var s, o = new Promise(function(l) {
      t.subscribe(l), s = l;
    }).then(r);
    return o.cancel = function() {
      t.unsubscribe(s);
    }, o;
  }, i(function(s) {
    t.reason || (t.reason = new vn(s), e(t.reason));
  });
}
Ii.prototype.throwIfRequested = function() {
  if (this.reason)
    throw this.reason;
}, Ii.prototype.subscribe = function(e) {
  if (this.reason) {
    e(this.reason);
    return;
  }
  this._listeners ? this._listeners.push(e) : this._listeners = [e];
}, Ii.prototype.unsubscribe = function(e) {
  if (!!this._listeners) {
    var t = this._listeners.indexOf(e);
    t !== -1 && this._listeners.splice(t, 1);
  }
}, Ii.source = function() {
  var e, t = new Ii(function(s) {
    e = s;
  });
  return {
    token: t,
    cancel: e
  };
};
var ph = Ii, oh = function(e) {
  return function(r) {
    return e.apply(null, r);
  };
}, dh = function(e) {
  return W.isObject(e) && e.isAxiosError === !0;
};
function Ic(i) {
  var e = new Or(i), t = rc(Or.prototype.request, e);
  return W.extend(t, Or.prototype, e), W.extend(t, e), t.create = function(s) {
    return Ic(_n(i, s));
  }, t;
}
var Ta = Ic(to);
Ta.Axios = Or, Ta.CanceledError = vn, Ta.CancelToken = ph, Ta.isCancel = Fc, Ta.VERSION = Yp.version, Ta.toFormData = mc, Ta.AxiosError = le, Ta.Cancel = Ta.CanceledError, Ta.all = function(e) {
  return Promise.all(e);
}, Ta.spread = oh, Ta.isAxiosError = dh;
var lh = Ta, ch = Ta;
lh.default = ch;
class uh extends Error {
}
uh.prototype.name = "AssertionError";
var mh = function(i, e) {
  return new so(i, e).parse();
};
class so {
  constructor(e, t) {
    this.source = e, this.transform = t || fh, this.position = 0, this.entries = [], this.recorded = [], this.dimension = 0;
  }
  isEof() {
    return this.position >= this.source.length;
  }
  nextCharacter() {
    var e = this.source[this.position++];
    return e === "\\" ? {
      value: this.source[this.position++],
      escaped: !0
    } : {
      value: e,
      escaped: !1
    };
  }
  record(e) {
    this.recorded.push(e);
  }
  newEntry(e) {
    var t;
    (this.recorded.length > 0 || e) && (t = this.recorded.join(""), t === "NULL" && !e && (t = null), t !== null && (t = this.transform(t)), this.entries.push(t), this.recorded = []);
  }
  consumeDimensions() {
    if (this.source[0] === "[")
      for (; !this.isEof(); ) {
        var e = this.nextCharacter();
        if (e.value === "=")
          break;
      }
  }
  parse(e) {
    var t, r, s;
    for (this.consumeDimensions(); !this.isEof(); )
      if (t = this.nextCharacter(), t.value === "{" && !s)
        this.dimension++, this.dimension > 1 && (r = new so(this.source.substr(this.position - 1), this.transform), this.entries.push(r.parse(!0)), this.position += r.position - 2);
      else if (t.value === "}" && !s) {
        if (this.dimension--, !this.dimension && (this.newEntry(), e))
          return this.entries;
      } else
        t.value === '"' && !t.escaped ? (s && this.newEntry(!0), s = !s) : t.value === "," && !s ? this.newEntry() : this.record(t.value);
    if (this.dimension !== 0)
      throw new Error("array dimension not balanced");
    return this.entries;
  }
}
function fh(i) {
  return i;
}
var Bi = {
  parse: mh
}, Vi = {
  create: function(i, e) {
    return {
      parse: function() {
        return Bi.parse(i, e);
      }
    };
  }
}, hh = /(\d{1,})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})(\.\d{1,})?.*?( BC)?$/, vh = /^(\d{1,})-(\d{2})-(\d{2})( BC)?$/, gh = /([Z+-])(\d{2})?:?(\d{2})?:?(\d{2})?/, wh = /^-?infinity$/, kr = function(e) {
  if (wh.test(e))
    return Number(e.replace("i", "I"));
  var t = hh.exec(e);
  if (!t)
    return bh(e) || null;
  var r = !!t[8], s = parseInt(t[1], 10);
  r && (s = Bc(s));
  var o = parseInt(t[2], 10) - 1, l = t[3], u = parseInt(t[4], 10), v = parseInt(t[5], 10), f = parseInt(t[6], 10), c = t[7];
  c = c ? 1e3 * parseFloat(c) : 0;
  var h, b = _h(e);
  return b != null ? (h = new Date(Date.UTC(s, o, l, u, v, f, c)), po(s) && h.setUTCFullYear(s), b !== 0 && h.setTime(h.getTime() - b)) : (h = new Date(s, o, l, u, v, f, c), po(s) && h.setFullYear(s)), h;
};
function bh(i) {
  var e = vh.exec(i);
  if (!!e) {
    var t = parseInt(e[1], 10), r = !!e[4];
    r && (t = Bc(t));
    var s = parseInt(e[2], 10) - 1, o = e[3], l = new Date(t, s, o);
    return po(t) && l.setFullYear(t), l;
  }
}
function _h(i) {
  if (i.endsWith("+00"))
    return 0;
  var e = gh.exec(i.split(" ")[1]);
  if (!!e) {
    var t = e[1];
    if (t === "Z")
      return 0;
    var r = t === "-" ? -1 : 1, s = parseInt(e[2], 10) * 3600 + parseInt(e[3] || 0, 10) * 60 + parseInt(e[4] || 0, 10);
    return s * r * 1e3;
  }
}
function Bc(i) {
  return -(i - 1);
}
function po(i) {
  return i >= 0 && i < 100;
}
var xh = Eh, yh = Object.prototype.hasOwnProperty;
function Eh(i) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e];
    for (var r in t)
      yh.call(t, r) && (i[r] = t[r]);
  }
  return i;
}
var Vc = ji;
function ji(i) {
  if (!(this instanceof ji))
    return new ji(i);
  xh(this, Gh(i));
}
var Th = ["seconds", "minutes", "hours", "days", "months", "years"];
ji.prototype.toPostgres = function() {
  var i = Th.filter(this.hasOwnProperty, this);
  return this.milliseconds && i.indexOf("seconds") < 0 && i.push("seconds"), i.length === 0 ? "0" : i.map(function(e) {
    var t = this[e] || 0;
    return e === "seconds" && this.milliseconds && (t = (t + this.milliseconds / 1e3).toFixed(6).replace(/\.?0+$/, "")), t + " " + e;
  }, this).join(" ");
};
var Sh = {
  years: "Y",
  months: "M",
  days: "D",
  hours: "H",
  minutes: "M",
  seconds: "S"
}, Ah = ["years", "months", "days"], Rh = ["hours", "minutes", "seconds"];
ji.prototype.toISOString = ji.prototype.toISO = function() {
  var i = Ah.map(t, this).join(""), e = Rh.map(t, this).join("");
  return "P" + i + "T" + e;
  function t(r) {
    var s = this[r] || 0;
    return r === "seconds" && this.milliseconds && (s = (s + this.milliseconds / 1e3).toFixed(6).replace(/0+$/, "")), s + Sh[r];
  }
};
var oo = "([+-]?\\d+)", Ch = oo + "\\s+years?", Ph = oo + "\\s+mons?", Dh = oo + "\\s+days?", Oh = "([+-])?([\\d]*):(\\d\\d):(\\d\\d)\\.?(\\d{1,6})?", kh = new RegExp([Ch, Ph, Dh, Oh].map(function(i) {
  return "(" + i + ")?";
}).join("\\s*")), jc = {
  years: 2,
  months: 4,
  days: 6,
  hours: 9,
  minutes: 10,
  seconds: 11,
  milliseconds: 12
}, Nh = ["hours", "minutes", "seconds", "milliseconds"];
function Fh(i) {
  var e = i + "000000".slice(i.length);
  return parseInt(e, 10) / 1e3;
}
function Gh(i) {
  if (!i)
    return {};
  var e = kh.exec(i), t = e[8] === "-";
  return Object.keys(jc).reduce(function(r, s) {
    var o = jc[s], l = e[o];
    return !l || (l = s === "milliseconds" ? Fh(l) : parseInt(l, 10), !l) || (t && ~Nh.indexOf(s) && (l *= -1), r[s] = l), r;
  }, {});
}
var Mc = function(e) {
  if (/^\\x/.test(e))
    return new Buffer(e.substr(2), "hex");
  for (var t = "", r = 0; r < e.length; )
    if (e[r] !== "\\")
      t += e[r], ++r;
    else if (/[0-7]{3}/.test(e.substr(r + 1, 3)))
      t += String.fromCharCode(parseInt(e.substr(r + 1, 3), 8)), r += 4;
    else {
      for (var s = 1; r + s < e.length && e[r + s] === "\\"; )
        s++;
      for (var o = 0; o < Math.floor(s / 2); ++o)
        t += "\\";
      r += Math.floor(s / 2) * 2;
    }
  return new Buffer(t, "binary");
};
function Nr(i) {
  return function(t) {
    return t === null ? t : i(t);
  };
}
function qc(i) {
  return i === null ? i : i === "TRUE" || i === "t" || i === "true" || i === "y" || i === "yes" || i === "on" || i === "1";
}
function Lh(i) {
  return i ? Bi.parse(i, qc) : null;
}
function Uh(i) {
  return parseInt(i, 10);
}
function lo(i) {
  return i ? Bi.parse(i, Nr(Uh)) : null;
}
function Ih(i) {
  return i ? Bi.parse(i, Nr(function(e) {
    return zc(e).trim();
  })) : null;
}
var Bh = function(i) {
  if (!i)
    return null;
  var e = Vi.create(i, function(t) {
    return t !== null && (t = fo(t)), t;
  });
  return e.parse();
}, co = function(i) {
  if (!i)
    return null;
  var e = Vi.create(i, function(t) {
    return t !== null && (t = parseFloat(t)), t;
  });
  return e.parse();
}, Ha = function(i) {
  if (!i)
    return null;
  var e = Vi.create(i);
  return e.parse();
}, uo = function(i) {
  if (!i)
    return null;
  var e = Vi.create(i, function(t) {
    return t !== null && (t = kr(t)), t;
  });
  return e.parse();
}, Vh = function(i) {
  if (!i)
    return null;
  var e = Vi.create(i, function(t) {
    return t !== null && (t = Vc(t)), t;
  });
  return e.parse();
}, jh = function(i) {
  return i ? Bi.parse(i, Nr(Mc)) : null;
}, mo = function(i) {
  return parseInt(i, 10);
}, zc = function(i) {
  var e = String(i);
  return /^\d+$/.test(e) ? e : i;
}, $c = function(i) {
  return i ? Bi.parse(i, Nr(JSON.parse)) : null;
}, fo = function(i) {
  return i[0] !== "(" ? null : (i = i.substring(1, i.length - 1).split(","), {
    x: parseFloat(i[0]),
    y: parseFloat(i[1])
  });
}, Mh = function(i) {
  if (i[0] !== "<" && i[1] !== "(")
    return null;
  for (var e = "(", t = "", r = !1, s = 2; s < i.length - 1; s++) {
    if (r || (e += i[s]), i[s] === ")") {
      r = !0;
      continue;
    } else if (!r)
      continue;
    i[s] !== "," && (t += i[s]);
  }
  var o = fo(e);
  return o.radius = parseFloat(t), o;
}, qh = function(i) {
  i(20, zc), i(21, mo), i(23, mo), i(26, mo), i(700, parseFloat), i(701, parseFloat), i(16, qc), i(1082, kr), i(1114, kr), i(1184, kr), i(600, fo), i(651, Ha), i(718, Mh), i(1e3, Lh), i(1001, jh), i(1005, lo), i(1007, lo), i(1028, lo), i(1016, Ih), i(1017, Bh), i(1021, co), i(1022, co), i(1231, co), i(1014, Ha), i(1015, Ha), i(1008, Ha), i(1009, Ha), i(1040, Ha), i(1041, Ha), i(1115, uo), i(1182, uo), i(1185, uo), i(1186, Vc), i(1187, Vh), i(17, Mc), i(114, JSON.parse.bind(JSON)), i(3802, JSON.parse.bind(JSON)), i(199, $c), i(3807, $c), i(3907, Ha), i(2951, Ha), i(791, Ha), i(1183, Ha), i(1270, Ha);
}, zh = {
  init: qh
}, Sa = 1e6;
function $h(i) {
  var e = i.readInt32BE(0), t = i.readUInt32BE(4), r = "";
  e < 0 && (e = ~e + (t === 0), t = ~t + 1 >>> 0, r = "-");
  var s = "", o, l, u, v, f, c;
  {
    if (o = e % Sa, e = e / Sa >>> 0, l = 4294967296 * o + t, t = l / Sa >>> 0, u = "" + (l - Sa * t), t === 0 && e === 0)
      return r + u + s;
    for (v = "", f = 6 - u.length, c = 0; c < f; c++)
      v += "0";
    s = v + u + s;
  }
  {
    if (o = e % Sa, e = e / Sa >>> 0, l = 4294967296 * o + t, t = l / Sa >>> 0, u = "" + (l - Sa * t), t === 0 && e === 0)
      return r + u + s;
    for (v = "", f = 6 - u.length, c = 0; c < f; c++)
      v += "0";
    s = v + u + s;
  }
  {
    if (o = e % Sa, e = e / Sa >>> 0, l = 4294967296 * o + t, t = l / Sa >>> 0, u = "" + (l - Sa * t), t === 0 && e === 0)
      return r + u + s;
    for (v = "", f = 6 - u.length, c = 0; c < f; c++)
      v += "0";
    s = v + u + s;
  }
  return o = e % Sa, l = 4294967296 * o + t, u = "" + l % Sa, r + u + s;
}
var Hh = $h, Ue = function(i, e, t, r, s) {
  t = t || 0, r = r || !1, s = s || function(x, S, D) {
    return x * Math.pow(2, D) + S;
  };
  var o = t >> 3, l = function(x) {
    return r ? ~x & 255 : x;
  }, u = 255, v = 8 - t % 8;
  e < v && (u = 255 << 8 - e & 255, v = e), t && (u = u >> t % 8);
  var f = 0;
  t % 8 + e >= 8 && (f = s(0, l(i[o]) & u, v));
  for (var c = e + t >> 3, h = o + 1; h < c; h++)
    f = s(f, l(i[h]), 8);
  var b = (e + t) % 8;
  return b > 0 && (f = s(f, l(i[c]) >> 8 - b, b)), f;
}, Hc = function(i, e, t) {
  var r = Math.pow(2, t - 1) - 1, s = Ue(i, 1), o = Ue(i, t, 1);
  if (o === 0)
    return 0;
  var l = 1, u = function(f, c, h) {
    f === 0 && (f = 1);
    for (var b = 1; b <= h; b++)
      l /= 2, (c & 1 << h - b) > 0 && (f += l);
    return f;
  }, v = Ue(i, e, t + 1, !1, u);
  return o == Math.pow(2, t + 1) - 1 ? v === 0 ? s === 0 ? 1 / 0 : -1 / 0 : NaN : (s === 0 ? 1 : -1) * Math.pow(2, o - r) * v;
}, Wh = function(i) {
  return Ue(i, 1) == 1 ? -1 * (Ue(i, 15, 1, !0) + 1) : Ue(i, 15, 1);
}, Wc = function(i) {
  return Ue(i, 1) == 1 ? -1 * (Ue(i, 31, 1, !0) + 1) : Ue(i, 31, 1);
}, Qh = function(i) {
  return Hc(i, 23, 8);
}, Kh = function(i) {
  return Hc(i, 52, 11);
}, Yh = function(i) {
  var e = Ue(i, 16, 32);
  if (e == 49152)
    return NaN;
  for (var t = Math.pow(1e4, Ue(i, 16, 16)), r = 0, s = Ue(i, 16), o = 0; o < s; o++)
    r += Ue(i, 16, 64 + 16 * o) * t, t /= 1e4;
  var l = Math.pow(10, Ue(i, 16, 48));
  return (e === 0 ? 1 : -1) * Math.round(r * l) / l;
}, Qc = function(i, e) {
  var t = Ue(e, 1), r = Ue(e, 63, 1), s = new Date((t === 0 ? 1 : -1) * r / 1e3 + 9466848e5);
  return i || s.setTime(s.getTime() + s.getTimezoneOffset() * 6e4), s.usec = r % 1e3, s.getMicroSeconds = function() {
    return this.usec;
  }, s.setMicroSeconds = function(o) {
    this.usec = o;
  }, s.getUTCMicroSeconds = function() {
    return this.usec;
  }, s;
}, xn = function(i) {
  var e = Ue(i, 32);
  Ue(i, 32, 32);
  for (var t = Ue(i, 32, 64), r = 96, s = [], o = 0; o < e; o++)
    s[o] = Ue(i, 32, r), r += 32, r += 32;
  var l = function(v) {
    var f = Ue(i, 32, r);
    if (r += 32, f == 4294967295)
      return null;
    var c;
    if (v == 23 || v == 20)
      return c = Ue(i, f * 8, r), r += f * 8, c;
    if (v == 25)
      return c = i.toString(this.encoding, r >> 3, (r += f << 3) >> 3), c;
    console.log("ERROR: ElementType not implemented: " + v);
  }, u = function(v, f) {
    var c = [], h;
    if (v.length > 1) {
      var b = v.shift();
      for (h = 0; h < b; h++)
        c[h] = u(v, f);
      v.unshift(b);
    } else
      for (h = 0; h < v[0]; h++)
        c[h] = l(f);
    return c;
  };
  return u(s, t);
}, Jh = function(i) {
  return i.toString("utf8");
}, Zh = function(i) {
  return i === null ? null : Ue(i, 8) > 0;
}, Xh = function(i) {
  i(20, Hh), i(21, Wh), i(23, Wc), i(26, Wc), i(1700, Yh), i(700, Qh), i(701, Kh), i(16, Zh), i(1114, Qc.bind(null, !1)), i(1184, Qc.bind(null, !0)), i(1e3, xn), i(1007, xn), i(1016, xn), i(1008, xn), i(1009, xn), i(25, Jh);
}, ev = {
  init: Xh
}, av = {
  BOOL: 16,
  BYTEA: 17,
  CHAR: 18,
  INT8: 20,
  INT2: 21,
  INT4: 23,
  REGPROC: 24,
  TEXT: 25,
  OID: 26,
  TID: 27,
  XID: 28,
  CID: 29,
  JSON: 114,
  XML: 142,
  PG_NODE_TREE: 194,
  SMGR: 210,
  PATH: 602,
  POLYGON: 604,
  CIDR: 650,
  FLOAT4: 700,
  FLOAT8: 701,
  ABSTIME: 702,
  RELTIME: 703,
  TINTERVAL: 704,
  CIRCLE: 718,
  MACADDR8: 774,
  MONEY: 790,
  MACADDR: 829,
  INET: 869,
  ACLITEM: 1033,
  BPCHAR: 1042,
  VARCHAR: 1043,
  DATE: 1082,
  TIME: 1083,
  TIMESTAMP: 1114,
  TIMESTAMPTZ: 1184,
  INTERVAL: 1186,
  TIMETZ: 1266,
  BIT: 1560,
  VARBIT: 1562,
  NUMERIC: 1700,
  REFCURSOR: 1790,
  REGPROCEDURE: 2202,
  REGOPER: 2203,
  REGOPERATOR: 2204,
  REGCLASS: 2205,
  REGTYPE: 2206,
  UUID: 2950,
  TXID_SNAPSHOT: 2970,
  PG_LSN: 3220,
  PG_NDISTINCT: 3361,
  PG_DEPENDENCIES: 3402,
  TSVECTOR: 3614,
  TSQUERY: 3615,
  GTSVECTOR: 3642,
  REGCONFIG: 3734,
  REGDICTIONARY: 3769,
  JSONB: 3802,
  REGNAMESPACE: 4089,
  REGROLE: 4096
}, tv = sv, iv = pv, nv = Vi, rv = av, yn = {
  text: {},
  binary: {}
};
function Kc(i) {
  return String(i);
}
function sv(i, e) {
  return e = e || "text", yn[e] && yn[e][i] || Kc;
}
function pv(i, e, t) {
  typeof e == "function" && (t = e, e = "text"), yn[e][i] = t;
}
zh.init(function(i, e) {
  yn.text[i] = e;
}), ev.init(function(i, e) {
  yn.binary[i] = e;
});
var Tt = {
  getTypeParser: tv,
  setTypeParser: iv,
  arrayParser: nv,
  builtins: rv
}, En = Ee(function(i) {
  i.exports = {
    host: "localhost",
    user: process.platform === "win32" ? process.env.USERNAME : process.env.USER,
    database: void 0,
    password: null,
    connectionString: void 0,
    port: 5432,
    rows: 0,
    binary: !1,
    max: 10,
    idleTimeoutMillis: 3e4,
    client_encoding: "",
    ssl: !1,
    application_name: void 0,
    fallback_application_name: void 0,
    options: void 0,
    parseInputDatesAsUTC: !1,
    statement_timeout: !1,
    lock_timeout: !1,
    idle_in_transaction_session_timeout: !1,
    query_timeout: !1,
    connect_timeout: 0,
    keepalives: 1,
    keepalives_idle: 0
  };
  var e = Tt.getTypeParser(20, "text"), t = Tt.getTypeParser(1016, "text");
  i.exports.__defineSetter__("parseInt8", function(r) {
    Tt.setTypeParser(20, "text", r ? Tt.getTypeParser(23, "text") : e), Tt.setTypeParser(1016, "text", r ? Tt.getTypeParser(1007, "text") : t);
  });
});
function ov(i) {
  var e = i.replace(/\\/g, "\\\\").replace(/"/g, '\\"');
  return '"' + e + '"';
}
function Yc(i) {
  for (var e = "{", t = 0; t < i.length; t++)
    t > 0 && (e = e + ","), i[t] === null || typeof i[t] == "undefined" ? e = e + "NULL" : Array.isArray(i[t]) ? e = e + Yc(i[t]) : i[t] instanceof Buffer ? e += "\\\\x" + i[t].toString("hex") : e += ov(Fr(i[t]));
  return e = e + "}", e;
}
var Fr = function(i, e) {
  if (i == null)
    return null;
  if (i instanceof Buffer)
    return i;
  if (ArrayBuffer.isView(i)) {
    var t = Buffer.from(i.buffer, i.byteOffset, i.byteLength);
    return t.length === i.byteLength ? t : t.slice(i.byteOffset, i.byteOffset + i.byteLength);
  }
  return i instanceof Date ? En.parseInputDatesAsUTC ? cv(i) : lv(i) : Array.isArray(i) ? Yc(i) : typeof i == "object" ? dv(i, e) : i.toString();
};
function dv(i, e) {
  if (i && typeof i.toPostgres == "function") {
    if (e = e || [], e.indexOf(i) !== -1)
      throw new Error('circular reference detected while preparing "' + i + '" for query');
    return e.push(i), Fr(i.toPostgres(Fr), e);
  }
  return JSON.stringify(i);
}
function ma(i, e) {
  for (i = "" + i; i.length < e; )
    i = "0" + i;
  return i;
}
function lv(i) {
  var e = -i.getTimezoneOffset(), t = i.getFullYear(), r = t < 1;
  r && (t = Math.abs(t) + 1);
  var s = ma(t, 4) + "-" + ma(i.getMonth() + 1, 2) + "-" + ma(i.getDate(), 2) + "T" + ma(i.getHours(), 2) + ":" + ma(i.getMinutes(), 2) + ":" + ma(i.getSeconds(), 2) + "." + ma(i.getMilliseconds(), 3);
  return e < 0 ? (s += "-", e *= -1) : s += "+", s += ma(Math.floor(e / 60), 2) + ":" + ma(e % 60, 2), r && (s += " BC"), s;
}
function cv(i) {
  var e = i.getUTCFullYear(), t = e < 1;
  t && (e = Math.abs(e) + 1);
  var r = ma(e, 4) + "-" + ma(i.getUTCMonth() + 1, 2) + "-" + ma(i.getUTCDate(), 2) + "T" + ma(i.getUTCHours(), 2) + ":" + ma(i.getUTCMinutes(), 2) + ":" + ma(i.getUTCSeconds(), 2) + "." + ma(i.getUTCMilliseconds(), 3);
  return r += "+00:00", t && (r += " BC"), r;
}
function uv(i, e, t) {
  return i = typeof i == "string" ? { text: i } : i, e && (typeof e == "function" ? i.callback = e : i.values = e), t && (i.callback = t), i;
}
const mv = function(i) {
  return '"' + i.replace(/"/g, '""') + '"';
}, fv = function(i) {
  for (var e = !1, t = "'", r = 0; r < i.length; r++) {
    var s = i[r];
    s === "'" ? t += s + s : s === "\\" ? (t += s + s, e = !0) : t += s;
  }
  return t += "'", e === !0 && (t = " E" + t), t;
};
var zt = {
  prepareValue: function(e) {
    return Fr(e);
  },
  normalizeQueryConfig: uv,
  escapeIdentifier: mv,
  escapeLiteral: fv
};
function ho(i) {
  return ni.default.createHash("md5").update(i, "utf-8").digest("hex");
}
function hv(i, e, t) {
  var r = ho(e + i), s = ho(Buffer.concat([Buffer.from(r), t]));
  return "md5" + s;
}
function vv(i) {
  return ni.default.createHash("sha256").update(i).digest();
}
function gv(i, e) {
  return ni.default.createHmac("sha256", i).update(e).digest();
}
async function wv(i, e, t) {
  return ni.default.pbkdf2Sync(i, e, t, 32, "sha256");
}
var bv = {
  postgresMd5PasswordHash: hv,
  randomBytes: ni.default.randomBytes,
  deriveKey: wv,
  sha256: vv,
  hmacSha256: gv,
  md5: ho
}, $t = Ee(function(i) {
  if (parseInt(process.versions && process.versions.node && process.versions.node.split(".")[0]) < 15) {
    i.exports = bv;
    return;
  }
  i.exports = {
    postgresMd5PasswordHash: u,
    randomBytes: o,
    deriveKey: c,
    sha256: v,
    hmacSha256: f,
    md5: l
  };
  const t = ni.default.webcrypto || globalThis.crypto, r = t.subtle, s = new TextEncoder();
  function o(h) {
    return t.getRandomValues(Buffer.alloc(h));
  }
  async function l(h) {
    try {
      return ni.default.createHash("md5").update(h, "utf-8").digest("hex");
    } catch (b) {
      const x = typeof h == "string" ? s.encode(h) : h, S = await r.digest("MD5", x);
      return Array.from(new Uint8Array(S)).map((D) => D.toString(16).padStart(2, "0")).join("");
    }
  }
  async function u(h, b, x) {
    var S = await l(b + h), D = await l(Buffer.concat([Buffer.from(S), x]));
    return "md5" + D;
  }
  async function v(h) {
    return await r.digest("SHA-256", h);
  }
  async function f(h, b) {
    const x = await r.importKey("raw", h, { name: "HMAC", hash: "SHA-256" }, !1, ["sign"]);
    return await r.sign("HMAC", x, s.encode(b));
  }
  async function c(h, b, x) {
    const S = await r.importKey("raw", s.encode(h), "PBKDF2", !1, ["deriveBits"]), D = { name: "PBKDF2", hash: "SHA-256", salt: b, iterations: x };
    return await r.deriveBits(D, S, 32 * 8, ["deriveBits"]);
  }
});
function _v(i) {
  if (i.indexOf("SCRAM-SHA-256") === -1)
    throw new Error("SASL: Only mechanism SCRAM-SHA-256 is currently supported");
  const e = $t.randomBytes(18).toString("base64");
  return {
    mechanism: "SCRAM-SHA-256",
    clientNonce: e,
    response: "n,,n=*,r=" + e,
    message: "SASLInitialResponse"
  };
}
async function xv(i, e, t) {
  if (i.message !== "SASLInitialResponse")
    throw new Error("SASL: Last message was not SASLInitialResponse");
  if (typeof e != "string")
    throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string");
  if (e === "")
    throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a non-empty string");
  if (typeof t != "string")
    throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: serverData must be a string");
  const r = Tv(t);
  if (r.nonce.startsWith(i.clientNonce)) {
    if (r.nonce.length === i.clientNonce.length)
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce is too short");
  } else
    throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce");
  var s = "n=*,r=" + i.clientNonce, o = "r=" + r.nonce + ",s=" + r.salt + ",i=" + r.iteration, l = "c=biws,r=" + r.nonce, u = s + "," + o + "," + l, v = Buffer.from(r.salt, "base64"), f = await $t.deriveKey(e, v, r.iteration), c = await $t.hmacSha256(f, "Client Key"), h = await $t.sha256(c), b = await $t.hmacSha256(h, u), x = Av(Buffer.from(c), Buffer.from(b)).toString("base64"), S = await $t.hmacSha256(f, "Server Key"), D = await $t.hmacSha256(S, u);
  i.message = "SASLResponse", i.serverSignature = Buffer.from(D).toString("base64"), i.response = l + ",p=" + x;
}
function yv(i, e) {
  if (i.message !== "SASLResponse")
    throw new Error("SASL: Last message was not SASLResponse");
  if (typeof e != "string")
    throw new Error("SASL: SCRAM-SERVER-FINAL-MESSAGE: serverData must be a string");
  const { serverSignature: t } = Sv(e);
  if (t !== i.serverSignature)
    throw new Error("SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature does not match");
}
function Ev(i) {
  if (typeof i != "string")
    throw new TypeError("SASL: text must be a string");
  return i.split("").map((e, t) => i.charCodeAt(t)).every((e) => e >= 33 && e <= 43 || e >= 45 && e <= 126);
}
function Jc(i) {
  return /^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.test(i);
}
function Zc(i) {
  if (typeof i != "string")
    throw new TypeError("SASL: attribute pairs text must be a string");
  return new Map(i.split(",").map((e) => {
    if (!/^.=/.test(e))
      throw new Error("SASL: Invalid attribute pair entry");
    const t = e[0], r = e.substring(2);
    return [t, r];
  }));
}
function Tv(i) {
  const e = Zc(i), t = e.get("r");
  if (t) {
    if (!Ev(t))
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce must only contain printable characters");
  } else
    throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing");
  const r = e.get("s");
  if (r) {
    if (!Jc(r))
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: salt must be base64");
  } else
    throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing");
  const s = e.get("i");
  if (s) {
    if (!/^[1-9][0-9]*$/.test(s))
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: invalid iteration count");
  } else
    throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing");
  const o = parseInt(s, 10);
  return {
    nonce: t,
    salt: r,
    iteration: o
  };
}
function Sv(i) {
  const t = Zc(i).get("v");
  if (t) {
    if (!Jc(t))
      throw new Error("SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature must be base64");
  } else
    throw new Error("SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature is missing");
  return {
    serverSignature: t
  };
}
function Av(i, e) {
  if (!Buffer.isBuffer(i))
    throw new TypeError("first argument must be a Buffer");
  if (!Buffer.isBuffer(e))
    throw new TypeError("second argument must be a Buffer");
  if (i.length !== e.length)
    throw new Error("Buffer lengths must match");
  if (i.length === 0)
    throw new Error("Buffers cannot be empty");
  return Buffer.from(i.map((t, r) => i[r] ^ e[r]));
}
var vo = {
  startSession: _v,
  continueSession: xv,
  finalizeSession: yv
};
function Gr(i) {
  this._types = i || Tt, this.text = {}, this.binary = {};
}
Gr.prototype.getOverrides = function(i) {
  switch (i) {
    case "text":
      return this.text;
    case "binary":
      return this.binary;
    default:
      return {};
  }
}, Gr.prototype.setTypeParser = function(i, e, t) {
  typeof e == "function" && (t = e, e = "text"), this.getOverrides(e)[i] = t;
}, Gr.prototype.getTypeParser = function(i, e) {
  return e = e || "text", this.getOverrides(e)[i] || this._types.getTypeParser(i, e);
};
var Xc = Gr;
function go(i) {
  if (i.charAt(0) === "/") {
    const u = i.split(" ");
    return { host: u[0], database: u[1] };
  }
  const e = {};
  let t, r = !1;
  / |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(i) && (i = encodeURI(i).replace(/\%25(\d\d)/g, "%$1"));
  try {
    t = new URL(i, "postgres://base");
  } catch (u) {
    t = new URL(i.replace("@/", "@___DUMMY___/"), "postgres://base"), r = !0;
  }
  for (const u of t.searchParams.entries())
    e[u[0]] = u[1];
  if (e.user = e.user || decodeURIComponent(t.username), e.password = e.password || decodeURIComponent(t.password), e.port = t.port, t.protocol == "socket:")
    return e.host = decodeURI(t.pathname), e.database = t.searchParams.get("db"), e.client_encoding = t.searchParams.get("encoding"), e;
  const s = r ? "" : t.hostname;
  e.host ? s && (t.pathname = s + t.pathname) : e.host = decodeURIComponent(s);
  const o = t.pathname.slice(1) || null;
  e.database = o ? decodeURI(o) : null, (e.ssl === "true" || e.ssl === "1") && (e.ssl = !0), e.ssl === "0" && (e.ssl = !1), (e.sslcert || e.sslkey || e.sslrootcert || e.sslmode) && (e.ssl = {});
  const l = e.sslcert || e.sslkey || e.sslrootcert ? ot.default : null;
  switch (e.sslcert && (e.ssl.cert = l.readFileSync(e.sslcert).toString()), e.sslkey && (e.ssl.key = l.readFileSync(e.sslkey).toString()), e.sslrootcert && (e.ssl.ca = l.readFileSync(e.sslrootcert).toString()), e.sslmode) {
    case "disable": {
      e.ssl = !1;
      break;
    }
    case "prefer":
    case "require":
    case "verify-ca":
    case "verify-full":
      break;
    case "no-verify": {
      e.ssl.rejectUnauthorized = !1;
      break;
    }
  }
  return e;
}
var Rv = go;
go.parse = go;
var eu = Rv.parse, ga = function(i, e, t) {
  return t === void 0 ? t = process.env["PG" + i.toUpperCase()] : t === !1 || (t = process.env[t]), e[i] || t || En[i];
}, Cv = function() {
  switch (process.env.PGSSLMODE) {
    case "disable":
      return !1;
    case "prefer":
    case "require":
    case "verify-ca":
    case "verify-full":
      return !0;
    case "no-verify":
      return { rejectUnauthorized: !1 };
  }
  return En.ssl;
}, Mi = function(i) {
  return "'" + ("" + i).replace(/\\/g, "\\\\").replace(/'/g, "\\'") + "'";
}, Wa = function(i, e, t) {
  var r = e[t];
  r != null && i.push(t + "=" + Mi(r));
};
class Pv {
  constructor(e) {
    e = typeof e == "string" ? eu(e) : e || {}, e.connectionString && (e = Object.assign({}, e, eu(e.connectionString))), this.user = ga("user", e), this.database = ga("database", e), this.database === void 0 && (this.database = this.user), this.port = parseInt(ga("port", e), 10), this.host = ga("host", e), Object.defineProperty(this, "password", {
      configurable: !0,
      enumerable: !1,
      writable: !0,
      value: ga("password", e)
    }), this.binary = ga("binary", e), this.options = ga("options", e), this.ssl = typeof e.ssl == "undefined" ? Cv() : e.ssl, typeof this.ssl == "string" && this.ssl === "true" && (this.ssl = !0), this.ssl === "no-verify" && (this.ssl = { rejectUnauthorized: !1 }), this.ssl && this.ssl.key && Object.defineProperty(this.ssl, "key", {
      enumerable: !1
    }), this.client_encoding = ga("client_encoding", e), this.replication = ga("replication", e), this.isDomainSocket = !(this.host || "").indexOf("/"), this.application_name = ga("application_name", e, "PGAPPNAME"), this.fallback_application_name = ga("fallback_application_name", e, !1), this.statement_timeout = ga("statement_timeout", e, !1), this.lock_timeout = ga("lock_timeout", e, !1), this.idle_in_transaction_session_timeout = ga("idle_in_transaction_session_timeout", e, !1), this.query_timeout = ga("query_timeout", e, !1), e.connectionTimeoutMillis === void 0 ? this.connect_timeout = process.env.PGCONNECT_TIMEOUT || 0 : this.connect_timeout = Math.floor(e.connectionTimeoutMillis / 1e3), e.keepAlive === !1 ? this.keepalives = 0 : e.keepAlive === !0 && (this.keepalives = 1), typeof e.keepAliveInitialDelayMillis == "number" && (this.keepalives_idle = Math.floor(e.keepAliveInitialDelayMillis / 1e3));
  }
  getLibpqConnectionString(e) {
    var t = [];
    Wa(t, this, "user"), Wa(t, this, "password"), Wa(t, this, "port"), Wa(t, this, "application_name"), Wa(t, this, "fallback_application_name"), Wa(t, this, "connect_timeout"), Wa(t, this, "options");
    var r = typeof this.ssl == "object" ? this.ssl : this.ssl ? { sslmode: this.ssl } : {};
    if (Wa(t, r, "sslmode"), Wa(t, r, "sslca"), Wa(t, r, "sslkey"), Wa(t, r, "sslcert"), Wa(t, r, "sslrootcert"), this.database && t.push("dbname=" + Mi(this.database)), this.replication && t.push("replication=" + Mi(this.replication)), this.host && t.push("host=" + Mi(this.host)), this.isDomainSocket)
      return e(null, t.join(" "));
    this.client_encoding && t.push("client_encoding=" + Mi(this.client_encoding)), g5.default.lookup(this.host, function(s, o) {
      return s ? e(s, null) : (t.push("hostaddr=" + Mi(o)), e(null, t.join(" ")));
    });
  }
}
var au = Pv, tu = /^([A-Za-z]+)(?: (\d+))?(?: (\d+))?/;
class Dv {
  constructor(e, t) {
    this.command = null, this.rowCount = null, this.oid = null, this.rows = [], this.fields = [], this._parsers = void 0, this._types = t, this.RowCtor = null, this.rowAsArray = e === "array", this.rowAsArray && (this.parseRow = this._parseRowAsArray);
  }
  addCommandComplete(e) {
    var t;
    e.text ? t = tu.exec(e.text) : t = tu.exec(e.command), t && (this.command = t[1], t[3] ? (this.oid = parseInt(t[2], 10), this.rowCount = parseInt(t[3], 10)) : t[2] && (this.rowCount = parseInt(t[2], 10)));
  }
  _parseRowAsArray(e) {
    for (var t = new Array(e.length), r = 0, s = e.length; r < s; r++) {
      var o = e[r];
      o !== null ? t[r] = this._parsers[r](o) : t[r] = null;
    }
    return t;
  }
  parseRow(e) {
    for (var t = {}, r = 0, s = e.length; r < s; r++) {
      var o = e[r], l = this.fields[r].name;
      o !== null ? t[l] = this._parsers[r](o) : t[l] = null;
    }
    return t;
  }
  addRow(e) {
    this.rows.push(e);
  }
  addFields(e) {
    this.fields = e, this.fields.length && (this._parsers = new Array(e.length));
    for (var t = 0; t < e.length; t++) {
      var r = e[t];
      this._types ? this._parsers[t] = this._types.getTypeParser(r.dataTypeID, r.format || "text") : this._parsers[t] = Tt.getTypeParser(r.dataTypeID, r.format || "text");
    }
  }
}
var iu = Dv;
const { EventEmitter: Ov } = ii.default;
class kv extends Ov {
  constructor(e, t, r) {
    super();
    e = zt.normalizeQueryConfig(e, t, r), this.text = e.text, this.values = e.values, this.rows = e.rows, this.types = e.types, this.name = e.name, this.binary = e.binary, this.portal = e.portal || "", this.callback = e.callback, this._rowMode = e.rowMode, process.domain && e.callback && (this.callback = process.domain.bind(e.callback)), this._result = new iu(this._rowMode, this.types), this._results = this._result, this.isPreparedStatement = !1, this._canceledDueToError = !1, this._promise = null;
  }
  requiresPreparation() {
    return this.name || this.rows ? !0 : !this.text || !this.values ? !1 : this.values.length > 0;
  }
  _checkForMultirow() {
    this._result.command && (Array.isArray(this._results) || (this._results = [this._result]), this._result = new iu(this._rowMode, this.types), this._results.push(this._result));
  }
  handleRowDescription(e) {
    this._checkForMultirow(), this._result.addFields(e.fields), this._accumulateRows = this.callback || !this.listeners("row").length;
  }
  handleDataRow(e) {
    let t;
    if (!this._canceledDueToError) {
      try {
        t = this._result.parseRow(e.fields);
      } catch (r) {
        this._canceledDueToError = r;
        return;
      }
      this.emit("row", t, this._result), this._accumulateRows && this._result.addRow(t);
    }
  }
  handleCommandComplete(e, t) {
    this._checkForMultirow(), this._result.addCommandComplete(e), this.rows && t.sync();
  }
  handleEmptyQuery(e) {
    this.rows && e.sync();
  }
  handleError(e, t) {
    if (this._canceledDueToError && (e = this._canceledDueToError, this._canceledDueToError = !1), this.callback)
      return this.callback(e);
    this.emit("error", e);
  }
  handleReadyForQuery(e) {
    if (this._canceledDueToError)
      return this.handleError(this._canceledDueToError, e);
    if (this.callback)
      try {
        this.callback(null, this._results);
      } catch (t) {
        process.nextTick(() => {
          throw t;
        });
      }
    this.emit("end", this._results);
  }
  submit(e) {
    if (typeof this.text != "string" && typeof this.name != "string")
      return new Error("A query must have either text or a name. Supplying neither is unsupported.");
    const t = e.parsedStatements[this.name];
    return this.text && t && this.text !== t ? new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`) : this.values && !Array.isArray(this.values) ? new Error("Query values must be an array") : (this.requiresPreparation() ? this.prepare(e) : e.query(this.text), null);
  }
  hasBeenParsed(e) {
    return this.name && e.parsedStatements[this.name];
  }
  handlePortalSuspended(e) {
    this._getRows(e, this.rows);
  }
  _getRows(e, t) {
    e.execute({
      portal: this.portal,
      rows: t
    }), t ? e.flush() : e.sync();
  }
  prepare(e) {
    this.isPreparedStatement = !0, this.hasBeenParsed(e) || e.parse({
      text: this.text,
      name: this.name,
      types: this.types
    });
    try {
      e.bind({
        portal: this.portal,
        statement: this.name,
        values: this.values,
        binary: this.binary,
        valueMapper: zt.prepareValue
      });
    } catch (t) {
      this.handleError(t, e);
      return;
    }
    e.describe({
      type: "P",
      name: this.portal || ""
    }), this._getRows(e, this.rows);
  }
  handleCopyInResponse(e) {
    e.sendCopyFail("No source stream defined");
  }
  handleCopyData(e, t) {
  }
}
var nu = kv, Ie = Ee(function(i, e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.NoticeMessage = e.DataRowMessage = e.CommandCompleteMessage = e.ReadyForQueryMessage = e.NotificationResponseMessage = e.BackendKeyDataMessage = e.AuthenticationMD5Password = e.ParameterStatusMessage = e.ParameterDescriptionMessage = e.RowDescriptionMessage = e.Field = e.CopyResponse = e.CopyDataMessage = e.DatabaseError = e.copyDone = e.emptyQuery = e.replicationStart = e.portalSuspended = e.noData = e.closeComplete = e.bindComplete = e.parseComplete = void 0, e.parseComplete = {
    name: "parseComplete",
    length: 5
  }, e.bindComplete = {
    name: "bindComplete",
    length: 5
  }, e.closeComplete = {
    name: "closeComplete",
    length: 5
  }, e.noData = {
    name: "noData",
    length: 5
  }, e.portalSuspended = {
    name: "portalSuspended",
    length: 5
  }, e.replicationStart = {
    name: "replicationStart",
    length: 4
  }, e.emptyQuery = {
    name: "emptyQuery",
    length: 4
  }, e.copyDone = {
    name: "copyDone",
    length: 4
  };
  class t extends Error {
    constructor(R, B, Q) {
      super(R);
      this.length = B, this.name = Q;
    }
  }
  e.DatabaseError = t;
  class r {
    constructor(R, B) {
      this.length = R, this.chunk = B, this.name = "copyData";
    }
  }
  e.CopyDataMessage = r;
  class s {
    constructor(R, B, Q, ee) {
      this.length = R, this.name = B, this.binary = Q, this.columnTypes = new Array(ee);
    }
  }
  e.CopyResponse = s;
  class o {
    constructor(R, B, Q, ee, re, de, ne) {
      this.name = R, this.tableID = B, this.columnID = Q, this.dataTypeID = ee, this.dataTypeSize = re, this.dataTypeModifier = de, this.format = ne;
    }
  }
  e.Field = o;
  class l {
    constructor(R, B) {
      this.length = R, this.fieldCount = B, this.name = "rowDescription", this.fields = new Array(this.fieldCount);
    }
  }
  e.RowDescriptionMessage = l;
  class u {
    constructor(R, B) {
      this.length = R, this.parameterCount = B, this.name = "parameterDescription", this.dataTypeIDs = new Array(this.parameterCount);
    }
  }
  e.ParameterDescriptionMessage = u;
  class v {
    constructor(R, B, Q) {
      this.length = R, this.parameterName = B, this.parameterValue = Q, this.name = "parameterStatus";
    }
  }
  e.ParameterStatusMessage = v;
  class f {
    constructor(R, B) {
      this.length = R, this.salt = B, this.name = "authenticationMD5Password";
    }
  }
  e.AuthenticationMD5Password = f;
  class c {
    constructor(R, B, Q) {
      this.length = R, this.processID = B, this.secretKey = Q, this.name = "backendKeyData";
    }
  }
  e.BackendKeyDataMessage = c;
  class h {
    constructor(R, B, Q, ee) {
      this.length = R, this.processId = B, this.channel = Q, this.payload = ee, this.name = "notification";
    }
  }
  e.NotificationResponseMessage = h;
  class b {
    constructor(R, B) {
      this.length = R, this.status = B, this.name = "readyForQuery";
    }
  }
  e.ReadyForQueryMessage = b;
  class x {
    constructor(R, B) {
      this.length = R, this.text = B, this.name = "commandComplete";
    }
  }
  e.CommandCompleteMessage = x;
  class S {
    constructor(R, B) {
      this.length = R, this.fields = B, this.name = "dataRow", this.fieldCount = B.length;
    }
  }
  e.DataRowMessage = S;
  class D {
    constructor(R, B) {
      this.length = R, this.message = B, this.name = "notice";
    }
  }
  e.NoticeMessage = D;
}), wo = Ee(function(i, e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.Writer = void 0;
  class t {
    constructor(s = 256) {
      this.size = s, this.offset = 5, this.headerPosition = 0, this.buffer = Buffer.allocUnsafe(s);
    }
    ensure(s) {
      var o = this.buffer.length - this.offset;
      if (o < s) {
        var l = this.buffer, u = l.length + (l.length >> 1) + s;
        this.buffer = Buffer.allocUnsafe(u), l.copy(this.buffer);
      }
    }
    addInt32(s) {
      return this.ensure(4), this.buffer[this.offset++] = s >>> 24 & 255, this.buffer[this.offset++] = s >>> 16 & 255, this.buffer[this.offset++] = s >>> 8 & 255, this.buffer[this.offset++] = s >>> 0 & 255, this;
    }
    addInt16(s) {
      return this.ensure(2), this.buffer[this.offset++] = s >>> 8 & 255, this.buffer[this.offset++] = s >>> 0 & 255, this;
    }
    addCString(s) {
      if (!s)
        this.ensure(1);
      else {
        var o = Buffer.byteLength(s);
        this.ensure(o + 1), this.buffer.write(s, this.offset, "utf-8"), this.offset += o;
      }
      return this.buffer[this.offset++] = 0, this;
    }
    addString(s = "") {
      var o = Buffer.byteLength(s);
      return this.ensure(o), this.buffer.write(s, this.offset), this.offset += o, this;
    }
    add(s) {
      return this.ensure(s.length), s.copy(this.buffer, this.offset), this.offset += s.length, this;
    }
    join(s) {
      if (s) {
        this.buffer[this.headerPosition] = s;
        const o = this.offset - (this.headerPosition + 1);
        this.buffer.writeInt32BE(o, this.headerPosition + 1);
      }
      return this.buffer.slice(s ? 0 : 5, this.offset);
    }
    flush(s) {
      var o = this.join(s);
      return this.offset = 5, this.headerPosition = 0, this.buffer = Buffer.allocUnsafe(this.size), o;
    }
  }
  e.Writer = t;
}), Nv = Ee(function(i, e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.serialize = void 0;
  const t = new wo.Writer(), r = (H) => {
    t.addInt16(3).addInt16(0);
    for (const j of Object.keys(H))
      t.addCString(j).addCString(H[j]);
    t.addCString("client_encoding").addCString("UTF8");
    var O = t.addCString("").flush(), $ = O.length + 4;
    return new wo.Writer().addInt32($).add(O).flush();
  }, s = () => {
    const H = Buffer.allocUnsafe(8);
    return H.writeInt32BE(8, 0), H.writeInt32BE(80877103, 4), H;
  }, o = (H) => t.addCString(H).flush(112), l = function(H, O) {
    return t.addCString(H).addInt32(Buffer.byteLength(O)).addString(O), t.flush(112);
  }, u = function(H) {
    return t.addString(H).flush(112);
  }, v = (H) => t.addCString(H).flush(81), f = [], c = (H) => {
    const O = H.name || "";
    O.length > 63 && (console.error("Warning! Postgres only supports 63 characters for query names."), console.error("You supplied %s (%s)", O, O.length), console.error("This can cause conflicts and silent errors executing queries"));
    const $ = H.types || f;
    for (var j = $.length, J = t.addCString(O).addCString(H.text).addInt16(j), ce = 0; ce < j; ce++)
      J.addInt32($[ce]);
    return t.flush(80);
  }, h = new wo.Writer(), b = function(H, O) {
    for (let $ = 0; $ < H.length; $++) {
      const j = O ? O(H[$], $) : H[$];
      j == null ? (t.addInt16(0), h.addInt32(-1)) : j instanceof Buffer ? (t.addInt16(1), h.addInt32(j.length), h.add(j)) : (t.addInt16(0), h.addInt32(Buffer.byteLength(j)), h.addString(j));
    }
  }, x = (H = {}) => {
    const O = H.portal || "", $ = H.statement || "", j = H.binary || !1, J = H.values || f, ce = J.length;
    return t.addCString(O).addCString($), t.addInt16(ce), b(J, H.valueMapper), t.addInt16(ce), t.add(h.flush()), t.addInt16(j ? 1 : 0), t.flush(66);
  }, S = Buffer.from([69, 0, 0, 0, 9, 0, 0, 0, 0, 0]), D = (H) => {
    if (!H || !H.portal && !H.rows)
      return S;
    const O = H.portal || "", $ = H.rows || 0, j = Buffer.byteLength(O), J = 4 + j + 1 + 4, ce = Buffer.allocUnsafe(1 + J);
    return ce[0] = 69, ce.writeInt32BE(J, 1), ce.write(O, 5, "utf-8"), ce[j + 5] = 0, ce.writeUInt32BE($, ce.length - 4), ce;
  }, L = (H, O) => {
    const $ = Buffer.allocUnsafe(16);
    return $.writeInt32BE(16, 0), $.writeInt16BE(1234, 4), $.writeInt16BE(5678, 6), $.writeInt32BE(H, 8), $.writeInt32BE(O, 12), $;
  }, R = (H, O) => {
    const $ = Buffer.byteLength(O), j = 4 + $ + 1, J = Buffer.allocUnsafe(1 + j);
    return J[0] = H, J.writeInt32BE(j, 1), J.write(O, 5, "utf-8"), J[j] = 0, J;
  }, B = t.addCString("P").flush(68), Q = t.addCString("S").flush(68), ee = (H) => H.name ? R(68, `${H.type}${H.name || ""}`) : H.type === "P" ? B : Q, re = (H) => {
    const O = `${H.type}${H.name || ""}`;
    return R(67, O);
  }, de = (H) => t.add(H).flush(100), ne = (H) => R(102, H), F = (H) => Buffer.from([H, 0, 0, 0, 4]), N = F(72), G = F(83), V = F(88), ae = F(99), ie = {
    startup: r,
    password: o,
    requestSsl: s,
    sendSASLInitialResponseMessage: l,
    sendSCRAMClientFinalMessage: u,
    query: v,
    parse: c,
    bind: x,
    execute: D,
    describe: ee,
    close: re,
    flush: () => N,
    sync: () => G,
    end: () => V,
    copyData: de,
    copyDone: () => ae,
    copyFail: ne,
    cancel: L
  };
  e.serialize = ie;
}), Fv = Ee(function(i, e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.BufferReader = void 0;
  const t = Buffer.allocUnsafe(0);
  class r {
    constructor(o = 0) {
      this.offset = o, this.buffer = t, this.encoding = "utf-8";
    }
    setBuffer(o, l) {
      this.offset = o, this.buffer = l;
    }
    int16() {
      const o = this.buffer.readInt16BE(this.offset);
      return this.offset += 2, o;
    }
    byte() {
      const o = this.buffer[this.offset];
      return this.offset++, o;
    }
    int32() {
      const o = this.buffer.readInt32BE(this.offset);
      return this.offset += 4, o;
    }
    string(o) {
      const l = this.buffer.toString(this.encoding, this.offset, this.offset + o);
      return this.offset += o, l;
    }
    cstring() {
      const o = this.offset;
      let l = o;
      for (; this.buffer[l++] !== 0; )
        ;
      return this.offset = l, this.buffer.toString(this.encoding, o, l - 1);
    }
    bytes(o) {
      const l = this.buffer.slice(this.offset, this.offset + o);
      return this.offset += o, l;
    }
  }
  e.BufferReader = r;
}), Gv = Ee(function(i, e) {
  var t = Y && Y.__importDefault || function(f) {
    return f && f.__esModule ? f : { default: f };
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.Parser = void 0;
  const r = t(pp.default), s = 1, l = s + 4, u = Buffer.allocUnsafe(0);
  class v {
    constructor(c) {
      if (this.buffer = u, this.bufferLength = 0, this.bufferOffset = 0, this.reader = new Fv.BufferReader(), (c == null ? void 0 : c.mode) === "binary")
        throw new Error("Binary mode not supported yet");
      this.mode = (c == null ? void 0 : c.mode) || "text";
    }
    parse(c, h) {
      this.mergeBuffer(c);
      const b = this.bufferOffset + this.bufferLength;
      let x = this.bufferOffset;
      for (; x + l <= b; ) {
        const S = this.buffer[x], D = this.buffer.readUInt32BE(x + s), L = s + D;
        if (L + x <= b) {
          const R = this.handlePacket(x + l, S, D, this.buffer);
          h(R), x += L;
        } else
          break;
      }
      x === b ? (this.buffer = u, this.bufferLength = 0, this.bufferOffset = 0) : (this.bufferLength = b - x, this.bufferOffset = x);
    }
    mergeBuffer(c) {
      if (this.bufferLength > 0) {
        const h = this.bufferLength + c.byteLength;
        if (h + this.bufferOffset > this.buffer.byteLength) {
          let x;
          if (h <= this.buffer.byteLength && this.bufferOffset >= this.bufferLength)
            x = this.buffer;
          else {
            let S = this.buffer.byteLength * 2;
            for (; h >= S; )
              S *= 2;
            x = Buffer.allocUnsafe(S);
          }
          this.buffer.copy(x, 0, this.bufferOffset, this.bufferOffset + this.bufferLength), this.buffer = x, this.bufferOffset = 0;
        }
        c.copy(this.buffer, this.bufferOffset + this.bufferLength), this.bufferLength = h;
      } else
        this.buffer = c, this.bufferOffset = 0, this.bufferLength = c.byteLength;
    }
    handlePacket(c, h, b, x) {
      switch (h) {
        case 50:
          return Ie.bindComplete;
        case 49:
          return Ie.parseComplete;
        case 51:
          return Ie.closeComplete;
        case 110:
          return Ie.noData;
        case 115:
          return Ie.portalSuspended;
        case 99:
          return Ie.copyDone;
        case 87:
          return Ie.replicationStart;
        case 73:
          return Ie.emptyQuery;
        case 68:
          return this.parseDataRowMessage(c, b, x);
        case 67:
          return this.parseCommandCompleteMessage(c, b, x);
        case 90:
          return this.parseReadyForQueryMessage(c, b, x);
        case 65:
          return this.parseNotificationMessage(c, b, x);
        case 82:
          return this.parseAuthenticationResponse(c, b, x);
        case 83:
          return this.parseParameterStatusMessage(c, b, x);
        case 75:
          return this.parseBackendKeyData(c, b, x);
        case 69:
          return this.parseErrorMessage(c, b, x, "error");
        case 78:
          return this.parseErrorMessage(c, b, x, "notice");
        case 84:
          return this.parseRowDescriptionMessage(c, b, x);
        case 116:
          return this.parseParameterDescriptionMessage(c, b, x);
        case 71:
          return this.parseCopyInMessage(c, b, x);
        case 72:
          return this.parseCopyOutMessage(c, b, x);
        case 100:
          return this.parseCopyData(c, b, x);
        default:
          r.default.fail(`unknown message code: ${h.toString(16)}`);
      }
    }
    parseReadyForQueryMessage(c, h, b) {
      this.reader.setBuffer(c, b);
      const x = this.reader.string(1);
      return new Ie.ReadyForQueryMessage(h, x);
    }
    parseCommandCompleteMessage(c, h, b) {
      this.reader.setBuffer(c, b);
      const x = this.reader.cstring();
      return new Ie.CommandCompleteMessage(h, x);
    }
    parseCopyData(c, h, b) {
      const x = b.slice(c, c + (h - 4));
      return new Ie.CopyDataMessage(h, x);
    }
    parseCopyInMessage(c, h, b) {
      return this.parseCopyMessage(c, h, b, "copyInResponse");
    }
    parseCopyOutMessage(c, h, b) {
      return this.parseCopyMessage(c, h, b, "copyOutResponse");
    }
    parseCopyMessage(c, h, b, x) {
      this.reader.setBuffer(c, b);
      const S = this.reader.byte() !== 0, D = this.reader.int16(), L = new Ie.CopyResponse(h, x, S, D);
      for (let R = 0; R < D; R++)
        L.columnTypes[R] = this.reader.int16();
      return L;
    }
    parseNotificationMessage(c, h, b) {
      this.reader.setBuffer(c, b);
      const x = this.reader.int32(), S = this.reader.cstring(), D = this.reader.cstring();
      return new Ie.NotificationResponseMessage(h, x, S, D);
    }
    parseRowDescriptionMessage(c, h, b) {
      this.reader.setBuffer(c, b);
      const x = this.reader.int16(), S = new Ie.RowDescriptionMessage(h, x);
      for (let D = 0; D < x; D++)
        S.fields[D] = this.parseField();
      return S;
    }
    parseField() {
      const c = this.reader.cstring(), h = this.reader.int32(), b = this.reader.int16(), x = this.reader.int32(), S = this.reader.int16(), D = this.reader.int32(), L = this.reader.int16() === 0 ? "text" : "binary";
      return new Ie.Field(c, h, b, x, S, D, L);
    }
    parseParameterDescriptionMessage(c, h, b) {
      this.reader.setBuffer(c, b);
      const x = this.reader.int16(), S = new Ie.ParameterDescriptionMessage(h, x);
      for (let D = 0; D < x; D++)
        S.dataTypeIDs[D] = this.reader.int32();
      return S;
    }
    parseDataRowMessage(c, h, b) {
      this.reader.setBuffer(c, b);
      const x = this.reader.int16(), S = new Array(x);
      for (let D = 0; D < x; D++) {
        const L = this.reader.int32();
        S[D] = L === -1 ? null : this.reader.string(L);
      }
      return new Ie.DataRowMessage(h, S);
    }
    parseParameterStatusMessage(c, h, b) {
      this.reader.setBuffer(c, b);
      const x = this.reader.cstring(), S = this.reader.cstring();
      return new Ie.ParameterStatusMessage(h, x, S);
    }
    parseBackendKeyData(c, h, b) {
      this.reader.setBuffer(c, b);
      const x = this.reader.int32(), S = this.reader.int32();
      return new Ie.BackendKeyDataMessage(h, x, S);
    }
    parseAuthenticationResponse(c, h, b) {
      this.reader.setBuffer(c, b);
      const x = this.reader.int32(), S = {
        name: "authenticationOk",
        length: h
      };
      switch (x) {
        case 0:
          break;
        case 3:
          S.length === 8 && (S.name = "authenticationCleartextPassword");
          break;
        case 5:
          if (S.length === 12) {
            S.name = "authenticationMD5Password";
            const L = this.reader.bytes(4);
            return new Ie.AuthenticationMD5Password(h, L);
          }
          break;
        case 10:
          S.name = "authenticationSASL", S.mechanisms = [];
          let D;
          do
            D = this.reader.cstring(), D && S.mechanisms.push(D);
          while (D);
          break;
        case 11:
          S.name = "authenticationSASLContinue", S.data = this.reader.string(h - 8);
          break;
        case 12:
          S.name = "authenticationSASLFinal", S.data = this.reader.string(h - 8);
          break;
        default:
          throw new Error("Unknown authenticationOk message type " + x);
      }
      return S;
    }
    parseErrorMessage(c, h, b, x) {
      this.reader.setBuffer(c, b);
      const S = {};
      let D = this.reader.string(1);
      for (; D !== "\0"; )
        S[D] = this.reader.cstring(), D = this.reader.string(1);
      const L = S.M, R = x === "notice" ? new Ie.NoticeMessage(h, L) : new Ie.DatabaseError(L, h, x);
      return R.severity = S.S, R.code = S.C, R.detail = S.D, R.hint = S.H, R.position = S.P, R.internalPosition = S.p, R.internalQuery = S.q, R.where = S.W, R.schema = S.s, R.table = S.t, R.column = S.c, R.dataType = S.d, R.constraint = S.n, R.file = S.F, R.line = S.L, R.routine = S.R, R;
    }
  }
  e.Parser = v;
}), ru = Ee(function(i, e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.DatabaseError = e.serialize = e.parse = void 0, Object.defineProperty(e, "DatabaseError", { enumerable: !0, get: function() {
    return Ie.DatabaseError;
  } }), Object.defineProperty(e, "serialize", { enumerable: !0, get: function() {
    return Nv.serialize;
  } });
  function t(r, s) {
    const o = new Gv.Parser();
    return r.on("data", (l) => o.parse(l, s)), new Promise((l) => r.on("end", () => l()));
  }
  e.parse = t;
});
class Lv extends Kd.EventEmitter {
  constructor(e) {
    super();
    this.ssl = e, this.writable = !1, this.destroyed = !1, this._upgrading = !1, this._upgraded = !1, this._cfSocket = null, this._cfWriter = null, this._cfReader = null;
  }
  setNoDelay() {
    return this;
  }
  setKeepAlive() {
    return this;
  }
  ref() {
    return this;
  }
  unref() {
    return this;
  }
  async connect(e, t, r) {
    try {
      su("connecting"), r && this.once("connect", r);
      const s = this.ssl ? { secureTransport: "starttls" } : {}, { connect: o } = await Promise.resolve().then(function() {
        return /* @__PURE__ */ h5(require("cloudflare:sockets"));
      });
      return this._cfSocket = o(`${t}:${e}`, s), this._cfWriter = this._cfSocket.writable.getWriter(), this._addClosedHandler(), this._cfReader = this._cfSocket.readable.getReader(), this.ssl ? this._listenOnce().catch((l) => this.emit("error", l)) : this._listen().catch((l) => this.emit("error", l)), await this._cfWriter.ready, su("socket ready"), this.writable = !0, this.emit("connect"), this;
    } catch (s) {
      this.emit("error", s);
    }
  }
  async _listen() {
    for (; ; ) {
      const { done: e, value: t } = await this._cfReader.read();
      if (e)
        break;
      this.emit("data", Buffer.from(t));
    }
  }
  async _listenOnce() {
    const { done: e, value: t } = await this._cfReader.read();
    this.emit("data", Buffer.from(t));
  }
  write(e, t = "utf8", r = () => {
  }) {
    return e.length === 0 ? r() : (typeof e == "string" && (e = Buffer.from(e, t)), this._cfWriter.write(e).then(() => {
      r();
    }, (s) => {
      r(s);
    }), !0);
  }
  end(e = Buffer.alloc(0), t = "utf8", r = () => {
  }) {
    return this.write(e, t, (s) => {
      this._cfSocket.close(), r && r(s);
    }), this;
  }
  destroy(e) {
    return this.destroyed = !0, this.end();
  }
  startTls(e) {
    if (this._upgraded) {
      this.emit("error", "Cannot call `startTls()` more than once on a socket");
      return;
    }
    this._cfWriter.releaseLock(), this._cfReader.releaseLock(), this._upgrading = !0, this._cfSocket = this._cfSocket.startTls(e), this._cfWriter = this._cfSocket.writable.getWriter(), this._cfReader = this._cfSocket.readable.getReader(), this._addClosedHandler(), this._listen().catch((t) => this.emit("error", t));
  }
  _addClosedHandler() {
    this._cfSocket.closed.then(() => {
      this._upgrading ? (this._upgrading = !1, this._upgraded = !0) : (this._cfSocket = null, this.emit("close"));
    }).catch((e) => this.emit("error", e));
  }
}
function su(...i) {
}
var Uv = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  CloudflareSocket: Lv
}), Iv = /* @__PURE__ */ on(Uv), Bv = function(e) {
  const t = Yd.default;
  if (typeof t.Socket == "function")
    return new t.Socket();
  {
    const { CloudflareSocket: r } = Iv;
    return new r(e);
  }
}, Vv = function(e) {
  var t = Jd.default;
  return t.connect ? t.connect(e) : (e.socket.startTls(e), e.socket);
}, jv = {
  getStream: Bv,
  getSecureStream: Vv
}, Mv = ii.default.EventEmitter;
const { parse: qv, serialize: ea } = ru, { getStream: zv, getSecureStream: $v } = jv, Hv = ea.flush(), Wv = ea.sync(), Qv = ea.end();
class Kv extends Mv {
  constructor(e) {
    super();
    e = e || {}, this.stream = e.stream || zv(e.ssl), typeof this.stream == "function" && (this.stream = this.stream(e)), this._keepAlive = e.keepAlive, this._keepAliveInitialDelayMillis = e.keepAliveInitialDelayMillis, this.lastBuffer = !1, this.parsedStatements = {}, this.ssl = e.ssl || !1, this._ending = !1, this._emitMessage = !1;
    var t = this;
    this.on("newListener", function(r) {
      r === "message" && (t._emitMessage = !0);
    });
  }
  connect(e, t) {
    var r = this;
    this._connecting = !0, this.stream.setNoDelay(!0), this.stream.connect(e, t), this.stream.once("connect", function() {
      r._keepAlive && r.stream.setKeepAlive(!0, r._keepAliveInitialDelayMillis), r.emit("connect");
    });
    const s = function(o) {
      r._ending && (o.code === "ECONNRESET" || o.code === "EPIPE") || r.emit("error", o);
    };
    if (this.stream.on("error", s), this.stream.on("close", function() {
      r.emit("end");
    }), !this.ssl)
      return this.attachListeners(this.stream);
    this.stream.once("data", function(o) {
      var l = o.toString("utf8");
      switch (l) {
        case "S":
          break;
        case "N":
          return r.stream.end(), r.emit("error", new Error("The server does not support SSL connections"));
        default:
          return r.stream.end(), r.emit("error", new Error("There was an error establishing an SSL connection"));
      }
      const u = {
        socket: r.stream
      };
      r.ssl !== !0 && (Object.assign(u, r.ssl), "key" in r.ssl && (u.key = r.ssl.key));
      var v = Yd.default;
      v.isIP && v.isIP(t) === 0 && (u.servername = t);
      try {
        r.stream = $v(u);
      } catch (f) {
        return r.emit("error", f);
      }
      r.attachListeners(r.stream), r.stream.on("error", s), r.emit("sslconnect");
    });
  }
  attachListeners(e) {
    qv(e, (t) => {
      var r = t.name === "error" ? "errorMessage" : t.name;
      this._emitMessage && this.emit("message", t), this.emit(r, t);
    });
  }
  requestSsl() {
    this.stream.write(ea.requestSsl());
  }
  startup(e) {
    this.stream.write(ea.startup(e));
  }
  cancel(e, t) {
    this._send(ea.cancel(e, t));
  }
  password(e) {
    this._send(ea.password(e));
  }
  sendSASLInitialResponseMessage(e, t) {
    this._send(ea.sendSASLInitialResponseMessage(e, t));
  }
  sendSCRAMClientFinalMessage(e) {
    this._send(ea.sendSCRAMClientFinalMessage(e));
  }
  _send(e) {
    return this.stream.writable ? this.stream.write(e) : !1;
  }
  query(e) {
    this._send(ea.query(e));
  }
  parse(e) {
    this._send(ea.parse(e));
  }
  bind(e) {
    this._send(ea.bind(e));
  }
  execute(e) {
    this._send(ea.execute(e));
  }
  flush() {
    this.stream.writable && this.stream.write(Hv);
  }
  sync() {
    this._ending = !0, this._send(Wv);
  }
  ref() {
    this.stream.ref();
  }
  unref() {
    this.stream.unref();
  }
  end() {
    if (this._ending = !0, !this._connecting || !this.stream.writable) {
      this.stream.end();
      return;
    }
    return this.stream.write(Qv, () => {
      this.stream.end();
    });
  }
  close(e) {
    this._send(ea.close(e));
  }
  describe(e) {
    this._send(ea.describe(e));
  }
  sendCopyFromChunk(e) {
    this._send(ea.copyData(e));
  }
  endCopyFrom() {
    this._send(ea.copyDone());
  }
  sendCopyFail(e) {
    this._send(ea.copyFail(e));
  }
}
var pu = Kv;
const { Transform: Yv } = na.default, { StringDecoder: Jv } = w5.default, Ht = Symbol("last"), Lr = Symbol("decoder");
function Zv(i, e, t) {
  let r;
  if (this.overflow) {
    if (r = this[Lr].write(i).split(this.matcher), r.length === 1)
      return t();
    r.shift(), this.overflow = !1;
  } else
    this[Ht] += this[Lr].write(i), r = this[Ht].split(this.matcher);
  this[Ht] = r.pop();
  for (let s = 0; s < r.length; s++)
    try {
      ou(this, this.mapper(r[s]));
    } catch (o) {
      return t(o);
    }
  if (this.overflow = this[Ht].length > this.maxLength, this.overflow && !this.skipOverflow) {
    t(new Error("maximum buffer reached"));
    return;
  }
  t();
}
function Xv(i) {
  if (this[Ht] += this[Lr].end(), this[Ht])
    try {
      ou(this, this.mapper(this[Ht]));
    } catch (e) {
      return i(e);
    }
  i();
}
function ou(i, e) {
  e !== void 0 && i.push(e);
}
function du(i) {
  return i;
}
function eg(i, e, t) {
  switch (i = i || /\r?\n/, e = e || du, t = t || {}, arguments.length) {
    case 1:
      typeof i == "function" ? (e = i, i = /\r?\n/) : typeof i == "object" && !(i instanceof RegExp) && !i[Symbol.split] && (t = i, i = /\r?\n/);
      break;
    case 2:
      typeof i == "function" ? (t = e, e = i, i = /\r?\n/) : typeof e == "object" && (t = e, e = du);
  }
  t = Object.assign({}, t), t.autoDestroy = !0, t.transform = Zv, t.flush = Xv, t.readableObjectMode = !0;
  const r = new Yv(t);
  return r[Ht] = "", r[Lr] = new Jv("utf8"), r.matcher = i, r.mapper = e, r.maxLength = t.maxLength, r.skipOverflow = t.skipOverflow || !1, r.overflow = !1, r._destroy = function(s, o) {
    this._writableState.errorEmitted = !1, o(s);
  }, r;
}
var ag = eg, Ur = Ee(function(i) {
  var e = na.default.Stream, t = 5432, r = process.platform === "win32", s = process.stderr, o = 56, l = 7, u = 61440, v = 32768;
  function f(R) {
    return (R & u) == v;
  }
  var c = ["host", "port", "database", "user", "password"], h = c.length, b = c[h - 1];
  function x() {
    var R = s instanceof e && s.writable === !0;
    if (R) {
      var B = Array.prototype.slice.call(arguments).concat(`
`);
      s.write(ka.default.format.apply(ka.default, B));
    }
  }
  Object.defineProperty(i.exports, "isWin", {
    get: function() {
      return r;
    },
    set: function(R) {
      r = R;
    }
  }), i.exports.warnTo = function(R) {
    var B = s;
    return s = R, B;
  }, i.exports.getFileName = function(R) {
    var B = R || process.env, Q = B.PGPASSFILE || (r ? Gt.default.join(B.APPDATA || "./", "postgresql", "pgpass.conf") : Gt.default.join(B.HOME || "./", ".pgpass"));
    return Q;
  }, i.exports.usePgPass = function(R, B) {
    return Object.prototype.hasOwnProperty.call(process.env, "PGPASSWORD") ? !1 : r ? !0 : (B = B || "<unkn>", f(R.mode) ? R.mode & (o | l) ? (x('WARNING: password file "%s" has group or world access; permissions should be u=rw (0600) or less', B), !1) : !0 : (x('WARNING: password file "%s" is not a plain file', B), !1));
  };
  var S = i.exports.match = function(R, B) {
    return c.slice(0, -1).reduce(function(Q, ee, re) {
      return re == 1 && Number(R[ee] || t) === Number(B[ee]) ? Q && !0 : Q && (B[ee] === "*" || B[ee] === R[ee]);
    }, !0);
  };
  i.exports.getPassword = function(R, B, Q) {
    var ee, re = B.pipe(ag());
    function de(N) {
      var G = D(N);
      G && L(G) && S(R, G) && (ee = G[b], re.end());
    }
    var ne = function() {
      B.destroy(), Q(ee);
    }, F = function(N) {
      B.destroy(), x("WARNING: error on reading file: %s", N), Q(void 0);
    };
    B.on("error", F), re.on("data", de).on("end", ne).on("error", F);
  };
  var D = i.exports.parseLine = function(R) {
    if (R.length < 11 || R.match(/^\s+#/))
      return null;
    for (var B = "", Q = "", ee = 0, re = 0, de = {}, ne = !1, F = function(G, V, ae) {
      var ie = R.substring(V, ae);
      Object.hasOwnProperty.call(process.env, "PGPASS_NO_DEESCAPE") || (ie = ie.replace(/\\([:\\])/g, "$1")), de[c[G]] = ie;
    }, N = 0; N < R.length - 1; N += 1) {
      if (B = R.charAt(N + 1), Q = R.charAt(N), ne = ee == h - 1, ne) {
        F(ee, re);
        break;
      }
      N >= 0 && B == ":" && Q !== "\\" && (F(ee, re, N + 1), re = N + 2, ee += 1);
    }
    return de = Object.keys(de).length === h ? de : null, de;
  }, L = i.exports.isValidEntry = function(R) {
    for (var B = {
      0: function(ne) {
        return ne.length > 0;
      },
      1: function(ne) {
        return ne === "*" ? !0 : (ne = Number(ne), isFinite(ne) && ne > 0 && ne < 9007199254740992 && Math.floor(ne) === ne);
      },
      2: function(ne) {
        return ne.length > 0;
      },
      3: function(ne) {
        return ne.length > 0;
      },
      4: function(ne) {
        return ne.length > 0;
      }
    }, Q = 0; Q < c.length; Q += 1) {
      var ee = B[Q], re = R[c[Q]] || "", de = ee(re);
      if (!de)
        return !1;
    }
    return !0;
  };
}), lu = function(i, e) {
  var t = Ur.getFileName();
  ot.default.stat(t, function(r, s) {
    if (r || !Ur.usePgPass(s, t))
      return e(void 0);
    var o = ot.default.createReadStream(t);
    Ur.getPassword(i, o, e);
  });
}, tg = Ur.warnTo;
lu.warnTo = tg;
var ig = ii.default.EventEmitter;
class cu extends ig {
  constructor(e) {
    super();
    this.connectionParameters = new au(e), this.user = this.connectionParameters.user, this.database = this.connectionParameters.database, this.port = this.connectionParameters.port, this.host = this.connectionParameters.host, Object.defineProperty(this, "password", {
      configurable: !0,
      enumerable: !1,
      writable: !0,
      value: this.connectionParameters.password
    }), this.replication = this.connectionParameters.replication;
    var t = e || {};
    this._Promise = t.Promise || Y.Promise, this._types = new Xc(t.types), this._ending = !1, this._ended = !1, this._connecting = !1, this._connected = !1, this._connectionError = !1, this._queryable = !0, this.connection = t.connection || new pu({
      stream: t.stream,
      ssl: this.connectionParameters.ssl,
      keepAlive: t.keepAlive || !1,
      keepAliveInitialDelayMillis: t.keepAliveInitialDelayMillis || 0,
      encoding: this.connectionParameters.client_encoding || "utf8"
    }), this.queryQueue = [], this.binary = t.binary || En.binary, this.processID = null, this.secretKey = null, this.ssl = this.connectionParameters.ssl || !1, this.ssl && this.ssl.key && Object.defineProperty(this.ssl, "key", {
      enumerable: !1
    }), this._connectionTimeoutMillis = t.connectionTimeoutMillis || 0;
  }
  _errorAllQueries(e) {
    const t = (r) => {
      process.nextTick(() => {
        r.handleError(e, this.connection);
      });
    };
    this.activeQuery && (t(this.activeQuery), this.activeQuery = null), this.queryQueue.forEach(t), this.queryQueue.length = 0;
  }
  _connect(e) {
    var t = this, r = this.connection;
    if (this._connectionCallback = e, this._connecting || this._connected) {
      const s = new Error("Client has already been connected. You cannot reuse a client.");
      process.nextTick(() => {
        e(s);
      });
      return;
    }
    this._connecting = !0, this.connectionTimeoutHandle, this._connectionTimeoutMillis > 0 && (this.connectionTimeoutHandle = setTimeout(() => {
      r._ending = !0, r.stream.destroy(new Error("timeout expired"));
    }, this._connectionTimeoutMillis)), this.host && this.host.indexOf("/") === 0 ? r.connect(this.host + "/.s.PGSQL." + this.port) : r.connect(this.port, this.host), r.on("connect", function() {
      t.ssl ? r.requestSsl() : r.startup(t.getStartupConf());
    }), r.on("sslconnect", function() {
      r.startup(t.getStartupConf());
    }), this._attachListeners(r), r.once("end", () => {
      const s = this._ending ? new Error("Connection terminated") : new Error("Connection terminated unexpectedly");
      clearTimeout(this.connectionTimeoutHandle), this._errorAllQueries(s), this._ended = !0, this._ending || (this._connecting && !this._connectionError ? this._connectionCallback ? this._connectionCallback(s) : this._handleErrorEvent(s) : this._connectionError || this._handleErrorEvent(s)), process.nextTick(() => {
        this.emit("end");
      });
    });
  }
  connect(e) {
    if (e) {
      this._connect(e);
      return;
    }
    return new this._Promise((t, r) => {
      this._connect((s) => {
        s ? r(s) : t();
      });
    });
  }
  _attachListeners(e) {
    e.on("authenticationCleartextPassword", this._handleAuthCleartextPassword.bind(this)), e.on("authenticationMD5Password", this._handleAuthMD5Password.bind(this)), e.on("authenticationSASL", this._handleAuthSASL.bind(this)), e.on("authenticationSASLContinue", this._handleAuthSASLContinue.bind(this)), e.on("authenticationSASLFinal", this._handleAuthSASLFinal.bind(this)), e.on("backendKeyData", this._handleBackendKeyData.bind(this)), e.on("error", this._handleErrorEvent.bind(this)), e.on("errorMessage", this._handleErrorMessage.bind(this)), e.on("readyForQuery", this._handleReadyForQuery.bind(this)), e.on("notice", this._handleNotice.bind(this)), e.on("rowDescription", this._handleRowDescription.bind(this)), e.on("dataRow", this._handleDataRow.bind(this)), e.on("portalSuspended", this._handlePortalSuspended.bind(this)), e.on("emptyQuery", this._handleEmptyQuery.bind(this)), e.on("commandComplete", this._handleCommandComplete.bind(this)), e.on("parseComplete", this._handleParseComplete.bind(this)), e.on("copyInResponse", this._handleCopyInResponse.bind(this)), e.on("copyData", this._handleCopyData.bind(this)), e.on("notification", this._handleNotification.bind(this));
  }
  _checkPgPass(e) {
    const t = this.connection;
    if (typeof this.password == "function")
      this._Promise.resolve().then(() => this.password()).then((r) => {
        if (r !== void 0) {
          if (typeof r != "string") {
            t.emit("error", new TypeError("Password must be a string"));
            return;
          }
          this.connectionParameters.password = this.password = r;
        } else
          this.connectionParameters.password = this.password = null;
        e();
      }).catch((r) => {
        t.emit("error", r);
      });
    else if (this.password !== null)
      e();
    else
      try {
        lu(this.connectionParameters, (s) => {
          s !== void 0 && (this.connectionParameters.password = this.password = s), e();
        });
      } catch (r) {
        this.emit("error", r);
      }
  }
  _handleAuthCleartextPassword(e) {
    this._checkPgPass(() => {
      this.connection.password(this.password);
    });
  }
  _handleAuthMD5Password(e) {
    this._checkPgPass(async () => {
      try {
        const t = await $t.postgresMd5PasswordHash(this.user, this.password, e.salt);
        this.connection.password(t);
      } catch (t) {
        this.emit("error", t);
      }
    });
  }
  _handleAuthSASL(e) {
    this._checkPgPass(() => {
      try {
        this.saslSession = vo.startSession(e.mechanisms), this.connection.sendSASLInitialResponseMessage(this.saslSession.mechanism, this.saslSession.response);
      } catch (t) {
        this.connection.emit("error", t);
      }
    });
  }
  async _handleAuthSASLContinue(e) {
    try {
      await vo.continueSession(this.saslSession, this.password, e.data), this.connection.sendSCRAMClientFinalMessage(this.saslSession.response);
    } catch (t) {
      this.connection.emit("error", t);
    }
  }
  _handleAuthSASLFinal(e) {
    try {
      vo.finalizeSession(this.saslSession, e.data), this.saslSession = null;
    } catch (t) {
      this.connection.emit("error", t);
    }
  }
  _handleBackendKeyData(e) {
    this.processID = e.processID, this.secretKey = e.secretKey;
  }
  _handleReadyForQuery(e) {
    this._connecting && (this._connecting = !1, this._connected = !0, clearTimeout(this.connectionTimeoutHandle), this._connectionCallback && (this._connectionCallback(null, this), this._connectionCallback = null), this.emit("connect"));
    const { activeQuery: t } = this;
    this.activeQuery = null, this.readyForQuery = !0, t && t.handleReadyForQuery(this.connection), this._pulseQueryQueue();
  }
  _handleErrorWhileConnecting(e) {
    if (!this._connectionError) {
      if (this._connectionError = !0, clearTimeout(this.connectionTimeoutHandle), this._connectionCallback)
        return this._connectionCallback(e);
      this.emit("error", e);
    }
  }
  _handleErrorEvent(e) {
    if (this._connecting)
      return this._handleErrorWhileConnecting(e);
    this._queryable = !1, this._errorAllQueries(e), this.emit("error", e);
  }
  _handleErrorMessage(e) {
    if (this._connecting)
      return this._handleErrorWhileConnecting(e);
    const t = this.activeQuery;
    if (!t) {
      this._handleErrorEvent(e);
      return;
    }
    this.activeQuery = null, t.handleError(e, this.connection);
  }
  _handleRowDescription(e) {
    this.activeQuery.handleRowDescription(e);
  }
  _handleDataRow(e) {
    this.activeQuery.handleDataRow(e);
  }
  _handlePortalSuspended(e) {
    this.activeQuery.handlePortalSuspended(this.connection);
  }
  _handleEmptyQuery(e) {
    this.activeQuery.handleEmptyQuery(this.connection);
  }
  _handleCommandComplete(e) {
    this.activeQuery.handleCommandComplete(e, this.connection);
  }
  _handleParseComplete(e) {
    this.activeQuery.name && (this.connection.parsedStatements[this.activeQuery.name] = this.activeQuery.text);
  }
  _handleCopyInResponse(e) {
    this.activeQuery.handleCopyInResponse(this.connection);
  }
  _handleCopyData(e) {
    this.activeQuery.handleCopyData(e, this.connection);
  }
  _handleNotification(e) {
    this.emit("notification", e);
  }
  _handleNotice(e) {
    this.emit("notice", e);
  }
  getStartupConf() {
    var e = this.connectionParameters, t = {
      user: e.user,
      database: e.database
    }, r = e.application_name || e.fallback_application_name;
    return r && (t.application_name = r), e.replication && (t.replication = "" + e.replication), e.statement_timeout && (t.statement_timeout = String(parseInt(e.statement_timeout, 10))), e.lock_timeout && (t.lock_timeout = String(parseInt(e.lock_timeout, 10))), e.idle_in_transaction_session_timeout && (t.idle_in_transaction_session_timeout = String(parseInt(e.idle_in_transaction_session_timeout, 10))), e.options && (t.options = e.options), t;
  }
  cancel(e, t) {
    if (e.activeQuery === t) {
      var r = this.connection;
      this.host && this.host.indexOf("/") === 0 ? r.connect(this.host + "/.s.PGSQL." + this.port) : r.connect(this.port, this.host), r.on("connect", function() {
        r.cancel(e.processID, e.secretKey);
      });
    } else
      e.queryQueue.indexOf(t) !== -1 && e.queryQueue.splice(e.queryQueue.indexOf(t), 1);
  }
  setTypeParser(e, t, r) {
    return this._types.setTypeParser(e, t, r);
  }
  getTypeParser(e, t) {
    return this._types.getTypeParser(e, t);
  }
  escapeIdentifier(e) {
    return zt.escapeIdentifier(e);
  }
  escapeLiteral(e) {
    return zt.escapeLiteral(e);
  }
  _pulseQueryQueue() {
    if (this.readyForQuery === !0)
      if (this.activeQuery = this.queryQueue.shift(), this.activeQuery) {
        this.readyForQuery = !1, this.hasExecuted = !0;
        const e = this.activeQuery.submit(this.connection);
        e && process.nextTick(() => {
          this.activeQuery.handleError(e, this.connection), this.readyForQuery = !0, this._pulseQueryQueue();
        });
      } else
        this.hasExecuted && (this.activeQuery = null, this.emit("drain"));
  }
  query(e, t, r) {
    var s, o, l, u, v;
    if (e == null)
      throw new TypeError("Client was passed a null or undefined query");
    return typeof e.submit == "function" ? (l = e.query_timeout || this.connectionParameters.query_timeout, o = s = e, typeof t == "function" && (s.callback = s.callback || t)) : (l = this.connectionParameters.query_timeout, s = new nu(e, t, r), s.callback || (o = new this._Promise((f, c) => {
      s.callback = (h, b) => h ? c(h) : f(b);
    }))), l && (v = s.callback, u = setTimeout(() => {
      var f = new Error("Query read timeout");
      process.nextTick(() => {
        s.handleError(f, this.connection);
      }), v(f), s.callback = () => {
      };
      var c = this.queryQueue.indexOf(s);
      c > -1 && this.queryQueue.splice(c, 1), this._pulseQueryQueue();
    }, l), s.callback = (f, c) => {
      clearTimeout(u), v(f, c);
    }), this.binary && !s.binary && (s.binary = !0), s._result && !s._result._types && (s._result._types = this._types), this._queryable ? this._ending ? (process.nextTick(() => {
      s.handleError(new Error("Client was closed and is not queryable"), this.connection);
    }), o) : (this.queryQueue.push(s), this._pulseQueryQueue(), o) : (process.nextTick(() => {
      s.handleError(new Error("Client has encountered a connection error and is not queryable"), this.connection);
    }), o);
  }
  ref() {
    this.connection.ref();
  }
  unref() {
    this.connection.unref();
  }
  end(e) {
    if (this._ending = !0, !this.connection._connecting || this._ended)
      if (e)
        e();
      else
        return this._Promise.resolve();
    if (this.activeQuery || !this._queryable ? this.connection.stream.destroy() : this.connection.end(), e)
      this.connection.once("end", e);
    else
      return new this._Promise((t) => {
        this.connection.once("end", t);
      });
  }
}
cu.Query = nu;
var ng = cu, rg = bo;
const sg = ii.default.EventEmitter, uu = function() {
}, mu = (i, e) => {
  const t = i.findIndex(e);
  return t === -1 ? void 0 : i.splice(t, 1)[0];
};
class pg {
  constructor(e, t, r) {
    this.client = e, this.idleListener = t, this.timeoutId = r;
  }
}
class Ir {
  constructor(e) {
    this.callback = e;
  }
}
function og() {
  throw new Error("Release called on client which has already been released to the pool.");
}
function Br(i, e) {
  if (e)
    return { callback: e, result: void 0 };
  let t, r;
  const s = function(l, u) {
    l ? t(l) : r(u);
  }, o = new i(function(l, u) {
    r = l, t = u;
  });
  return { callback: s, result: o };
}
function dg(i, e) {
  return function t(r) {
    r.client = e, e.removeListener("error", t), e.on("error", () => {
      i.log("additional client error after disconnection due to error", r);
    }), i._remove(e), i.emit("error", r, e);
  };
}
class lg extends sg {
  constructor(e, t) {
    super();
    this.options = Object.assign({}, e), e != null && "password" in e && Object.defineProperty(this.options, "password", {
      configurable: !0,
      enumerable: !1,
      writable: !0,
      value: e.password
    }), e != null && e.ssl && e.ssl.key && Object.defineProperty(this.options.ssl, "key", {
      enumerable: !1
    }), this.options.max = this.options.max || this.options.poolSize || 10, this.options.maxUses = this.options.maxUses || 1 / 0, this.options.allowExitOnIdle = this.options.allowExitOnIdle || !1, this.options.maxLifetimeSeconds = this.options.maxLifetimeSeconds || 0, this.log = this.options.log || function() {
    }, this.Client = this.options.Client || t || rg.Client, this.Promise = this.options.Promise || Y.Promise, typeof this.options.idleTimeoutMillis == "undefined" && (this.options.idleTimeoutMillis = 1e4), this._clients = [], this._idle = [], this._expired = new WeakSet(), this._pendingQueue = [], this._endCallback = void 0, this.ending = !1, this.ended = !1;
  }
  _isFull() {
    return this._clients.length >= this.options.max;
  }
  _pulseQueue() {
    if (this.log("pulse queue"), this.ended) {
      this.log("pulse queue ended");
      return;
    }
    if (this.ending) {
      this.log("pulse queue on ending"), this._idle.length && this._idle.slice().map((t) => {
        this._remove(t.client);
      }), this._clients.length || (this.ended = !0, this._endCallback());
      return;
    }
    if (!this._pendingQueue.length) {
      this.log("no queued requests");
      return;
    }
    if (!this._idle.length && this._isFull())
      return;
    const e = this._pendingQueue.shift();
    if (this._idle.length) {
      const t = this._idle.pop();
      clearTimeout(t.timeoutId);
      const r = t.client;
      r.ref && r.ref();
      const s = t.idleListener;
      return this._acquireClient(r, e, s, !1);
    }
    if (!this._isFull())
      return this.newClient(e);
    throw new Error("unexpected condition");
  }
  _remove(e) {
    const t = mu(this._idle, (r) => r.client === e);
    t !== void 0 && clearTimeout(t.timeoutId), this._clients = this._clients.filter((r) => r !== e), e.end(), this.emit("remove", e);
  }
  connect(e) {
    if (this.ending) {
      const s = new Error("Cannot use a pool after calling end on the pool");
      return e ? e(s) : this.Promise.reject(s);
    }
    const t = Br(this.Promise, e), r = t.result;
    if (this._isFull() || this._idle.length) {
      if (this._idle.length && process.nextTick(() => this._pulseQueue()), !this.options.connectionTimeoutMillis)
        return this._pendingQueue.push(new Ir(t.callback)), r;
      const s = (u, v, f) => {
        clearTimeout(l), t.callback(u, v, f);
      }, o = new Ir(s), l = setTimeout(() => {
        mu(this._pendingQueue, (u) => u.callback === s), o.timedOut = !0, t.callback(new Error("timeout exceeded when trying to connect"));
      }, this.options.connectionTimeoutMillis);
      return this._pendingQueue.push(o), r;
    }
    return this.newClient(new Ir(t.callback)), r;
  }
  newClient(e) {
    const t = new this.Client(this.options);
    this._clients.push(t);
    const r = dg(this, t);
    this.log("checking client timeout");
    let s, o = !1;
    this.options.connectionTimeoutMillis && (s = setTimeout(() => {
      this.log("ending client due to timeout"), o = !0, t.connection ? t.connection.stream.destroy() : t.end();
    }, this.options.connectionTimeoutMillis)), this.log("connecting new client"), t.connect((l) => {
      if (s && clearTimeout(s), t.on("error", r), l)
        this.log("client failed to connect", l), this._clients = this._clients.filter((u) => u !== t), o && (l.message = "Connection terminated due to connection timeout"), this._pulseQueue(), e.timedOut || e.callback(l, void 0, uu);
      else {
        if (this.log("new client connected"), this.options.maxLifetimeSeconds !== 0) {
          const u = setTimeout(() => {
            this.log("ending client due to expired lifetime"), this._expired.add(t), this._idle.findIndex((f) => f.client === t) !== -1 && this._acquireClient(t, new Ir((f, c, h) => h()), r, !1);
          }, this.options.maxLifetimeSeconds * 1e3);
          u.unref(), t.once("end", () => clearTimeout(u));
        }
        return this._acquireClient(t, e, r, !0);
      }
    });
  }
  _acquireClient(e, t, r, s) {
    s && this.emit("connect", e), this.emit("acquire", e), e.release = this._releaseOnce(e, r), e.removeListener("error", r), t.timedOut ? s && this.options.verify ? this.options.verify(e, e.release) : e.release() : s && this.options.verify ? this.options.verify(e, (o) => {
      if (o)
        return e.release(o), t.callback(o, void 0, uu);
      t.callback(void 0, e, e.release);
    }) : t.callback(void 0, e, e.release);
  }
  _releaseOnce(e, t) {
    let r = !1;
    return (s) => {
      r && og(), r = !0, this._release(e, t, s);
    };
  }
  _release(e, t, r) {
    if (e.on("error", t), e._poolUseCount = (e._poolUseCount || 0) + 1, this.emit("release", r, e), r || this.ending || !e._queryable || e._ending || e._poolUseCount >= this.options.maxUses) {
      e._poolUseCount >= this.options.maxUses && this.log("remove expended client"), this._remove(e), this._pulseQueue();
      return;
    }
    if (this._expired.has(e)) {
      this.log("remove expired client"), this._expired.delete(e), this._remove(e), this._pulseQueue();
      return;
    }
    let o;
    this.options.idleTimeoutMillis && (o = setTimeout(() => {
      this.log("remove idle client"), this._remove(e);
    }, this.options.idleTimeoutMillis), this.options.allowExitOnIdle && o.unref()), this.options.allowExitOnIdle && e.unref(), this._idle.push(new pg(e, t, o)), this._pulseQueue();
  }
  query(e, t, r) {
    if (typeof e == "function") {
      const o = Br(this.Promise, e);
      return setImmediate(function() {
        return o.callback(new Error("Passing a function as the first parameter to pool.query is not supported"));
      }), o.result;
    }
    typeof t == "function" && (r = t, t = void 0);
    const s = Br(this.Promise, r);
    return r = s.callback, this.connect((o, l) => {
      if (o)
        return r(o);
      let u = !1;
      const v = (f) => {
        u || (u = !0, l.release(f), r(f));
      };
      l.once("error", v), this.log("dispatching query");
      try {
        l.query(e, t, (f, c) => {
          if (this.log("query dispatched"), l.removeListener("error", v), !u)
            return u = !0, l.release(f), f ? r(f) : r(void 0, c);
        });
      } catch (f) {
        return l.release(f), r(f);
      }
    }), s.result;
  }
  end(e) {
    if (this.log("ending"), this.ending) {
      const r = new Error("Called end on pool more than once");
      return e ? e(r) : this.Promise.reject(r);
    }
    this.ending = !0;
    const t = Br(this.Promise, e);
    return this._endCallback = t.callback, this._pulseQueue(), t.result;
  }
  get waitingCount() {
    return this._pendingQueue.length;
  }
  get idleCount() {
    return this._idle.length;
  }
  get expiredCount() {
    return this._clients.reduce((e, t) => e + (this._expired.has(t) ? 1 : 0), 0);
  }
  get totalCount() {
    return this._clients.length;
  }
}
var cg = lg, fu = Ee(function(i) {
  var e = ii.default.EventEmitter, t = i.exports = function(s, o, l) {
    e.call(this), s = zt.normalizeQueryConfig(s, o, l), this.text = s.text, this.values = s.values, this.name = s.name, this.callback = s.callback, this.state = "new", this._arrayMode = s.rowMode === "array", this._emitRowEvents = !1, this.on("newListener", function(u) {
      u === "row" && (this._emitRowEvents = !0);
    }.bind(this));
  };
  ka.default.inherits(t, e);
  var r = {
    sqlState: "code",
    statementPosition: "position",
    messagePrimary: "message",
    context: "where",
    schemaName: "schema",
    tableName: "table",
    columnName: "column",
    dataTypeName: "dataType",
    constraintName: "constraint",
    sourceFile: "file",
    sourceLine: "line",
    sourceFunction: "routine"
  };
  t.prototype.handleError = function(s) {
    var o = this.native.pq.resultErrorFields();
    if (o)
      for (var l in o) {
        var u = r[l] || l;
        s[u] = o[l];
      }
    this.callback ? this.callback(s) : this.emit("error", s), this.state = "error";
  }, t.prototype.then = function(s, o) {
    return this._getPromise().then(s, o);
  }, t.prototype.catch = function(s) {
    return this._getPromise().catch(s);
  }, t.prototype._getPromise = function() {
    return this._promise ? this._promise : (this._promise = new Promise(function(s, o) {
      this._once("end", s), this._once("error", o);
    }.bind(this)), this._promise);
  }, t.prototype.submit = function(s) {
    this.state = "running";
    var o = this;
    this.native = s.native, s.native.arrayMode = this._arrayMode;
    var l = function(f, c, h) {
      if (s.native.arrayMode = !1, setImmediate(function() {
        o.emit("_done");
      }), f)
        return o.handleError(f);
      o._emitRowEvents && (h.length > 1 ? c.forEach((b, x) => {
        b.forEach((S) => {
          o.emit("row", S, h[x]);
        });
      }) : c.forEach(function(b) {
        o.emit("row", b, h);
      })), o.state = "end", o.emit("end", h), o.callback && o.callback(null, h);
    };
    if (process.domain && (l = process.domain.bind(l)), this.name) {
      this.name.length > 63 && (console.error("Warning! Postgres only supports 63 characters for query names."), console.error("You supplied %s (%s)", this.name, this.name.length), console.error("This can cause conflicts and silent errors executing queries"));
      var u = (this.values || []).map(zt.prepareValue);
      if (s.namedQueries[this.name]) {
        if (this.text && s.namedQueries[this.name] !== this.text) {
          const f = new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`);
          return l(f);
        }
        return s.native.execute(this.name, u, l);
      }
      return s.native.prepare(this.name, this.text, u.length, function(f) {
        return f ? l(f) : (s.namedQueries[o.name] = o.text, o.native.execute(o.name, u, l));
      });
    } else if (this.values) {
      if (!Array.isArray(this.values)) {
        const f = new Error("Query values must be an array");
        return l(f);
      }
      var v = this.values.map(zt.prepareValue);
      s.native.query(this.text, v, l);
    } else
      s.native.query(this.text, l);
  };
}), ug = Ee(function(i) {
  var e;
  try {
    e = b5.default;
  } catch (s) {
    throw s;
  }
  var t = ii.default.EventEmitter, r = i.exports = function(s) {
    t.call(this), s = s || {}, this._Promise = s.Promise || Y.Promise, this._types = new Xc(s.types), this.native = new e({
      types: this._types
    }), this._queryQueue = [], this._ending = !1, this._connecting = !1, this._connected = !1, this._queryable = !0;
    var o = this.connectionParameters = new au(s);
    this.user = o.user, Object.defineProperty(this, "password", {
      configurable: !0,
      enumerable: !1,
      writable: !0,
      value: o.password
    }), this.database = o.database, this.host = o.host, this.port = o.port, this.namedQueries = {};
  };
  r.Query = fu, ka.default.inherits(r, t), r.prototype._errorAllQueries = function(s) {
    const o = (l) => {
      process.nextTick(() => {
        l.native = this.native, l.handleError(s);
      });
    };
    this._hasActiveQuery() && (o(this._activeQuery), this._activeQuery = null), this._queryQueue.forEach(o), this._queryQueue.length = 0;
  }, r.prototype._connect = function(s) {
    var o = this;
    if (this._connecting) {
      process.nextTick(() => s(new Error("Client has already been connected. You cannot reuse a client.")));
      return;
    }
    this._connecting = !0, this.connectionParameters.getLibpqConnectionString(function(l, u) {
      if (l)
        return s(l);
      o.native.connect(u, function(v) {
        if (v)
          return o.native.end(), s(v);
        o._connected = !0, o.native.on("error", function(f) {
          o._queryable = !1, o._errorAllQueries(f), o.emit("error", f);
        }), o.native.on("notification", function(f) {
          o.emit("notification", {
            channel: f.relname,
            payload: f.extra
          });
        }), o.emit("connect"), o._pulseQueryQueue(!0), s();
      });
    });
  }, r.prototype.connect = function(s) {
    if (s) {
      this._connect(s);
      return;
    }
    return new this._Promise((o, l) => {
      this._connect((u) => {
        u ? l(u) : o();
      });
    });
  }, r.prototype.query = function(s, o, l) {
    var u, v, f, c, h;
    if (s == null)
      throw new TypeError("Client was passed a null or undefined query");
    if (typeof s.submit == "function")
      f = s.query_timeout || this.connectionParameters.query_timeout, v = u = s, typeof o == "function" && (s.callback = o);
    else if (f = this.connectionParameters.query_timeout, u = new fu(s, o, l), !u.callback) {
      let b, x;
      v = new this._Promise((S, D) => {
        b = S, x = D;
      }), u.callback = (S, D) => S ? x(S) : b(D);
    }
    return f && (h = u.callback, c = setTimeout(() => {
      var b = new Error("Query read timeout");
      process.nextTick(() => {
        u.handleError(b, this.connection);
      }), h(b), u.callback = () => {
      };
      var x = this._queryQueue.indexOf(u);
      x > -1 && this._queryQueue.splice(x, 1), this._pulseQueryQueue();
    }, f), u.callback = (b, x) => {
      clearTimeout(c), h(b, x);
    }), this._queryable ? this._ending ? (u.native = this.native, process.nextTick(() => {
      u.handleError(new Error("Client was closed and is not queryable"));
    }), v) : (this._queryQueue.push(u), this._pulseQueryQueue(), v) : (u.native = this.native, process.nextTick(() => {
      u.handleError(new Error("Client has encountered a connection error and is not queryable"));
    }), v);
  }, r.prototype.end = function(s) {
    var o = this;
    this._ending = !0, this._connected || this.once("connect", this.end.bind(this, s));
    var l;
    return s || (l = new this._Promise(function(u, v) {
      s = (f) => f ? v(f) : u();
    })), this.native.end(function() {
      o._errorAllQueries(new Error("Connection terminated")), process.nextTick(() => {
        o.emit("end"), s && s();
      });
    }), l;
  }, r.prototype._hasActiveQuery = function() {
    return this._activeQuery && this._activeQuery.state !== "error" && this._activeQuery.state !== "end";
  }, r.prototype._pulseQueryQueue = function(s) {
    if (!!this._connected && !this._hasActiveQuery()) {
      var o = this._queryQueue.shift();
      if (!o) {
        s || this.emit("drain");
        return;
      }
      this._activeQuery = o, o.submit(this);
      var l = this;
      o.once("_done", function() {
        l._pulseQueryQueue();
      });
    }
  }, r.prototype.cancel = function(s) {
    this._activeQuery === s ? this.native.cancel(function() {
    }) : this._queryQueue.indexOf(s) !== -1 && this._queryQueue.splice(this._queryQueue.indexOf(s), 1);
  }, r.prototype.ref = function() {
  }, r.prototype.unref = function() {
  }, r.prototype.setTypeParser = function(s, o, l) {
    return this._types.setTypeParser(s, o, l);
  }, r.prototype.getTypeParser = function(s, o) {
    return this._types.getTypeParser(s, o);
  };
}), hu = ug, bo = Ee(function(i) {
  const { DatabaseError: e } = ru, { escapeIdentifier: t, escapeLiteral: r } = zt, s = (l) => class extends cg {
    constructor(v) {
      super(v, l);
    }
  };
  var o = function(l) {
    this.defaults = En, this.Client = l, this.Query = this.Client.Query, this.Pool = s(this.Client), this._pools = [], this.Connection = pu, this.types = Tt, this.DatabaseError = e, this.escapeIdentifier = t, this.escapeLiteral = r;
  };
  typeof process.env.NODE_PG_FORCE_NATIVE != "undefined" ? i.exports = new o(hu) : (i.exports = new o(ng), Object.defineProperty(i.exports, "native", {
    configurable: !0,
    enumerable: !1,
    get() {
      var l = null;
      try {
        l = new o(hu);
      } catch (u) {
        if (u.code !== "MODULE_NOT_FOUND")
          throw u;
      }
      return Object.defineProperty(i.exports, "native", {
        value: l
      }), l;
    }
  }));
}), mg = /* @__PURE__ */ v5({
  __proto__: null,
  default: bo
}, [bo]);
const { Client: fg } = mg;
async function hg() {
  const i = new fg({
    connectionString: gr.getInput("connectionString")
  });
  await i.connect();
  const e = await i.query("SELECT $1::text as message", ["Hello world!"]);
  console.log(e.rows[0].message), await i.end(), gr.info(`Waiting ${e.rows[0].message} milliseconds ...`);
}
try {
  hg();
} catch (i) {
  gr.setFailed(i.message);
}
